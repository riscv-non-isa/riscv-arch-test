
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_69120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837f800000000000; valaddr_reg:x3; val_offset:207360*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207360*0 + 3*0*FLEN/8, x4, x1, x2)

inst_69121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fc00000000000; valaddr_reg:x3; val_offset:207363*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207363*0 + 3*1*FLEN/8, x4, x1, x2)

inst_69122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fe00000000000; valaddr_reg:x3; val_offset:207366*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207366*0 + 3*2*FLEN/8, x4, x1, x2)

inst_69123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ff00000000000; valaddr_reg:x3; val_offset:207369*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207369*0 + 3*3*FLEN/8, x4, x1, x2)

inst_69124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ff80000000000; valaddr_reg:x3; val_offset:207372*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207372*0 + 3*4*FLEN/8, x4, x1, x2)

inst_69125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffc0000000000; valaddr_reg:x3; val_offset:207375*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207375*0 + 3*5*FLEN/8, x4, x1, x2)

inst_69126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffe0000000000; valaddr_reg:x3; val_offset:207378*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207378*0 + 3*6*FLEN/8, x4, x1, x2)

inst_69127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fff0000000000; valaddr_reg:x3; val_offset:207381*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207381*0 + 3*7*FLEN/8, x4, x1, x2)

inst_69128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fff8000000000; valaddr_reg:x3; val_offset:207384*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207384*0 + 3*8*FLEN/8, x4, x1, x2)

inst_69129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffc000000000; valaddr_reg:x3; val_offset:207387*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207387*0 + 3*9*FLEN/8, x4, x1, x2)

inst_69130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffe000000000; valaddr_reg:x3; val_offset:207390*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207390*0 + 3*10*FLEN/8, x4, x1, x2)

inst_69131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffff000000000; valaddr_reg:x3; val_offset:207393*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207393*0 + 3*11*FLEN/8, x4, x1, x2)

inst_69132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffff800000000; valaddr_reg:x3; val_offset:207396*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207396*0 + 3*12*FLEN/8, x4, x1, x2)

inst_69133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffc00000000; valaddr_reg:x3; val_offset:207399*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207399*0 + 3*13*FLEN/8, x4, x1, x2)

inst_69134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffe00000000; valaddr_reg:x3; val_offset:207402*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207402*0 + 3*14*FLEN/8, x4, x1, x2)

inst_69135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffff00000000; valaddr_reg:x3; val_offset:207405*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207405*0 + 3*15*FLEN/8, x4, x1, x2)

inst_69136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffff80000000; valaddr_reg:x3; val_offset:207408*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207408*0 + 3*16*FLEN/8, x4, x1, x2)

inst_69137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffc0000000; valaddr_reg:x3; val_offset:207411*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207411*0 + 3*17*FLEN/8, x4, x1, x2)

inst_69138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffe0000000; valaddr_reg:x3; val_offset:207414*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207414*0 + 3*18*FLEN/8, x4, x1, x2)

inst_69139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffff0000000; valaddr_reg:x3; val_offset:207417*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207417*0 + 3*19*FLEN/8, x4, x1, x2)

inst_69140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffff8000000; valaddr_reg:x3; val_offset:207420*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207420*0 + 3*20*FLEN/8, x4, x1, x2)

inst_69141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffc000000; valaddr_reg:x3; val_offset:207423*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207423*0 + 3*21*FLEN/8, x4, x1, x2)

inst_69142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffe000000; valaddr_reg:x3; val_offset:207426*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207426*0 + 3*22*FLEN/8, x4, x1, x2)

inst_69143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffff000000; valaddr_reg:x3; val_offset:207429*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207429*0 + 3*23*FLEN/8, x4, x1, x2)

inst_69144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffff800000; valaddr_reg:x3; val_offset:207432*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207432*0 + 3*24*FLEN/8, x4, x1, x2)

inst_69145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffc00000; valaddr_reg:x3; val_offset:207435*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207435*0 + 3*25*FLEN/8, x4, x1, x2)

inst_69146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffe00000; valaddr_reg:x3; val_offset:207438*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207438*0 + 3*26*FLEN/8, x4, x1, x2)

inst_69147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffff00000; valaddr_reg:x3; val_offset:207441*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207441*0 + 3*27*FLEN/8, x4, x1, x2)

inst_69148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffff80000; valaddr_reg:x3; val_offset:207444*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207444*0 + 3*28*FLEN/8, x4, x1, x2)

inst_69149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffc0000; valaddr_reg:x3; val_offset:207447*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207447*0 + 3*29*FLEN/8, x4, x1, x2)

inst_69150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffe0000; valaddr_reg:x3; val_offset:207450*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207450*0 + 3*30*FLEN/8, x4, x1, x2)

inst_69151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffff0000; valaddr_reg:x3; val_offset:207453*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207453*0 + 3*31*FLEN/8, x4, x1, x2)

inst_69152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffff8000; valaddr_reg:x3; val_offset:207456*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207456*0 + 3*32*FLEN/8, x4, x1, x2)

inst_69153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffc000; valaddr_reg:x3; val_offset:207459*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207459*0 + 3*33*FLEN/8, x4, x1, x2)

inst_69154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffe000; valaddr_reg:x3; val_offset:207462*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207462*0 + 3*34*FLEN/8, x4, x1, x2)

inst_69155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffff000; valaddr_reg:x3; val_offset:207465*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207465*0 + 3*35*FLEN/8, x4, x1, x2)

inst_69156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffff800; valaddr_reg:x3; val_offset:207468*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207468*0 + 3*36*FLEN/8, x4, x1, x2)

inst_69157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffc00; valaddr_reg:x3; val_offset:207471*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207471*0 + 3*37*FLEN/8, x4, x1, x2)

inst_69158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffe00; valaddr_reg:x3; val_offset:207474*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207474*0 + 3*38*FLEN/8, x4, x1, x2)

inst_69159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffff00; valaddr_reg:x3; val_offset:207477*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207477*0 + 3*39*FLEN/8, x4, x1, x2)

inst_69160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffff80; valaddr_reg:x3; val_offset:207480*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207480*0 + 3*40*FLEN/8, x4, x1, x2)

inst_69161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffffc0; valaddr_reg:x3; val_offset:207483*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207483*0 + 3*41*FLEN/8, x4, x1, x2)

inst_69162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffffe0; valaddr_reg:x3; val_offset:207486*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207486*0 + 3*42*FLEN/8, x4, x1, x2)

inst_69163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffff0; valaddr_reg:x3; val_offset:207489*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207489*0 + 3*43*FLEN/8, x4, x1, x2)

inst_69164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffff8; valaddr_reg:x3; val_offset:207492*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207492*0 + 3*44*FLEN/8, x4, x1, x2)

inst_69165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffffc; valaddr_reg:x3; val_offset:207495*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207495*0 + 3*45*FLEN/8, x4, x1, x2)

inst_69166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837ffffffffffffe; valaddr_reg:x3; val_offset:207498*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207498*0 + 3*46*FLEN/8, x4, x1, x2)

inst_69167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837fffffffffffff; valaddr_reg:x3; val_offset:207501*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207501*0 + 3*47*FLEN/8, x4, x1, x2)

inst_69168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000000000; valaddr_reg:x3; val_offset:207504*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207504*0 + 3*48*FLEN/8, x4, x1, x2)

inst_69169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000000001; valaddr_reg:x3; val_offset:207507*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207507*0 + 3*49*FLEN/8, x4, x1, x2)

inst_69170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000000003; valaddr_reg:x3; val_offset:207510*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207510*0 + 3*50*FLEN/8, x4, x1, x2)

inst_69171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000000007; valaddr_reg:x3; val_offset:207513*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207513*0 + 3*51*FLEN/8, x4, x1, x2)

inst_69172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000000000f; valaddr_reg:x3; val_offset:207516*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207516*0 + 3*52*FLEN/8, x4, x1, x2)

inst_69173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000000001f; valaddr_reg:x3; val_offset:207519*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207519*0 + 3*53*FLEN/8, x4, x1, x2)

inst_69174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000000003f; valaddr_reg:x3; val_offset:207522*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207522*0 + 3*54*FLEN/8, x4, x1, x2)

inst_69175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000000007f; valaddr_reg:x3; val_offset:207525*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207525*0 + 3*55*FLEN/8, x4, x1, x2)

inst_69176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000000000ff; valaddr_reg:x3; val_offset:207528*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207528*0 + 3*56*FLEN/8, x4, x1, x2)

inst_69177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000000001ff; valaddr_reg:x3; val_offset:207531*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207531*0 + 3*57*FLEN/8, x4, x1, x2)

inst_69178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000000003ff; valaddr_reg:x3; val_offset:207534*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207534*0 + 3*58*FLEN/8, x4, x1, x2)

inst_69179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000000007ff; valaddr_reg:x3; val_offset:207537*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207537*0 + 3*59*FLEN/8, x4, x1, x2)

inst_69180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000000fff; valaddr_reg:x3; val_offset:207540*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207540*0 + 3*60*FLEN/8, x4, x1, x2)

inst_69181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000001fff; valaddr_reg:x3; val_offset:207543*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207543*0 + 3*61*FLEN/8, x4, x1, x2)

inst_69182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000003fff; valaddr_reg:x3; val_offset:207546*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207546*0 + 3*62*FLEN/8, x4, x1, x2)

inst_69183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000007fff; valaddr_reg:x3; val_offset:207549*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207549*0 + 3*63*FLEN/8, x4, x1, x2)

inst_69184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000000ffff; valaddr_reg:x3; val_offset:207552*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207552*0 + 3*64*FLEN/8, x4, x1, x2)

inst_69185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000001ffff; valaddr_reg:x3; val_offset:207555*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207555*0 + 3*65*FLEN/8, x4, x1, x2)

inst_69186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000003ffff; valaddr_reg:x3; val_offset:207558*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207558*0 + 3*66*FLEN/8, x4, x1, x2)

inst_69187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000007ffff; valaddr_reg:x3; val_offset:207561*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207561*0 + 3*67*FLEN/8, x4, x1, x2)

inst_69188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000000fffff; valaddr_reg:x3; val_offset:207564*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207564*0 + 3*68*FLEN/8, x4, x1, x2)

inst_69189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000001fffff; valaddr_reg:x3; val_offset:207567*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207567*0 + 3*69*FLEN/8, x4, x1, x2)

inst_69190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000003fffff; valaddr_reg:x3; val_offset:207570*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207570*0 + 3*70*FLEN/8, x4, x1, x2)

inst_69191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000007fffff; valaddr_reg:x3; val_offset:207573*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207573*0 + 3*71*FLEN/8, x4, x1, x2)

inst_69192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000000ffffff; valaddr_reg:x3; val_offset:207576*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207576*0 + 3*72*FLEN/8, x4, x1, x2)

inst_69193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000001ffffff; valaddr_reg:x3; val_offset:207579*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207579*0 + 3*73*FLEN/8, x4, x1, x2)

inst_69194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000003ffffff; valaddr_reg:x3; val_offset:207582*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207582*0 + 3*74*FLEN/8, x4, x1, x2)

inst_69195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000007ffffff; valaddr_reg:x3; val_offset:207585*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207585*0 + 3*75*FLEN/8, x4, x1, x2)

inst_69196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000000fffffff; valaddr_reg:x3; val_offset:207588*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207588*0 + 3*76*FLEN/8, x4, x1, x2)

inst_69197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000001fffffff; valaddr_reg:x3; val_offset:207591*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207591*0 + 3*77*FLEN/8, x4, x1, x2)

inst_69198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000003fffffff; valaddr_reg:x3; val_offset:207594*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207594*0 + 3*78*FLEN/8, x4, x1, x2)

inst_69199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000007fffffff; valaddr_reg:x3; val_offset:207597*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207597*0 + 3*79*FLEN/8, x4, x1, x2)

inst_69200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900000ffffffff; valaddr_reg:x3; val_offset:207600*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207600*0 + 3*80*FLEN/8, x4, x1, x2)

inst_69201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900001ffffffff; valaddr_reg:x3; val_offset:207603*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207603*0 + 3*81*FLEN/8, x4, x1, x2)

inst_69202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900003ffffffff; valaddr_reg:x3; val_offset:207606*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207606*0 + 3*82*FLEN/8, x4, x1, x2)

inst_69203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900007ffffffff; valaddr_reg:x3; val_offset:207609*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207609*0 + 3*83*FLEN/8, x4, x1, x2)

inst_69204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90000fffffffff; valaddr_reg:x3; val_offset:207612*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207612*0 + 3*84*FLEN/8, x4, x1, x2)

inst_69205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90001fffffffff; valaddr_reg:x3; val_offset:207615*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207615*0 + 3*85*FLEN/8, x4, x1, x2)

inst_69206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90003fffffffff; valaddr_reg:x3; val_offset:207618*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207618*0 + 3*86*FLEN/8, x4, x1, x2)

inst_69207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90007fffffffff; valaddr_reg:x3; val_offset:207621*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207621*0 + 3*87*FLEN/8, x4, x1, x2)

inst_69208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9000ffffffffff; valaddr_reg:x3; val_offset:207624*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207624*0 + 3*88*FLEN/8, x4, x1, x2)

inst_69209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9001ffffffffff; valaddr_reg:x3; val_offset:207627*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207627*0 + 3*89*FLEN/8, x4, x1, x2)

inst_69210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9003ffffffffff; valaddr_reg:x3; val_offset:207630*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207630*0 + 3*90*FLEN/8, x4, x1, x2)

inst_69211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9007ffffffffff; valaddr_reg:x3; val_offset:207633*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207633*0 + 3*91*FLEN/8, x4, x1, x2)

inst_69212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba900fffffffffff; valaddr_reg:x3; val_offset:207636*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207636*0 + 3*92*FLEN/8, x4, x1, x2)

inst_69213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba901fffffffffff; valaddr_reg:x3; val_offset:207639*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207639*0 + 3*93*FLEN/8, x4, x1, x2)

inst_69214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba903fffffffffff; valaddr_reg:x3; val_offset:207642*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207642*0 + 3*94*FLEN/8, x4, x1, x2)

inst_69215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba907fffffffffff; valaddr_reg:x3; val_offset:207645*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207645*0 + 3*95*FLEN/8, x4, x1, x2)

inst_69216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba90ffffffffffff; valaddr_reg:x3; val_offset:207648*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207648*0 + 3*96*FLEN/8, x4, x1, x2)

inst_69217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba91ffffffffffff; valaddr_reg:x3; val_offset:207651*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207651*0 + 3*97*FLEN/8, x4, x1, x2)

inst_69218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba93ffffffffffff; valaddr_reg:x3; val_offset:207654*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207654*0 + 3*98*FLEN/8, x4, x1, x2)

inst_69219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba97ffffffffffff; valaddr_reg:x3; val_offset:207657*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207657*0 + 3*99*FLEN/8, x4, x1, x2)

inst_69220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba98000000000000; valaddr_reg:x3; val_offset:207660*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207660*0 + 3*100*FLEN/8, x4, x1, x2)

inst_69221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9c000000000000; valaddr_reg:x3; val_offset:207663*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207663*0 + 3*101*FLEN/8, x4, x1, x2)

inst_69222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9e000000000000; valaddr_reg:x3; val_offset:207666*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207666*0 + 3*102*FLEN/8, x4, x1, x2)

inst_69223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9f000000000000; valaddr_reg:x3; val_offset:207669*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207669*0 + 3*103*FLEN/8, x4, x1, x2)

inst_69224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9f800000000000; valaddr_reg:x3; val_offset:207672*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207672*0 + 3*104*FLEN/8, x4, x1, x2)

inst_69225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fc00000000000; valaddr_reg:x3; val_offset:207675*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207675*0 + 3*105*FLEN/8, x4, x1, x2)

inst_69226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fe00000000000; valaddr_reg:x3; val_offset:207678*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207678*0 + 3*106*FLEN/8, x4, x1, x2)

inst_69227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ff00000000000; valaddr_reg:x3; val_offset:207681*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207681*0 + 3*107*FLEN/8, x4, x1, x2)

inst_69228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ff80000000000; valaddr_reg:x3; val_offset:207684*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207684*0 + 3*108*FLEN/8, x4, x1, x2)

inst_69229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffc0000000000; valaddr_reg:x3; val_offset:207687*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207687*0 + 3*109*FLEN/8, x4, x1, x2)

inst_69230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffe0000000000; valaddr_reg:x3; val_offset:207690*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207690*0 + 3*110*FLEN/8, x4, x1, x2)

inst_69231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fff0000000000; valaddr_reg:x3; val_offset:207693*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207693*0 + 3*111*FLEN/8, x4, x1, x2)

inst_69232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fff8000000000; valaddr_reg:x3; val_offset:207696*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207696*0 + 3*112*FLEN/8, x4, x1, x2)

inst_69233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffc000000000; valaddr_reg:x3; val_offset:207699*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207699*0 + 3*113*FLEN/8, x4, x1, x2)

inst_69234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffe000000000; valaddr_reg:x3; val_offset:207702*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207702*0 + 3*114*FLEN/8, x4, x1, x2)

inst_69235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffff000000000; valaddr_reg:x3; val_offset:207705*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207705*0 + 3*115*FLEN/8, x4, x1, x2)

inst_69236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffff800000000; valaddr_reg:x3; val_offset:207708*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207708*0 + 3*116*FLEN/8, x4, x1, x2)

inst_69237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffc00000000; valaddr_reg:x3; val_offset:207711*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207711*0 + 3*117*FLEN/8, x4, x1, x2)

inst_69238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffe00000000; valaddr_reg:x3; val_offset:207714*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207714*0 + 3*118*FLEN/8, x4, x1, x2)

inst_69239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffff00000000; valaddr_reg:x3; val_offset:207717*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207717*0 + 3*119*FLEN/8, x4, x1, x2)

inst_69240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffff80000000; valaddr_reg:x3; val_offset:207720*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207720*0 + 3*120*FLEN/8, x4, x1, x2)

inst_69241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffc0000000; valaddr_reg:x3; val_offset:207723*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207723*0 + 3*121*FLEN/8, x4, x1, x2)

inst_69242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffe0000000; valaddr_reg:x3; val_offset:207726*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207726*0 + 3*122*FLEN/8, x4, x1, x2)

inst_69243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffff0000000; valaddr_reg:x3; val_offset:207729*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207729*0 + 3*123*FLEN/8, x4, x1, x2)

inst_69244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffff8000000; valaddr_reg:x3; val_offset:207732*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207732*0 + 3*124*FLEN/8, x4, x1, x2)

inst_69245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffc000000; valaddr_reg:x3; val_offset:207735*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207735*0 + 3*125*FLEN/8, x4, x1, x2)

inst_69246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffe000000; valaddr_reg:x3; val_offset:207738*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207738*0 + 3*126*FLEN/8, x4, x1, x2)

inst_69247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffff000000; valaddr_reg:x3; val_offset:207741*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207741*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_69248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffff800000; valaddr_reg:x3; val_offset:207744*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207744*0 + 3*128*FLEN/8, x4, x1, x2)

inst_69249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffc00000; valaddr_reg:x3; val_offset:207747*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207747*0 + 3*129*FLEN/8, x4, x1, x2)

inst_69250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffe00000; valaddr_reg:x3; val_offset:207750*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207750*0 + 3*130*FLEN/8, x4, x1, x2)

inst_69251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffff00000; valaddr_reg:x3; val_offset:207753*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207753*0 + 3*131*FLEN/8, x4, x1, x2)

inst_69252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffff80000; valaddr_reg:x3; val_offset:207756*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207756*0 + 3*132*FLEN/8, x4, x1, x2)

inst_69253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffc0000; valaddr_reg:x3; val_offset:207759*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207759*0 + 3*133*FLEN/8, x4, x1, x2)

inst_69254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffe0000; valaddr_reg:x3; val_offset:207762*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207762*0 + 3*134*FLEN/8, x4, x1, x2)

inst_69255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffff0000; valaddr_reg:x3; val_offset:207765*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207765*0 + 3*135*FLEN/8, x4, x1, x2)

inst_69256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffff8000; valaddr_reg:x3; val_offset:207768*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207768*0 + 3*136*FLEN/8, x4, x1, x2)

inst_69257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffc000; valaddr_reg:x3; val_offset:207771*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207771*0 + 3*137*FLEN/8, x4, x1, x2)

inst_69258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffe000; valaddr_reg:x3; val_offset:207774*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207774*0 + 3*138*FLEN/8, x4, x1, x2)

inst_69259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffff000; valaddr_reg:x3; val_offset:207777*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207777*0 + 3*139*FLEN/8, x4, x1, x2)

inst_69260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffff800; valaddr_reg:x3; val_offset:207780*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207780*0 + 3*140*FLEN/8, x4, x1, x2)

inst_69261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffc00; valaddr_reg:x3; val_offset:207783*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207783*0 + 3*141*FLEN/8, x4, x1, x2)

inst_69262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffe00; valaddr_reg:x3; val_offset:207786*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207786*0 + 3*142*FLEN/8, x4, x1, x2)

inst_69263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffff00; valaddr_reg:x3; val_offset:207789*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207789*0 + 3*143*FLEN/8, x4, x1, x2)

inst_69264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffff80; valaddr_reg:x3; val_offset:207792*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207792*0 + 3*144*FLEN/8, x4, x1, x2)

inst_69265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffffc0; valaddr_reg:x3; val_offset:207795*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207795*0 + 3*145*FLEN/8, x4, x1, x2)

inst_69266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffffe0; valaddr_reg:x3; val_offset:207798*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207798*0 + 3*146*FLEN/8, x4, x1, x2)

inst_69267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffff0; valaddr_reg:x3; val_offset:207801*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207801*0 + 3*147*FLEN/8, x4, x1, x2)

inst_69268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffff8; valaddr_reg:x3; val_offset:207804*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207804*0 + 3*148*FLEN/8, x4, x1, x2)

inst_69269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffffc; valaddr_reg:x3; val_offset:207807*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207807*0 + 3*149*FLEN/8, x4, x1, x2)

inst_69270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9ffffffffffffe; valaddr_reg:x3; val_offset:207810*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207810*0 + 3*150*FLEN/8, x4, x1, x2)

inst_69271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3a9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xba9fffffffffffff; valaddr_reg:x3; val_offset:207813*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207813*0 + 3*151*FLEN/8, x4, x1, x2)

inst_69272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:207816*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207816*0 + 3*152*FLEN/8, x4, x1, x2)

inst_69273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:207819*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207819*0 + 3*153*FLEN/8, x4, x1, x2)

inst_69274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:207822*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207822*0 + 3*154*FLEN/8, x4, x1, x2)

inst_69275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:207825*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207825*0 + 3*155*FLEN/8, x4, x1, x2)

inst_69276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:207828*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207828*0 + 3*156*FLEN/8, x4, x1, x2)

inst_69277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:207831*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207831*0 + 3*157*FLEN/8, x4, x1, x2)

inst_69278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:207834*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207834*0 + 3*158*FLEN/8, x4, x1, x2)

inst_69279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:207837*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207837*0 + 3*159*FLEN/8, x4, x1, x2)

inst_69280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:207840*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207840*0 + 3*160*FLEN/8, x4, x1, x2)

inst_69281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:207843*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207843*0 + 3*161*FLEN/8, x4, x1, x2)

inst_69282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:207846*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207846*0 + 3*162*FLEN/8, x4, x1, x2)

inst_69283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:207849*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207849*0 + 3*163*FLEN/8, x4, x1, x2)

inst_69284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:207852*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207852*0 + 3*164*FLEN/8, x4, x1, x2)

inst_69285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:207855*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207855*0 + 3*165*FLEN/8, x4, x1, x2)

inst_69286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:207858*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207858*0 + 3*166*FLEN/8, x4, x1, x2)

inst_69287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:207861*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207861*0 + 3*167*FLEN/8, x4, x1, x2)

inst_69288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:207864*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207864*0 + 3*168*FLEN/8, x4, x1, x2)

inst_69289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:207867*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207867*0 + 3*169*FLEN/8, x4, x1, x2)

inst_69290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:207870*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207870*0 + 3*170*FLEN/8, x4, x1, x2)

inst_69291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:207873*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207873*0 + 3*171*FLEN/8, x4, x1, x2)

inst_69292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:207876*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207876*0 + 3*172*FLEN/8, x4, x1, x2)

inst_69293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4cd7f20b5a02a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x89cb6d5c0f809 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4cd7f20b5a02a; op2val:0x9fc89cb6d5c0f809;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:207879*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207879*0 + 3*173*FLEN/8, x4, x1, x2)

inst_69294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:207882*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207882*0 + 3*174*FLEN/8, x4, x1, x2)

inst_69295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:207885*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207885*0 + 3*175*FLEN/8, x4, x1, x2)

inst_69296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:207888*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207888*0 + 3*176*FLEN/8, x4, x1, x2)

inst_69297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:207891*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207891*0 + 3*177*FLEN/8, x4, x1, x2)

inst_69298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:207894*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207894*0 + 3*178*FLEN/8, x4, x1, x2)

inst_69299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:207897*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207897*0 + 3*179*FLEN/8, x4, x1, x2)

inst_69300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:207900*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207900*0 + 3*180*FLEN/8, x4, x1, x2)

inst_69301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:207903*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207903*0 + 3*181*FLEN/8, x4, x1, x2)

inst_69302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:207906*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207906*0 + 3*182*FLEN/8, x4, x1, x2)

inst_69303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:207909*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207909*0 + 3*183*FLEN/8, x4, x1, x2)

inst_69304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:207912*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207912*0 + 3*184*FLEN/8, x4, x1, x2)

inst_69305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:207915*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207915*0 + 3*185*FLEN/8, x4, x1, x2)

inst_69306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:207918*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207918*0 + 3*186*FLEN/8, x4, x1, x2)

inst_69307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:207921*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207921*0 + 3*187*FLEN/8, x4, x1, x2)

inst_69308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:207924*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207924*0 + 3*188*FLEN/8, x4, x1, x2)

inst_69309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:207927*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207927*0 + 3*189*FLEN/8, x4, x1, x2)

inst_69310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:207930*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207930*0 + 3*190*FLEN/8, x4, x1, x2)

inst_69311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:207933*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207933*0 + 3*191*FLEN/8, x4, x1, x2)

inst_69312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:207936*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207936*0 + 3*192*FLEN/8, x4, x1, x2)

inst_69313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:207939*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207939*0 + 3*193*FLEN/8, x4, x1, x2)

inst_69314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:207942*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207942*0 + 3*194*FLEN/8, x4, x1, x2)

inst_69315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:207945*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207945*0 + 3*195*FLEN/8, x4, x1, x2)

inst_69316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000000000; valaddr_reg:x3; val_offset:207948*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207948*0 + 3*196*FLEN/8, x4, x1, x2)

inst_69317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000000001; valaddr_reg:x3; val_offset:207951*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207951*0 + 3*197*FLEN/8, x4, x1, x2)

inst_69318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000000003; valaddr_reg:x3; val_offset:207954*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207954*0 + 3*198*FLEN/8, x4, x1, x2)

inst_69319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000000007; valaddr_reg:x3; val_offset:207957*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207957*0 + 3*199*FLEN/8, x4, x1, x2)

inst_69320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000000000f; valaddr_reg:x3; val_offset:207960*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207960*0 + 3*200*FLEN/8, x4, x1, x2)

inst_69321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000000001f; valaddr_reg:x3; val_offset:207963*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207963*0 + 3*201*FLEN/8, x4, x1, x2)

inst_69322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000000003f; valaddr_reg:x3; val_offset:207966*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207966*0 + 3*202*FLEN/8, x4, x1, x2)

inst_69323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000000007f; valaddr_reg:x3; val_offset:207969*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207969*0 + 3*203*FLEN/8, x4, x1, x2)

inst_69324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000000000ff; valaddr_reg:x3; val_offset:207972*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207972*0 + 3*204*FLEN/8, x4, x1, x2)

inst_69325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000000001ff; valaddr_reg:x3; val_offset:207975*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207975*0 + 3*205*FLEN/8, x4, x1, x2)

inst_69326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000000003ff; valaddr_reg:x3; val_offset:207978*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207978*0 + 3*206*FLEN/8, x4, x1, x2)

inst_69327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000000007ff; valaddr_reg:x3; val_offset:207981*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207981*0 + 3*207*FLEN/8, x4, x1, x2)

inst_69328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000000fff; valaddr_reg:x3; val_offset:207984*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207984*0 + 3*208*FLEN/8, x4, x1, x2)

inst_69329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000001fff; valaddr_reg:x3; val_offset:207987*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207987*0 + 3*209*FLEN/8, x4, x1, x2)

inst_69330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000003fff; valaddr_reg:x3; val_offset:207990*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207990*0 + 3*210*FLEN/8, x4, x1, x2)

inst_69331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000007fff; valaddr_reg:x3; val_offset:207993*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207993*0 + 3*211*FLEN/8, x4, x1, x2)

inst_69332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000000ffff; valaddr_reg:x3; val_offset:207996*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207996*0 + 3*212*FLEN/8, x4, x1, x2)

inst_69333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000001ffff; valaddr_reg:x3; val_offset:207999*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207999*0 + 3*213*FLEN/8, x4, x1, x2)

inst_69334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000003ffff; valaddr_reg:x3; val_offset:208002*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208002*0 + 3*214*FLEN/8, x4, x1, x2)

inst_69335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000007ffff; valaddr_reg:x3; val_offset:208005*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208005*0 + 3*215*FLEN/8, x4, x1, x2)

inst_69336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000000fffff; valaddr_reg:x3; val_offset:208008*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208008*0 + 3*216*FLEN/8, x4, x1, x2)

inst_69337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000001fffff; valaddr_reg:x3; val_offset:208011*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208011*0 + 3*217*FLEN/8, x4, x1, x2)

inst_69338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000003fffff; valaddr_reg:x3; val_offset:208014*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208014*0 + 3*218*FLEN/8, x4, x1, x2)

inst_69339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000007fffff; valaddr_reg:x3; val_offset:208017*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208017*0 + 3*219*FLEN/8, x4, x1, x2)

inst_69340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000000ffffff; valaddr_reg:x3; val_offset:208020*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208020*0 + 3*220*FLEN/8, x4, x1, x2)

inst_69341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000001ffffff; valaddr_reg:x3; val_offset:208023*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208023*0 + 3*221*FLEN/8, x4, x1, x2)

inst_69342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000003ffffff; valaddr_reg:x3; val_offset:208026*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208026*0 + 3*222*FLEN/8, x4, x1, x2)

inst_69343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000007ffffff; valaddr_reg:x3; val_offset:208029*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208029*0 + 3*223*FLEN/8, x4, x1, x2)

inst_69344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000000fffffff; valaddr_reg:x3; val_offset:208032*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208032*0 + 3*224*FLEN/8, x4, x1, x2)

inst_69345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000001fffffff; valaddr_reg:x3; val_offset:208035*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208035*0 + 3*225*FLEN/8, x4, x1, x2)

inst_69346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000003fffffff; valaddr_reg:x3; val_offset:208038*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208038*0 + 3*226*FLEN/8, x4, x1, x2)

inst_69347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000007fffffff; valaddr_reg:x3; val_offset:208041*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208041*0 + 3*227*FLEN/8, x4, x1, x2)

inst_69348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00000ffffffff; valaddr_reg:x3; val_offset:208044*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208044*0 + 3*228*FLEN/8, x4, x1, x2)

inst_69349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00001ffffffff; valaddr_reg:x3; val_offset:208047*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208047*0 + 3*229*FLEN/8, x4, x1, x2)

inst_69350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00003ffffffff; valaddr_reg:x3; val_offset:208050*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208050*0 + 3*230*FLEN/8, x4, x1, x2)

inst_69351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00007ffffffff; valaddr_reg:x3; val_offset:208053*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208053*0 + 3*231*FLEN/8, x4, x1, x2)

inst_69352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0000fffffffff; valaddr_reg:x3; val_offset:208056*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208056*0 + 3*232*FLEN/8, x4, x1, x2)

inst_69353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0001fffffffff; valaddr_reg:x3; val_offset:208059*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208059*0 + 3*233*FLEN/8, x4, x1, x2)

inst_69354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0003fffffffff; valaddr_reg:x3; val_offset:208062*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208062*0 + 3*234*FLEN/8, x4, x1, x2)

inst_69355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0007fffffffff; valaddr_reg:x3; val_offset:208065*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208065*0 + 3*235*FLEN/8, x4, x1, x2)

inst_69356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b000ffffffffff; valaddr_reg:x3; val_offset:208068*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208068*0 + 3*236*FLEN/8, x4, x1, x2)

inst_69357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b001ffffffffff; valaddr_reg:x3; val_offset:208071*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208071*0 + 3*237*FLEN/8, x4, x1, x2)

inst_69358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b003ffffffffff; valaddr_reg:x3; val_offset:208074*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208074*0 + 3*238*FLEN/8, x4, x1, x2)

inst_69359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b007ffffffffff; valaddr_reg:x3; val_offset:208077*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208077*0 + 3*239*FLEN/8, x4, x1, x2)

inst_69360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b00fffffffffff; valaddr_reg:x3; val_offset:208080*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208080*0 + 3*240*FLEN/8, x4, x1, x2)

inst_69361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b01fffffffffff; valaddr_reg:x3; val_offset:208083*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208083*0 + 3*241*FLEN/8, x4, x1, x2)

inst_69362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b03fffffffffff; valaddr_reg:x3; val_offset:208086*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208086*0 + 3*242*FLEN/8, x4, x1, x2)

inst_69363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b07fffffffffff; valaddr_reg:x3; val_offset:208089*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208089*0 + 3*243*FLEN/8, x4, x1, x2)

inst_69364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b0ffffffffffff; valaddr_reg:x3; val_offset:208092*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208092*0 + 3*244*FLEN/8, x4, x1, x2)

inst_69365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b1ffffffffffff; valaddr_reg:x3; val_offset:208095*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208095*0 + 3*245*FLEN/8, x4, x1, x2)

inst_69366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b3ffffffffffff; valaddr_reg:x3; val_offset:208098*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208098*0 + 3*246*FLEN/8, x4, x1, x2)

inst_69367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b7ffffffffffff; valaddr_reg:x3; val_offset:208101*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208101*0 + 3*247*FLEN/8, x4, x1, x2)

inst_69368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82b8000000000000; valaddr_reg:x3; val_offset:208104*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208104*0 + 3*248*FLEN/8, x4, x1, x2)

inst_69369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bc000000000000; valaddr_reg:x3; val_offset:208107*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208107*0 + 3*249*FLEN/8, x4, x1, x2)

inst_69370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82be000000000000; valaddr_reg:x3; val_offset:208110*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208110*0 + 3*250*FLEN/8, x4, x1, x2)

inst_69371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bf000000000000; valaddr_reg:x3; val_offset:208113*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208113*0 + 3*251*FLEN/8, x4, x1, x2)

inst_69372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bf800000000000; valaddr_reg:x3; val_offset:208116*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208116*0 + 3*252*FLEN/8, x4, x1, x2)

inst_69373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfc00000000000; valaddr_reg:x3; val_offset:208119*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208119*0 + 3*253*FLEN/8, x4, x1, x2)

inst_69374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfe00000000000; valaddr_reg:x3; val_offset:208122*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208122*0 + 3*254*FLEN/8, x4, x1, x2)

inst_69375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bff00000000000; valaddr_reg:x3; val_offset:208125*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208125*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_69376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bff80000000000; valaddr_reg:x3; val_offset:208128*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208128*0 + 3*256*FLEN/8, x4, x1, x2)

inst_69377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffc0000000000; valaddr_reg:x3; val_offset:208131*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208131*0 + 3*257*FLEN/8, x4, x1, x2)

inst_69378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffe0000000000; valaddr_reg:x3; val_offset:208134*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208134*0 + 3*258*FLEN/8, x4, x1, x2)

inst_69379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfff0000000000; valaddr_reg:x3; val_offset:208137*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208137*0 + 3*259*FLEN/8, x4, x1, x2)

inst_69380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfff8000000000; valaddr_reg:x3; val_offset:208140*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208140*0 + 3*260*FLEN/8, x4, x1, x2)

inst_69381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffc000000000; valaddr_reg:x3; val_offset:208143*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208143*0 + 3*261*FLEN/8, x4, x1, x2)

inst_69382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffe000000000; valaddr_reg:x3; val_offset:208146*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208146*0 + 3*262*FLEN/8, x4, x1, x2)

inst_69383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffff000000000; valaddr_reg:x3; val_offset:208149*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208149*0 + 3*263*FLEN/8, x4, x1, x2)

inst_69384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffff800000000; valaddr_reg:x3; val_offset:208152*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208152*0 + 3*264*FLEN/8, x4, x1, x2)

inst_69385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffc00000000; valaddr_reg:x3; val_offset:208155*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208155*0 + 3*265*FLEN/8, x4, x1, x2)

inst_69386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffe00000000; valaddr_reg:x3; val_offset:208158*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208158*0 + 3*266*FLEN/8, x4, x1, x2)

inst_69387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffff00000000; valaddr_reg:x3; val_offset:208161*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208161*0 + 3*267*FLEN/8, x4, x1, x2)

inst_69388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffff80000000; valaddr_reg:x3; val_offset:208164*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208164*0 + 3*268*FLEN/8, x4, x1, x2)

inst_69389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffc0000000; valaddr_reg:x3; val_offset:208167*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208167*0 + 3*269*FLEN/8, x4, x1, x2)

inst_69390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffe0000000; valaddr_reg:x3; val_offset:208170*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208170*0 + 3*270*FLEN/8, x4, x1, x2)

inst_69391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffff0000000; valaddr_reg:x3; val_offset:208173*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208173*0 + 3*271*FLEN/8, x4, x1, x2)

inst_69392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffff8000000; valaddr_reg:x3; val_offset:208176*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208176*0 + 3*272*FLEN/8, x4, x1, x2)

inst_69393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffc000000; valaddr_reg:x3; val_offset:208179*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208179*0 + 3*273*FLEN/8, x4, x1, x2)

inst_69394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffe000000; valaddr_reg:x3; val_offset:208182*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208182*0 + 3*274*FLEN/8, x4, x1, x2)

inst_69395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffff000000; valaddr_reg:x3; val_offset:208185*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208185*0 + 3*275*FLEN/8, x4, x1, x2)

inst_69396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffff800000; valaddr_reg:x3; val_offset:208188*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208188*0 + 3*276*FLEN/8, x4, x1, x2)

inst_69397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffc00000; valaddr_reg:x3; val_offset:208191*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208191*0 + 3*277*FLEN/8, x4, x1, x2)

inst_69398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffe00000; valaddr_reg:x3; val_offset:208194*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208194*0 + 3*278*FLEN/8, x4, x1, x2)

inst_69399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffff00000; valaddr_reg:x3; val_offset:208197*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208197*0 + 3*279*FLEN/8, x4, x1, x2)

inst_69400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffff80000; valaddr_reg:x3; val_offset:208200*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208200*0 + 3*280*FLEN/8, x4, x1, x2)

inst_69401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffc0000; valaddr_reg:x3; val_offset:208203*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208203*0 + 3*281*FLEN/8, x4, x1, x2)

inst_69402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffe0000; valaddr_reg:x3; val_offset:208206*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208206*0 + 3*282*FLEN/8, x4, x1, x2)

inst_69403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffff0000; valaddr_reg:x3; val_offset:208209*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208209*0 + 3*283*FLEN/8, x4, x1, x2)

inst_69404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffff8000; valaddr_reg:x3; val_offset:208212*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208212*0 + 3*284*FLEN/8, x4, x1, x2)

inst_69405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffc000; valaddr_reg:x3; val_offset:208215*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208215*0 + 3*285*FLEN/8, x4, x1, x2)

inst_69406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffe000; valaddr_reg:x3; val_offset:208218*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208218*0 + 3*286*FLEN/8, x4, x1, x2)

inst_69407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffff000; valaddr_reg:x3; val_offset:208221*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208221*0 + 3*287*FLEN/8, x4, x1, x2)

inst_69408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffff800; valaddr_reg:x3; val_offset:208224*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208224*0 + 3*288*FLEN/8, x4, x1, x2)

inst_69409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffc00; valaddr_reg:x3; val_offset:208227*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208227*0 + 3*289*FLEN/8, x4, x1, x2)

inst_69410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffe00; valaddr_reg:x3; val_offset:208230*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208230*0 + 3*290*FLEN/8, x4, x1, x2)

inst_69411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffff00; valaddr_reg:x3; val_offset:208233*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208233*0 + 3*291*FLEN/8, x4, x1, x2)

inst_69412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffff80; valaddr_reg:x3; val_offset:208236*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208236*0 + 3*292*FLEN/8, x4, x1, x2)

inst_69413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffffc0; valaddr_reg:x3; val_offset:208239*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208239*0 + 3*293*FLEN/8, x4, x1, x2)

inst_69414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffffe0; valaddr_reg:x3; val_offset:208242*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208242*0 + 3*294*FLEN/8, x4, x1, x2)

inst_69415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffff0; valaddr_reg:x3; val_offset:208245*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208245*0 + 3*295*FLEN/8, x4, x1, x2)

inst_69416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffff8; valaddr_reg:x3; val_offset:208248*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208248*0 + 3*296*FLEN/8, x4, x1, x2)

inst_69417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffffc; valaddr_reg:x3; val_offset:208251*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208251*0 + 3*297*FLEN/8, x4, x1, x2)

inst_69418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bffffffffffffe; valaddr_reg:x3; val_offset:208254*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208254*0 + 3*298*FLEN/8, x4, x1, x2)

inst_69419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4da4434e28f99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4da4434e28f99; op2val:0x8000;
op3val:0x82bfffffffffffff; valaddr_reg:x3; val_offset:208257*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208257*0 + 3*299*FLEN/8, x4, x1, x2)

inst_69420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:208260*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208260*0 + 3*300*FLEN/8, x4, x1, x2)

inst_69421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:208263*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208263*0 + 3*301*FLEN/8, x4, x1, x2)

inst_69422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:208266*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208266*0 + 3*302*FLEN/8, x4, x1, x2)

inst_69423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:208269*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208269*0 + 3*303*FLEN/8, x4, x1, x2)

inst_69424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:208272*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208272*0 + 3*304*FLEN/8, x4, x1, x2)

inst_69425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:208275*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208275*0 + 3*305*FLEN/8, x4, x1, x2)

inst_69426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:208278*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208278*0 + 3*306*FLEN/8, x4, x1, x2)

inst_69427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:208281*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208281*0 + 3*307*FLEN/8, x4, x1, x2)

inst_69428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:208284*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208284*0 + 3*308*FLEN/8, x4, x1, x2)

inst_69429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:208287*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208287*0 + 3*309*FLEN/8, x4, x1, x2)

inst_69430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:208290*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208290*0 + 3*310*FLEN/8, x4, x1, x2)

inst_69431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:208293*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208293*0 + 3*311*FLEN/8, x4, x1, x2)

inst_69432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:208296*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208296*0 + 3*312*FLEN/8, x4, x1, x2)

inst_69433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:208299*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208299*0 + 3*313*FLEN/8, x4, x1, x2)

inst_69434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:208302*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208302*0 + 3*314*FLEN/8, x4, x1, x2)

inst_69435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:208305*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208305*0 + 3*315*FLEN/8, x4, x1, x2)

inst_69436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:208308*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208308*0 + 3*316*FLEN/8, x4, x1, x2)

inst_69437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:208311*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208311*0 + 3*317*FLEN/8, x4, x1, x2)

inst_69438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:208314*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208314*0 + 3*318*FLEN/8, x4, x1, x2)

inst_69439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:208317*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208317*0 + 3*319*FLEN/8, x4, x1, x2)

inst_69440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:208320*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208320*0 + 3*320*FLEN/8, x4, x1, x2)

inst_69441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:208323*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208323*0 + 3*321*FLEN/8, x4, x1, x2)

inst_69442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:208326*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208326*0 + 3*322*FLEN/8, x4, x1, x2)

inst_69443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:208329*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208329*0 + 3*323*FLEN/8, x4, x1, x2)

inst_69444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:208332*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208332*0 + 3*324*FLEN/8, x4, x1, x2)

inst_69445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:208335*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208335*0 + 3*325*FLEN/8, x4, x1, x2)

inst_69446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:208338*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208338*0 + 3*326*FLEN/8, x4, x1, x2)

inst_69447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:208341*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208341*0 + 3*327*FLEN/8, x4, x1, x2)

inst_69448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:208344*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208344*0 + 3*328*FLEN/8, x4, x1, x2)

inst_69449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:208347*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208347*0 + 3*329*FLEN/8, x4, x1, x2)

inst_69450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:208350*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208350*0 + 3*330*FLEN/8, x4, x1, x2)

inst_69451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:208353*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208353*0 + 3*331*FLEN/8, x4, x1, x2)

inst_69452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:208356*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208356*0 + 3*332*FLEN/8, x4, x1, x2)

inst_69453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:208359*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208359*0 + 3*333*FLEN/8, x4, x1, x2)

inst_69454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:208362*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208362*0 + 3*334*FLEN/8, x4, x1, x2)

inst_69455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:208365*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208365*0 + 3*335*FLEN/8, x4, x1, x2)

inst_69456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:208368*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208368*0 + 3*336*FLEN/8, x4, x1, x2)

inst_69457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:208371*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208371*0 + 3*337*FLEN/8, x4, x1, x2)

inst_69458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:208374*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208374*0 + 3*338*FLEN/8, x4, x1, x2)

inst_69459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:208377*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208377*0 + 3*339*FLEN/8, x4, x1, x2)

inst_69460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:208380*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208380*0 + 3*340*FLEN/8, x4, x1, x2)

inst_69461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:208383*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208383*0 + 3*341*FLEN/8, x4, x1, x2)

inst_69462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:208386*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208386*0 + 3*342*FLEN/8, x4, x1, x2)

inst_69463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:208389*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208389*0 + 3*343*FLEN/8, x4, x1, x2)

inst_69464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:208392*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208392*0 + 3*344*FLEN/8, x4, x1, x2)

inst_69465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:208395*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208395*0 + 3*345*FLEN/8, x4, x1, x2)

inst_69466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:208398*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208398*0 + 3*346*FLEN/8, x4, x1, x2)

inst_69467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:208401*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208401*0 + 3*347*FLEN/8, x4, x1, x2)

inst_69468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:208404*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208404*0 + 3*348*FLEN/8, x4, x1, x2)

inst_69469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:208407*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208407*0 + 3*349*FLEN/8, x4, x1, x2)

inst_69470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:208410*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208410*0 + 3*350*FLEN/8, x4, x1, x2)

inst_69471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:208413*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208413*0 + 3*351*FLEN/8, x4, x1, x2)

inst_69472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:208416*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208416*0 + 3*352*FLEN/8, x4, x1, x2)

inst_69473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:208419*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208419*0 + 3*353*FLEN/8, x4, x1, x2)

inst_69474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:208422*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208422*0 + 3*354*FLEN/8, x4, x1, x2)

inst_69475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:208425*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208425*0 + 3*355*FLEN/8, x4, x1, x2)

inst_69476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:208428*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208428*0 + 3*356*FLEN/8, x4, x1, x2)

inst_69477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:208431*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208431*0 + 3*357*FLEN/8, x4, x1, x2)

inst_69478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:208434*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208434*0 + 3*358*FLEN/8, x4, x1, x2)

inst_69479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:208437*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208437*0 + 3*359*FLEN/8, x4, x1, x2)

inst_69480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:208440*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208440*0 + 3*360*FLEN/8, x4, x1, x2)

inst_69481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:208443*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208443*0 + 3*361*FLEN/8, x4, x1, x2)

inst_69482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:208446*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208446*0 + 3*362*FLEN/8, x4, x1, x2)

inst_69483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:208449*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208449*0 + 3*363*FLEN/8, x4, x1, x2)

inst_69484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:208452*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208452*0 + 3*364*FLEN/8, x4, x1, x2)

inst_69485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:208455*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208455*0 + 3*365*FLEN/8, x4, x1, x2)

inst_69486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:208458*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208458*0 + 3*366*FLEN/8, x4, x1, x2)

inst_69487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:208461*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208461*0 + 3*367*FLEN/8, x4, x1, x2)

inst_69488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:208464*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208464*0 + 3*368*FLEN/8, x4, x1, x2)

inst_69489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:208467*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208467*0 + 3*369*FLEN/8, x4, x1, x2)

inst_69490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:208470*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208470*0 + 3*370*FLEN/8, x4, x1, x2)

inst_69491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:208473*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208473*0 + 3*371*FLEN/8, x4, x1, x2)

inst_69492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:208476*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208476*0 + 3*372*FLEN/8, x4, x1, x2)

inst_69493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:208479*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208479*0 + 3*373*FLEN/8, x4, x1, x2)

inst_69494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:208482*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208482*0 + 3*374*FLEN/8, x4, x1, x2)

inst_69495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:208485*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208485*0 + 3*375*FLEN/8, x4, x1, x2)

inst_69496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:208488*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208488*0 + 3*376*FLEN/8, x4, x1, x2)

inst_69497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:208491*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208491*0 + 3*377*FLEN/8, x4, x1, x2)

inst_69498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:208494*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208494*0 + 3*378*FLEN/8, x4, x1, x2)

inst_69499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:208497*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208497*0 + 3*379*FLEN/8, x4, x1, x2)

inst_69500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:208500*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208500*0 + 3*380*FLEN/8, x4, x1, x2)

inst_69501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:208503*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208503*0 + 3*381*FLEN/8, x4, x1, x2)

inst_69502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:208506*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208506*0 + 3*382*FLEN/8, x4, x1, x2)

inst_69503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:208509*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208509*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_69504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:208512*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208512*0 + 3*384*FLEN/8, x4, x1, x2)

inst_69505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:208515*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208515*0 + 3*385*FLEN/8, x4, x1, x2)

inst_69506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:208518*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208518*0 + 3*386*FLEN/8, x4, x1, x2)

inst_69507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:208521*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208521*0 + 3*387*FLEN/8, x4, x1, x2)

inst_69508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:208524*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208524*0 + 3*388*FLEN/8, x4, x1, x2)

inst_69509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:208527*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208527*0 + 3*389*FLEN/8, x4, x1, x2)

inst_69510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:208530*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208530*0 + 3*390*FLEN/8, x4, x1, x2)

inst_69511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:208533*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208533*0 + 3*391*FLEN/8, x4, x1, x2)

inst_69512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:208536*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208536*0 + 3*392*FLEN/8, x4, x1, x2)

inst_69513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:208539*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208539*0 + 3*393*FLEN/8, x4, x1, x2)

inst_69514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:208542*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208542*0 + 3*394*FLEN/8, x4, x1, x2)

inst_69515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:208545*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208545*0 + 3*395*FLEN/8, x4, x1, x2)

inst_69516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:208548*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208548*0 + 3*396*FLEN/8, x4, x1, x2)

inst_69517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:208551*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208551*0 + 3*397*FLEN/8, x4, x1, x2)

inst_69518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:208554*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208554*0 + 3*398*FLEN/8, x4, x1, x2)

inst_69519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:208557*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208557*0 + 3*399*FLEN/8, x4, x1, x2)

inst_69520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:208560*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208560*0 + 3*400*FLEN/8, x4, x1, x2)

inst_69521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:208563*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208563*0 + 3*401*FLEN/8, x4, x1, x2)

inst_69522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:208566*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208566*0 + 3*402*FLEN/8, x4, x1, x2)

inst_69523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:208569*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208569*0 + 3*403*FLEN/8, x4, x1, x2)

inst_69524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:208572*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208572*0 + 3*404*FLEN/8, x4, x1, x2)

inst_69525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:208575*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208575*0 + 3*405*FLEN/8, x4, x1, x2)

inst_69526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:208578*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208578*0 + 3*406*FLEN/8, x4, x1, x2)

inst_69527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:208581*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208581*0 + 3*407*FLEN/8, x4, x1, x2)

inst_69528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:208584*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208584*0 + 3*408*FLEN/8, x4, x1, x2)

inst_69529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:208587*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208587*0 + 3*409*FLEN/8, x4, x1, x2)

inst_69530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:208590*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208590*0 + 3*410*FLEN/8, x4, x1, x2)

inst_69531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:208593*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208593*0 + 3*411*FLEN/8, x4, x1, x2)

inst_69532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:208596*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208596*0 + 3*412*FLEN/8, x4, x1, x2)

inst_69533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:208599*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208599*0 + 3*413*FLEN/8, x4, x1, x2)

inst_69534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:208602*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208602*0 + 3*414*FLEN/8, x4, x1, x2)

inst_69535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:208605*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208605*0 + 3*415*FLEN/8, x4, x1, x2)

inst_69536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:208608*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208608*0 + 3*416*FLEN/8, x4, x1, x2)

inst_69537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:208611*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208611*0 + 3*417*FLEN/8, x4, x1, x2)

inst_69538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:208614*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208614*0 + 3*418*FLEN/8, x4, x1, x2)

inst_69539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:208617*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208617*0 + 3*419*FLEN/8, x4, x1, x2)

inst_69540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffffe0; valaddr_reg:x3; val_offset:208620*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208620*0 + 3*420*FLEN/8, x4, x1, x2)

inst_69541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffff0; valaddr_reg:x3; val_offset:208623*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208623*0 + 3*421*FLEN/8, x4, x1, x2)

inst_69542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffff8; valaddr_reg:x3; val_offset:208626*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208626*0 + 3*422*FLEN/8, x4, x1, x2)

inst_69543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffffc; valaddr_reg:x3; val_offset:208629*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208629*0 + 3*423*FLEN/8, x4, x1, x2)

inst_69544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36ffffffffffffe; valaddr_reg:x3; val_offset:208632*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208632*0 + 3*424*FLEN/8, x4, x1, x2)

inst_69545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4db2f49bee6f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4db2f49bee6f3; op2val:0x0;
op3val:0x36fffffffffffff; valaddr_reg:x3; val_offset:208635*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208635*0 + 3*425*FLEN/8, x4, x1, x2)

inst_69546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000000000; valaddr_reg:x3; val_offset:208638*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208638*0 + 3*426*FLEN/8, x4, x1, x2)

inst_69547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000000001; valaddr_reg:x3; val_offset:208641*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208641*0 + 3*427*FLEN/8, x4, x1, x2)

inst_69548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000000003; valaddr_reg:x3; val_offset:208644*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208644*0 + 3*428*FLEN/8, x4, x1, x2)

inst_69549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000000007; valaddr_reg:x3; val_offset:208647*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208647*0 + 3*429*FLEN/8, x4, x1, x2)

inst_69550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000000000f; valaddr_reg:x3; val_offset:208650*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208650*0 + 3*430*FLEN/8, x4, x1, x2)

inst_69551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000000001f; valaddr_reg:x3; val_offset:208653*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208653*0 + 3*431*FLEN/8, x4, x1, x2)

inst_69552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000000003f; valaddr_reg:x3; val_offset:208656*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208656*0 + 3*432*FLEN/8, x4, x1, x2)

inst_69553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000000007f; valaddr_reg:x3; val_offset:208659*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208659*0 + 3*433*FLEN/8, x4, x1, x2)

inst_69554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000000000ff; valaddr_reg:x3; val_offset:208662*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208662*0 + 3*434*FLEN/8, x4, x1, x2)

inst_69555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000000001ff; valaddr_reg:x3; val_offset:208665*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208665*0 + 3*435*FLEN/8, x4, x1, x2)

inst_69556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000000003ff; valaddr_reg:x3; val_offset:208668*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208668*0 + 3*436*FLEN/8, x4, x1, x2)

inst_69557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000000007ff; valaddr_reg:x3; val_offset:208671*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208671*0 + 3*437*FLEN/8, x4, x1, x2)

inst_69558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000000fff; valaddr_reg:x3; val_offset:208674*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208674*0 + 3*438*FLEN/8, x4, x1, x2)

inst_69559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000001fff; valaddr_reg:x3; val_offset:208677*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208677*0 + 3*439*FLEN/8, x4, x1, x2)

inst_69560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000003fff; valaddr_reg:x3; val_offset:208680*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208680*0 + 3*440*FLEN/8, x4, x1, x2)

inst_69561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000007fff; valaddr_reg:x3; val_offset:208683*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208683*0 + 3*441*FLEN/8, x4, x1, x2)

inst_69562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000000ffff; valaddr_reg:x3; val_offset:208686*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208686*0 + 3*442*FLEN/8, x4, x1, x2)

inst_69563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000001ffff; valaddr_reg:x3; val_offset:208689*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208689*0 + 3*443*FLEN/8, x4, x1, x2)

inst_69564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000003ffff; valaddr_reg:x3; val_offset:208692*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208692*0 + 3*444*FLEN/8, x4, x1, x2)

inst_69565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000007ffff; valaddr_reg:x3; val_offset:208695*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208695*0 + 3*445*FLEN/8, x4, x1, x2)

inst_69566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000000fffff; valaddr_reg:x3; val_offset:208698*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208698*0 + 3*446*FLEN/8, x4, x1, x2)

inst_69567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000001fffff; valaddr_reg:x3; val_offset:208701*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208701*0 + 3*447*FLEN/8, x4, x1, x2)

inst_69568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000003fffff; valaddr_reg:x3; val_offset:208704*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208704*0 + 3*448*FLEN/8, x4, x1, x2)

inst_69569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000007fffff; valaddr_reg:x3; val_offset:208707*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208707*0 + 3*449*FLEN/8, x4, x1, x2)

inst_69570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000000ffffff; valaddr_reg:x3; val_offset:208710*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208710*0 + 3*450*FLEN/8, x4, x1, x2)

inst_69571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000001ffffff; valaddr_reg:x3; val_offset:208713*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208713*0 + 3*451*FLEN/8, x4, x1, x2)

inst_69572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000003ffffff; valaddr_reg:x3; val_offset:208716*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208716*0 + 3*452*FLEN/8, x4, x1, x2)

inst_69573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000007ffffff; valaddr_reg:x3; val_offset:208719*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208719*0 + 3*453*FLEN/8, x4, x1, x2)

inst_69574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000000fffffff; valaddr_reg:x3; val_offset:208722*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208722*0 + 3*454*FLEN/8, x4, x1, x2)

inst_69575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000001fffffff; valaddr_reg:x3; val_offset:208725*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208725*0 + 3*455*FLEN/8, x4, x1, x2)

inst_69576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000003fffffff; valaddr_reg:x3; val_offset:208728*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208728*0 + 3*456*FLEN/8, x4, x1, x2)

inst_69577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000007fffffff; valaddr_reg:x3; val_offset:208731*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208731*0 + 3*457*FLEN/8, x4, x1, x2)

inst_69578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00000ffffffff; valaddr_reg:x3; val_offset:208734*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208734*0 + 3*458*FLEN/8, x4, x1, x2)

inst_69579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00001ffffffff; valaddr_reg:x3; val_offset:208737*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208737*0 + 3*459*FLEN/8, x4, x1, x2)

inst_69580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00003ffffffff; valaddr_reg:x3; val_offset:208740*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208740*0 + 3*460*FLEN/8, x4, x1, x2)

inst_69581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00007ffffffff; valaddr_reg:x3; val_offset:208743*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208743*0 + 3*461*FLEN/8, x4, x1, x2)

inst_69582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0000fffffffff; valaddr_reg:x3; val_offset:208746*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208746*0 + 3*462*FLEN/8, x4, x1, x2)

inst_69583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0001fffffffff; valaddr_reg:x3; val_offset:208749*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208749*0 + 3*463*FLEN/8, x4, x1, x2)

inst_69584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0003fffffffff; valaddr_reg:x3; val_offset:208752*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208752*0 + 3*464*FLEN/8, x4, x1, x2)

inst_69585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0007fffffffff; valaddr_reg:x3; val_offset:208755*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208755*0 + 3*465*FLEN/8, x4, x1, x2)

inst_69586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed000ffffffffff; valaddr_reg:x3; val_offset:208758*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208758*0 + 3*466*FLEN/8, x4, x1, x2)

inst_69587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed001ffffffffff; valaddr_reg:x3; val_offset:208761*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208761*0 + 3*467*FLEN/8, x4, x1, x2)

inst_69588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed003ffffffffff; valaddr_reg:x3; val_offset:208764*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208764*0 + 3*468*FLEN/8, x4, x1, x2)

inst_69589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed007ffffffffff; valaddr_reg:x3; val_offset:208767*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208767*0 + 3*469*FLEN/8, x4, x1, x2)

inst_69590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed00fffffffffff; valaddr_reg:x3; val_offset:208770*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208770*0 + 3*470*FLEN/8, x4, x1, x2)

inst_69591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed01fffffffffff; valaddr_reg:x3; val_offset:208773*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208773*0 + 3*471*FLEN/8, x4, x1, x2)

inst_69592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed03fffffffffff; valaddr_reg:x3; val_offset:208776*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208776*0 + 3*472*FLEN/8, x4, x1, x2)

inst_69593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed07fffffffffff; valaddr_reg:x3; val_offset:208779*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208779*0 + 3*473*FLEN/8, x4, x1, x2)

inst_69594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed0ffffffffffff; valaddr_reg:x3; val_offset:208782*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208782*0 + 3*474*FLEN/8, x4, x1, x2)

inst_69595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed1ffffffffffff; valaddr_reg:x3; val_offset:208785*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208785*0 + 3*475*FLEN/8, x4, x1, x2)

inst_69596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed3ffffffffffff; valaddr_reg:x3; val_offset:208788*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208788*0 + 3*476*FLEN/8, x4, x1, x2)

inst_69597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed7ffffffffffff; valaddr_reg:x3; val_offset:208791*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208791*0 + 3*477*FLEN/8, x4, x1, x2)

inst_69598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbed8000000000000; valaddr_reg:x3; val_offset:208794*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208794*0 + 3*478*FLEN/8, x4, x1, x2)

inst_69599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedc000000000000; valaddr_reg:x3; val_offset:208797*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208797*0 + 3*479*FLEN/8, x4, x1, x2)

inst_69600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbede000000000000; valaddr_reg:x3; val_offset:208800*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208800*0 + 3*480*FLEN/8, x4, x1, x2)

inst_69601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedf000000000000; valaddr_reg:x3; val_offset:208803*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208803*0 + 3*481*FLEN/8, x4, x1, x2)

inst_69602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedf800000000000; valaddr_reg:x3; val_offset:208806*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208806*0 + 3*482*FLEN/8, x4, x1, x2)

inst_69603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfc00000000000; valaddr_reg:x3; val_offset:208809*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208809*0 + 3*483*FLEN/8, x4, x1, x2)

inst_69604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfe00000000000; valaddr_reg:x3; val_offset:208812*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208812*0 + 3*484*FLEN/8, x4, x1, x2)

inst_69605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedff00000000000; valaddr_reg:x3; val_offset:208815*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208815*0 + 3*485*FLEN/8, x4, x1, x2)

inst_69606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedff80000000000; valaddr_reg:x3; val_offset:208818*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208818*0 + 3*486*FLEN/8, x4, x1, x2)

inst_69607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffc0000000000; valaddr_reg:x3; val_offset:208821*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208821*0 + 3*487*FLEN/8, x4, x1, x2)

inst_69608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffe0000000000; valaddr_reg:x3; val_offset:208824*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208824*0 + 3*488*FLEN/8, x4, x1, x2)

inst_69609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfff0000000000; valaddr_reg:x3; val_offset:208827*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208827*0 + 3*489*FLEN/8, x4, x1, x2)

inst_69610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfff8000000000; valaddr_reg:x3; val_offset:208830*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208830*0 + 3*490*FLEN/8, x4, x1, x2)

inst_69611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffc000000000; valaddr_reg:x3; val_offset:208833*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208833*0 + 3*491*FLEN/8, x4, x1, x2)

inst_69612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffe000000000; valaddr_reg:x3; val_offset:208836*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208836*0 + 3*492*FLEN/8, x4, x1, x2)

inst_69613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffff000000000; valaddr_reg:x3; val_offset:208839*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208839*0 + 3*493*FLEN/8, x4, x1, x2)

inst_69614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffff800000000; valaddr_reg:x3; val_offset:208842*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208842*0 + 3*494*FLEN/8, x4, x1, x2)

inst_69615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffc00000000; valaddr_reg:x3; val_offset:208845*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208845*0 + 3*495*FLEN/8, x4, x1, x2)

inst_69616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffe00000000; valaddr_reg:x3; val_offset:208848*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208848*0 + 3*496*FLEN/8, x4, x1, x2)

inst_69617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffff00000000; valaddr_reg:x3; val_offset:208851*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208851*0 + 3*497*FLEN/8, x4, x1, x2)

inst_69618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffff80000000; valaddr_reg:x3; val_offset:208854*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208854*0 + 3*498*FLEN/8, x4, x1, x2)

inst_69619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffc0000000; valaddr_reg:x3; val_offset:208857*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208857*0 + 3*499*FLEN/8, x4, x1, x2)

inst_69620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffe0000000; valaddr_reg:x3; val_offset:208860*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208860*0 + 3*500*FLEN/8, x4, x1, x2)

inst_69621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffff0000000; valaddr_reg:x3; val_offset:208863*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208863*0 + 3*501*FLEN/8, x4, x1, x2)

inst_69622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffff8000000; valaddr_reg:x3; val_offset:208866*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208866*0 + 3*502*FLEN/8, x4, x1, x2)

inst_69623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffc000000; valaddr_reg:x3; val_offset:208869*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208869*0 + 3*503*FLEN/8, x4, x1, x2)

inst_69624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffe000000; valaddr_reg:x3; val_offset:208872*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208872*0 + 3*504*FLEN/8, x4, x1, x2)

inst_69625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffff000000; valaddr_reg:x3; val_offset:208875*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208875*0 + 3*505*FLEN/8, x4, x1, x2)

inst_69626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffff800000; valaddr_reg:x3; val_offset:208878*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208878*0 + 3*506*FLEN/8, x4, x1, x2)

inst_69627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffc00000; valaddr_reg:x3; val_offset:208881*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208881*0 + 3*507*FLEN/8, x4, x1, x2)

inst_69628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffe00000; valaddr_reg:x3; val_offset:208884*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208884*0 + 3*508*FLEN/8, x4, x1, x2)

inst_69629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffff00000; valaddr_reg:x3; val_offset:208887*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208887*0 + 3*509*FLEN/8, x4, x1, x2)

inst_69630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffff80000; valaddr_reg:x3; val_offset:208890*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208890*0 + 3*510*FLEN/8, x4, x1, x2)

inst_69631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffc0000; valaddr_reg:x3; val_offset:208893*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208893*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_69632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffe0000; valaddr_reg:x3; val_offset:208896*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208896*0 + 3*512*FLEN/8, x4, x1, x2)

inst_69633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffff0000; valaddr_reg:x3; val_offset:208899*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208899*0 + 3*513*FLEN/8, x4, x1, x2)

inst_69634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffff8000; valaddr_reg:x3; val_offset:208902*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208902*0 + 3*514*FLEN/8, x4, x1, x2)

inst_69635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffc000; valaddr_reg:x3; val_offset:208905*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208905*0 + 3*515*FLEN/8, x4, x1, x2)

inst_69636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffe000; valaddr_reg:x3; val_offset:208908*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208908*0 + 3*516*FLEN/8, x4, x1, x2)

inst_69637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffff000; valaddr_reg:x3; val_offset:208911*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208911*0 + 3*517*FLEN/8, x4, x1, x2)

inst_69638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffff800; valaddr_reg:x3; val_offset:208914*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208914*0 + 3*518*FLEN/8, x4, x1, x2)

inst_69639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffc00; valaddr_reg:x3; val_offset:208917*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208917*0 + 3*519*FLEN/8, x4, x1, x2)

inst_69640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffe00; valaddr_reg:x3; val_offset:208920*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208920*0 + 3*520*FLEN/8, x4, x1, x2)

inst_69641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffff00; valaddr_reg:x3; val_offset:208923*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208923*0 + 3*521*FLEN/8, x4, x1, x2)

inst_69642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffff80; valaddr_reg:x3; val_offset:208926*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208926*0 + 3*522*FLEN/8, x4, x1, x2)

inst_69643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffffc0; valaddr_reg:x3; val_offset:208929*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208929*0 + 3*523*FLEN/8, x4, x1, x2)

inst_69644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffffe0; valaddr_reg:x3; val_offset:208932*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208932*0 + 3*524*FLEN/8, x4, x1, x2)

inst_69645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffff0; valaddr_reg:x3; val_offset:208935*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208935*0 + 3*525*FLEN/8, x4, x1, x2)

inst_69646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffff8; valaddr_reg:x3; val_offset:208938*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208938*0 + 3*526*FLEN/8, x4, x1, x2)

inst_69647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffffc; valaddr_reg:x3; val_offset:208941*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208941*0 + 3*527*FLEN/8, x4, x1, x2)

inst_69648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedffffffffffffe; valaddr_reg:x3; val_offset:208944*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208944*0 + 3*528*FLEN/8, x4, x1, x2)

inst_69649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbedfffffffffffff; valaddr_reg:x3; val_offset:208947*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208947*0 + 3*529*FLEN/8, x4, x1, x2)

inst_69650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:208950*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208950*0 + 3*530*FLEN/8, x4, x1, x2)

inst_69651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:208953*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208953*0 + 3*531*FLEN/8, x4, x1, x2)

inst_69652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:208956*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208956*0 + 3*532*FLEN/8, x4, x1, x2)

inst_69653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:208959*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208959*0 + 3*533*FLEN/8, x4, x1, x2)

inst_69654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:208962*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208962*0 + 3*534*FLEN/8, x4, x1, x2)

inst_69655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:208965*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208965*0 + 3*535*FLEN/8, x4, x1, x2)

inst_69656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:208968*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208968*0 + 3*536*FLEN/8, x4, x1, x2)

inst_69657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:208971*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208971*0 + 3*537*FLEN/8, x4, x1, x2)

inst_69658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:208974*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208974*0 + 3*538*FLEN/8, x4, x1, x2)

inst_69659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:208977*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208977*0 + 3*539*FLEN/8, x4, x1, x2)

inst_69660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:208980*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208980*0 + 3*540*FLEN/8, x4, x1, x2)

inst_69661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:208983*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208983*0 + 3*541*FLEN/8, x4, x1, x2)

inst_69662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:208986*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208986*0 + 3*542*FLEN/8, x4, x1, x2)

inst_69663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:208989*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208989*0 + 3*543*FLEN/8, x4, x1, x2)

inst_69664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:208992*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208992*0 + 3*544*FLEN/8, x4, x1, x2)

inst_69665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:208995*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208995*0 + 3*545*FLEN/8, x4, x1, x2)

inst_69666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:208998*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208998*0 + 3*546*FLEN/8, x4, x1, x2)

inst_69667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:209001*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209001*0 + 3*547*FLEN/8, x4, x1, x2)

inst_69668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:209004*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209004*0 + 3*548*FLEN/8, x4, x1, x2)

inst_69669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:209007*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209007*0 + 3*549*FLEN/8, x4, x1, x2)

inst_69670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:209010*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209010*0 + 3*550*FLEN/8, x4, x1, x2)

inst_69671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4e8baea923265 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x87ca8528c5a56 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4e8baea923265; op2val:0x9fc87ca8528c5a56;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:209013*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209013*0 + 3*551*FLEN/8, x4, x1, x2)

inst_69672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000000000; valaddr_reg:x3; val_offset:209016*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209016*0 + 3*552*FLEN/8, x4, x1, x2)

inst_69673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000000001; valaddr_reg:x3; val_offset:209019*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209019*0 + 3*553*FLEN/8, x4, x1, x2)

inst_69674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000000003; valaddr_reg:x3; val_offset:209022*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209022*0 + 3*554*FLEN/8, x4, x1, x2)

inst_69675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000000007; valaddr_reg:x3; val_offset:209025*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209025*0 + 3*555*FLEN/8, x4, x1, x2)

inst_69676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000000000f; valaddr_reg:x3; val_offset:209028*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209028*0 + 3*556*FLEN/8, x4, x1, x2)

inst_69677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000000001f; valaddr_reg:x3; val_offset:209031*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209031*0 + 3*557*FLEN/8, x4, x1, x2)

inst_69678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000000003f; valaddr_reg:x3; val_offset:209034*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209034*0 + 3*558*FLEN/8, x4, x1, x2)

inst_69679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000000007f; valaddr_reg:x3; val_offset:209037*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209037*0 + 3*559*FLEN/8, x4, x1, x2)

inst_69680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000000000ff; valaddr_reg:x3; val_offset:209040*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209040*0 + 3*560*FLEN/8, x4, x1, x2)

inst_69681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000000001ff; valaddr_reg:x3; val_offset:209043*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209043*0 + 3*561*FLEN/8, x4, x1, x2)

inst_69682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000000003ff; valaddr_reg:x3; val_offset:209046*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209046*0 + 3*562*FLEN/8, x4, x1, x2)

inst_69683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000000007ff; valaddr_reg:x3; val_offset:209049*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209049*0 + 3*563*FLEN/8, x4, x1, x2)

inst_69684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000000fff; valaddr_reg:x3; val_offset:209052*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209052*0 + 3*564*FLEN/8, x4, x1, x2)

inst_69685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000001fff; valaddr_reg:x3; val_offset:209055*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209055*0 + 3*565*FLEN/8, x4, x1, x2)

inst_69686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000003fff; valaddr_reg:x3; val_offset:209058*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209058*0 + 3*566*FLEN/8, x4, x1, x2)

inst_69687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000007fff; valaddr_reg:x3; val_offset:209061*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209061*0 + 3*567*FLEN/8, x4, x1, x2)

inst_69688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000000ffff; valaddr_reg:x3; val_offset:209064*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209064*0 + 3*568*FLEN/8, x4, x1, x2)

inst_69689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000001ffff; valaddr_reg:x3; val_offset:209067*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209067*0 + 3*569*FLEN/8, x4, x1, x2)

inst_69690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000003ffff; valaddr_reg:x3; val_offset:209070*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209070*0 + 3*570*FLEN/8, x4, x1, x2)

inst_69691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000007ffff; valaddr_reg:x3; val_offset:209073*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209073*0 + 3*571*FLEN/8, x4, x1, x2)

inst_69692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000000fffff; valaddr_reg:x3; val_offset:209076*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209076*0 + 3*572*FLEN/8, x4, x1, x2)

inst_69693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000001fffff; valaddr_reg:x3; val_offset:209079*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209079*0 + 3*573*FLEN/8, x4, x1, x2)

inst_69694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000003fffff; valaddr_reg:x3; val_offset:209082*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209082*0 + 3*574*FLEN/8, x4, x1, x2)

inst_69695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000007fffff; valaddr_reg:x3; val_offset:209085*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209085*0 + 3*575*FLEN/8, x4, x1, x2)

inst_69696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000000ffffff; valaddr_reg:x3; val_offset:209088*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209088*0 + 3*576*FLEN/8, x4, x1, x2)

inst_69697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000001ffffff; valaddr_reg:x3; val_offset:209091*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209091*0 + 3*577*FLEN/8, x4, x1, x2)

inst_69698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000003ffffff; valaddr_reg:x3; val_offset:209094*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209094*0 + 3*578*FLEN/8, x4, x1, x2)

inst_69699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000007ffffff; valaddr_reg:x3; val_offset:209097*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209097*0 + 3*579*FLEN/8, x4, x1, x2)

inst_69700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000000fffffff; valaddr_reg:x3; val_offset:209100*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209100*0 + 3*580*FLEN/8, x4, x1, x2)

inst_69701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000001fffffff; valaddr_reg:x3; val_offset:209103*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209103*0 + 3*581*FLEN/8, x4, x1, x2)

inst_69702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000003fffffff; valaddr_reg:x3; val_offset:209106*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209106*0 + 3*582*FLEN/8, x4, x1, x2)

inst_69703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000007fffffff; valaddr_reg:x3; val_offset:209109*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209109*0 + 3*583*FLEN/8, x4, x1, x2)

inst_69704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500000ffffffff; valaddr_reg:x3; val_offset:209112*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209112*0 + 3*584*FLEN/8, x4, x1, x2)

inst_69705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500001ffffffff; valaddr_reg:x3; val_offset:209115*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209115*0 + 3*585*FLEN/8, x4, x1, x2)

inst_69706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500003ffffffff; valaddr_reg:x3; val_offset:209118*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209118*0 + 3*586*FLEN/8, x4, x1, x2)

inst_69707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500007ffffffff; valaddr_reg:x3; val_offset:209121*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209121*0 + 3*587*FLEN/8, x4, x1, x2)

inst_69708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50000fffffffff; valaddr_reg:x3; val_offset:209124*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209124*0 + 3*588*FLEN/8, x4, x1, x2)

inst_69709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50001fffffffff; valaddr_reg:x3; val_offset:209127*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209127*0 + 3*589*FLEN/8, x4, x1, x2)

inst_69710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50003fffffffff; valaddr_reg:x3; val_offset:209130*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209130*0 + 3*590*FLEN/8, x4, x1, x2)

inst_69711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50007fffffffff; valaddr_reg:x3; val_offset:209133*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209133*0 + 3*591*FLEN/8, x4, x1, x2)

inst_69712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5000ffffffffff; valaddr_reg:x3; val_offset:209136*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209136*0 + 3*592*FLEN/8, x4, x1, x2)

inst_69713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5001ffffffffff; valaddr_reg:x3; val_offset:209139*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209139*0 + 3*593*FLEN/8, x4, x1, x2)

inst_69714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5003ffffffffff; valaddr_reg:x3; val_offset:209142*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209142*0 + 3*594*FLEN/8, x4, x1, x2)

inst_69715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5007ffffffffff; valaddr_reg:x3; val_offset:209145*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209145*0 + 3*595*FLEN/8, x4, x1, x2)

inst_69716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc500fffffffffff; valaddr_reg:x3; val_offset:209148*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209148*0 + 3*596*FLEN/8, x4, x1, x2)

inst_69717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc501fffffffffff; valaddr_reg:x3; val_offset:209151*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209151*0 + 3*597*FLEN/8, x4, x1, x2)

inst_69718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc503fffffffffff; valaddr_reg:x3; val_offset:209154*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209154*0 + 3*598*FLEN/8, x4, x1, x2)

inst_69719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc507fffffffffff; valaddr_reg:x3; val_offset:209157*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209157*0 + 3*599*FLEN/8, x4, x1, x2)

inst_69720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc50ffffffffffff; valaddr_reg:x3; val_offset:209160*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209160*0 + 3*600*FLEN/8, x4, x1, x2)

inst_69721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc51ffffffffffff; valaddr_reg:x3; val_offset:209163*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209163*0 + 3*601*FLEN/8, x4, x1, x2)

inst_69722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc53ffffffffffff; valaddr_reg:x3; val_offset:209166*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209166*0 + 3*602*FLEN/8, x4, x1, x2)

inst_69723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc57ffffffffffff; valaddr_reg:x3; val_offset:209169*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209169*0 + 3*603*FLEN/8, x4, x1, x2)

inst_69724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc58000000000000; valaddr_reg:x3; val_offset:209172*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209172*0 + 3*604*FLEN/8, x4, x1, x2)

inst_69725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5c000000000000; valaddr_reg:x3; val_offset:209175*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209175*0 + 3*605*FLEN/8, x4, x1, x2)

inst_69726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5e000000000000; valaddr_reg:x3; val_offset:209178*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209178*0 + 3*606*FLEN/8, x4, x1, x2)

inst_69727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5f000000000000; valaddr_reg:x3; val_offset:209181*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209181*0 + 3*607*FLEN/8, x4, x1, x2)

inst_69728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5f800000000000; valaddr_reg:x3; val_offset:209184*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209184*0 + 3*608*FLEN/8, x4, x1, x2)

inst_69729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fc00000000000; valaddr_reg:x3; val_offset:209187*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209187*0 + 3*609*FLEN/8, x4, x1, x2)

inst_69730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fe00000000000; valaddr_reg:x3; val_offset:209190*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209190*0 + 3*610*FLEN/8, x4, x1, x2)

inst_69731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ff00000000000; valaddr_reg:x3; val_offset:209193*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209193*0 + 3*611*FLEN/8, x4, x1, x2)

inst_69732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ff80000000000; valaddr_reg:x3; val_offset:209196*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209196*0 + 3*612*FLEN/8, x4, x1, x2)

inst_69733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffc0000000000; valaddr_reg:x3; val_offset:209199*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209199*0 + 3*613*FLEN/8, x4, x1, x2)

inst_69734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffe0000000000; valaddr_reg:x3; val_offset:209202*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209202*0 + 3*614*FLEN/8, x4, x1, x2)

inst_69735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fff0000000000; valaddr_reg:x3; val_offset:209205*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209205*0 + 3*615*FLEN/8, x4, x1, x2)

inst_69736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fff8000000000; valaddr_reg:x3; val_offset:209208*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209208*0 + 3*616*FLEN/8, x4, x1, x2)

inst_69737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffc000000000; valaddr_reg:x3; val_offset:209211*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209211*0 + 3*617*FLEN/8, x4, x1, x2)

inst_69738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffe000000000; valaddr_reg:x3; val_offset:209214*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209214*0 + 3*618*FLEN/8, x4, x1, x2)

inst_69739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffff000000000; valaddr_reg:x3; val_offset:209217*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209217*0 + 3*619*FLEN/8, x4, x1, x2)

inst_69740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffff800000000; valaddr_reg:x3; val_offset:209220*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209220*0 + 3*620*FLEN/8, x4, x1, x2)

inst_69741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffc00000000; valaddr_reg:x3; val_offset:209223*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209223*0 + 3*621*FLEN/8, x4, x1, x2)

inst_69742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffe00000000; valaddr_reg:x3; val_offset:209226*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209226*0 + 3*622*FLEN/8, x4, x1, x2)

inst_69743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffff00000000; valaddr_reg:x3; val_offset:209229*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209229*0 + 3*623*FLEN/8, x4, x1, x2)

inst_69744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffff80000000; valaddr_reg:x3; val_offset:209232*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209232*0 + 3*624*FLEN/8, x4, x1, x2)

inst_69745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffc0000000; valaddr_reg:x3; val_offset:209235*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209235*0 + 3*625*FLEN/8, x4, x1, x2)

inst_69746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffe0000000; valaddr_reg:x3; val_offset:209238*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209238*0 + 3*626*FLEN/8, x4, x1, x2)

inst_69747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffff0000000; valaddr_reg:x3; val_offset:209241*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209241*0 + 3*627*FLEN/8, x4, x1, x2)

inst_69748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffff8000000; valaddr_reg:x3; val_offset:209244*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209244*0 + 3*628*FLEN/8, x4, x1, x2)

inst_69749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffc000000; valaddr_reg:x3; val_offset:209247*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209247*0 + 3*629*FLEN/8, x4, x1, x2)

inst_69750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffe000000; valaddr_reg:x3; val_offset:209250*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209250*0 + 3*630*FLEN/8, x4, x1, x2)

inst_69751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffff000000; valaddr_reg:x3; val_offset:209253*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209253*0 + 3*631*FLEN/8, x4, x1, x2)

inst_69752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffff800000; valaddr_reg:x3; val_offset:209256*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209256*0 + 3*632*FLEN/8, x4, x1, x2)

inst_69753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffc00000; valaddr_reg:x3; val_offset:209259*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209259*0 + 3*633*FLEN/8, x4, x1, x2)

inst_69754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffe00000; valaddr_reg:x3; val_offset:209262*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209262*0 + 3*634*FLEN/8, x4, x1, x2)

inst_69755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffff00000; valaddr_reg:x3; val_offset:209265*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209265*0 + 3*635*FLEN/8, x4, x1, x2)

inst_69756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffff80000; valaddr_reg:x3; val_offset:209268*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209268*0 + 3*636*FLEN/8, x4, x1, x2)

inst_69757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffc0000; valaddr_reg:x3; val_offset:209271*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209271*0 + 3*637*FLEN/8, x4, x1, x2)

inst_69758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffe0000; valaddr_reg:x3; val_offset:209274*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209274*0 + 3*638*FLEN/8, x4, x1, x2)

inst_69759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffff0000; valaddr_reg:x3; val_offset:209277*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209277*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_69760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffff8000; valaddr_reg:x3; val_offset:209280*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209280*0 + 3*640*FLEN/8, x4, x1, x2)

inst_69761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffc000; valaddr_reg:x3; val_offset:209283*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209283*0 + 3*641*FLEN/8, x4, x1, x2)

inst_69762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffe000; valaddr_reg:x3; val_offset:209286*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209286*0 + 3*642*FLEN/8, x4, x1, x2)

inst_69763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffff000; valaddr_reg:x3; val_offset:209289*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209289*0 + 3*643*FLEN/8, x4, x1, x2)

inst_69764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffff800; valaddr_reg:x3; val_offset:209292*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209292*0 + 3*644*FLEN/8, x4, x1, x2)

inst_69765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffc00; valaddr_reg:x3; val_offset:209295*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209295*0 + 3*645*FLEN/8, x4, x1, x2)

inst_69766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffe00; valaddr_reg:x3; val_offset:209298*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209298*0 + 3*646*FLEN/8, x4, x1, x2)

inst_69767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffff00; valaddr_reg:x3; val_offset:209301*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209301*0 + 3*647*FLEN/8, x4, x1, x2)

inst_69768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffff80; valaddr_reg:x3; val_offset:209304*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209304*0 + 3*648*FLEN/8, x4, x1, x2)

inst_69769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffffc0; valaddr_reg:x3; val_offset:209307*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209307*0 + 3*649*FLEN/8, x4, x1, x2)

inst_69770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffffe0; valaddr_reg:x3; val_offset:209310*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209310*0 + 3*650*FLEN/8, x4, x1, x2)

inst_69771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffff0; valaddr_reg:x3; val_offset:209313*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209313*0 + 3*651*FLEN/8, x4, x1, x2)

inst_69772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffff8; valaddr_reg:x3; val_offset:209316*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209316*0 + 3*652*FLEN/8, x4, x1, x2)

inst_69773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffffc; valaddr_reg:x3; val_offset:209319*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209319*0 + 3*653*FLEN/8, x4, x1, x2)

inst_69774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5ffffffffffffe; valaddr_reg:x3; val_offset:209322*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209322*0 + 3*654*FLEN/8, x4, x1, x2)

inst_69775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3c5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbc5fffffffffffff; valaddr_reg:x3; val_offset:209325*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209325*0 + 3*655*FLEN/8, x4, x1, x2)

inst_69776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:209328*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209328*0 + 3*656*FLEN/8, x4, x1, x2)

inst_69777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:209331*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209331*0 + 3*657*FLEN/8, x4, x1, x2)

inst_69778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:209334*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209334*0 + 3*658*FLEN/8, x4, x1, x2)

inst_69779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:209337*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209337*0 + 3*659*FLEN/8, x4, x1, x2)

inst_69780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:209340*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209340*0 + 3*660*FLEN/8, x4, x1, x2)

inst_69781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:209343*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209343*0 + 3*661*FLEN/8, x4, x1, x2)

inst_69782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:209346*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209346*0 + 3*662*FLEN/8, x4, x1, x2)

inst_69783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:209349*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209349*0 + 3*663*FLEN/8, x4, x1, x2)

inst_69784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:209352*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209352*0 + 3*664*FLEN/8, x4, x1, x2)

inst_69785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:209355*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209355*0 + 3*665*FLEN/8, x4, x1, x2)

inst_69786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:209358*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209358*0 + 3*666*FLEN/8, x4, x1, x2)

inst_69787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:209361*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209361*0 + 3*667*FLEN/8, x4, x1, x2)

inst_69788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:209364*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209364*0 + 3*668*FLEN/8, x4, x1, x2)

inst_69789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:209367*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209367*0 + 3*669*FLEN/8, x4, x1, x2)

inst_69790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:209370*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209370*0 + 3*670*FLEN/8, x4, x1, x2)

inst_69791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:209373*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209373*0 + 3*671*FLEN/8, x4, x1, x2)

inst_69792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:209376*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209376*0 + 3*672*FLEN/8, x4, x1, x2)

inst_69793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:209379*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209379*0 + 3*673*FLEN/8, x4, x1, x2)

inst_69794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:209382*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209382*0 + 3*674*FLEN/8, x4, x1, x2)

inst_69795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:209385*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209385*0 + 3*675*FLEN/8, x4, x1, x2)

inst_69796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:209388*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209388*0 + 3*676*FLEN/8, x4, x1, x2)

inst_69797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84d1f6704aa40 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa511a1344303ed; op2val:0x9fc84d1f6704aa40;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:209391*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209391*0 + 3*677*FLEN/8, x4, x1, x2)

inst_69798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000000000; valaddr_reg:x3; val_offset:209394*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209394*0 + 3*678*FLEN/8, x4, x1, x2)

inst_69799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000000001; valaddr_reg:x3; val_offset:209397*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209397*0 + 3*679*FLEN/8, x4, x1, x2)

inst_69800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000000003; valaddr_reg:x3; val_offset:209400*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209400*0 + 3*680*FLEN/8, x4, x1, x2)

inst_69801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000000007; valaddr_reg:x3; val_offset:209403*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209403*0 + 3*681*FLEN/8, x4, x1, x2)

inst_69802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000000000f; valaddr_reg:x3; val_offset:209406*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209406*0 + 3*682*FLEN/8, x4, x1, x2)

inst_69803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000000001f; valaddr_reg:x3; val_offset:209409*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209409*0 + 3*683*FLEN/8, x4, x1, x2)

inst_69804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000000003f; valaddr_reg:x3; val_offset:209412*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209412*0 + 3*684*FLEN/8, x4, x1, x2)

inst_69805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000000007f; valaddr_reg:x3; val_offset:209415*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209415*0 + 3*685*FLEN/8, x4, x1, x2)

inst_69806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000000000ff; valaddr_reg:x3; val_offset:209418*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209418*0 + 3*686*FLEN/8, x4, x1, x2)

inst_69807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000000001ff; valaddr_reg:x3; val_offset:209421*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209421*0 + 3*687*FLEN/8, x4, x1, x2)

inst_69808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000000003ff; valaddr_reg:x3; val_offset:209424*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209424*0 + 3*688*FLEN/8, x4, x1, x2)

inst_69809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000000007ff; valaddr_reg:x3; val_offset:209427*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209427*0 + 3*689*FLEN/8, x4, x1, x2)

inst_69810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000000fff; valaddr_reg:x3; val_offset:209430*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209430*0 + 3*690*FLEN/8, x4, x1, x2)

inst_69811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000001fff; valaddr_reg:x3; val_offset:209433*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209433*0 + 3*691*FLEN/8, x4, x1, x2)

inst_69812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000003fff; valaddr_reg:x3; val_offset:209436*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209436*0 + 3*692*FLEN/8, x4, x1, x2)

inst_69813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000007fff; valaddr_reg:x3; val_offset:209439*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209439*0 + 3*693*FLEN/8, x4, x1, x2)

inst_69814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000000ffff; valaddr_reg:x3; val_offset:209442*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209442*0 + 3*694*FLEN/8, x4, x1, x2)

inst_69815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000001ffff; valaddr_reg:x3; val_offset:209445*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209445*0 + 3*695*FLEN/8, x4, x1, x2)

inst_69816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000003ffff; valaddr_reg:x3; val_offset:209448*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209448*0 + 3*696*FLEN/8, x4, x1, x2)

inst_69817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000007ffff; valaddr_reg:x3; val_offset:209451*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209451*0 + 3*697*FLEN/8, x4, x1, x2)

inst_69818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000000fffff; valaddr_reg:x3; val_offset:209454*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209454*0 + 3*698*FLEN/8, x4, x1, x2)

inst_69819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000001fffff; valaddr_reg:x3; val_offset:209457*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209457*0 + 3*699*FLEN/8, x4, x1, x2)

inst_69820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000003fffff; valaddr_reg:x3; val_offset:209460*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209460*0 + 3*700*FLEN/8, x4, x1, x2)

inst_69821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000007fffff; valaddr_reg:x3; val_offset:209463*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209463*0 + 3*701*FLEN/8, x4, x1, x2)

inst_69822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000000ffffff; valaddr_reg:x3; val_offset:209466*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209466*0 + 3*702*FLEN/8, x4, x1, x2)

inst_69823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000001ffffff; valaddr_reg:x3; val_offset:209469*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209469*0 + 3*703*FLEN/8, x4, x1, x2)

inst_69824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000003ffffff; valaddr_reg:x3; val_offset:209472*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209472*0 + 3*704*FLEN/8, x4, x1, x2)

inst_69825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000007ffffff; valaddr_reg:x3; val_offset:209475*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209475*0 + 3*705*FLEN/8, x4, x1, x2)

inst_69826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000000fffffff; valaddr_reg:x3; val_offset:209478*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209478*0 + 3*706*FLEN/8, x4, x1, x2)

inst_69827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000001fffffff; valaddr_reg:x3; val_offset:209481*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209481*0 + 3*707*FLEN/8, x4, x1, x2)

inst_69828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000003fffffff; valaddr_reg:x3; val_offset:209484*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209484*0 + 3*708*FLEN/8, x4, x1, x2)

inst_69829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000007fffffff; valaddr_reg:x3; val_offset:209487*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209487*0 + 3*709*FLEN/8, x4, x1, x2)

inst_69830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00000ffffffff; valaddr_reg:x3; val_offset:209490*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209490*0 + 3*710*FLEN/8, x4, x1, x2)

inst_69831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00001ffffffff; valaddr_reg:x3; val_offset:209493*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209493*0 + 3*711*FLEN/8, x4, x1, x2)

inst_69832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00003ffffffff; valaddr_reg:x3; val_offset:209496*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209496*0 + 3*712*FLEN/8, x4, x1, x2)

inst_69833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00007ffffffff; valaddr_reg:x3; val_offset:209499*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209499*0 + 3*713*FLEN/8, x4, x1, x2)

inst_69834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0000fffffffff; valaddr_reg:x3; val_offset:209502*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209502*0 + 3*714*FLEN/8, x4, x1, x2)

inst_69835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0001fffffffff; valaddr_reg:x3; val_offset:209505*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209505*0 + 3*715*FLEN/8, x4, x1, x2)

inst_69836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0003fffffffff; valaddr_reg:x3; val_offset:209508*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209508*0 + 3*716*FLEN/8, x4, x1, x2)

inst_69837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0007fffffffff; valaddr_reg:x3; val_offset:209511*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209511*0 + 3*717*FLEN/8, x4, x1, x2)

inst_69838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c000ffffffffff; valaddr_reg:x3; val_offset:209514*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209514*0 + 3*718*FLEN/8, x4, x1, x2)

inst_69839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c001ffffffffff; valaddr_reg:x3; val_offset:209517*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209517*0 + 3*719*FLEN/8, x4, x1, x2)

inst_69840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c003ffffffffff; valaddr_reg:x3; val_offset:209520*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209520*0 + 3*720*FLEN/8, x4, x1, x2)

inst_69841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c007ffffffffff; valaddr_reg:x3; val_offset:209523*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209523*0 + 3*721*FLEN/8, x4, x1, x2)

inst_69842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c00fffffffffff; valaddr_reg:x3; val_offset:209526*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209526*0 + 3*722*FLEN/8, x4, x1, x2)

inst_69843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c01fffffffffff; valaddr_reg:x3; val_offset:209529*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209529*0 + 3*723*FLEN/8, x4, x1, x2)

inst_69844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c03fffffffffff; valaddr_reg:x3; val_offset:209532*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209532*0 + 3*724*FLEN/8, x4, x1, x2)

inst_69845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c07fffffffffff; valaddr_reg:x3; val_offset:209535*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209535*0 + 3*725*FLEN/8, x4, x1, x2)

inst_69846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c0ffffffffffff; valaddr_reg:x3; val_offset:209538*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209538*0 + 3*726*FLEN/8, x4, x1, x2)

inst_69847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c1ffffffffffff; valaddr_reg:x3; val_offset:209541*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209541*0 + 3*727*FLEN/8, x4, x1, x2)

inst_69848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c3ffffffffffff; valaddr_reg:x3; val_offset:209544*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209544*0 + 3*728*FLEN/8, x4, x1, x2)

inst_69849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c7ffffffffffff; valaddr_reg:x3; val_offset:209547*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209547*0 + 3*729*FLEN/8, x4, x1, x2)

inst_69850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9c8000000000000; valaddr_reg:x3; val_offset:209550*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209550*0 + 3*730*FLEN/8, x4, x1, x2)

inst_69851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cc000000000000; valaddr_reg:x3; val_offset:209553*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209553*0 + 3*731*FLEN/8, x4, x1, x2)

inst_69852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9ce000000000000; valaddr_reg:x3; val_offset:209556*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209556*0 + 3*732*FLEN/8, x4, x1, x2)

inst_69853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cf000000000000; valaddr_reg:x3; val_offset:209559*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209559*0 + 3*733*FLEN/8, x4, x1, x2)

inst_69854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cf800000000000; valaddr_reg:x3; val_offset:209562*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209562*0 + 3*734*FLEN/8, x4, x1, x2)

inst_69855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfc00000000000; valaddr_reg:x3; val_offset:209565*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209565*0 + 3*735*FLEN/8, x4, x1, x2)

inst_69856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfe00000000000; valaddr_reg:x3; val_offset:209568*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209568*0 + 3*736*FLEN/8, x4, x1, x2)

inst_69857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cff00000000000; valaddr_reg:x3; val_offset:209571*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209571*0 + 3*737*FLEN/8, x4, x1, x2)

inst_69858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cff80000000000; valaddr_reg:x3; val_offset:209574*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209574*0 + 3*738*FLEN/8, x4, x1, x2)

inst_69859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffc0000000000; valaddr_reg:x3; val_offset:209577*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209577*0 + 3*739*FLEN/8, x4, x1, x2)

inst_69860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffe0000000000; valaddr_reg:x3; val_offset:209580*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209580*0 + 3*740*FLEN/8, x4, x1, x2)

inst_69861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfff0000000000; valaddr_reg:x3; val_offset:209583*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209583*0 + 3*741*FLEN/8, x4, x1, x2)

inst_69862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfff8000000000; valaddr_reg:x3; val_offset:209586*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209586*0 + 3*742*FLEN/8, x4, x1, x2)

inst_69863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffc000000000; valaddr_reg:x3; val_offset:209589*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209589*0 + 3*743*FLEN/8, x4, x1, x2)

inst_69864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffe000000000; valaddr_reg:x3; val_offset:209592*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209592*0 + 3*744*FLEN/8, x4, x1, x2)

inst_69865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffff000000000; valaddr_reg:x3; val_offset:209595*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209595*0 + 3*745*FLEN/8, x4, x1, x2)

inst_69866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffff800000000; valaddr_reg:x3; val_offset:209598*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209598*0 + 3*746*FLEN/8, x4, x1, x2)

inst_69867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffc00000000; valaddr_reg:x3; val_offset:209601*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209601*0 + 3*747*FLEN/8, x4, x1, x2)

inst_69868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffe00000000; valaddr_reg:x3; val_offset:209604*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209604*0 + 3*748*FLEN/8, x4, x1, x2)

inst_69869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffff00000000; valaddr_reg:x3; val_offset:209607*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209607*0 + 3*749*FLEN/8, x4, x1, x2)

inst_69870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffff80000000; valaddr_reg:x3; val_offset:209610*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209610*0 + 3*750*FLEN/8, x4, x1, x2)

inst_69871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffc0000000; valaddr_reg:x3; val_offset:209613*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209613*0 + 3*751*FLEN/8, x4, x1, x2)

inst_69872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffe0000000; valaddr_reg:x3; val_offset:209616*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209616*0 + 3*752*FLEN/8, x4, x1, x2)

inst_69873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffff0000000; valaddr_reg:x3; val_offset:209619*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209619*0 + 3*753*FLEN/8, x4, x1, x2)

inst_69874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffff8000000; valaddr_reg:x3; val_offset:209622*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209622*0 + 3*754*FLEN/8, x4, x1, x2)

inst_69875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffc000000; valaddr_reg:x3; val_offset:209625*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209625*0 + 3*755*FLEN/8, x4, x1, x2)

inst_69876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffe000000; valaddr_reg:x3; val_offset:209628*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209628*0 + 3*756*FLEN/8, x4, x1, x2)

inst_69877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffff000000; valaddr_reg:x3; val_offset:209631*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209631*0 + 3*757*FLEN/8, x4, x1, x2)

inst_69878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffff800000; valaddr_reg:x3; val_offset:209634*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209634*0 + 3*758*FLEN/8, x4, x1, x2)

inst_69879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffffc00000; valaddr_reg:x3; val_offset:209637*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209637*0 + 3*759*FLEN/8, x4, x1, x2)

inst_69880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffffe00000; valaddr_reg:x3; val_offset:209640*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209640*0 + 3*760*FLEN/8, x4, x1, x2)

inst_69881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffff00000; valaddr_reg:x3; val_offset:209643*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209643*0 + 3*761*FLEN/8, x4, x1, x2)

inst_69882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffff80000; valaddr_reg:x3; val_offset:209646*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209646*0 + 3*762*FLEN/8, x4, x1, x2)

inst_69883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffffc0000; valaddr_reg:x3; val_offset:209649*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209649*0 + 3*763*FLEN/8, x4, x1, x2)

inst_69884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cffffffffe0000; valaddr_reg:x3; val_offset:209652*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209652*0 + 3*764*FLEN/8, x4, x1, x2)

inst_69885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffffff0000; valaddr_reg:x3; val_offset:209655*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209655*0 + 3*765*FLEN/8, x4, x1, x2)

inst_69886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffffff8000; valaddr_reg:x3; val_offset:209658*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209658*0 + 3*766*FLEN/8, x4, x1, x2)

inst_69887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5124f30535e0b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x84c56c0124311 and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5124f30535e0b; op2val:0x9fc84c56c0124311;
op3val:0xb9cfffffffffc000; valaddr_reg:x3; val_offset:209661*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209661*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475432878499168256,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475503247243345920,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475538431615434752,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475556023801479168,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475564819894501376,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475569217941012480,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475571416964268032,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475572516475895808,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573066231709696,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573341109616640,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573478548570112,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573547268046848,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573581627785216,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573598807654400,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573607397588992,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573611692556288,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573613840039936,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573614913781760,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615450652672,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615719088128,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615853305856,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615920414720,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615953969152,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615970746368,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615979134976,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615983329280,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615985426432,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986475008,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986999296,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987261440,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987392512,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987458048,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987490816,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987507200,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987515392,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987519488,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987521536,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987522560,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523072,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523328,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523456,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523520,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523552,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523568,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523576,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523580,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523582,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523583,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930560,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930561,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930563,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930567,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930575,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930591,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930623,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930687,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700930815,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700931071,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700931583,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700932607,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700934655,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700938751,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700946943,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700963327,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887700996095,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887701061631,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887701192703,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887701454847,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887701979135,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887703027711,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887705124863,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887709319167,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887717707775,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887734484991,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887768039423,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887835148287,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244887969366015,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244888237801471,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244888774672383,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244889848414207,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244891995897855,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244896290865151,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244904880799743,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244922060668927,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443244956420407295,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443245025139884031,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443245162578837503,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443245437456744447,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443245987212558335,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443247086724186111,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443249285747441663,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443253683793952767,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443262479886974975,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443280072073019391,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443315256445108223,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443385625189285887,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443526362677641215,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13443807837654351871,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13444370787607773183,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13445496687514615807,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13445496687514615808,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13446622587421458432,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447185537374879744,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447467012351590400,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447607749839945728,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447678118584123392,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447713302956212224,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447730895142256640,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447739691235278848,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447744089281789952,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447746288305045504,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447747387816673280,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447747937572487168,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748212450394112,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748349889347584,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748418608824320,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748452968562688,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748470148431872,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748478738366464,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748483033333760,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748485180817408,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748486254559232,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748486791430144,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487059865600,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487194083328,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487261192192,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487294746624,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487311523840,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487319912448,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487324106752,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487326203904,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487327252480,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487327776768,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328038912,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328169984,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328235520,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328268288,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328284672,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328292864,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328296960,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328299008,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328300032,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328300544,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328300800,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328300928,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328300992,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301024,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301040,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301048,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301052,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301054,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13447748487328301055,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891859275677016106,64,FLEN)
NAN_BOXED(11513624756456847369,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707136,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707137,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707139,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707143,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707151,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707167,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707199,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707263,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707391,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707647,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831708159,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831709183,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831711231,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831715327,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831723519,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831739903,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831772671,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831838207,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831969279,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832231423,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832755711,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820833804287,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820835901439,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820840095743,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820848484351,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820865261567,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820898815999,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820965924863,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821100142591,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821368578047,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821905448959,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026822979190783,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026825126674431,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026829421641727,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026838011576319,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026855191445503,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026889551183871,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026958270660607,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027095709614079,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027370587521023,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027920343334911,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417029019854962687,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417031218878218239,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417035616924729343,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417044413017751551,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417062005203795967,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417097189575884799,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417167558320062463,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417308295808417791,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417589770785128447,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9418152720738549759,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392383,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392384,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420404520552235008,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420967470505656320,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421248945482366976,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421389682970722304,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421460051714899968,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421495236086988800,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421512828273033216,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421521624366055424,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421526022412566528,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421528221435822080,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529320947449856,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529870703263744,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530145581170688,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530283020124160,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530351739600896,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530386099339264,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530403279208448,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530411869143040,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530416164110336,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530418311593984,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419385335808,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419922206720,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420190642176,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420324859904,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420391968768,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420425523200,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420442300416,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420450689024,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420454883328,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420456980480,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458029056,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458553344,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458815488,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458946560,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459012096,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459044864,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459061248,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459069440,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459073536,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459075584,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459076608,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077120,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077376,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077504,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077568,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077600,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077616,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077624,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077628,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077630,64,FLEN)
NAN_BOXED(6891873316263595929,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077631,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377248,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377264,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377272,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377276,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377278,64,FLEN)
NAN_BOXED(6891874325930895091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377279,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124288,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124289,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124291,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124295,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124303,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124319,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124351,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124415,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124543,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362124799,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362125311,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362126335,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362128383,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362132479,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362140671,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362157055,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362189823,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362255359,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362386431,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662362648575,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662363172863,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662364221439,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662366318591,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662370512895,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662378901503,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662395678719,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662429233151,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662496342015,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662630559743,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489662898995199,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489663435866111,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489664509607935,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489666657091583,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489670952058879,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489679541993471,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489696721862655,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489731081601023,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489799801077759,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749489937240031231,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749490212117938175,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749490761873752063,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749491861385379839,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749494060408635391,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749498458455146495,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749507254548168703,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749524846734213119,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749560031106301951,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749630399850479615,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13749771137338834943,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13750052612315545599,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13750615562268966911,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13751741462175809535,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13751741462175809536,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13752867362082652160,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753430312036073472,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753711787012784128,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753852524501139456,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753922893245317120,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753958077617405952,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753975669803450368,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753984465896472576,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753988863942983680,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753991062966239232,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753992162477867008,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753992712233680896,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753992987111587840,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993124550541312,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993193270018048,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993227629756416,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993244809625600,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993253399560192,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993257694527488,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993259842011136,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993260915752960,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261452623872,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261721059328,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261855277056,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261922385920,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261955940352,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261972717568,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261981106176,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261985300480,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261987397632,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261988446208,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261988970496,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989232640,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989363712,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989429248,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989462016,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989478400,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989486592,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989490688,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989492736,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989493760,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494272,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494528,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494656,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494720,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494752,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494768,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494776,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494780,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494782,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13753993261989494783,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891889219280712293,64,FLEN)
NAN_BOXED(11513589509753952854,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304448,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304449,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304451,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304455,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304463,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304479,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304511,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304575,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304703,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267304959,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267305471,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267306495,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267308543,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267312639,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267320831,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267337215,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267369983,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267435519,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267566591,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677267828735,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677268353023,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677269401599,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677271498751,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677275693055,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677284081663,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677300858879,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677334413311,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677401522175,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677535739903,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345677804175359,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345678341046271,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345679414788095,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345681562271743,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345685857239039,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345694447173631,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345711627042815,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345745986781183,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345814706257919,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569345952145211391,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569346227023118335,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569346776778932223,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569347876290559999,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569350075313815551,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569354473360326655,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569363269453348863,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569380861639393279,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569416046011482111,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569486414755659775,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569627152244015103,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13569908627220725759,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13570471577174147071,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13571597477080989695,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13571597477080989696,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13572723376987832320,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573286326941253632,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573567801917964288,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573708539406319616,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573778908150497280,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573814092522586112,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573831684708630528,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573840480801652736,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573844878848163840,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573847077871419392,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573848177383047168,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573848727138861056,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849002016768000,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849139455721472,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849208175198208,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849242534936576,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849259714805760,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849268304740352,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849272599707648,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849274747191296,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849275820933120,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276357804032,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276626239488,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276760457216,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276827566080,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276861120512,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276877897728,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276886286336,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276890480640,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276892577792,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276893626368,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894150656,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894412800,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894543872,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894609408,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894642176,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894658560,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894666752,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894670848,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894672896,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894673920,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674432,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674688,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674816,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674880,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674912,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674928,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674936,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674940,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674942,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13573849276894674943,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891934188824626157,64,FLEN)
NAN_BOXED(11513537244640356928,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114112,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114113,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114115,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114119,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114127,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114143,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114175,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114239,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114367,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545114623,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545115135,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545116159,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545118207,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545122303,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545130495,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545146879,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545179647,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545245183,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545376255,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092545638399,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092546162687,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092547211263,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092549308415,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092553502719,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092561891327,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092578668543,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092612222975,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092679331839,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698092813549567,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698093081985023,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698093618855935,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698094692597759,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698096840081407,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698101135048703,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698109724983295,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698126904852479,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698161264590847,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698229984067583,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698367423021055,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384698642300927999,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384699192056741887,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384700291568369663,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384702490591625215,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384706888638136319,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384715684731158527,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384733276917202943,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384768461289291775,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384838830033469439,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13384979567521824767,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13385261042498535423,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13385823992451956735,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13386949892358799359,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13386949892358799360,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13388075792265641984,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13388638742219063296,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13388920217195773952,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389060954684129280,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389131323428306944,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389166507800395776,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389184099986440192,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389192896079462400,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389197294125973504,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389199493149229056,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389200592660856832,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201142416670720,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201417294577664,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201554733531136,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201623453007872,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201657812746240,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201674992615424,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201683582550016,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201687877517312,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201690025000960,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201691098742784,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201691635613696,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201691904049152,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692038266880,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692105375744,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692138930176,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692155707392,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692164096000,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692168290304,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692170387456,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692171436032,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692171960320,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692172222464,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692172353536,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692172419072,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692172451840,64,FLEN)
NAN_BOXED(6891934936082898443,64,FLEN)
NAN_BOXED(11513536382845993745,64,FLEN)
NAN_BOXED(13389201692172468224,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
