
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_71424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:214272*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214272*0 + 3*0*FLEN/8, x4, x1, x2)

inst_71425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:214275*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214275*0 + 3*1*FLEN/8, x4, x1, x2)

inst_71426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:214278*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214278*0 + 3*2*FLEN/8, x4, x1, x2)

inst_71427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:214281*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214281*0 + 3*3*FLEN/8, x4, x1, x2)

inst_71428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:214284*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214284*0 + 3*4*FLEN/8, x4, x1, x2)

inst_71429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:214287*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214287*0 + 3*5*FLEN/8, x4, x1, x2)

inst_71430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:214290*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214290*0 + 3*6*FLEN/8, x4, x1, x2)

inst_71431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:214293*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214293*0 + 3*7*FLEN/8, x4, x1, x2)

inst_71432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:214296*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214296*0 + 3*8*FLEN/8, x4, x1, x2)

inst_71433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:214299*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214299*0 + 3*9*FLEN/8, x4, x1, x2)

inst_71434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:214302*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214302*0 + 3*10*FLEN/8, x4, x1, x2)

inst_71435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:214305*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214305*0 + 3*11*FLEN/8, x4, x1, x2)

inst_71436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000000000; valaddr_reg:x3; val_offset:214308*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214308*0 + 3*12*FLEN/8, x4, x1, x2)

inst_71437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000000001; valaddr_reg:x3; val_offset:214311*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214311*0 + 3*13*FLEN/8, x4, x1, x2)

inst_71438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000000003; valaddr_reg:x3; val_offset:214314*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214314*0 + 3*14*FLEN/8, x4, x1, x2)

inst_71439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000000007; valaddr_reg:x3; val_offset:214317*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214317*0 + 3*15*FLEN/8, x4, x1, x2)

inst_71440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000000000f; valaddr_reg:x3; val_offset:214320*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214320*0 + 3*16*FLEN/8, x4, x1, x2)

inst_71441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000000001f; valaddr_reg:x3; val_offset:214323*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214323*0 + 3*17*FLEN/8, x4, x1, x2)

inst_71442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000000003f; valaddr_reg:x3; val_offset:214326*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214326*0 + 3*18*FLEN/8, x4, x1, x2)

inst_71443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000000007f; valaddr_reg:x3; val_offset:214329*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214329*0 + 3*19*FLEN/8, x4, x1, x2)

inst_71444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000000000ff; valaddr_reg:x3; val_offset:214332*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214332*0 + 3*20*FLEN/8, x4, x1, x2)

inst_71445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000000001ff; valaddr_reg:x3; val_offset:214335*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214335*0 + 3*21*FLEN/8, x4, x1, x2)

inst_71446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000000003ff; valaddr_reg:x3; val_offset:214338*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214338*0 + 3*22*FLEN/8, x4, x1, x2)

inst_71447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000000007ff; valaddr_reg:x3; val_offset:214341*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214341*0 + 3*23*FLEN/8, x4, x1, x2)

inst_71448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000000fff; valaddr_reg:x3; val_offset:214344*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214344*0 + 3*24*FLEN/8, x4, x1, x2)

inst_71449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000001fff; valaddr_reg:x3; val_offset:214347*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214347*0 + 3*25*FLEN/8, x4, x1, x2)

inst_71450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000003fff; valaddr_reg:x3; val_offset:214350*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214350*0 + 3*26*FLEN/8, x4, x1, x2)

inst_71451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000007fff; valaddr_reg:x3; val_offset:214353*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214353*0 + 3*27*FLEN/8, x4, x1, x2)

inst_71452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000000ffff; valaddr_reg:x3; val_offset:214356*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214356*0 + 3*28*FLEN/8, x4, x1, x2)

inst_71453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000001ffff; valaddr_reg:x3; val_offset:214359*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214359*0 + 3*29*FLEN/8, x4, x1, x2)

inst_71454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000003ffff; valaddr_reg:x3; val_offset:214362*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214362*0 + 3*30*FLEN/8, x4, x1, x2)

inst_71455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000007ffff; valaddr_reg:x3; val_offset:214365*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214365*0 + 3*31*FLEN/8, x4, x1, x2)

inst_71456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000000fffff; valaddr_reg:x3; val_offset:214368*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214368*0 + 3*32*FLEN/8, x4, x1, x2)

inst_71457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000001fffff; valaddr_reg:x3; val_offset:214371*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214371*0 + 3*33*FLEN/8, x4, x1, x2)

inst_71458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000003fffff; valaddr_reg:x3; val_offset:214374*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214374*0 + 3*34*FLEN/8, x4, x1, x2)

inst_71459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000007fffff; valaddr_reg:x3; val_offset:214377*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214377*0 + 3*35*FLEN/8, x4, x1, x2)

inst_71460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000000ffffff; valaddr_reg:x3; val_offset:214380*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214380*0 + 3*36*FLEN/8, x4, x1, x2)

inst_71461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000001ffffff; valaddr_reg:x3; val_offset:214383*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214383*0 + 3*37*FLEN/8, x4, x1, x2)

inst_71462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000003ffffff; valaddr_reg:x3; val_offset:214386*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214386*0 + 3*38*FLEN/8, x4, x1, x2)

inst_71463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000007ffffff; valaddr_reg:x3; val_offset:214389*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214389*0 + 3*39*FLEN/8, x4, x1, x2)

inst_71464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000000fffffff; valaddr_reg:x3; val_offset:214392*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214392*0 + 3*40*FLEN/8, x4, x1, x2)

inst_71465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000001fffffff; valaddr_reg:x3; val_offset:214395*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214395*0 + 3*41*FLEN/8, x4, x1, x2)

inst_71466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000003fffffff; valaddr_reg:x3; val_offset:214398*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214398*0 + 3*42*FLEN/8, x4, x1, x2)

inst_71467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000007fffffff; valaddr_reg:x3; val_offset:214401*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214401*0 + 3*43*FLEN/8, x4, x1, x2)

inst_71468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300000ffffffff; valaddr_reg:x3; val_offset:214404*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214404*0 + 3*44*FLEN/8, x4, x1, x2)

inst_71469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300001ffffffff; valaddr_reg:x3; val_offset:214407*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214407*0 + 3*45*FLEN/8, x4, x1, x2)

inst_71470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300003ffffffff; valaddr_reg:x3; val_offset:214410*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214410*0 + 3*46*FLEN/8, x4, x1, x2)

inst_71471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300007ffffffff; valaddr_reg:x3; val_offset:214413*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214413*0 + 3*47*FLEN/8, x4, x1, x2)

inst_71472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30000fffffffff; valaddr_reg:x3; val_offset:214416*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214416*0 + 3*48*FLEN/8, x4, x1, x2)

inst_71473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30001fffffffff; valaddr_reg:x3; val_offset:214419*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214419*0 + 3*49*FLEN/8, x4, x1, x2)

inst_71474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30003fffffffff; valaddr_reg:x3; val_offset:214422*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214422*0 + 3*50*FLEN/8, x4, x1, x2)

inst_71475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30007fffffffff; valaddr_reg:x3; val_offset:214425*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214425*0 + 3*51*FLEN/8, x4, x1, x2)

inst_71476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3000ffffffffff; valaddr_reg:x3; val_offset:214428*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214428*0 + 3*52*FLEN/8, x4, x1, x2)

inst_71477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3001ffffffffff; valaddr_reg:x3; val_offset:214431*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214431*0 + 3*53*FLEN/8, x4, x1, x2)

inst_71478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3003ffffffffff; valaddr_reg:x3; val_offset:214434*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214434*0 + 3*54*FLEN/8, x4, x1, x2)

inst_71479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3007ffffffffff; valaddr_reg:x3; val_offset:214437*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214437*0 + 3*55*FLEN/8, x4, x1, x2)

inst_71480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd300fffffffffff; valaddr_reg:x3; val_offset:214440*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214440*0 + 3*56*FLEN/8, x4, x1, x2)

inst_71481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd301fffffffffff; valaddr_reg:x3; val_offset:214443*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214443*0 + 3*57*FLEN/8, x4, x1, x2)

inst_71482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd303fffffffffff; valaddr_reg:x3; val_offset:214446*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214446*0 + 3*58*FLEN/8, x4, x1, x2)

inst_71483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd307fffffffffff; valaddr_reg:x3; val_offset:214449*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214449*0 + 3*59*FLEN/8, x4, x1, x2)

inst_71484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd30ffffffffffff; valaddr_reg:x3; val_offset:214452*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214452*0 + 3*60*FLEN/8, x4, x1, x2)

inst_71485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd31ffffffffffff; valaddr_reg:x3; val_offset:214455*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214455*0 + 3*61*FLEN/8, x4, x1, x2)

inst_71486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd33ffffffffffff; valaddr_reg:x3; val_offset:214458*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214458*0 + 3*62*FLEN/8, x4, x1, x2)

inst_71487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd37ffffffffffff; valaddr_reg:x3; val_offset:214461*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214461*0 + 3*63*FLEN/8, x4, x1, x2)

inst_71488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd38000000000000; valaddr_reg:x3; val_offset:214464*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214464*0 + 3*64*FLEN/8, x4, x1, x2)

inst_71489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3c000000000000; valaddr_reg:x3; val_offset:214467*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214467*0 + 3*65*FLEN/8, x4, x1, x2)

inst_71490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3e000000000000; valaddr_reg:x3; val_offset:214470*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214470*0 + 3*66*FLEN/8, x4, x1, x2)

inst_71491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3f000000000000; valaddr_reg:x3; val_offset:214473*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214473*0 + 3*67*FLEN/8, x4, x1, x2)

inst_71492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3f800000000000; valaddr_reg:x3; val_offset:214476*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214476*0 + 3*68*FLEN/8, x4, x1, x2)

inst_71493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fc00000000000; valaddr_reg:x3; val_offset:214479*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214479*0 + 3*69*FLEN/8, x4, x1, x2)

inst_71494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fe00000000000; valaddr_reg:x3; val_offset:214482*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214482*0 + 3*70*FLEN/8, x4, x1, x2)

inst_71495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ff00000000000; valaddr_reg:x3; val_offset:214485*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214485*0 + 3*71*FLEN/8, x4, x1, x2)

inst_71496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ff80000000000; valaddr_reg:x3; val_offset:214488*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214488*0 + 3*72*FLEN/8, x4, x1, x2)

inst_71497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffc0000000000; valaddr_reg:x3; val_offset:214491*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214491*0 + 3*73*FLEN/8, x4, x1, x2)

inst_71498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffe0000000000; valaddr_reg:x3; val_offset:214494*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214494*0 + 3*74*FLEN/8, x4, x1, x2)

inst_71499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fff0000000000; valaddr_reg:x3; val_offset:214497*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214497*0 + 3*75*FLEN/8, x4, x1, x2)

inst_71500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fff8000000000; valaddr_reg:x3; val_offset:214500*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214500*0 + 3*76*FLEN/8, x4, x1, x2)

inst_71501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffc000000000; valaddr_reg:x3; val_offset:214503*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214503*0 + 3*77*FLEN/8, x4, x1, x2)

inst_71502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffe000000000; valaddr_reg:x3; val_offset:214506*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214506*0 + 3*78*FLEN/8, x4, x1, x2)

inst_71503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffff000000000; valaddr_reg:x3; val_offset:214509*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214509*0 + 3*79*FLEN/8, x4, x1, x2)

inst_71504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffff800000000; valaddr_reg:x3; val_offset:214512*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214512*0 + 3*80*FLEN/8, x4, x1, x2)

inst_71505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffc00000000; valaddr_reg:x3; val_offset:214515*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214515*0 + 3*81*FLEN/8, x4, x1, x2)

inst_71506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffe00000000; valaddr_reg:x3; val_offset:214518*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214518*0 + 3*82*FLEN/8, x4, x1, x2)

inst_71507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffff00000000; valaddr_reg:x3; val_offset:214521*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214521*0 + 3*83*FLEN/8, x4, x1, x2)

inst_71508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffff80000000; valaddr_reg:x3; val_offset:214524*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214524*0 + 3*84*FLEN/8, x4, x1, x2)

inst_71509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffc0000000; valaddr_reg:x3; val_offset:214527*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214527*0 + 3*85*FLEN/8, x4, x1, x2)

inst_71510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffe0000000; valaddr_reg:x3; val_offset:214530*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214530*0 + 3*86*FLEN/8, x4, x1, x2)

inst_71511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffff0000000; valaddr_reg:x3; val_offset:214533*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214533*0 + 3*87*FLEN/8, x4, x1, x2)

inst_71512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffff8000000; valaddr_reg:x3; val_offset:214536*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214536*0 + 3*88*FLEN/8, x4, x1, x2)

inst_71513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffc000000; valaddr_reg:x3; val_offset:214539*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214539*0 + 3*89*FLEN/8, x4, x1, x2)

inst_71514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffe000000; valaddr_reg:x3; val_offset:214542*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214542*0 + 3*90*FLEN/8, x4, x1, x2)

inst_71515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffff000000; valaddr_reg:x3; val_offset:214545*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214545*0 + 3*91*FLEN/8, x4, x1, x2)

inst_71516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffff800000; valaddr_reg:x3; val_offset:214548*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214548*0 + 3*92*FLEN/8, x4, x1, x2)

inst_71517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffc00000; valaddr_reg:x3; val_offset:214551*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214551*0 + 3*93*FLEN/8, x4, x1, x2)

inst_71518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffe00000; valaddr_reg:x3; val_offset:214554*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214554*0 + 3*94*FLEN/8, x4, x1, x2)

inst_71519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffff00000; valaddr_reg:x3; val_offset:214557*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214557*0 + 3*95*FLEN/8, x4, x1, x2)

inst_71520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffff80000; valaddr_reg:x3; val_offset:214560*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214560*0 + 3*96*FLEN/8, x4, x1, x2)

inst_71521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffc0000; valaddr_reg:x3; val_offset:214563*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214563*0 + 3*97*FLEN/8, x4, x1, x2)

inst_71522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffe0000; valaddr_reg:x3; val_offset:214566*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214566*0 + 3*98*FLEN/8, x4, x1, x2)

inst_71523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffff0000; valaddr_reg:x3; val_offset:214569*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214569*0 + 3*99*FLEN/8, x4, x1, x2)

inst_71524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffff8000; valaddr_reg:x3; val_offset:214572*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214572*0 + 3*100*FLEN/8, x4, x1, x2)

inst_71525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffc000; valaddr_reg:x3; val_offset:214575*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214575*0 + 3*101*FLEN/8, x4, x1, x2)

inst_71526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffe000; valaddr_reg:x3; val_offset:214578*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214578*0 + 3*102*FLEN/8, x4, x1, x2)

inst_71527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffff000; valaddr_reg:x3; val_offset:214581*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214581*0 + 3*103*FLEN/8, x4, x1, x2)

inst_71528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffff800; valaddr_reg:x3; val_offset:214584*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214584*0 + 3*104*FLEN/8, x4, x1, x2)

inst_71529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffc00; valaddr_reg:x3; val_offset:214587*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214587*0 + 3*105*FLEN/8, x4, x1, x2)

inst_71530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffe00; valaddr_reg:x3; val_offset:214590*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214590*0 + 3*106*FLEN/8, x4, x1, x2)

inst_71531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffff00; valaddr_reg:x3; val_offset:214593*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214593*0 + 3*107*FLEN/8, x4, x1, x2)

inst_71532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffff80; valaddr_reg:x3; val_offset:214596*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214596*0 + 3*108*FLEN/8, x4, x1, x2)

inst_71533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffffc0; valaddr_reg:x3; val_offset:214599*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214599*0 + 3*109*FLEN/8, x4, x1, x2)

inst_71534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffffe0; valaddr_reg:x3; val_offset:214602*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214602*0 + 3*110*FLEN/8, x4, x1, x2)

inst_71535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffff0; valaddr_reg:x3; val_offset:214605*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214605*0 + 3*111*FLEN/8, x4, x1, x2)

inst_71536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffff8; valaddr_reg:x3; val_offset:214608*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214608*0 + 3*112*FLEN/8, x4, x1, x2)

inst_71537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffffc; valaddr_reg:x3; val_offset:214611*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214611*0 + 3*113*FLEN/8, x4, x1, x2)

inst_71538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3ffffffffffffe; valaddr_reg:x3; val_offset:214614*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214614*0 + 3*114*FLEN/8, x4, x1, x2)

inst_71539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbd3fffffffffffff; valaddr_reg:x3; val_offset:214617*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214617*0 + 3*115*FLEN/8, x4, x1, x2)

inst_71540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:214620*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214620*0 + 3*116*FLEN/8, x4, x1, x2)

inst_71541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:214623*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214623*0 + 3*117*FLEN/8, x4, x1, x2)

inst_71542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:214626*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214626*0 + 3*118*FLEN/8, x4, x1, x2)

inst_71543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:214629*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214629*0 + 3*119*FLEN/8, x4, x1, x2)

inst_71544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:214632*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214632*0 + 3*120*FLEN/8, x4, x1, x2)

inst_71545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:214635*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214635*0 + 3*121*FLEN/8, x4, x1, x2)

inst_71546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:214638*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214638*0 + 3*122*FLEN/8, x4, x1, x2)

inst_71547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:214641*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214641*0 + 3*123*FLEN/8, x4, x1, x2)

inst_71548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:214644*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214644*0 + 3*124*FLEN/8, x4, x1, x2)

inst_71549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:214647*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214647*0 + 3*125*FLEN/8, x4, x1, x2)

inst_71550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:214650*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214650*0 + 3*126*FLEN/8, x4, x1, x2)

inst_71551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:214653*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214653*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_71552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:214656*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214656*0 + 3*128*FLEN/8, x4, x1, x2)

inst_71553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:214659*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214659*0 + 3*129*FLEN/8, x4, x1, x2)

inst_71554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:214662*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214662*0 + 3*130*FLEN/8, x4, x1, x2)

inst_71555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:214665*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214665*0 + 3*131*FLEN/8, x4, x1, x2)

inst_71556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:214668*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214668*0 + 3*132*FLEN/8, x4, x1, x2)

inst_71557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:214671*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214671*0 + 3*133*FLEN/8, x4, x1, x2)

inst_71558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:214674*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214674*0 + 3*134*FLEN/8, x4, x1, x2)

inst_71559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:214677*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214677*0 + 3*135*FLEN/8, x4, x1, x2)

inst_71560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:214680*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214680*0 + 3*136*FLEN/8, x4, x1, x2)

inst_71561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5998b4e80229c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b4359c8cdd71 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5998b4e80229c; op2val:0x9fc7b4359c8cdd71;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:214683*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214683*0 + 3*137*FLEN/8, x4, x1, x2)

inst_71562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:214686*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214686*0 + 3*138*FLEN/8, x4, x1, x2)

inst_71563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:214689*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214689*0 + 3*139*FLEN/8, x4, x1, x2)

inst_71564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:214692*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214692*0 + 3*140*FLEN/8, x4, x1, x2)

inst_71565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:214695*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214695*0 + 3*141*FLEN/8, x4, x1, x2)

inst_71566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:214698*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214698*0 + 3*142*FLEN/8, x4, x1, x2)

inst_71567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:214701*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214701*0 + 3*143*FLEN/8, x4, x1, x2)

inst_71568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:214704*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214704*0 + 3*144*FLEN/8, x4, x1, x2)

inst_71569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:214707*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214707*0 + 3*145*FLEN/8, x4, x1, x2)

inst_71570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:214710*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214710*0 + 3*146*FLEN/8, x4, x1, x2)

inst_71571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:214713*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214713*0 + 3*147*FLEN/8, x4, x1, x2)

inst_71572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:214716*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214716*0 + 3*148*FLEN/8, x4, x1, x2)

inst_71573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:214719*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214719*0 + 3*149*FLEN/8, x4, x1, x2)

inst_71574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:214722*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214722*0 + 3*150*FLEN/8, x4, x1, x2)

inst_71575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:214725*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214725*0 + 3*151*FLEN/8, x4, x1, x2)

inst_71576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:214728*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214728*0 + 3*152*FLEN/8, x4, x1, x2)

inst_71577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:214731*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214731*0 + 3*153*FLEN/8, x4, x1, x2)

inst_71578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:214734*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214734*0 + 3*154*FLEN/8, x4, x1, x2)

inst_71579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:214737*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214737*0 + 3*155*FLEN/8, x4, x1, x2)

inst_71580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:214740*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214740*0 + 3*156*FLEN/8, x4, x1, x2)

inst_71581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:214743*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214743*0 + 3*157*FLEN/8, x4, x1, x2)

inst_71582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:214746*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214746*0 + 3*158*FLEN/8, x4, x1, x2)

inst_71583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:214749*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214749*0 + 3*159*FLEN/8, x4, x1, x2)

inst_71584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000000000; valaddr_reg:x3; val_offset:214752*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214752*0 + 3*160*FLEN/8, x4, x1, x2)

inst_71585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000000001; valaddr_reg:x3; val_offset:214755*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214755*0 + 3*161*FLEN/8, x4, x1, x2)

inst_71586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000000003; valaddr_reg:x3; val_offset:214758*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214758*0 + 3*162*FLEN/8, x4, x1, x2)

inst_71587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000000007; valaddr_reg:x3; val_offset:214761*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214761*0 + 3*163*FLEN/8, x4, x1, x2)

inst_71588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000000000f; valaddr_reg:x3; val_offset:214764*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214764*0 + 3*164*FLEN/8, x4, x1, x2)

inst_71589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000000001f; valaddr_reg:x3; val_offset:214767*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214767*0 + 3*165*FLEN/8, x4, x1, x2)

inst_71590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000000003f; valaddr_reg:x3; val_offset:214770*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214770*0 + 3*166*FLEN/8, x4, x1, x2)

inst_71591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000000007f; valaddr_reg:x3; val_offset:214773*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214773*0 + 3*167*FLEN/8, x4, x1, x2)

inst_71592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000000000ff; valaddr_reg:x3; val_offset:214776*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214776*0 + 3*168*FLEN/8, x4, x1, x2)

inst_71593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000000001ff; valaddr_reg:x3; val_offset:214779*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214779*0 + 3*169*FLEN/8, x4, x1, x2)

inst_71594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000000003ff; valaddr_reg:x3; val_offset:214782*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214782*0 + 3*170*FLEN/8, x4, x1, x2)

inst_71595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000000007ff; valaddr_reg:x3; val_offset:214785*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214785*0 + 3*171*FLEN/8, x4, x1, x2)

inst_71596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000000fff; valaddr_reg:x3; val_offset:214788*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214788*0 + 3*172*FLEN/8, x4, x1, x2)

inst_71597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000001fff; valaddr_reg:x3; val_offset:214791*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214791*0 + 3*173*FLEN/8, x4, x1, x2)

inst_71598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000003fff; valaddr_reg:x3; val_offset:214794*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214794*0 + 3*174*FLEN/8, x4, x1, x2)

inst_71599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000007fff; valaddr_reg:x3; val_offset:214797*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214797*0 + 3*175*FLEN/8, x4, x1, x2)

inst_71600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000000ffff; valaddr_reg:x3; val_offset:214800*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214800*0 + 3*176*FLEN/8, x4, x1, x2)

inst_71601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000001ffff; valaddr_reg:x3; val_offset:214803*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214803*0 + 3*177*FLEN/8, x4, x1, x2)

inst_71602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000003ffff; valaddr_reg:x3; val_offset:214806*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214806*0 + 3*178*FLEN/8, x4, x1, x2)

inst_71603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000007ffff; valaddr_reg:x3; val_offset:214809*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214809*0 + 3*179*FLEN/8, x4, x1, x2)

inst_71604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000000fffff; valaddr_reg:x3; val_offset:214812*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214812*0 + 3*180*FLEN/8, x4, x1, x2)

inst_71605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000001fffff; valaddr_reg:x3; val_offset:214815*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214815*0 + 3*181*FLEN/8, x4, x1, x2)

inst_71606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000003fffff; valaddr_reg:x3; val_offset:214818*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214818*0 + 3*182*FLEN/8, x4, x1, x2)

inst_71607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000007fffff; valaddr_reg:x3; val_offset:214821*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214821*0 + 3*183*FLEN/8, x4, x1, x2)

inst_71608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000000ffffff; valaddr_reg:x3; val_offset:214824*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214824*0 + 3*184*FLEN/8, x4, x1, x2)

inst_71609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000001ffffff; valaddr_reg:x3; val_offset:214827*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214827*0 + 3*185*FLEN/8, x4, x1, x2)

inst_71610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000003ffffff; valaddr_reg:x3; val_offset:214830*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214830*0 + 3*186*FLEN/8, x4, x1, x2)

inst_71611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000007ffffff; valaddr_reg:x3; val_offset:214833*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214833*0 + 3*187*FLEN/8, x4, x1, x2)

inst_71612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000000fffffff; valaddr_reg:x3; val_offset:214836*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214836*0 + 3*188*FLEN/8, x4, x1, x2)

inst_71613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000001fffffff; valaddr_reg:x3; val_offset:214839*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214839*0 + 3*189*FLEN/8, x4, x1, x2)

inst_71614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000003fffffff; valaddr_reg:x3; val_offset:214842*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214842*0 + 3*190*FLEN/8, x4, x1, x2)

inst_71615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000007fffffff; valaddr_reg:x3; val_offset:214845*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214845*0 + 3*191*FLEN/8, x4, x1, x2)

inst_71616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100000ffffffff; valaddr_reg:x3; val_offset:214848*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214848*0 + 3*192*FLEN/8, x4, x1, x2)

inst_71617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100001ffffffff; valaddr_reg:x3; val_offset:214851*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214851*0 + 3*193*FLEN/8, x4, x1, x2)

inst_71618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100003ffffffff; valaddr_reg:x3; val_offset:214854*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214854*0 + 3*194*FLEN/8, x4, x1, x2)

inst_71619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100007ffffffff; valaddr_reg:x3; val_offset:214857*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214857*0 + 3*195*FLEN/8, x4, x1, x2)

inst_71620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110000fffffffff; valaddr_reg:x3; val_offset:214860*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214860*0 + 3*196*FLEN/8, x4, x1, x2)

inst_71621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110001fffffffff; valaddr_reg:x3; val_offset:214863*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214863*0 + 3*197*FLEN/8, x4, x1, x2)

inst_71622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110003fffffffff; valaddr_reg:x3; val_offset:214866*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214866*0 + 3*198*FLEN/8, x4, x1, x2)

inst_71623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110007fffffffff; valaddr_reg:x3; val_offset:214869*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214869*0 + 3*199*FLEN/8, x4, x1, x2)

inst_71624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11000ffffffffff; valaddr_reg:x3; val_offset:214872*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214872*0 + 3*200*FLEN/8, x4, x1, x2)

inst_71625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11001ffffffffff; valaddr_reg:x3; val_offset:214875*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214875*0 + 3*201*FLEN/8, x4, x1, x2)

inst_71626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11003ffffffffff; valaddr_reg:x3; val_offset:214878*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214878*0 + 3*202*FLEN/8, x4, x1, x2)

inst_71627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11007ffffffffff; valaddr_reg:x3; val_offset:214881*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214881*0 + 3*203*FLEN/8, x4, x1, x2)

inst_71628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1100fffffffffff; valaddr_reg:x3; val_offset:214884*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214884*0 + 3*204*FLEN/8, x4, x1, x2)

inst_71629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1101fffffffffff; valaddr_reg:x3; val_offset:214887*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214887*0 + 3*205*FLEN/8, x4, x1, x2)

inst_71630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1103fffffffffff; valaddr_reg:x3; val_offset:214890*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214890*0 + 3*206*FLEN/8, x4, x1, x2)

inst_71631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x1107fffffffffff; valaddr_reg:x3; val_offset:214893*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214893*0 + 3*207*FLEN/8, x4, x1, x2)

inst_71632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x110ffffffffffff; valaddr_reg:x3; val_offset:214896*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214896*0 + 3*208*FLEN/8, x4, x1, x2)

inst_71633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x111ffffffffffff; valaddr_reg:x3; val_offset:214899*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214899*0 + 3*209*FLEN/8, x4, x1, x2)

inst_71634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x113ffffffffffff; valaddr_reg:x3; val_offset:214902*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214902*0 + 3*210*FLEN/8, x4, x1, x2)

inst_71635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x117ffffffffffff; valaddr_reg:x3; val_offset:214905*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214905*0 + 3*211*FLEN/8, x4, x1, x2)

inst_71636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x118000000000000; valaddr_reg:x3; val_offset:214908*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214908*0 + 3*212*FLEN/8, x4, x1, x2)

inst_71637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11c000000000000; valaddr_reg:x3; val_offset:214911*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214911*0 + 3*213*FLEN/8, x4, x1, x2)

inst_71638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11e000000000000; valaddr_reg:x3; val_offset:214914*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214914*0 + 3*214*FLEN/8, x4, x1, x2)

inst_71639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11f000000000000; valaddr_reg:x3; val_offset:214917*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214917*0 + 3*215*FLEN/8, x4, x1, x2)

inst_71640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11f800000000000; valaddr_reg:x3; val_offset:214920*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214920*0 + 3*216*FLEN/8, x4, x1, x2)

inst_71641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fc00000000000; valaddr_reg:x3; val_offset:214923*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214923*0 + 3*217*FLEN/8, x4, x1, x2)

inst_71642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fe00000000000; valaddr_reg:x3; val_offset:214926*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214926*0 + 3*218*FLEN/8, x4, x1, x2)

inst_71643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ff00000000000; valaddr_reg:x3; val_offset:214929*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214929*0 + 3*219*FLEN/8, x4, x1, x2)

inst_71644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ff80000000000; valaddr_reg:x3; val_offset:214932*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214932*0 + 3*220*FLEN/8, x4, x1, x2)

inst_71645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffc0000000000; valaddr_reg:x3; val_offset:214935*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214935*0 + 3*221*FLEN/8, x4, x1, x2)

inst_71646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffe0000000000; valaddr_reg:x3; val_offset:214938*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214938*0 + 3*222*FLEN/8, x4, x1, x2)

inst_71647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fff0000000000; valaddr_reg:x3; val_offset:214941*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214941*0 + 3*223*FLEN/8, x4, x1, x2)

inst_71648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fff8000000000; valaddr_reg:x3; val_offset:214944*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214944*0 + 3*224*FLEN/8, x4, x1, x2)

inst_71649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffc000000000; valaddr_reg:x3; val_offset:214947*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214947*0 + 3*225*FLEN/8, x4, x1, x2)

inst_71650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffe000000000; valaddr_reg:x3; val_offset:214950*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214950*0 + 3*226*FLEN/8, x4, x1, x2)

inst_71651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffff000000000; valaddr_reg:x3; val_offset:214953*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214953*0 + 3*227*FLEN/8, x4, x1, x2)

inst_71652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffff800000000; valaddr_reg:x3; val_offset:214956*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214956*0 + 3*228*FLEN/8, x4, x1, x2)

inst_71653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffc00000000; valaddr_reg:x3; val_offset:214959*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214959*0 + 3*229*FLEN/8, x4, x1, x2)

inst_71654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffe00000000; valaddr_reg:x3; val_offset:214962*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214962*0 + 3*230*FLEN/8, x4, x1, x2)

inst_71655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffff00000000; valaddr_reg:x3; val_offset:214965*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214965*0 + 3*231*FLEN/8, x4, x1, x2)

inst_71656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffff80000000; valaddr_reg:x3; val_offset:214968*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214968*0 + 3*232*FLEN/8, x4, x1, x2)

inst_71657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffc0000000; valaddr_reg:x3; val_offset:214971*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214971*0 + 3*233*FLEN/8, x4, x1, x2)

inst_71658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffe0000000; valaddr_reg:x3; val_offset:214974*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214974*0 + 3*234*FLEN/8, x4, x1, x2)

inst_71659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffff0000000; valaddr_reg:x3; val_offset:214977*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214977*0 + 3*235*FLEN/8, x4, x1, x2)

inst_71660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffff8000000; valaddr_reg:x3; val_offset:214980*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214980*0 + 3*236*FLEN/8, x4, x1, x2)

inst_71661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffc000000; valaddr_reg:x3; val_offset:214983*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214983*0 + 3*237*FLEN/8, x4, x1, x2)

inst_71662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffe000000; valaddr_reg:x3; val_offset:214986*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214986*0 + 3*238*FLEN/8, x4, x1, x2)

inst_71663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffff000000; valaddr_reg:x3; val_offset:214989*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214989*0 + 3*239*FLEN/8, x4, x1, x2)

inst_71664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffff800000; valaddr_reg:x3; val_offset:214992*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214992*0 + 3*240*FLEN/8, x4, x1, x2)

inst_71665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffc00000; valaddr_reg:x3; val_offset:214995*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214995*0 + 3*241*FLEN/8, x4, x1, x2)

inst_71666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffe00000; valaddr_reg:x3; val_offset:214998*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214998*0 + 3*242*FLEN/8, x4, x1, x2)

inst_71667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffff00000; valaddr_reg:x3; val_offset:215001*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215001*0 + 3*243*FLEN/8, x4, x1, x2)

inst_71668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffff80000; valaddr_reg:x3; val_offset:215004*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215004*0 + 3*244*FLEN/8, x4, x1, x2)

inst_71669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffc0000; valaddr_reg:x3; val_offset:215007*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215007*0 + 3*245*FLEN/8, x4, x1, x2)

inst_71670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffe0000; valaddr_reg:x3; val_offset:215010*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215010*0 + 3*246*FLEN/8, x4, x1, x2)

inst_71671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffff0000; valaddr_reg:x3; val_offset:215013*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215013*0 + 3*247*FLEN/8, x4, x1, x2)

inst_71672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffff8000; valaddr_reg:x3; val_offset:215016*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215016*0 + 3*248*FLEN/8, x4, x1, x2)

inst_71673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffc000; valaddr_reg:x3; val_offset:215019*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215019*0 + 3*249*FLEN/8, x4, x1, x2)

inst_71674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffe000; valaddr_reg:x3; val_offset:215022*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215022*0 + 3*250*FLEN/8, x4, x1, x2)

inst_71675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffff000; valaddr_reg:x3; val_offset:215025*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215025*0 + 3*251*FLEN/8, x4, x1, x2)

inst_71676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffff800; valaddr_reg:x3; val_offset:215028*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215028*0 + 3*252*FLEN/8, x4, x1, x2)

inst_71677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffc00; valaddr_reg:x3; val_offset:215031*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215031*0 + 3*253*FLEN/8, x4, x1, x2)

inst_71678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffe00; valaddr_reg:x3; val_offset:215034*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215034*0 + 3*254*FLEN/8, x4, x1, x2)

inst_71679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffff00; valaddr_reg:x3; val_offset:215037*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215037*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_71680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffff80; valaddr_reg:x3; val_offset:215040*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215040*0 + 3*256*FLEN/8, x4, x1, x2)

inst_71681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffffc0; valaddr_reg:x3; val_offset:215043*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215043*0 + 3*257*FLEN/8, x4, x1, x2)

inst_71682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffffe0; valaddr_reg:x3; val_offset:215046*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215046*0 + 3*258*FLEN/8, x4, x1, x2)

inst_71683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffff0; valaddr_reg:x3; val_offset:215049*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215049*0 + 3*259*FLEN/8, x4, x1, x2)

inst_71684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffff8; valaddr_reg:x3; val_offset:215052*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215052*0 + 3*260*FLEN/8, x4, x1, x2)

inst_71685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffffc; valaddr_reg:x3; val_offset:215055*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215055*0 + 3*261*FLEN/8, x4, x1, x2)

inst_71686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11ffffffffffffe; valaddr_reg:x3; val_offset:215058*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215058*0 + 3*262*FLEN/8, x4, x1, x2)

inst_71687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59d1030a6e89d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59d1030a6e89d; op2val:0x0;
op3val:0x11fffffffffffff; valaddr_reg:x3; val_offset:215061*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215061*0 + 3*263*FLEN/8, x4, x1, x2)

inst_71688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:215064*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215064*0 + 3*264*FLEN/8, x4, x1, x2)

inst_71689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:215067*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215067*0 + 3*265*FLEN/8, x4, x1, x2)

inst_71690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:215070*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215070*0 + 3*266*FLEN/8, x4, x1, x2)

inst_71691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:215073*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215073*0 + 3*267*FLEN/8, x4, x1, x2)

inst_71692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:215076*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215076*0 + 3*268*FLEN/8, x4, x1, x2)

inst_71693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:215079*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215079*0 + 3*269*FLEN/8, x4, x1, x2)

inst_71694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:215082*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215082*0 + 3*270*FLEN/8, x4, x1, x2)

inst_71695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:215085*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215085*0 + 3*271*FLEN/8, x4, x1, x2)

inst_71696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:215088*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215088*0 + 3*272*FLEN/8, x4, x1, x2)

inst_71697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:215091*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215091*0 + 3*273*FLEN/8, x4, x1, x2)

inst_71698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:215094*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215094*0 + 3*274*FLEN/8, x4, x1, x2)

inst_71699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:215097*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215097*0 + 3*275*FLEN/8, x4, x1, x2)

inst_71700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:215100*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215100*0 + 3*276*FLEN/8, x4, x1, x2)

inst_71701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:215103*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215103*0 + 3*277*FLEN/8, x4, x1, x2)

inst_71702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:215106*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215106*0 + 3*278*FLEN/8, x4, x1, x2)

inst_71703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:215109*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215109*0 + 3*279*FLEN/8, x4, x1, x2)

inst_71704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:215112*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215112*0 + 3*280*FLEN/8, x4, x1, x2)

inst_71705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:215115*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215115*0 + 3*281*FLEN/8, x4, x1, x2)

inst_71706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:215118*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215118*0 + 3*282*FLEN/8, x4, x1, x2)

inst_71707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:215121*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215121*0 + 3*283*FLEN/8, x4, x1, x2)

inst_71708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:215124*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215124*0 + 3*284*FLEN/8, x4, x1, x2)

inst_71709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:215127*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215127*0 + 3*285*FLEN/8, x4, x1, x2)

inst_71710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:215130*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215130*0 + 3*286*FLEN/8, x4, x1, x2)

inst_71711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:215133*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215133*0 + 3*287*FLEN/8, x4, x1, x2)

inst_71712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:215136*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215136*0 + 3*288*FLEN/8, x4, x1, x2)

inst_71713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:215139*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215139*0 + 3*289*FLEN/8, x4, x1, x2)

inst_71714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:215142*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215142*0 + 3*290*FLEN/8, x4, x1, x2)

inst_71715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:215145*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215145*0 + 3*291*FLEN/8, x4, x1, x2)

inst_71716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:215148*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215148*0 + 3*292*FLEN/8, x4, x1, x2)

inst_71717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:215151*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215151*0 + 3*293*FLEN/8, x4, x1, x2)

inst_71718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:215154*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215154*0 + 3*294*FLEN/8, x4, x1, x2)

inst_71719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:215157*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215157*0 + 3*295*FLEN/8, x4, x1, x2)

inst_71720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:215160*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215160*0 + 3*296*FLEN/8, x4, x1, x2)

inst_71721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:215163*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215163*0 + 3*297*FLEN/8, x4, x1, x2)

inst_71722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:215166*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215166*0 + 3*298*FLEN/8, x4, x1, x2)

inst_71723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:215169*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215169*0 + 3*299*FLEN/8, x4, x1, x2)

inst_71724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:215172*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215172*0 + 3*300*FLEN/8, x4, x1, x2)

inst_71725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:215175*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215175*0 + 3*301*FLEN/8, x4, x1, x2)

inst_71726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:215178*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215178*0 + 3*302*FLEN/8, x4, x1, x2)

inst_71727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:215181*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215181*0 + 3*303*FLEN/8, x4, x1, x2)

inst_71728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:215184*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215184*0 + 3*304*FLEN/8, x4, x1, x2)

inst_71729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:215187*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215187*0 + 3*305*FLEN/8, x4, x1, x2)

inst_71730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:215190*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215190*0 + 3*306*FLEN/8, x4, x1, x2)

inst_71731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:215193*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215193*0 + 3*307*FLEN/8, x4, x1, x2)

inst_71732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:215196*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215196*0 + 3*308*FLEN/8, x4, x1, x2)

inst_71733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:215199*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215199*0 + 3*309*FLEN/8, x4, x1, x2)

inst_71734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:215202*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215202*0 + 3*310*FLEN/8, x4, x1, x2)

inst_71735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:215205*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215205*0 + 3*311*FLEN/8, x4, x1, x2)

inst_71736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:215208*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215208*0 + 3*312*FLEN/8, x4, x1, x2)

inst_71737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:215211*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215211*0 + 3*313*FLEN/8, x4, x1, x2)

inst_71738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:215214*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215214*0 + 3*314*FLEN/8, x4, x1, x2)

inst_71739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:215217*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215217*0 + 3*315*FLEN/8, x4, x1, x2)

inst_71740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:215220*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215220*0 + 3*316*FLEN/8, x4, x1, x2)

inst_71741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:215223*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215223*0 + 3*317*FLEN/8, x4, x1, x2)

inst_71742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:215226*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215226*0 + 3*318*FLEN/8, x4, x1, x2)

inst_71743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:215229*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215229*0 + 3*319*FLEN/8, x4, x1, x2)

inst_71744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:215232*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215232*0 + 3*320*FLEN/8, x4, x1, x2)

inst_71745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:215235*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215235*0 + 3*321*FLEN/8, x4, x1, x2)

inst_71746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:215238*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215238*0 + 3*322*FLEN/8, x4, x1, x2)

inst_71747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:215241*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215241*0 + 3*323*FLEN/8, x4, x1, x2)

inst_71748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:215244*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215244*0 + 3*324*FLEN/8, x4, x1, x2)

inst_71749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:215247*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215247*0 + 3*325*FLEN/8, x4, x1, x2)

inst_71750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:215250*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215250*0 + 3*326*FLEN/8, x4, x1, x2)

inst_71751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:215253*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215253*0 + 3*327*FLEN/8, x4, x1, x2)

inst_71752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:215256*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215256*0 + 3*328*FLEN/8, x4, x1, x2)

inst_71753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:215259*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215259*0 + 3*329*FLEN/8, x4, x1, x2)

inst_71754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:215262*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215262*0 + 3*330*FLEN/8, x4, x1, x2)

inst_71755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:215265*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215265*0 + 3*331*FLEN/8, x4, x1, x2)

inst_71756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:215268*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215268*0 + 3*332*FLEN/8, x4, x1, x2)

inst_71757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:215271*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215271*0 + 3*333*FLEN/8, x4, x1, x2)

inst_71758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:215274*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215274*0 + 3*334*FLEN/8, x4, x1, x2)

inst_71759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:215277*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215277*0 + 3*335*FLEN/8, x4, x1, x2)

inst_71760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:215280*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215280*0 + 3*336*FLEN/8, x4, x1, x2)

inst_71761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:215283*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215283*0 + 3*337*FLEN/8, x4, x1, x2)

inst_71762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:215286*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215286*0 + 3*338*FLEN/8, x4, x1, x2)

inst_71763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:215289*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215289*0 + 3*339*FLEN/8, x4, x1, x2)

inst_71764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:215292*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215292*0 + 3*340*FLEN/8, x4, x1, x2)

inst_71765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:215295*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215295*0 + 3*341*FLEN/8, x4, x1, x2)

inst_71766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:215298*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215298*0 + 3*342*FLEN/8, x4, x1, x2)

inst_71767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:215301*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215301*0 + 3*343*FLEN/8, x4, x1, x2)

inst_71768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:215304*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215304*0 + 3*344*FLEN/8, x4, x1, x2)

inst_71769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:215307*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215307*0 + 3*345*FLEN/8, x4, x1, x2)

inst_71770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:215310*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215310*0 + 3*346*FLEN/8, x4, x1, x2)

inst_71771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:215313*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215313*0 + 3*347*FLEN/8, x4, x1, x2)

inst_71772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:215316*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215316*0 + 3*348*FLEN/8, x4, x1, x2)

inst_71773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:215319*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215319*0 + 3*349*FLEN/8, x4, x1, x2)

inst_71774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:215322*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215322*0 + 3*350*FLEN/8, x4, x1, x2)

inst_71775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:215325*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215325*0 + 3*351*FLEN/8, x4, x1, x2)

inst_71776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:215328*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215328*0 + 3*352*FLEN/8, x4, x1, x2)

inst_71777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:215331*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215331*0 + 3*353*FLEN/8, x4, x1, x2)

inst_71778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:215334*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215334*0 + 3*354*FLEN/8, x4, x1, x2)

inst_71779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:215337*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215337*0 + 3*355*FLEN/8, x4, x1, x2)

inst_71780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:215340*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215340*0 + 3*356*FLEN/8, x4, x1, x2)

inst_71781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:215343*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215343*0 + 3*357*FLEN/8, x4, x1, x2)

inst_71782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:215346*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215346*0 + 3*358*FLEN/8, x4, x1, x2)

inst_71783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:215349*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215349*0 + 3*359*FLEN/8, x4, x1, x2)

inst_71784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:215352*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215352*0 + 3*360*FLEN/8, x4, x1, x2)

inst_71785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:215355*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215355*0 + 3*361*FLEN/8, x4, x1, x2)

inst_71786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:215358*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215358*0 + 3*362*FLEN/8, x4, x1, x2)

inst_71787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:215361*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215361*0 + 3*363*FLEN/8, x4, x1, x2)

inst_71788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:215364*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215364*0 + 3*364*FLEN/8, x4, x1, x2)

inst_71789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:215367*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215367*0 + 3*365*FLEN/8, x4, x1, x2)

inst_71790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:215370*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215370*0 + 3*366*FLEN/8, x4, x1, x2)

inst_71791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:215373*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215373*0 + 3*367*FLEN/8, x4, x1, x2)

inst_71792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:215376*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215376*0 + 3*368*FLEN/8, x4, x1, x2)

inst_71793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:215379*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215379*0 + 3*369*FLEN/8, x4, x1, x2)

inst_71794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:215382*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215382*0 + 3*370*FLEN/8, x4, x1, x2)

inst_71795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:215385*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215385*0 + 3*371*FLEN/8, x4, x1, x2)

inst_71796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:215388*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215388*0 + 3*372*FLEN/8, x4, x1, x2)

inst_71797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:215391*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215391*0 + 3*373*FLEN/8, x4, x1, x2)

inst_71798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:215394*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215394*0 + 3*374*FLEN/8, x4, x1, x2)

inst_71799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:215397*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215397*0 + 3*375*FLEN/8, x4, x1, x2)

inst_71800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:215400*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215400*0 + 3*376*FLEN/8, x4, x1, x2)

inst_71801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:215403*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215403*0 + 3*377*FLEN/8, x4, x1, x2)

inst_71802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:215406*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215406*0 + 3*378*FLEN/8, x4, x1, x2)

inst_71803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:215409*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215409*0 + 3*379*FLEN/8, x4, x1, x2)

inst_71804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:215412*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215412*0 + 3*380*FLEN/8, x4, x1, x2)

inst_71805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:215415*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215415*0 + 3*381*FLEN/8, x4, x1, x2)

inst_71806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:215418*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215418*0 + 3*382*FLEN/8, x4, x1, x2)

inst_71807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:215421*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215421*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_71808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffffe0; valaddr_reg:x3; val_offset:215424*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215424*0 + 3*384*FLEN/8, x4, x1, x2)

inst_71809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffff0; valaddr_reg:x3; val_offset:215427*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215427*0 + 3*385*FLEN/8, x4, x1, x2)

inst_71810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffff8; valaddr_reg:x3; val_offset:215430*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215430*0 + 3*386*FLEN/8, x4, x1, x2)

inst_71811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffffc; valaddr_reg:x3; val_offset:215433*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215433*0 + 3*387*FLEN/8, x4, x1, x2)

inst_71812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36ffffffffffffe; valaddr_reg:x3; val_offset:215436*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215436*0 + 3*388*FLEN/8, x4, x1, x2)

inst_71813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b4cb32ae19d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b4cb32ae19d8; op2val:0x0;
op3val:0x36fffffffffffff; valaddr_reg:x3; val_offset:215439*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215439*0 + 3*389*FLEN/8, x4, x1, x2)

inst_71814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000000000; valaddr_reg:x3; val_offset:215442*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215442*0 + 3*390*FLEN/8, x4, x1, x2)

inst_71815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000000001; valaddr_reg:x3; val_offset:215445*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215445*0 + 3*391*FLEN/8, x4, x1, x2)

inst_71816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000000003; valaddr_reg:x3; val_offset:215448*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215448*0 + 3*392*FLEN/8, x4, x1, x2)

inst_71817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000000007; valaddr_reg:x3; val_offset:215451*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215451*0 + 3*393*FLEN/8, x4, x1, x2)

inst_71818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000000000f; valaddr_reg:x3; val_offset:215454*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215454*0 + 3*394*FLEN/8, x4, x1, x2)

inst_71819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000000001f; valaddr_reg:x3; val_offset:215457*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215457*0 + 3*395*FLEN/8, x4, x1, x2)

inst_71820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000000003f; valaddr_reg:x3; val_offset:215460*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215460*0 + 3*396*FLEN/8, x4, x1, x2)

inst_71821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000000007f; valaddr_reg:x3; val_offset:215463*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215463*0 + 3*397*FLEN/8, x4, x1, x2)

inst_71822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000000000ff; valaddr_reg:x3; val_offset:215466*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215466*0 + 3*398*FLEN/8, x4, x1, x2)

inst_71823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000000001ff; valaddr_reg:x3; val_offset:215469*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215469*0 + 3*399*FLEN/8, x4, x1, x2)

inst_71824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000000003ff; valaddr_reg:x3; val_offset:215472*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215472*0 + 3*400*FLEN/8, x4, x1, x2)

inst_71825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000000007ff; valaddr_reg:x3; val_offset:215475*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215475*0 + 3*401*FLEN/8, x4, x1, x2)

inst_71826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000000fff; valaddr_reg:x3; val_offset:215478*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215478*0 + 3*402*FLEN/8, x4, x1, x2)

inst_71827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000001fff; valaddr_reg:x3; val_offset:215481*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215481*0 + 3*403*FLEN/8, x4, x1, x2)

inst_71828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000003fff; valaddr_reg:x3; val_offset:215484*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215484*0 + 3*404*FLEN/8, x4, x1, x2)

inst_71829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000007fff; valaddr_reg:x3; val_offset:215487*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215487*0 + 3*405*FLEN/8, x4, x1, x2)

inst_71830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000000ffff; valaddr_reg:x3; val_offset:215490*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215490*0 + 3*406*FLEN/8, x4, x1, x2)

inst_71831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000001ffff; valaddr_reg:x3; val_offset:215493*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215493*0 + 3*407*FLEN/8, x4, x1, x2)

inst_71832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000003ffff; valaddr_reg:x3; val_offset:215496*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215496*0 + 3*408*FLEN/8, x4, x1, x2)

inst_71833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000007ffff; valaddr_reg:x3; val_offset:215499*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215499*0 + 3*409*FLEN/8, x4, x1, x2)

inst_71834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000000fffff; valaddr_reg:x3; val_offset:215502*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215502*0 + 3*410*FLEN/8, x4, x1, x2)

inst_71835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000001fffff; valaddr_reg:x3; val_offset:215505*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215505*0 + 3*411*FLEN/8, x4, x1, x2)

inst_71836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000003fffff; valaddr_reg:x3; val_offset:215508*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215508*0 + 3*412*FLEN/8, x4, x1, x2)

inst_71837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000007fffff; valaddr_reg:x3; val_offset:215511*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215511*0 + 3*413*FLEN/8, x4, x1, x2)

inst_71838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000000ffffff; valaddr_reg:x3; val_offset:215514*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215514*0 + 3*414*FLEN/8, x4, x1, x2)

inst_71839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000001ffffff; valaddr_reg:x3; val_offset:215517*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215517*0 + 3*415*FLEN/8, x4, x1, x2)

inst_71840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000003ffffff; valaddr_reg:x3; val_offset:215520*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215520*0 + 3*416*FLEN/8, x4, x1, x2)

inst_71841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000007ffffff; valaddr_reg:x3; val_offset:215523*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215523*0 + 3*417*FLEN/8, x4, x1, x2)

inst_71842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000000fffffff; valaddr_reg:x3; val_offset:215526*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215526*0 + 3*418*FLEN/8, x4, x1, x2)

inst_71843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000001fffffff; valaddr_reg:x3; val_offset:215529*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215529*0 + 3*419*FLEN/8, x4, x1, x2)

inst_71844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000003fffffff; valaddr_reg:x3; val_offset:215532*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215532*0 + 3*420*FLEN/8, x4, x1, x2)

inst_71845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000007fffffff; valaddr_reg:x3; val_offset:215535*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215535*0 + 3*421*FLEN/8, x4, x1, x2)

inst_71846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300000ffffffff; valaddr_reg:x3; val_offset:215538*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215538*0 + 3*422*FLEN/8, x4, x1, x2)

inst_71847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300001ffffffff; valaddr_reg:x3; val_offset:215541*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215541*0 + 3*423*FLEN/8, x4, x1, x2)

inst_71848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300003ffffffff; valaddr_reg:x3; val_offset:215544*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215544*0 + 3*424*FLEN/8, x4, x1, x2)

inst_71849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300007ffffffff; valaddr_reg:x3; val_offset:215547*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215547*0 + 3*425*FLEN/8, x4, x1, x2)

inst_71850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30000fffffffff; valaddr_reg:x3; val_offset:215550*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215550*0 + 3*426*FLEN/8, x4, x1, x2)

inst_71851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30001fffffffff; valaddr_reg:x3; val_offset:215553*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215553*0 + 3*427*FLEN/8, x4, x1, x2)

inst_71852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30003fffffffff; valaddr_reg:x3; val_offset:215556*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215556*0 + 3*428*FLEN/8, x4, x1, x2)

inst_71853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30007fffffffff; valaddr_reg:x3; val_offset:215559*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215559*0 + 3*429*FLEN/8, x4, x1, x2)

inst_71854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3000ffffffffff; valaddr_reg:x3; val_offset:215562*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215562*0 + 3*430*FLEN/8, x4, x1, x2)

inst_71855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3001ffffffffff; valaddr_reg:x3; val_offset:215565*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215565*0 + 3*431*FLEN/8, x4, x1, x2)

inst_71856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3003ffffffffff; valaddr_reg:x3; val_offset:215568*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215568*0 + 3*432*FLEN/8, x4, x1, x2)

inst_71857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3007ffffffffff; valaddr_reg:x3; val_offset:215571*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215571*0 + 3*433*FLEN/8, x4, x1, x2)

inst_71858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f300fffffffffff; valaddr_reg:x3; val_offset:215574*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215574*0 + 3*434*FLEN/8, x4, x1, x2)

inst_71859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f301fffffffffff; valaddr_reg:x3; val_offset:215577*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215577*0 + 3*435*FLEN/8, x4, x1, x2)

inst_71860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f303fffffffffff; valaddr_reg:x3; val_offset:215580*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215580*0 + 3*436*FLEN/8, x4, x1, x2)

inst_71861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f307fffffffffff; valaddr_reg:x3; val_offset:215583*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215583*0 + 3*437*FLEN/8, x4, x1, x2)

inst_71862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f30ffffffffffff; valaddr_reg:x3; val_offset:215586*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215586*0 + 3*438*FLEN/8, x4, x1, x2)

inst_71863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f31ffffffffffff; valaddr_reg:x3; val_offset:215589*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215589*0 + 3*439*FLEN/8, x4, x1, x2)

inst_71864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f33ffffffffffff; valaddr_reg:x3; val_offset:215592*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215592*0 + 3*440*FLEN/8, x4, x1, x2)

inst_71865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f37ffffffffffff; valaddr_reg:x3; val_offset:215595*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215595*0 + 3*441*FLEN/8, x4, x1, x2)

inst_71866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f38000000000000; valaddr_reg:x3; val_offset:215598*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215598*0 + 3*442*FLEN/8, x4, x1, x2)

inst_71867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3c000000000000; valaddr_reg:x3; val_offset:215601*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215601*0 + 3*443*FLEN/8, x4, x1, x2)

inst_71868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3e000000000000; valaddr_reg:x3; val_offset:215604*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215604*0 + 3*444*FLEN/8, x4, x1, x2)

inst_71869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3f000000000000; valaddr_reg:x3; val_offset:215607*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215607*0 + 3*445*FLEN/8, x4, x1, x2)

inst_71870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3f800000000000; valaddr_reg:x3; val_offset:215610*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215610*0 + 3*446*FLEN/8, x4, x1, x2)

inst_71871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fc00000000000; valaddr_reg:x3; val_offset:215613*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215613*0 + 3*447*FLEN/8, x4, x1, x2)

inst_71872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fe00000000000; valaddr_reg:x3; val_offset:215616*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215616*0 + 3*448*FLEN/8, x4, x1, x2)

inst_71873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ff00000000000; valaddr_reg:x3; val_offset:215619*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215619*0 + 3*449*FLEN/8, x4, x1, x2)

inst_71874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ff80000000000; valaddr_reg:x3; val_offset:215622*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215622*0 + 3*450*FLEN/8, x4, x1, x2)

inst_71875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffc0000000000; valaddr_reg:x3; val_offset:215625*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215625*0 + 3*451*FLEN/8, x4, x1, x2)

inst_71876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffe0000000000; valaddr_reg:x3; val_offset:215628*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215628*0 + 3*452*FLEN/8, x4, x1, x2)

inst_71877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fff0000000000; valaddr_reg:x3; val_offset:215631*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215631*0 + 3*453*FLEN/8, x4, x1, x2)

inst_71878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fff8000000000; valaddr_reg:x3; val_offset:215634*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215634*0 + 3*454*FLEN/8, x4, x1, x2)

inst_71879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffc000000000; valaddr_reg:x3; val_offset:215637*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215637*0 + 3*455*FLEN/8, x4, x1, x2)

inst_71880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffe000000000; valaddr_reg:x3; val_offset:215640*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215640*0 + 3*456*FLEN/8, x4, x1, x2)

inst_71881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffff000000000; valaddr_reg:x3; val_offset:215643*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215643*0 + 3*457*FLEN/8, x4, x1, x2)

inst_71882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffff800000000; valaddr_reg:x3; val_offset:215646*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215646*0 + 3*458*FLEN/8, x4, x1, x2)

inst_71883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffc00000000; valaddr_reg:x3; val_offset:215649*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215649*0 + 3*459*FLEN/8, x4, x1, x2)

inst_71884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffe00000000; valaddr_reg:x3; val_offset:215652*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215652*0 + 3*460*FLEN/8, x4, x1, x2)

inst_71885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffff00000000; valaddr_reg:x3; val_offset:215655*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215655*0 + 3*461*FLEN/8, x4, x1, x2)

inst_71886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffff80000000; valaddr_reg:x3; val_offset:215658*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215658*0 + 3*462*FLEN/8, x4, x1, x2)

inst_71887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffc0000000; valaddr_reg:x3; val_offset:215661*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215661*0 + 3*463*FLEN/8, x4, x1, x2)

inst_71888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffe0000000; valaddr_reg:x3; val_offset:215664*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215664*0 + 3*464*FLEN/8, x4, x1, x2)

inst_71889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffff0000000; valaddr_reg:x3; val_offset:215667*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215667*0 + 3*465*FLEN/8, x4, x1, x2)

inst_71890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffff8000000; valaddr_reg:x3; val_offset:215670*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215670*0 + 3*466*FLEN/8, x4, x1, x2)

inst_71891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffc000000; valaddr_reg:x3; val_offset:215673*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215673*0 + 3*467*FLEN/8, x4, x1, x2)

inst_71892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffe000000; valaddr_reg:x3; val_offset:215676*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215676*0 + 3*468*FLEN/8, x4, x1, x2)

inst_71893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffff000000; valaddr_reg:x3; val_offset:215679*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215679*0 + 3*469*FLEN/8, x4, x1, x2)

inst_71894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffff800000; valaddr_reg:x3; val_offset:215682*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215682*0 + 3*470*FLEN/8, x4, x1, x2)

inst_71895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffc00000; valaddr_reg:x3; val_offset:215685*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215685*0 + 3*471*FLEN/8, x4, x1, x2)

inst_71896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffe00000; valaddr_reg:x3; val_offset:215688*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215688*0 + 3*472*FLEN/8, x4, x1, x2)

inst_71897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffff00000; valaddr_reg:x3; val_offset:215691*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215691*0 + 3*473*FLEN/8, x4, x1, x2)

inst_71898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffff80000; valaddr_reg:x3; val_offset:215694*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215694*0 + 3*474*FLEN/8, x4, x1, x2)

inst_71899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffc0000; valaddr_reg:x3; val_offset:215697*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215697*0 + 3*475*FLEN/8, x4, x1, x2)

inst_71900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffe0000; valaddr_reg:x3; val_offset:215700*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215700*0 + 3*476*FLEN/8, x4, x1, x2)

inst_71901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffff0000; valaddr_reg:x3; val_offset:215703*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215703*0 + 3*477*FLEN/8, x4, x1, x2)

inst_71902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffff8000; valaddr_reg:x3; val_offset:215706*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215706*0 + 3*478*FLEN/8, x4, x1, x2)

inst_71903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffc000; valaddr_reg:x3; val_offset:215709*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215709*0 + 3*479*FLEN/8, x4, x1, x2)

inst_71904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffe000; valaddr_reg:x3; val_offset:215712*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215712*0 + 3*480*FLEN/8, x4, x1, x2)

inst_71905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffff000; valaddr_reg:x3; val_offset:215715*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215715*0 + 3*481*FLEN/8, x4, x1, x2)

inst_71906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffff800; valaddr_reg:x3; val_offset:215718*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215718*0 + 3*482*FLEN/8, x4, x1, x2)

inst_71907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffc00; valaddr_reg:x3; val_offset:215721*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215721*0 + 3*483*FLEN/8, x4, x1, x2)

inst_71908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffe00; valaddr_reg:x3; val_offset:215724*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215724*0 + 3*484*FLEN/8, x4, x1, x2)

inst_71909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffff00; valaddr_reg:x3; val_offset:215727*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215727*0 + 3*485*FLEN/8, x4, x1, x2)

inst_71910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffff80; valaddr_reg:x3; val_offset:215730*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215730*0 + 3*486*FLEN/8, x4, x1, x2)

inst_71911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffffc0; valaddr_reg:x3; val_offset:215733*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215733*0 + 3*487*FLEN/8, x4, x1, x2)

inst_71912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffffe0; valaddr_reg:x3; val_offset:215736*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215736*0 + 3*488*FLEN/8, x4, x1, x2)

inst_71913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffff0; valaddr_reg:x3; val_offset:215739*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215739*0 + 3*489*FLEN/8, x4, x1, x2)

inst_71914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffff8; valaddr_reg:x3; val_offset:215742*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215742*0 + 3*490*FLEN/8, x4, x1, x2)

inst_71915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffffc; valaddr_reg:x3; val_offset:215745*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215745*0 + 3*491*FLEN/8, x4, x1, x2)

inst_71916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3ffffffffffffe; valaddr_reg:x3; val_offset:215748*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215748*0 + 3*492*FLEN/8, x4, x1, x2)

inst_71917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3f3fffffffffffff; valaddr_reg:x3; val_offset:215751*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215751*0 + 3*493*FLEN/8, x4, x1, x2)

inst_71918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:215754*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215754*0 + 3*494*FLEN/8, x4, x1, x2)

inst_71919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:215757*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215757*0 + 3*495*FLEN/8, x4, x1, x2)

inst_71920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:215760*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215760*0 + 3*496*FLEN/8, x4, x1, x2)

inst_71921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:215763*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215763*0 + 3*497*FLEN/8, x4, x1, x2)

inst_71922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:215766*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215766*0 + 3*498*FLEN/8, x4, x1, x2)

inst_71923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:215769*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215769*0 + 3*499*FLEN/8, x4, x1, x2)

inst_71924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:215772*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215772*0 + 3*500*FLEN/8, x4, x1, x2)

inst_71925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:215775*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215775*0 + 3*501*FLEN/8, x4, x1, x2)

inst_71926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:215778*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215778*0 + 3*502*FLEN/8, x4, x1, x2)

inst_71927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:215781*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215781*0 + 3*503*FLEN/8, x4, x1, x2)

inst_71928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:215784*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215784*0 + 3*504*FLEN/8, x4, x1, x2)

inst_71929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:215787*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215787*0 + 3*505*FLEN/8, x4, x1, x2)

inst_71930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:215790*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215790*0 + 3*506*FLEN/8, x4, x1, x2)

inst_71931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:215793*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215793*0 + 3*507*FLEN/8, x4, x1, x2)

inst_71932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:215796*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215796*0 + 3*508*FLEN/8, x4, x1, x2)

inst_71933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:215799*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215799*0 + 3*509*FLEN/8, x4, x1, x2)

inst_71934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:215802*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215802*0 + 3*510*FLEN/8, x4, x1, x2)

inst_71935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:215805*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215805*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_71936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:215808*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215808*0 + 3*512*FLEN/8, x4, x1, x2)

inst_71937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:215811*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215811*0 + 3*513*FLEN/8, x4, x1, x2)

inst_71938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:215814*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215814*0 + 3*514*FLEN/8, x4, x1, x2)

inst_71939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x78f27b731150c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bb8442cbfc28; op2val:0x20378f27b731150c;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:215817*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215817*0 + 3*515*FLEN/8, x4, x1, x2)

inst_71940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:215820*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215820*0 + 3*516*FLEN/8, x4, x1, x2)

inst_71941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:215823*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215823*0 + 3*517*FLEN/8, x4, x1, x2)

inst_71942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:215826*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215826*0 + 3*518*FLEN/8, x4, x1, x2)

inst_71943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:215829*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215829*0 + 3*519*FLEN/8, x4, x1, x2)

inst_71944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:215832*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215832*0 + 3*520*FLEN/8, x4, x1, x2)

inst_71945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:215835*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215835*0 + 3*521*FLEN/8, x4, x1, x2)

inst_71946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:215838*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215838*0 + 3*522*FLEN/8, x4, x1, x2)

inst_71947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:215841*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215841*0 + 3*523*FLEN/8, x4, x1, x2)

inst_71948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:215844*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215844*0 + 3*524*FLEN/8, x4, x1, x2)

inst_71949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:215847*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215847*0 + 3*525*FLEN/8, x4, x1, x2)

inst_71950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:215850*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215850*0 + 3*526*FLEN/8, x4, x1, x2)

inst_71951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:215853*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215853*0 + 3*527*FLEN/8, x4, x1, x2)

inst_71952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:215856*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215856*0 + 3*528*FLEN/8, x4, x1, x2)

inst_71953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:215859*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215859*0 + 3*529*FLEN/8, x4, x1, x2)

inst_71954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:215862*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215862*0 + 3*530*FLEN/8, x4, x1, x2)

inst_71955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:215865*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215865*0 + 3*531*FLEN/8, x4, x1, x2)

inst_71956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:215868*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215868*0 + 3*532*FLEN/8, x4, x1, x2)

inst_71957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:215871*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215871*0 + 3*533*FLEN/8, x4, x1, x2)

inst_71958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:215874*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215874*0 + 3*534*FLEN/8, x4, x1, x2)

inst_71959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:215877*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215877*0 + 3*535*FLEN/8, x4, x1, x2)

inst_71960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:215880*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215880*0 + 3*536*FLEN/8, x4, x1, x2)

inst_71961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:215883*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215883*0 + 3*537*FLEN/8, x4, x1, x2)

inst_71962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000000000; valaddr_reg:x3; val_offset:215886*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215886*0 + 3*538*FLEN/8, x4, x1, x2)

inst_71963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000000001; valaddr_reg:x3; val_offset:215889*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215889*0 + 3*539*FLEN/8, x4, x1, x2)

inst_71964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000000003; valaddr_reg:x3; val_offset:215892*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215892*0 + 3*540*FLEN/8, x4, x1, x2)

inst_71965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000000007; valaddr_reg:x3; val_offset:215895*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215895*0 + 3*541*FLEN/8, x4, x1, x2)

inst_71966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000000000f; valaddr_reg:x3; val_offset:215898*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215898*0 + 3*542*FLEN/8, x4, x1, x2)

inst_71967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000000001f; valaddr_reg:x3; val_offset:215901*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215901*0 + 3*543*FLEN/8, x4, x1, x2)

inst_71968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000000003f; valaddr_reg:x3; val_offset:215904*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215904*0 + 3*544*FLEN/8, x4, x1, x2)

inst_71969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000000007f; valaddr_reg:x3; val_offset:215907*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215907*0 + 3*545*FLEN/8, x4, x1, x2)

inst_71970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000000000ff; valaddr_reg:x3; val_offset:215910*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215910*0 + 3*546*FLEN/8, x4, x1, x2)

inst_71971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000000001ff; valaddr_reg:x3; val_offset:215913*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215913*0 + 3*547*FLEN/8, x4, x1, x2)

inst_71972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000000003ff; valaddr_reg:x3; val_offset:215916*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215916*0 + 3*548*FLEN/8, x4, x1, x2)

inst_71973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000000007ff; valaddr_reg:x3; val_offset:215919*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215919*0 + 3*549*FLEN/8, x4, x1, x2)

inst_71974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000000fff; valaddr_reg:x3; val_offset:215922*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215922*0 + 3*550*FLEN/8, x4, x1, x2)

inst_71975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000001fff; valaddr_reg:x3; val_offset:215925*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215925*0 + 3*551*FLEN/8, x4, x1, x2)

inst_71976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000003fff; valaddr_reg:x3; val_offset:215928*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215928*0 + 3*552*FLEN/8, x4, x1, x2)

inst_71977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000007fff; valaddr_reg:x3; val_offset:215931*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215931*0 + 3*553*FLEN/8, x4, x1, x2)

inst_71978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000000ffff; valaddr_reg:x3; val_offset:215934*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215934*0 + 3*554*FLEN/8, x4, x1, x2)

inst_71979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000001ffff; valaddr_reg:x3; val_offset:215937*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215937*0 + 3*555*FLEN/8, x4, x1, x2)

inst_71980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000003ffff; valaddr_reg:x3; val_offset:215940*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215940*0 + 3*556*FLEN/8, x4, x1, x2)

inst_71981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000007ffff; valaddr_reg:x3; val_offset:215943*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215943*0 + 3*557*FLEN/8, x4, x1, x2)

inst_71982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000000fffff; valaddr_reg:x3; val_offset:215946*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215946*0 + 3*558*FLEN/8, x4, x1, x2)

inst_71983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000001fffff; valaddr_reg:x3; val_offset:215949*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215949*0 + 3*559*FLEN/8, x4, x1, x2)

inst_71984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000003fffff; valaddr_reg:x3; val_offset:215952*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215952*0 + 3*560*FLEN/8, x4, x1, x2)

inst_71985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000007fffff; valaddr_reg:x3; val_offset:215955*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215955*0 + 3*561*FLEN/8, x4, x1, x2)

inst_71986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000000ffffff; valaddr_reg:x3; val_offset:215958*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215958*0 + 3*562*FLEN/8, x4, x1, x2)

inst_71987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000001ffffff; valaddr_reg:x3; val_offset:215961*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215961*0 + 3*563*FLEN/8, x4, x1, x2)

inst_71988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000003ffffff; valaddr_reg:x3; val_offset:215964*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215964*0 + 3*564*FLEN/8, x4, x1, x2)

inst_71989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000007ffffff; valaddr_reg:x3; val_offset:215967*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215967*0 + 3*565*FLEN/8, x4, x1, x2)

inst_71990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000000fffffff; valaddr_reg:x3; val_offset:215970*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215970*0 + 3*566*FLEN/8, x4, x1, x2)

inst_71991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000001fffffff; valaddr_reg:x3; val_offset:215973*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215973*0 + 3*567*FLEN/8, x4, x1, x2)

inst_71992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000003fffffff; valaddr_reg:x3; val_offset:215976*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215976*0 + 3*568*FLEN/8, x4, x1, x2)

inst_71993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000007fffffff; valaddr_reg:x3; val_offset:215979*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215979*0 + 3*569*FLEN/8, x4, x1, x2)

inst_71994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00000ffffffff; valaddr_reg:x3; val_offset:215982*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215982*0 + 3*570*FLEN/8, x4, x1, x2)

inst_71995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00001ffffffff; valaddr_reg:x3; val_offset:215985*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215985*0 + 3*571*FLEN/8, x4, x1, x2)

inst_71996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00003ffffffff; valaddr_reg:x3; val_offset:215988*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215988*0 + 3*572*FLEN/8, x4, x1, x2)

inst_71997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00007ffffffff; valaddr_reg:x3; val_offset:215991*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215991*0 + 3*573*FLEN/8, x4, x1, x2)

inst_71998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0000fffffffff; valaddr_reg:x3; val_offset:215994*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215994*0 + 3*574*FLEN/8, x4, x1, x2)

inst_71999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0001fffffffff; valaddr_reg:x3; val_offset:215997*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 215997*0 + 3*575*FLEN/8, x4, x1, x2)

inst_72000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0003fffffffff; valaddr_reg:x3; val_offset:216000*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216000*0 + 3*576*FLEN/8, x4, x1, x2)

inst_72001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0007fffffffff; valaddr_reg:x3; val_offset:216003*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216003*0 + 3*577*FLEN/8, x4, x1, x2)

inst_72002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a000ffffffffff; valaddr_reg:x3; val_offset:216006*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216006*0 + 3*578*FLEN/8, x4, x1, x2)

inst_72003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a001ffffffffff; valaddr_reg:x3; val_offset:216009*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216009*0 + 3*579*FLEN/8, x4, x1, x2)

inst_72004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a003ffffffffff; valaddr_reg:x3; val_offset:216012*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216012*0 + 3*580*FLEN/8, x4, x1, x2)

inst_72005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a007ffffffffff; valaddr_reg:x3; val_offset:216015*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216015*0 + 3*581*FLEN/8, x4, x1, x2)

inst_72006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a00fffffffffff; valaddr_reg:x3; val_offset:216018*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216018*0 + 3*582*FLEN/8, x4, x1, x2)

inst_72007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a01fffffffffff; valaddr_reg:x3; val_offset:216021*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216021*0 + 3*583*FLEN/8, x4, x1, x2)

inst_72008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a03fffffffffff; valaddr_reg:x3; val_offset:216024*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216024*0 + 3*584*FLEN/8, x4, x1, x2)

inst_72009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a07fffffffffff; valaddr_reg:x3; val_offset:216027*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216027*0 + 3*585*FLEN/8, x4, x1, x2)

inst_72010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a0ffffffffffff; valaddr_reg:x3; val_offset:216030*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216030*0 + 3*586*FLEN/8, x4, x1, x2)

inst_72011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a1ffffffffffff; valaddr_reg:x3; val_offset:216033*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216033*0 + 3*587*FLEN/8, x4, x1, x2)

inst_72012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a3ffffffffffff; valaddr_reg:x3; val_offset:216036*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216036*0 + 3*588*FLEN/8, x4, x1, x2)

inst_72013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a7ffffffffffff; valaddr_reg:x3; val_offset:216039*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216039*0 + 3*589*FLEN/8, x4, x1, x2)

inst_72014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82a8000000000000; valaddr_reg:x3; val_offset:216042*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216042*0 + 3*590*FLEN/8, x4, x1, x2)

inst_72015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82ac000000000000; valaddr_reg:x3; val_offset:216045*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216045*0 + 3*591*FLEN/8, x4, x1, x2)

inst_72016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82ae000000000000; valaddr_reg:x3; val_offset:216048*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216048*0 + 3*592*FLEN/8, x4, x1, x2)

inst_72017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82af000000000000; valaddr_reg:x3; val_offset:216051*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216051*0 + 3*593*FLEN/8, x4, x1, x2)

inst_72018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82af800000000000; valaddr_reg:x3; val_offset:216054*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216054*0 + 3*594*FLEN/8, x4, x1, x2)

inst_72019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afc00000000000; valaddr_reg:x3; val_offset:216057*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216057*0 + 3*595*FLEN/8, x4, x1, x2)

inst_72020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afe00000000000; valaddr_reg:x3; val_offset:216060*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216060*0 + 3*596*FLEN/8, x4, x1, x2)

inst_72021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82aff00000000000; valaddr_reg:x3; val_offset:216063*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216063*0 + 3*597*FLEN/8, x4, x1, x2)

inst_72022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82aff80000000000; valaddr_reg:x3; val_offset:216066*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216066*0 + 3*598*FLEN/8, x4, x1, x2)

inst_72023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affc0000000000; valaddr_reg:x3; val_offset:216069*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216069*0 + 3*599*FLEN/8, x4, x1, x2)

inst_72024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affe0000000000; valaddr_reg:x3; val_offset:216072*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216072*0 + 3*600*FLEN/8, x4, x1, x2)

inst_72025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afff0000000000; valaddr_reg:x3; val_offset:216075*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216075*0 + 3*601*FLEN/8, x4, x1, x2)

inst_72026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afff8000000000; valaddr_reg:x3; val_offset:216078*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216078*0 + 3*602*FLEN/8, x4, x1, x2)

inst_72027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffc000000000; valaddr_reg:x3; val_offset:216081*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216081*0 + 3*603*FLEN/8, x4, x1, x2)

inst_72028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffe000000000; valaddr_reg:x3; val_offset:216084*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216084*0 + 3*604*FLEN/8, x4, x1, x2)

inst_72029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affff000000000; valaddr_reg:x3; val_offset:216087*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216087*0 + 3*605*FLEN/8, x4, x1, x2)

inst_72030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affff800000000; valaddr_reg:x3; val_offset:216090*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216090*0 + 3*606*FLEN/8, x4, x1, x2)

inst_72031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffc00000000; valaddr_reg:x3; val_offset:216093*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216093*0 + 3*607*FLEN/8, x4, x1, x2)

inst_72032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffe00000000; valaddr_reg:x3; val_offset:216096*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216096*0 + 3*608*FLEN/8, x4, x1, x2)

inst_72033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffff00000000; valaddr_reg:x3; val_offset:216099*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216099*0 + 3*609*FLEN/8, x4, x1, x2)

inst_72034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffff80000000; valaddr_reg:x3; val_offset:216102*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216102*0 + 3*610*FLEN/8, x4, x1, x2)

inst_72035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffc0000000; valaddr_reg:x3; val_offset:216105*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216105*0 + 3*611*FLEN/8, x4, x1, x2)

inst_72036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffe0000000; valaddr_reg:x3; val_offset:216108*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216108*0 + 3*612*FLEN/8, x4, x1, x2)

inst_72037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffff0000000; valaddr_reg:x3; val_offset:216111*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216111*0 + 3*613*FLEN/8, x4, x1, x2)

inst_72038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffff8000000; valaddr_reg:x3; val_offset:216114*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216114*0 + 3*614*FLEN/8, x4, x1, x2)

inst_72039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffc000000; valaddr_reg:x3; val_offset:216117*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216117*0 + 3*615*FLEN/8, x4, x1, x2)

inst_72040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffe000000; valaddr_reg:x3; val_offset:216120*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216120*0 + 3*616*FLEN/8, x4, x1, x2)

inst_72041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffff000000; valaddr_reg:x3; val_offset:216123*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216123*0 + 3*617*FLEN/8, x4, x1, x2)

inst_72042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffff800000; valaddr_reg:x3; val_offset:216126*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216126*0 + 3*618*FLEN/8, x4, x1, x2)

inst_72043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffc00000; valaddr_reg:x3; val_offset:216129*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216129*0 + 3*619*FLEN/8, x4, x1, x2)

inst_72044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffe00000; valaddr_reg:x3; val_offset:216132*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216132*0 + 3*620*FLEN/8, x4, x1, x2)

inst_72045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffff00000; valaddr_reg:x3; val_offset:216135*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216135*0 + 3*621*FLEN/8, x4, x1, x2)

inst_72046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffff80000; valaddr_reg:x3; val_offset:216138*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216138*0 + 3*622*FLEN/8, x4, x1, x2)

inst_72047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffc0000; valaddr_reg:x3; val_offset:216141*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216141*0 + 3*623*FLEN/8, x4, x1, x2)

inst_72048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffe0000; valaddr_reg:x3; val_offset:216144*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216144*0 + 3*624*FLEN/8, x4, x1, x2)

inst_72049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffff0000; valaddr_reg:x3; val_offset:216147*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216147*0 + 3*625*FLEN/8, x4, x1, x2)

inst_72050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffff8000; valaddr_reg:x3; val_offset:216150*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216150*0 + 3*626*FLEN/8, x4, x1, x2)

inst_72051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffc000; valaddr_reg:x3; val_offset:216153*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216153*0 + 3*627*FLEN/8, x4, x1, x2)

inst_72052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffe000; valaddr_reg:x3; val_offset:216156*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216156*0 + 3*628*FLEN/8, x4, x1, x2)

inst_72053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffff000; valaddr_reg:x3; val_offset:216159*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216159*0 + 3*629*FLEN/8, x4, x1, x2)

inst_72054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffff800; valaddr_reg:x3; val_offset:216162*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216162*0 + 3*630*FLEN/8, x4, x1, x2)

inst_72055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffc00; valaddr_reg:x3; val_offset:216165*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216165*0 + 3*631*FLEN/8, x4, x1, x2)

inst_72056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffe00; valaddr_reg:x3; val_offset:216168*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216168*0 + 3*632*FLEN/8, x4, x1, x2)

inst_72057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffff00; valaddr_reg:x3; val_offset:216171*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216171*0 + 3*633*FLEN/8, x4, x1, x2)

inst_72058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffff80; valaddr_reg:x3; val_offset:216174*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216174*0 + 3*634*FLEN/8, x4, x1, x2)

inst_72059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffffc0; valaddr_reg:x3; val_offset:216177*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216177*0 + 3*635*FLEN/8, x4, x1, x2)

inst_72060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffffe0; valaddr_reg:x3; val_offset:216180*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216180*0 + 3*636*FLEN/8, x4, x1, x2)

inst_72061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffff0; valaddr_reg:x3; val_offset:216183*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216183*0 + 3*637*FLEN/8, x4, x1, x2)

inst_72062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffff8; valaddr_reg:x3; val_offset:216186*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216186*0 + 3*638*FLEN/8, x4, x1, x2)

inst_72063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffffc; valaddr_reg:x3; val_offset:216189*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216189*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_72064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82affffffffffffe; valaddr_reg:x3; val_offset:216192*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216192*0 + 3*640*FLEN/8, x4, x1, x2)

inst_72065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c05756000132 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c05756000132; op2val:0x8000;
op3val:0x82afffffffffffff; valaddr_reg:x3; val_offset:216195*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216195*0 + 3*641*FLEN/8, x4, x1, x2)

inst_72066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000000000; valaddr_reg:x3; val_offset:216198*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216198*0 + 3*642*FLEN/8, x4, x1, x2)

inst_72067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000000001; valaddr_reg:x3; val_offset:216201*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216201*0 + 3*643*FLEN/8, x4, x1, x2)

inst_72068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000000003; valaddr_reg:x3; val_offset:216204*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216204*0 + 3*644*FLEN/8, x4, x1, x2)

inst_72069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000000007; valaddr_reg:x3; val_offset:216207*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216207*0 + 3*645*FLEN/8, x4, x1, x2)

inst_72070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000000000f; valaddr_reg:x3; val_offset:216210*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216210*0 + 3*646*FLEN/8, x4, x1, x2)

inst_72071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000000001f; valaddr_reg:x3; val_offset:216213*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216213*0 + 3*647*FLEN/8, x4, x1, x2)

inst_72072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000000003f; valaddr_reg:x3; val_offset:216216*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216216*0 + 3*648*FLEN/8, x4, x1, x2)

inst_72073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000000007f; valaddr_reg:x3; val_offset:216219*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216219*0 + 3*649*FLEN/8, x4, x1, x2)

inst_72074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000000000ff; valaddr_reg:x3; val_offset:216222*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216222*0 + 3*650*FLEN/8, x4, x1, x2)

inst_72075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000000001ff; valaddr_reg:x3; val_offset:216225*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216225*0 + 3*651*FLEN/8, x4, x1, x2)

inst_72076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000000003ff; valaddr_reg:x3; val_offset:216228*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216228*0 + 3*652*FLEN/8, x4, x1, x2)

inst_72077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000000007ff; valaddr_reg:x3; val_offset:216231*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216231*0 + 3*653*FLEN/8, x4, x1, x2)

inst_72078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000000fff; valaddr_reg:x3; val_offset:216234*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216234*0 + 3*654*FLEN/8, x4, x1, x2)

inst_72079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000001fff; valaddr_reg:x3; val_offset:216237*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216237*0 + 3*655*FLEN/8, x4, x1, x2)

inst_72080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000003fff; valaddr_reg:x3; val_offset:216240*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216240*0 + 3*656*FLEN/8, x4, x1, x2)

inst_72081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000007fff; valaddr_reg:x3; val_offset:216243*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216243*0 + 3*657*FLEN/8, x4, x1, x2)

inst_72082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000000ffff; valaddr_reg:x3; val_offset:216246*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216246*0 + 3*658*FLEN/8, x4, x1, x2)

inst_72083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000001ffff; valaddr_reg:x3; val_offset:216249*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216249*0 + 3*659*FLEN/8, x4, x1, x2)

inst_72084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000003ffff; valaddr_reg:x3; val_offset:216252*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216252*0 + 3*660*FLEN/8, x4, x1, x2)

inst_72085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000007ffff; valaddr_reg:x3; val_offset:216255*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216255*0 + 3*661*FLEN/8, x4, x1, x2)

inst_72086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000000fffff; valaddr_reg:x3; val_offset:216258*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216258*0 + 3*662*FLEN/8, x4, x1, x2)

inst_72087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000001fffff; valaddr_reg:x3; val_offset:216261*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216261*0 + 3*663*FLEN/8, x4, x1, x2)

inst_72088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000003fffff; valaddr_reg:x3; val_offset:216264*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216264*0 + 3*664*FLEN/8, x4, x1, x2)

inst_72089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000007fffff; valaddr_reg:x3; val_offset:216267*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216267*0 + 3*665*FLEN/8, x4, x1, x2)

inst_72090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000000ffffff; valaddr_reg:x3; val_offset:216270*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216270*0 + 3*666*FLEN/8, x4, x1, x2)

inst_72091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000001ffffff; valaddr_reg:x3; val_offset:216273*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216273*0 + 3*667*FLEN/8, x4, x1, x2)

inst_72092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000003ffffff; valaddr_reg:x3; val_offset:216276*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216276*0 + 3*668*FLEN/8, x4, x1, x2)

inst_72093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000007ffffff; valaddr_reg:x3; val_offset:216279*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216279*0 + 3*669*FLEN/8, x4, x1, x2)

inst_72094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000000fffffff; valaddr_reg:x3; val_offset:216282*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216282*0 + 3*670*FLEN/8, x4, x1, x2)

inst_72095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000001fffffff; valaddr_reg:x3; val_offset:216285*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216285*0 + 3*671*FLEN/8, x4, x1, x2)

inst_72096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000003fffffff; valaddr_reg:x3; val_offset:216288*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216288*0 + 3*672*FLEN/8, x4, x1, x2)

inst_72097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000007fffffff; valaddr_reg:x3; val_offset:216291*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216291*0 + 3*673*FLEN/8, x4, x1, x2)

inst_72098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00000ffffffff; valaddr_reg:x3; val_offset:216294*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216294*0 + 3*674*FLEN/8, x4, x1, x2)

inst_72099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00001ffffffff; valaddr_reg:x3; val_offset:216297*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216297*0 + 3*675*FLEN/8, x4, x1, x2)

inst_72100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00003ffffffff; valaddr_reg:x3; val_offset:216300*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216300*0 + 3*676*FLEN/8, x4, x1, x2)

inst_72101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00007ffffffff; valaddr_reg:x3; val_offset:216303*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216303*0 + 3*677*FLEN/8, x4, x1, x2)

inst_72102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0000fffffffff; valaddr_reg:x3; val_offset:216306*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216306*0 + 3*678*FLEN/8, x4, x1, x2)

inst_72103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0001fffffffff; valaddr_reg:x3; val_offset:216309*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216309*0 + 3*679*FLEN/8, x4, x1, x2)

inst_72104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0003fffffffff; valaddr_reg:x3; val_offset:216312*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216312*0 + 3*680*FLEN/8, x4, x1, x2)

inst_72105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0007fffffffff; valaddr_reg:x3; val_offset:216315*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216315*0 + 3*681*FLEN/8, x4, x1, x2)

inst_72106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a000ffffffffff; valaddr_reg:x3; val_offset:216318*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216318*0 + 3*682*FLEN/8, x4, x1, x2)

inst_72107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a001ffffffffff; valaddr_reg:x3; val_offset:216321*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216321*0 + 3*683*FLEN/8, x4, x1, x2)

inst_72108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a003ffffffffff; valaddr_reg:x3; val_offset:216324*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216324*0 + 3*684*FLEN/8, x4, x1, x2)

inst_72109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a007ffffffffff; valaddr_reg:x3; val_offset:216327*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216327*0 + 3*685*FLEN/8, x4, x1, x2)

inst_72110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a00fffffffffff; valaddr_reg:x3; val_offset:216330*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216330*0 + 3*686*FLEN/8, x4, x1, x2)

inst_72111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a01fffffffffff; valaddr_reg:x3; val_offset:216333*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216333*0 + 3*687*FLEN/8, x4, x1, x2)

inst_72112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a03fffffffffff; valaddr_reg:x3; val_offset:216336*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216336*0 + 3*688*FLEN/8, x4, x1, x2)

inst_72113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a07fffffffffff; valaddr_reg:x3; val_offset:216339*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216339*0 + 3*689*FLEN/8, x4, x1, x2)

inst_72114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a0ffffffffffff; valaddr_reg:x3; val_offset:216342*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216342*0 + 3*690*FLEN/8, x4, x1, x2)

inst_72115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a1ffffffffffff; valaddr_reg:x3; val_offset:216345*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216345*0 + 3*691*FLEN/8, x4, x1, x2)

inst_72116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a3ffffffffffff; valaddr_reg:x3; val_offset:216348*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216348*0 + 3*692*FLEN/8, x4, x1, x2)

inst_72117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a7ffffffffffff; valaddr_reg:x3; val_offset:216351*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216351*0 + 3*693*FLEN/8, x4, x1, x2)

inst_72118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7a8000000000000; valaddr_reg:x3; val_offset:216354*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216354*0 + 3*694*FLEN/8, x4, x1, x2)

inst_72119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7ac000000000000; valaddr_reg:x3; val_offset:216357*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216357*0 + 3*695*FLEN/8, x4, x1, x2)

inst_72120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7ae000000000000; valaddr_reg:x3; val_offset:216360*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216360*0 + 3*696*FLEN/8, x4, x1, x2)

inst_72121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7af000000000000; valaddr_reg:x3; val_offset:216363*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216363*0 + 3*697*FLEN/8, x4, x1, x2)

inst_72122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7af800000000000; valaddr_reg:x3; val_offset:216366*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216366*0 + 3*698*FLEN/8, x4, x1, x2)

inst_72123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afc00000000000; valaddr_reg:x3; val_offset:216369*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216369*0 + 3*699*FLEN/8, x4, x1, x2)

inst_72124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afe00000000000; valaddr_reg:x3; val_offset:216372*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216372*0 + 3*700*FLEN/8, x4, x1, x2)

inst_72125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7aff00000000000; valaddr_reg:x3; val_offset:216375*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216375*0 + 3*701*FLEN/8, x4, x1, x2)

inst_72126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7aff80000000000; valaddr_reg:x3; val_offset:216378*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216378*0 + 3*702*FLEN/8, x4, x1, x2)

inst_72127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affc0000000000; valaddr_reg:x3; val_offset:216381*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216381*0 + 3*703*FLEN/8, x4, x1, x2)

inst_72128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affe0000000000; valaddr_reg:x3; val_offset:216384*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216384*0 + 3*704*FLEN/8, x4, x1, x2)

inst_72129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afff0000000000; valaddr_reg:x3; val_offset:216387*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216387*0 + 3*705*FLEN/8, x4, x1, x2)

inst_72130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afff8000000000; valaddr_reg:x3; val_offset:216390*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216390*0 + 3*706*FLEN/8, x4, x1, x2)

inst_72131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffc000000000; valaddr_reg:x3; val_offset:216393*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216393*0 + 3*707*FLEN/8, x4, x1, x2)

inst_72132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffe000000000; valaddr_reg:x3; val_offset:216396*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216396*0 + 3*708*FLEN/8, x4, x1, x2)

inst_72133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affff000000000; valaddr_reg:x3; val_offset:216399*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216399*0 + 3*709*FLEN/8, x4, x1, x2)

inst_72134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affff800000000; valaddr_reg:x3; val_offset:216402*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216402*0 + 3*710*FLEN/8, x4, x1, x2)

inst_72135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffc00000000; valaddr_reg:x3; val_offset:216405*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216405*0 + 3*711*FLEN/8, x4, x1, x2)

inst_72136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffe00000000; valaddr_reg:x3; val_offset:216408*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216408*0 + 3*712*FLEN/8, x4, x1, x2)

inst_72137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffff00000000; valaddr_reg:x3; val_offset:216411*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216411*0 + 3*713*FLEN/8, x4, x1, x2)

inst_72138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffff80000000; valaddr_reg:x3; val_offset:216414*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216414*0 + 3*714*FLEN/8, x4, x1, x2)

inst_72139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffc0000000; valaddr_reg:x3; val_offset:216417*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216417*0 + 3*715*FLEN/8, x4, x1, x2)

inst_72140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffe0000000; valaddr_reg:x3; val_offset:216420*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216420*0 + 3*716*FLEN/8, x4, x1, x2)

inst_72141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffff0000000; valaddr_reg:x3; val_offset:216423*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216423*0 + 3*717*FLEN/8, x4, x1, x2)

inst_72142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffff8000000; valaddr_reg:x3; val_offset:216426*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216426*0 + 3*718*FLEN/8, x4, x1, x2)

inst_72143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffc000000; valaddr_reg:x3; val_offset:216429*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216429*0 + 3*719*FLEN/8, x4, x1, x2)

inst_72144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffe000000; valaddr_reg:x3; val_offset:216432*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216432*0 + 3*720*FLEN/8, x4, x1, x2)

inst_72145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffff000000; valaddr_reg:x3; val_offset:216435*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216435*0 + 3*721*FLEN/8, x4, x1, x2)

inst_72146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffff800000; valaddr_reg:x3; val_offset:216438*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216438*0 + 3*722*FLEN/8, x4, x1, x2)

inst_72147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffc00000; valaddr_reg:x3; val_offset:216441*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216441*0 + 3*723*FLEN/8, x4, x1, x2)

inst_72148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffe00000; valaddr_reg:x3; val_offset:216444*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216444*0 + 3*724*FLEN/8, x4, x1, x2)

inst_72149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffff00000; valaddr_reg:x3; val_offset:216447*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216447*0 + 3*725*FLEN/8, x4, x1, x2)

inst_72150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffff80000; valaddr_reg:x3; val_offset:216450*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216450*0 + 3*726*FLEN/8, x4, x1, x2)

inst_72151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffc0000; valaddr_reg:x3; val_offset:216453*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216453*0 + 3*727*FLEN/8, x4, x1, x2)

inst_72152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffe0000; valaddr_reg:x3; val_offset:216456*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216456*0 + 3*728*FLEN/8, x4, x1, x2)

inst_72153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffff0000; valaddr_reg:x3; val_offset:216459*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216459*0 + 3*729*FLEN/8, x4, x1, x2)

inst_72154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffff8000; valaddr_reg:x3; val_offset:216462*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216462*0 + 3*730*FLEN/8, x4, x1, x2)

inst_72155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffc000; valaddr_reg:x3; val_offset:216465*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216465*0 + 3*731*FLEN/8, x4, x1, x2)

inst_72156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffe000; valaddr_reg:x3; val_offset:216468*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216468*0 + 3*732*FLEN/8, x4, x1, x2)

inst_72157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffff000; valaddr_reg:x3; val_offset:216471*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216471*0 + 3*733*FLEN/8, x4, x1, x2)

inst_72158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffff800; valaddr_reg:x3; val_offset:216474*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216474*0 + 3*734*FLEN/8, x4, x1, x2)

inst_72159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffc00; valaddr_reg:x3; val_offset:216477*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216477*0 + 3*735*FLEN/8, x4, x1, x2)

inst_72160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffe00; valaddr_reg:x3; val_offset:216480*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216480*0 + 3*736*FLEN/8, x4, x1, x2)

inst_72161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffff00; valaddr_reg:x3; val_offset:216483*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216483*0 + 3*737*FLEN/8, x4, x1, x2)

inst_72162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffff80; valaddr_reg:x3; val_offset:216486*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216486*0 + 3*738*FLEN/8, x4, x1, x2)

inst_72163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffffc0; valaddr_reg:x3; val_offset:216489*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216489*0 + 3*739*FLEN/8, x4, x1, x2)

inst_72164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffffe0; valaddr_reg:x3; val_offset:216492*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216492*0 + 3*740*FLEN/8, x4, x1, x2)

inst_72165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffff0; valaddr_reg:x3; val_offset:216495*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216495*0 + 3*741*FLEN/8, x4, x1, x2)

inst_72166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffff8; valaddr_reg:x3; val_offset:216498*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216498*0 + 3*742*FLEN/8, x4, x1, x2)

inst_72167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffffc; valaddr_reg:x3; val_offset:216501*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216501*0 + 3*743*FLEN/8, x4, x1, x2)

inst_72168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7affffffffffffe; valaddr_reg:x3; val_offset:216504*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216504*0 + 3*744*FLEN/8, x4, x1, x2)

inst_72169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xb7afffffffffffff; valaddr_reg:x3; val_offset:216507*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216507*0 + 3*745*FLEN/8, x4, x1, x2)

inst_72170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:216510*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216510*0 + 3*746*FLEN/8, x4, x1, x2)

inst_72171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:216513*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216513*0 + 3*747*FLEN/8, x4, x1, x2)

inst_72172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:216516*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216516*0 + 3*748*FLEN/8, x4, x1, x2)

inst_72173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:216519*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216519*0 + 3*749*FLEN/8, x4, x1, x2)

inst_72174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:216522*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216522*0 + 3*750*FLEN/8, x4, x1, x2)

inst_72175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:216525*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216525*0 + 3*751*FLEN/8, x4, x1, x2)

inst_72176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:216528*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216528*0 + 3*752*FLEN/8, x4, x1, x2)

inst_72177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:216531*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216531*0 + 3*753*FLEN/8, x4, x1, x2)

inst_72178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:216534*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216534*0 + 3*754*FLEN/8, x4, x1, x2)

inst_72179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:216537*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216537*0 + 3*755*FLEN/8, x4, x1, x2)

inst_72180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:216540*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216540*0 + 3*756*FLEN/8, x4, x1, x2)

inst_72181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:216543*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216543*0 + 3*757*FLEN/8, x4, x1, x2)

inst_72182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:216546*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216546*0 + 3*758*FLEN/8, x4, x1, x2)

inst_72183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:216549*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216549*0 + 3*759*FLEN/8, x4, x1, x2)

inst_72184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:216552*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216552*0 + 3*760*FLEN/8, x4, x1, x2)

inst_72185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:216555*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216555*0 + 3*761*FLEN/8, x4, x1, x2)

inst_72186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:216558*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216558*0 + 3*762*FLEN/8, x4, x1, x2)

inst_72187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:216561*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216561*0 + 3*763*FLEN/8, x4, x1, x2)

inst_72188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:216564*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216564*0 + 3*764*FLEN/8, x4, x1, x2)

inst_72189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:216567*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216567*0 + 3*765*FLEN/8, x4, x1, x2)

inst_72190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:216570*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216570*0 + 3*766*FLEN/8, x4, x1, x2)

inst_72191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x77dcf5a0421ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5cb9025515212; op2val:0x9fc77dcf5a0421ea;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:216573*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216573*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491392,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491393,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491395,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491399,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491407,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491423,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491455,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491519,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491647,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050491903,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050492415,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050493439,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050495487,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050499583,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050507775,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050524159,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050556927,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050622463,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072050753535,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072051015679,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072051539967,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072052588543,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072054685695,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072058879999,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072067268607,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072084045823,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072117600255,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072184709119,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072318926847,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396072587362303,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396073124233215,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396074197975039,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396076345458687,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396080640425983,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396089230360575,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396106410229759,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396140769968127,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396209489444863,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396346928398335,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632396621806305279,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632397171562119167,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632398271073746943,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632400470097002495,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632404868143513599,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632413664236535807,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632431256422580223,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632466440794669055,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632536809538846719,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632677547027202047,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13632959022003912703,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13633521971957334015,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13634647871864176639,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13634647871864176640,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13635773771771019264,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636336721724440576,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636618196701151232,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636758934189506560,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636829302933684224,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636864487305773056,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636882079491817472,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636890875584839680,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636895273631350784,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636897472654606336,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636898572166234112,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899121922048000,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899396799954944,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899534238908416,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899602958385152,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899637318123520,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899654497992704,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899663087927296,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899667382894592,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899669530378240,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899670604120064,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671140990976,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671409426432,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671543644160,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671610753024,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671644307456,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671661084672,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671669473280,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671673667584,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671675764736,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671676813312,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677337600,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677599744,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677730816,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677796352,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677829120,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677845504,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677853696,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677857792,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677859840,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677860864,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861376,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861632,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861760,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861824,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861856,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861872,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861880,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861884,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861886,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13636899671677861887,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892083628356936348,64,FLEN)
NAN_BOXED(11513369114748706161,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298432,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298433,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298435,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298439,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298447,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298463,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298495,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298559,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298687,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298943,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665299455,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665300479,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665302527,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665306623,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665314815,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665331199,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665363967,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665429503,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665560575,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665822719,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193666347007,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193667395583,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193669492735,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193673687039,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193682075647,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193698852863,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193732407295,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193799516159,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193933733887,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194202169343,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194739040255,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561195812782079,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561197960265727,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561202255233023,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561210845167615,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561228025036799,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561262384775167,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561331104251903,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561468543205375,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561743421112319,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76562293176926207,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76563392688553983,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76565591711809535,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76569989758320639,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76578785851342847,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76596378037387263,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76631562409476095,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76701931153653759,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76842668642009087,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77124143618719743,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77687093572141055,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983679,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983680,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(79938893385826304,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80501843339247616,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80783318315958272,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80924055804313600,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80994424548491264,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81029608920580096,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81047201106624512,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81055997199646720,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81060395246157824,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81062594269413376,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81063693781041152,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064243536855040,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064518414761984,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064655853715456,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064724573192192,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064758932930560,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064776112799744,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064784702734336,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064788997701632,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064791145185280,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792218927104,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792755798016,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793024233472,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793158451200,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793225560064,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793259114496,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793275891712,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793284280320,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793288474624,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793290571776,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793291620352,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292144640,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292406784,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292537856,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292603392,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292636160,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292652544,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292660736,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292664832,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292666880,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292667904,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668416,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668672,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668800,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668864,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668896,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668912,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668920,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668924,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668926,64,FLEN)
NAN_BOXED(6892087497621694621,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668927,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377248,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377264,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377272,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377276,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377278,64,FLEN)
NAN_BOXED(6892113589582043608,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377279,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571456,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571457,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571459,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571463,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571471,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571487,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571519,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571583,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571711,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271571967,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271572479,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271573503,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271575551,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271579647,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271587839,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271604223,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271636991,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271702527,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223271833599,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223272095743,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223272620031,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223273668607,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223275765759,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223279960063,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223288348671,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223305125887,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223338680319,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223405789183,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223540006911,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139223808442367,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139224345313279,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139225419055103,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139227566538751,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139231861506047,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139240451440639,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139257631309823,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139291991048191,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139360710524927,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139498149478399,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553139773027385343,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553140322783199231,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553141422294827007,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553143621318082559,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553148019364593663,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553156815457615871,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553174407643660287,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553209592015749119,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553279960759926783,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553420698248282111,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4553702173224992767,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4554265123178414079,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4555391023085256703,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4555391023085256704,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4556516922992099328,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557079872945520640,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557361347922231296,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557502085410586624,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557572454154764288,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557607638526853120,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557625230712897536,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557634026805919744,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557638424852430848,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557640623875686400,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557641723387314176,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642273143128064,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642548021035008,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642685459988480,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642754179465216,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642788539203584,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642805719072768,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642814309007360,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642818603974656,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642820751458304,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642821825200128,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822362071040,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822630506496,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822764724224,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822831833088,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822865387520,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822882164736,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822890553344,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822894747648,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822896844800,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822897893376,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898417664,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898679808,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898810880,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898876416,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898909184,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898925568,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898933760,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898937856,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898939904,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898940928,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941440,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941696,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941824,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941888,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941920,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941936,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941944,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941948,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941950,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4557642822898941951,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892120981491153960,64,FLEN)
NAN_BOXED(2321481533672723724,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336640,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336641,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336643,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336647,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336655,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336671,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336703,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336767,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336895,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337151,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337663,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204338687,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204340735,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204344831,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204353023,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204369407,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204402175,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204467711,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204598783,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204860927,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221205385215,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221206433791,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221208530943,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221212725247,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221221113855,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221237891071,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221271445503,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221338554367,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221472772095,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221741207551,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523222278078463,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523223351820287,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523225499303935,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523229794271231,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523238384205823,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523255564075007,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523289923813375,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523358643290111,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523496082243583,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523770960150527,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412524320715964415,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412525420227592191,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412527619250847743,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412532017297358847,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412540813390381055,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412558405576425471,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412593589948514303,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412663958692691967,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412804696181047295,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9413086171157757951,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9413649121111179263,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9414775021018021887,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9414775021018021888,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9415900920924864512,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416463870878285824,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416745345854996480,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416886083343351808,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416956452087529472,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416991636459618304,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417009228645662720,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417018024738684928,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417022422785196032,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417024621808451584,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417025721320079360,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026271075893248,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026545953800192,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026683392753664,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026752112230400,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026786471968768,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026803651837952,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026812241772544,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026816536739840,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026818684223488,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026819757965312,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820294836224,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820563271680,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820697489408,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820764598272,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820798152704,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820814929920,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820823318528,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820827512832,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820829609984,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820830658560,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831182848,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831444992,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831576064,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831641600,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831674368,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831690752,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831698944,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831703040,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831705088,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706112,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706624,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706880,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707008,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707072,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707104,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707120,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707128,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707132,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707134,64,FLEN)
NAN_BOXED(6892126286097940786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707135,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517248,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517249,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517251,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517255,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517263,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517279,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517311,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517375,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517503,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214517759,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214518271,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214519295,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214521343,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214525439,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214533631,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214550015,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214582783,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214648319,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705214779391,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705215041535,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705215565823,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705216614399,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705218711551,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705222905855,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705231294463,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705248071679,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705281626111,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705348734975,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705482952703,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575705751388159,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575706288259071,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575707362000895,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575709509484543,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575713804451839,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575722394386431,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575739574255615,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575773933993983,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575842653470719,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231575980092424191,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231576254970331135,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231576804726145023,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231577904237772799,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231580103261028351,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231584501307539455,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231593297400561663,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231610889586606079,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231646073958694911,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231716442702872575,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13231857180191227903,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13232138655167938559,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13232701605121359871,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13233827505028202495,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13233827505028202496,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13234953404935045120,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13235516354888466432,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13235797829865177088,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13235938567353532416,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236008936097710080,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236044120469798912,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236061712655843328,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236070508748865536,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236074906795376640,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236077105818632192,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236078205330259968,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236078755086073856,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079029963980800,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079167402934272,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079236122411008,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079270482149376,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079287662018560,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079296251953152,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079300546920448,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079302694404096,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079303768145920,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304305016832,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304573452288,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304707670016,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304774778880,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304808333312,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304825110528,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304833499136,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304837693440,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304839790592,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304840839168,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841363456,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841625600,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841756672,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841822208,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841854976,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841871360,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841879552,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841883648,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841885696,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841886720,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887232,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887488,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887616,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887680,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887712,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887728,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887736,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887740,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887742,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13236079304841887743,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892138624722227730,64,FLEN)
NAN_BOXED(11513309301917884906,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
