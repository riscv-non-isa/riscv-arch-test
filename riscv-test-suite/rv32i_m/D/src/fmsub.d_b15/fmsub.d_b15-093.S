
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_70656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffff800000; valaddr_reg:x3; val_offset:211968*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211968*0 + 3*0*FLEN/8, x4, x1, x2)

inst_70657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffc00000; valaddr_reg:x3; val_offset:211971*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211971*0 + 3*1*FLEN/8, x4, x1, x2)

inst_70658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffe00000; valaddr_reg:x3; val_offset:211974*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211974*0 + 3*2*FLEN/8, x4, x1, x2)

inst_70659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffff00000; valaddr_reg:x3; val_offset:211977*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211977*0 + 3*3*FLEN/8, x4, x1, x2)

inst_70660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffff80000; valaddr_reg:x3; val_offset:211980*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211980*0 + 3*4*FLEN/8, x4, x1, x2)

inst_70661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffc0000; valaddr_reg:x3; val_offset:211983*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211983*0 + 3*5*FLEN/8, x4, x1, x2)

inst_70662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffe0000; valaddr_reg:x3; val_offset:211986*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211986*0 + 3*6*FLEN/8, x4, x1, x2)

inst_70663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffff0000; valaddr_reg:x3; val_offset:211989*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211989*0 + 3*7*FLEN/8, x4, x1, x2)

inst_70664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffff8000; valaddr_reg:x3; val_offset:211992*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211992*0 + 3*8*FLEN/8, x4, x1, x2)

inst_70665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffc000; valaddr_reg:x3; val_offset:211995*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211995*0 + 3*9*FLEN/8, x4, x1, x2)

inst_70666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffe000; valaddr_reg:x3; val_offset:211998*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211998*0 + 3*10*FLEN/8, x4, x1, x2)

inst_70667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffff000; valaddr_reg:x3; val_offset:212001*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212001*0 + 3*11*FLEN/8, x4, x1, x2)

inst_70668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffff800; valaddr_reg:x3; val_offset:212004*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212004*0 + 3*12*FLEN/8, x4, x1, x2)

inst_70669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffc00; valaddr_reg:x3; val_offset:212007*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212007*0 + 3*13*FLEN/8, x4, x1, x2)

inst_70670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffe00; valaddr_reg:x3; val_offset:212010*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212010*0 + 3*14*FLEN/8, x4, x1, x2)

inst_70671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffff00; valaddr_reg:x3; val_offset:212013*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212013*0 + 3*15*FLEN/8, x4, x1, x2)

inst_70672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffff80; valaddr_reg:x3; val_offset:212016*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212016*0 + 3*16*FLEN/8, x4, x1, x2)

inst_70673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffffc0; valaddr_reg:x3; val_offset:212019*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212019*0 + 3*17*FLEN/8, x4, x1, x2)

inst_70674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffffe0; valaddr_reg:x3; val_offset:212022*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212022*0 + 3*18*FLEN/8, x4, x1, x2)

inst_70675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffff0; valaddr_reg:x3; val_offset:212025*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212025*0 + 3*19*FLEN/8, x4, x1, x2)

inst_70676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffff8; valaddr_reg:x3; val_offset:212028*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212028*0 + 3*20*FLEN/8, x4, x1, x2)

inst_70677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffffc; valaddr_reg:x3; val_offset:212031*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212031*0 + 3*21*FLEN/8, x4, x1, x2)

inst_70678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834ffffffffffffe; valaddr_reg:x3; val_offset:212034*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212034*0 + 3*22*FLEN/8, x4, x1, x2)

inst_70679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa56eb5abeef1c8; op2val:0x8000;
op3val:0x834fffffffffffff; valaddr_reg:x3; val_offset:212037*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212037*0 + 3*23*FLEN/8, x4, x1, x2)

inst_70680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000000000; valaddr_reg:x3; val_offset:212040*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212040*0 + 3*24*FLEN/8, x4, x1, x2)

inst_70681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000000001; valaddr_reg:x3; val_offset:212043*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212043*0 + 3*25*FLEN/8, x4, x1, x2)

inst_70682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000000003; valaddr_reg:x3; val_offset:212046*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212046*0 + 3*26*FLEN/8, x4, x1, x2)

inst_70683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000000007; valaddr_reg:x3; val_offset:212049*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212049*0 + 3*27*FLEN/8, x4, x1, x2)

inst_70684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000000000f; valaddr_reg:x3; val_offset:212052*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212052*0 + 3*28*FLEN/8, x4, x1, x2)

inst_70685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000000001f; valaddr_reg:x3; val_offset:212055*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212055*0 + 3*29*FLEN/8, x4, x1, x2)

inst_70686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000000003f; valaddr_reg:x3; val_offset:212058*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212058*0 + 3*30*FLEN/8, x4, x1, x2)

inst_70687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000000007f; valaddr_reg:x3; val_offset:212061*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212061*0 + 3*31*FLEN/8, x4, x1, x2)

inst_70688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000000000ff; valaddr_reg:x3; val_offset:212064*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212064*0 + 3*32*FLEN/8, x4, x1, x2)

inst_70689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000000001ff; valaddr_reg:x3; val_offset:212067*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212067*0 + 3*33*FLEN/8, x4, x1, x2)

inst_70690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000000003ff; valaddr_reg:x3; val_offset:212070*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212070*0 + 3*34*FLEN/8, x4, x1, x2)

inst_70691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000000007ff; valaddr_reg:x3; val_offset:212073*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212073*0 + 3*35*FLEN/8, x4, x1, x2)

inst_70692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000000fff; valaddr_reg:x3; val_offset:212076*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212076*0 + 3*36*FLEN/8, x4, x1, x2)

inst_70693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000001fff; valaddr_reg:x3; val_offset:212079*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212079*0 + 3*37*FLEN/8, x4, x1, x2)

inst_70694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000003fff; valaddr_reg:x3; val_offset:212082*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212082*0 + 3*38*FLEN/8, x4, x1, x2)

inst_70695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000007fff; valaddr_reg:x3; val_offset:212085*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212085*0 + 3*39*FLEN/8, x4, x1, x2)

inst_70696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000000ffff; valaddr_reg:x3; val_offset:212088*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212088*0 + 3*40*FLEN/8, x4, x1, x2)

inst_70697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000001ffff; valaddr_reg:x3; val_offset:212091*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212091*0 + 3*41*FLEN/8, x4, x1, x2)

inst_70698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000003ffff; valaddr_reg:x3; val_offset:212094*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212094*0 + 3*42*FLEN/8, x4, x1, x2)

inst_70699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000007ffff; valaddr_reg:x3; val_offset:212097*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212097*0 + 3*43*FLEN/8, x4, x1, x2)

inst_70700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000000fffff; valaddr_reg:x3; val_offset:212100*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212100*0 + 3*44*FLEN/8, x4, x1, x2)

inst_70701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000001fffff; valaddr_reg:x3; val_offset:212103*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212103*0 + 3*45*FLEN/8, x4, x1, x2)

inst_70702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000003fffff; valaddr_reg:x3; val_offset:212106*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212106*0 + 3*46*FLEN/8, x4, x1, x2)

inst_70703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000007fffff; valaddr_reg:x3; val_offset:212109*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212109*0 + 3*47*FLEN/8, x4, x1, x2)

inst_70704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000000ffffff; valaddr_reg:x3; val_offset:212112*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212112*0 + 3*48*FLEN/8, x4, x1, x2)

inst_70705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000001ffffff; valaddr_reg:x3; val_offset:212115*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212115*0 + 3*49*FLEN/8, x4, x1, x2)

inst_70706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000003ffffff; valaddr_reg:x3; val_offset:212118*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212118*0 + 3*50*FLEN/8, x4, x1, x2)

inst_70707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000007ffffff; valaddr_reg:x3; val_offset:212121*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212121*0 + 3*51*FLEN/8, x4, x1, x2)

inst_70708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000000fffffff; valaddr_reg:x3; val_offset:212124*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212124*0 + 3*52*FLEN/8, x4, x1, x2)

inst_70709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000001fffffff; valaddr_reg:x3; val_offset:212127*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212127*0 + 3*53*FLEN/8, x4, x1, x2)

inst_70710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000003fffffff; valaddr_reg:x3; val_offset:212130*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212130*0 + 3*54*FLEN/8, x4, x1, x2)

inst_70711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000007fffffff; valaddr_reg:x3; val_offset:212133*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212133*0 + 3*55*FLEN/8, x4, x1, x2)

inst_70712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900000ffffffff; valaddr_reg:x3; val_offset:212136*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212136*0 + 3*56*FLEN/8, x4, x1, x2)

inst_70713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900001ffffffff; valaddr_reg:x3; val_offset:212139*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212139*0 + 3*57*FLEN/8, x4, x1, x2)

inst_70714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900003ffffffff; valaddr_reg:x3; val_offset:212142*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212142*0 + 3*58*FLEN/8, x4, x1, x2)

inst_70715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900007ffffffff; valaddr_reg:x3; val_offset:212145*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212145*0 + 3*59*FLEN/8, x4, x1, x2)

inst_70716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790000fffffffff; valaddr_reg:x3; val_offset:212148*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212148*0 + 3*60*FLEN/8, x4, x1, x2)

inst_70717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790001fffffffff; valaddr_reg:x3; val_offset:212151*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212151*0 + 3*61*FLEN/8, x4, x1, x2)

inst_70718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790003fffffffff; valaddr_reg:x3; val_offset:212154*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212154*0 + 3*62*FLEN/8, x4, x1, x2)

inst_70719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790007fffffffff; valaddr_reg:x3; val_offset:212157*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212157*0 + 3*63*FLEN/8, x4, x1, x2)

inst_70720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79000ffffffffff; valaddr_reg:x3; val_offset:212160*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212160*0 + 3*64*FLEN/8, x4, x1, x2)

inst_70721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79001ffffffffff; valaddr_reg:x3; val_offset:212163*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212163*0 + 3*65*FLEN/8, x4, x1, x2)

inst_70722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79003ffffffffff; valaddr_reg:x3; val_offset:212166*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212166*0 + 3*66*FLEN/8, x4, x1, x2)

inst_70723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79007ffffffffff; valaddr_reg:x3; val_offset:212169*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212169*0 + 3*67*FLEN/8, x4, x1, x2)

inst_70724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7900fffffffffff; valaddr_reg:x3; val_offset:212172*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212172*0 + 3*68*FLEN/8, x4, x1, x2)

inst_70725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7901fffffffffff; valaddr_reg:x3; val_offset:212175*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212175*0 + 3*69*FLEN/8, x4, x1, x2)

inst_70726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7903fffffffffff; valaddr_reg:x3; val_offset:212178*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212178*0 + 3*70*FLEN/8, x4, x1, x2)

inst_70727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb7907fffffffffff; valaddr_reg:x3; val_offset:212181*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212181*0 + 3*71*FLEN/8, x4, x1, x2)

inst_70728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb790ffffffffffff; valaddr_reg:x3; val_offset:212184*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212184*0 + 3*72*FLEN/8, x4, x1, x2)

inst_70729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb791ffffffffffff; valaddr_reg:x3; val_offset:212187*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212187*0 + 3*73*FLEN/8, x4, x1, x2)

inst_70730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb793ffffffffffff; valaddr_reg:x3; val_offset:212190*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212190*0 + 3*74*FLEN/8, x4, x1, x2)

inst_70731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb797ffffffffffff; valaddr_reg:x3; val_offset:212193*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212193*0 + 3*75*FLEN/8, x4, x1, x2)

inst_70732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb798000000000000; valaddr_reg:x3; val_offset:212196*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212196*0 + 3*76*FLEN/8, x4, x1, x2)

inst_70733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79c000000000000; valaddr_reg:x3; val_offset:212199*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212199*0 + 3*77*FLEN/8, x4, x1, x2)

inst_70734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79e000000000000; valaddr_reg:x3; val_offset:212202*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212202*0 + 3*78*FLEN/8, x4, x1, x2)

inst_70735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79f000000000000; valaddr_reg:x3; val_offset:212205*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212205*0 + 3*79*FLEN/8, x4, x1, x2)

inst_70736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79f800000000000; valaddr_reg:x3; val_offset:212208*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212208*0 + 3*80*FLEN/8, x4, x1, x2)

inst_70737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fc00000000000; valaddr_reg:x3; val_offset:212211*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212211*0 + 3*81*FLEN/8, x4, x1, x2)

inst_70738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fe00000000000; valaddr_reg:x3; val_offset:212214*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212214*0 + 3*82*FLEN/8, x4, x1, x2)

inst_70739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ff00000000000; valaddr_reg:x3; val_offset:212217*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212217*0 + 3*83*FLEN/8, x4, x1, x2)

inst_70740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ff80000000000; valaddr_reg:x3; val_offset:212220*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212220*0 + 3*84*FLEN/8, x4, x1, x2)

inst_70741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffc0000000000; valaddr_reg:x3; val_offset:212223*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212223*0 + 3*85*FLEN/8, x4, x1, x2)

inst_70742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffe0000000000; valaddr_reg:x3; val_offset:212226*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212226*0 + 3*86*FLEN/8, x4, x1, x2)

inst_70743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fff0000000000; valaddr_reg:x3; val_offset:212229*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212229*0 + 3*87*FLEN/8, x4, x1, x2)

inst_70744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fff8000000000; valaddr_reg:x3; val_offset:212232*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212232*0 + 3*88*FLEN/8, x4, x1, x2)

inst_70745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffc000000000; valaddr_reg:x3; val_offset:212235*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212235*0 + 3*89*FLEN/8, x4, x1, x2)

inst_70746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffe000000000; valaddr_reg:x3; val_offset:212238*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212238*0 + 3*90*FLEN/8, x4, x1, x2)

inst_70747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffff000000000; valaddr_reg:x3; val_offset:212241*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212241*0 + 3*91*FLEN/8, x4, x1, x2)

inst_70748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffff800000000; valaddr_reg:x3; val_offset:212244*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212244*0 + 3*92*FLEN/8, x4, x1, x2)

inst_70749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffc00000000; valaddr_reg:x3; val_offset:212247*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212247*0 + 3*93*FLEN/8, x4, x1, x2)

inst_70750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffe00000000; valaddr_reg:x3; val_offset:212250*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212250*0 + 3*94*FLEN/8, x4, x1, x2)

inst_70751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffff00000000; valaddr_reg:x3; val_offset:212253*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212253*0 + 3*95*FLEN/8, x4, x1, x2)

inst_70752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffff80000000; valaddr_reg:x3; val_offset:212256*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212256*0 + 3*96*FLEN/8, x4, x1, x2)

inst_70753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffc0000000; valaddr_reg:x3; val_offset:212259*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212259*0 + 3*97*FLEN/8, x4, x1, x2)

inst_70754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffe0000000; valaddr_reg:x3; val_offset:212262*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212262*0 + 3*98*FLEN/8, x4, x1, x2)

inst_70755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffff0000000; valaddr_reg:x3; val_offset:212265*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212265*0 + 3*99*FLEN/8, x4, x1, x2)

inst_70756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffff8000000; valaddr_reg:x3; val_offset:212268*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212268*0 + 3*100*FLEN/8, x4, x1, x2)

inst_70757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffc000000; valaddr_reg:x3; val_offset:212271*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212271*0 + 3*101*FLEN/8, x4, x1, x2)

inst_70758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffe000000; valaddr_reg:x3; val_offset:212274*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212274*0 + 3*102*FLEN/8, x4, x1, x2)

inst_70759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffff000000; valaddr_reg:x3; val_offset:212277*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212277*0 + 3*103*FLEN/8, x4, x1, x2)

inst_70760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffff800000; valaddr_reg:x3; val_offset:212280*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212280*0 + 3*104*FLEN/8, x4, x1, x2)

inst_70761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffc00000; valaddr_reg:x3; val_offset:212283*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212283*0 + 3*105*FLEN/8, x4, x1, x2)

inst_70762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffe00000; valaddr_reg:x3; val_offset:212286*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212286*0 + 3*106*FLEN/8, x4, x1, x2)

inst_70763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffff00000; valaddr_reg:x3; val_offset:212289*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212289*0 + 3*107*FLEN/8, x4, x1, x2)

inst_70764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffff80000; valaddr_reg:x3; val_offset:212292*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212292*0 + 3*108*FLEN/8, x4, x1, x2)

inst_70765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffc0000; valaddr_reg:x3; val_offset:212295*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212295*0 + 3*109*FLEN/8, x4, x1, x2)

inst_70766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffe0000; valaddr_reg:x3; val_offset:212298*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212298*0 + 3*110*FLEN/8, x4, x1, x2)

inst_70767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffff0000; valaddr_reg:x3; val_offset:212301*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212301*0 + 3*111*FLEN/8, x4, x1, x2)

inst_70768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffff8000; valaddr_reg:x3; val_offset:212304*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212304*0 + 3*112*FLEN/8, x4, x1, x2)

inst_70769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffc000; valaddr_reg:x3; val_offset:212307*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212307*0 + 3*113*FLEN/8, x4, x1, x2)

inst_70770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffe000; valaddr_reg:x3; val_offset:212310*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212310*0 + 3*114*FLEN/8, x4, x1, x2)

inst_70771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffff000; valaddr_reg:x3; val_offset:212313*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212313*0 + 3*115*FLEN/8, x4, x1, x2)

inst_70772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffff800; valaddr_reg:x3; val_offset:212316*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212316*0 + 3*116*FLEN/8, x4, x1, x2)

inst_70773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffc00; valaddr_reg:x3; val_offset:212319*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212319*0 + 3*117*FLEN/8, x4, x1, x2)

inst_70774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffe00; valaddr_reg:x3; val_offset:212322*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212322*0 + 3*118*FLEN/8, x4, x1, x2)

inst_70775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffff00; valaddr_reg:x3; val_offset:212325*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212325*0 + 3*119*FLEN/8, x4, x1, x2)

inst_70776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffff80; valaddr_reg:x3; val_offset:212328*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212328*0 + 3*120*FLEN/8, x4, x1, x2)

inst_70777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffffc0; valaddr_reg:x3; val_offset:212331*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212331*0 + 3*121*FLEN/8, x4, x1, x2)

inst_70778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffffe0; valaddr_reg:x3; val_offset:212334*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212334*0 + 3*122*FLEN/8, x4, x1, x2)

inst_70779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffff0; valaddr_reg:x3; val_offset:212337*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212337*0 + 3*123*FLEN/8, x4, x1, x2)

inst_70780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffff8; valaddr_reg:x3; val_offset:212340*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212340*0 + 3*124*FLEN/8, x4, x1, x2)

inst_70781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffffc; valaddr_reg:x3; val_offset:212343*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212343*0 + 3*125*FLEN/8, x4, x1, x2)

inst_70782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79ffffffffffffe; valaddr_reg:x3; val_offset:212346*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212346*0 + 3*126*FLEN/8, x4, x1, x2)

inst_70783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xb79fffffffffffff; valaddr_reg:x3; val_offset:212349*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212349*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_70784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:212352*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212352*0 + 3*128*FLEN/8, x4, x1, x2)

inst_70785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:212355*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212355*0 + 3*129*FLEN/8, x4, x1, x2)

inst_70786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:212358*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212358*0 + 3*130*FLEN/8, x4, x1, x2)

inst_70787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:212361*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212361*0 + 3*131*FLEN/8, x4, x1, x2)

inst_70788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:212364*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212364*0 + 3*132*FLEN/8, x4, x1, x2)

inst_70789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:212367*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212367*0 + 3*133*FLEN/8, x4, x1, x2)

inst_70790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:212370*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212370*0 + 3*134*FLEN/8, x4, x1, x2)

inst_70791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:212373*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212373*0 + 3*135*FLEN/8, x4, x1, x2)

inst_70792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:212376*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212376*0 + 3*136*FLEN/8, x4, x1, x2)

inst_70793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:212379*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212379*0 + 3*137*FLEN/8, x4, x1, x2)

inst_70794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:212382*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212382*0 + 3*138*FLEN/8, x4, x1, x2)

inst_70795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:212385*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212385*0 + 3*139*FLEN/8, x4, x1, x2)

inst_70796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:212388*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212388*0 + 3*140*FLEN/8, x4, x1, x2)

inst_70797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:212391*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212391*0 + 3*141*FLEN/8, x4, x1, x2)

inst_70798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:212394*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212394*0 + 3*142*FLEN/8, x4, x1, x2)

inst_70799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:212397*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212397*0 + 3*143*FLEN/8, x4, x1, x2)

inst_70800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:212400*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212400*0 + 3*144*FLEN/8, x4, x1, x2)

inst_70801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:212403*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212403*0 + 3*145*FLEN/8, x4, x1, x2)

inst_70802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:212406*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212406*0 + 3*146*FLEN/8, x4, x1, x2)

inst_70803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:212409*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212409*0 + 3*147*FLEN/8, x4, x1, x2)

inst_70804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:212412*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212412*0 + 3*148*FLEN/8, x4, x1, x2)

inst_70805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x576a3a38a667e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7dac20c8bed85 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa576a3a38a667e; op2val:0x9fc7dac20c8bed85;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:212415*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212415*0 + 3*149*FLEN/8, x4, x1, x2)

inst_70806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:212418*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212418*0 + 3*150*FLEN/8, x4, x1, x2)

inst_70807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:212421*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212421*0 + 3*151*FLEN/8, x4, x1, x2)

inst_70808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:212424*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212424*0 + 3*152*FLEN/8, x4, x1, x2)

inst_70809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:212427*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212427*0 + 3*153*FLEN/8, x4, x1, x2)

inst_70810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:212430*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212430*0 + 3*154*FLEN/8, x4, x1, x2)

inst_70811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:212433*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212433*0 + 3*155*FLEN/8, x4, x1, x2)

inst_70812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:212436*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212436*0 + 3*156*FLEN/8, x4, x1, x2)

inst_70813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:212439*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212439*0 + 3*157*FLEN/8, x4, x1, x2)

inst_70814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:212442*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212442*0 + 3*158*FLEN/8, x4, x1, x2)

inst_70815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:212445*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212445*0 + 3*159*FLEN/8, x4, x1, x2)

inst_70816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:212448*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212448*0 + 3*160*FLEN/8, x4, x1, x2)

inst_70817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:212451*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212451*0 + 3*161*FLEN/8, x4, x1, x2)

inst_70818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:212454*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212454*0 + 3*162*FLEN/8, x4, x1, x2)

inst_70819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:212457*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212457*0 + 3*163*FLEN/8, x4, x1, x2)

inst_70820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:212460*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212460*0 + 3*164*FLEN/8, x4, x1, x2)

inst_70821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:212463*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212463*0 + 3*165*FLEN/8, x4, x1, x2)

inst_70822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:212466*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212466*0 + 3*166*FLEN/8, x4, x1, x2)

inst_70823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:212469*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212469*0 + 3*167*FLEN/8, x4, x1, x2)

inst_70824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:212472*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212472*0 + 3*168*FLEN/8, x4, x1, x2)

inst_70825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:212475*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212475*0 + 3*169*FLEN/8, x4, x1, x2)

inst_70826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:212478*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212478*0 + 3*170*FLEN/8, x4, x1, x2)

inst_70827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:212481*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212481*0 + 3*171*FLEN/8, x4, x1, x2)

inst_70828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:212484*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212484*0 + 3*172*FLEN/8, x4, x1, x2)

inst_70829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:212487*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212487*0 + 3*173*FLEN/8, x4, x1, x2)

inst_70830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:212490*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212490*0 + 3*174*FLEN/8, x4, x1, x2)

inst_70831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:212493*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212493*0 + 3*175*FLEN/8, x4, x1, x2)

inst_70832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:212496*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212496*0 + 3*176*FLEN/8, x4, x1, x2)

inst_70833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:212499*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212499*0 + 3*177*FLEN/8, x4, x1, x2)

inst_70834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:212502*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212502*0 + 3*178*FLEN/8, x4, x1, x2)

inst_70835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:212505*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212505*0 + 3*179*FLEN/8, x4, x1, x2)

inst_70836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000000000ff; valaddr_reg:x3; val_offset:212508*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212508*0 + 3*180*FLEN/8, x4, x1, x2)

inst_70837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000000001ff; valaddr_reg:x3; val_offset:212511*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212511*0 + 3*181*FLEN/8, x4, x1, x2)

inst_70838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000000003ff; valaddr_reg:x3; val_offset:212514*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212514*0 + 3*182*FLEN/8, x4, x1, x2)

inst_70839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000000007ff; valaddr_reg:x3; val_offset:212517*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212517*0 + 3*183*FLEN/8, x4, x1, x2)

inst_70840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000000fff; valaddr_reg:x3; val_offset:212520*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212520*0 + 3*184*FLEN/8, x4, x1, x2)

inst_70841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000001fff; valaddr_reg:x3; val_offset:212523*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212523*0 + 3*185*FLEN/8, x4, x1, x2)

inst_70842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000003fff; valaddr_reg:x3; val_offset:212526*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212526*0 + 3*186*FLEN/8, x4, x1, x2)

inst_70843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000007fff; valaddr_reg:x3; val_offset:212529*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212529*0 + 3*187*FLEN/8, x4, x1, x2)

inst_70844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000000ffff; valaddr_reg:x3; val_offset:212532*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212532*0 + 3*188*FLEN/8, x4, x1, x2)

inst_70845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000001ffff; valaddr_reg:x3; val_offset:212535*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212535*0 + 3*189*FLEN/8, x4, x1, x2)

inst_70846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000003ffff; valaddr_reg:x3; val_offset:212538*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212538*0 + 3*190*FLEN/8, x4, x1, x2)

inst_70847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000007ffff; valaddr_reg:x3; val_offset:212541*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212541*0 + 3*191*FLEN/8, x4, x1, x2)

inst_70848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000000fffff; valaddr_reg:x3; val_offset:212544*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212544*0 + 3*192*FLEN/8, x4, x1, x2)

inst_70849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000001fffff; valaddr_reg:x3; val_offset:212547*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212547*0 + 3*193*FLEN/8, x4, x1, x2)

inst_70850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000003fffff; valaddr_reg:x3; val_offset:212550*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212550*0 + 3*194*FLEN/8, x4, x1, x2)

inst_70851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000007fffff; valaddr_reg:x3; val_offset:212553*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212553*0 + 3*195*FLEN/8, x4, x1, x2)

inst_70852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000000ffffff; valaddr_reg:x3; val_offset:212556*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212556*0 + 3*196*FLEN/8, x4, x1, x2)

inst_70853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000001ffffff; valaddr_reg:x3; val_offset:212559*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212559*0 + 3*197*FLEN/8, x4, x1, x2)

inst_70854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000003ffffff; valaddr_reg:x3; val_offset:212562*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212562*0 + 3*198*FLEN/8, x4, x1, x2)

inst_70855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000007ffffff; valaddr_reg:x3; val_offset:212565*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212565*0 + 3*199*FLEN/8, x4, x1, x2)

inst_70856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000000fffffff; valaddr_reg:x3; val_offset:212568*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212568*0 + 3*200*FLEN/8, x4, x1, x2)

inst_70857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000001fffffff; valaddr_reg:x3; val_offset:212571*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212571*0 + 3*201*FLEN/8, x4, x1, x2)

inst_70858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000003fffffff; valaddr_reg:x3; val_offset:212574*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212574*0 + 3*202*FLEN/8, x4, x1, x2)

inst_70859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000007fffffff; valaddr_reg:x3; val_offset:212577*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212577*0 + 3*203*FLEN/8, x4, x1, x2)

inst_70860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00000ffffffff; valaddr_reg:x3; val_offset:212580*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212580*0 + 3*204*FLEN/8, x4, x1, x2)

inst_70861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00001ffffffff; valaddr_reg:x3; val_offset:212583*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212583*0 + 3*205*FLEN/8, x4, x1, x2)

inst_70862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00003ffffffff; valaddr_reg:x3; val_offset:212586*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212586*0 + 3*206*FLEN/8, x4, x1, x2)

inst_70863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00007ffffffff; valaddr_reg:x3; val_offset:212589*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212589*0 + 3*207*FLEN/8, x4, x1, x2)

inst_70864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0000fffffffff; valaddr_reg:x3; val_offset:212592*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212592*0 + 3*208*FLEN/8, x4, x1, x2)

inst_70865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0001fffffffff; valaddr_reg:x3; val_offset:212595*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212595*0 + 3*209*FLEN/8, x4, x1, x2)

inst_70866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0003fffffffff; valaddr_reg:x3; val_offset:212598*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212598*0 + 3*210*FLEN/8, x4, x1, x2)

inst_70867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0007fffffffff; valaddr_reg:x3; val_offset:212601*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212601*0 + 3*211*FLEN/8, x4, x1, x2)

inst_70868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a000ffffffffff; valaddr_reg:x3; val_offset:212604*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212604*0 + 3*212*FLEN/8, x4, x1, x2)

inst_70869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a001ffffffffff; valaddr_reg:x3; val_offset:212607*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212607*0 + 3*213*FLEN/8, x4, x1, x2)

inst_70870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a003ffffffffff; valaddr_reg:x3; val_offset:212610*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212610*0 + 3*214*FLEN/8, x4, x1, x2)

inst_70871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a007ffffffffff; valaddr_reg:x3; val_offset:212613*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212613*0 + 3*215*FLEN/8, x4, x1, x2)

inst_70872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a00fffffffffff; valaddr_reg:x3; val_offset:212616*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212616*0 + 3*216*FLEN/8, x4, x1, x2)

inst_70873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a01fffffffffff; valaddr_reg:x3; val_offset:212619*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212619*0 + 3*217*FLEN/8, x4, x1, x2)

inst_70874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a03fffffffffff; valaddr_reg:x3; val_offset:212622*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212622*0 + 3*218*FLEN/8, x4, x1, x2)

inst_70875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a07fffffffffff; valaddr_reg:x3; val_offset:212625*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212625*0 + 3*219*FLEN/8, x4, x1, x2)

inst_70876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a0ffffffffffff; valaddr_reg:x3; val_offset:212628*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212628*0 + 3*220*FLEN/8, x4, x1, x2)

inst_70877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a1ffffffffffff; valaddr_reg:x3; val_offset:212631*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212631*0 + 3*221*FLEN/8, x4, x1, x2)

inst_70878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a3ffffffffffff; valaddr_reg:x3; val_offset:212634*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212634*0 + 3*222*FLEN/8, x4, x1, x2)

inst_70879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a7ffffffffffff; valaddr_reg:x3; val_offset:212637*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212637*0 + 3*223*FLEN/8, x4, x1, x2)

inst_70880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80a8000000000000; valaddr_reg:x3; val_offset:212640*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212640*0 + 3*224*FLEN/8, x4, x1, x2)

inst_70881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80ac000000000000; valaddr_reg:x3; val_offset:212643*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212643*0 + 3*225*FLEN/8, x4, x1, x2)

inst_70882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80ae000000000000; valaddr_reg:x3; val_offset:212646*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212646*0 + 3*226*FLEN/8, x4, x1, x2)

inst_70883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80af000000000000; valaddr_reg:x3; val_offset:212649*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212649*0 + 3*227*FLEN/8, x4, x1, x2)

inst_70884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80af800000000000; valaddr_reg:x3; val_offset:212652*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212652*0 + 3*228*FLEN/8, x4, x1, x2)

inst_70885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afc00000000000; valaddr_reg:x3; val_offset:212655*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212655*0 + 3*229*FLEN/8, x4, x1, x2)

inst_70886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afe00000000000; valaddr_reg:x3; val_offset:212658*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212658*0 + 3*230*FLEN/8, x4, x1, x2)

inst_70887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80aff00000000000; valaddr_reg:x3; val_offset:212661*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212661*0 + 3*231*FLEN/8, x4, x1, x2)

inst_70888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80aff80000000000; valaddr_reg:x3; val_offset:212664*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212664*0 + 3*232*FLEN/8, x4, x1, x2)

inst_70889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affc0000000000; valaddr_reg:x3; val_offset:212667*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212667*0 + 3*233*FLEN/8, x4, x1, x2)

inst_70890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affe0000000000; valaddr_reg:x3; val_offset:212670*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212670*0 + 3*234*FLEN/8, x4, x1, x2)

inst_70891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afff0000000000; valaddr_reg:x3; val_offset:212673*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212673*0 + 3*235*FLEN/8, x4, x1, x2)

inst_70892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afff8000000000; valaddr_reg:x3; val_offset:212676*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212676*0 + 3*236*FLEN/8, x4, x1, x2)

inst_70893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffc000000000; valaddr_reg:x3; val_offset:212679*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212679*0 + 3*237*FLEN/8, x4, x1, x2)

inst_70894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffe000000000; valaddr_reg:x3; val_offset:212682*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212682*0 + 3*238*FLEN/8, x4, x1, x2)

inst_70895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affff000000000; valaddr_reg:x3; val_offset:212685*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212685*0 + 3*239*FLEN/8, x4, x1, x2)

inst_70896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affff800000000; valaddr_reg:x3; val_offset:212688*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212688*0 + 3*240*FLEN/8, x4, x1, x2)

inst_70897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffc00000000; valaddr_reg:x3; val_offset:212691*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212691*0 + 3*241*FLEN/8, x4, x1, x2)

inst_70898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffe00000000; valaddr_reg:x3; val_offset:212694*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212694*0 + 3*242*FLEN/8, x4, x1, x2)

inst_70899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffff00000000; valaddr_reg:x3; val_offset:212697*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212697*0 + 3*243*FLEN/8, x4, x1, x2)

inst_70900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffff80000000; valaddr_reg:x3; val_offset:212700*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212700*0 + 3*244*FLEN/8, x4, x1, x2)

inst_70901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffc0000000; valaddr_reg:x3; val_offset:212703*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212703*0 + 3*245*FLEN/8, x4, x1, x2)

inst_70902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffe0000000; valaddr_reg:x3; val_offset:212706*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212706*0 + 3*246*FLEN/8, x4, x1, x2)

inst_70903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffff0000000; valaddr_reg:x3; val_offset:212709*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212709*0 + 3*247*FLEN/8, x4, x1, x2)

inst_70904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffff8000000; valaddr_reg:x3; val_offset:212712*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212712*0 + 3*248*FLEN/8, x4, x1, x2)

inst_70905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffc000000; valaddr_reg:x3; val_offset:212715*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212715*0 + 3*249*FLEN/8, x4, x1, x2)

inst_70906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffe000000; valaddr_reg:x3; val_offset:212718*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212718*0 + 3*250*FLEN/8, x4, x1, x2)

inst_70907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffff000000; valaddr_reg:x3; val_offset:212721*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212721*0 + 3*251*FLEN/8, x4, x1, x2)

inst_70908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffff800000; valaddr_reg:x3; val_offset:212724*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212724*0 + 3*252*FLEN/8, x4, x1, x2)

inst_70909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffc00000; valaddr_reg:x3; val_offset:212727*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212727*0 + 3*253*FLEN/8, x4, x1, x2)

inst_70910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffe00000; valaddr_reg:x3; val_offset:212730*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212730*0 + 3*254*FLEN/8, x4, x1, x2)

inst_70911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffff00000; valaddr_reg:x3; val_offset:212733*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212733*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_70912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffff80000; valaddr_reg:x3; val_offset:212736*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212736*0 + 3*256*FLEN/8, x4, x1, x2)

inst_70913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffc0000; valaddr_reg:x3; val_offset:212739*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212739*0 + 3*257*FLEN/8, x4, x1, x2)

inst_70914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffe0000; valaddr_reg:x3; val_offset:212742*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212742*0 + 3*258*FLEN/8, x4, x1, x2)

inst_70915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffff0000; valaddr_reg:x3; val_offset:212745*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212745*0 + 3*259*FLEN/8, x4, x1, x2)

inst_70916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffff8000; valaddr_reg:x3; val_offset:212748*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212748*0 + 3*260*FLEN/8, x4, x1, x2)

inst_70917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffc000; valaddr_reg:x3; val_offset:212751*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212751*0 + 3*261*FLEN/8, x4, x1, x2)

inst_70918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffe000; valaddr_reg:x3; val_offset:212754*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212754*0 + 3*262*FLEN/8, x4, x1, x2)

inst_70919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffff000; valaddr_reg:x3; val_offset:212757*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212757*0 + 3*263*FLEN/8, x4, x1, x2)

inst_70920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffff800; valaddr_reg:x3; val_offset:212760*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212760*0 + 3*264*FLEN/8, x4, x1, x2)

inst_70921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffc00; valaddr_reg:x3; val_offset:212763*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212763*0 + 3*265*FLEN/8, x4, x1, x2)

inst_70922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffe00; valaddr_reg:x3; val_offset:212766*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212766*0 + 3*266*FLEN/8, x4, x1, x2)

inst_70923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffff00; valaddr_reg:x3; val_offset:212769*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212769*0 + 3*267*FLEN/8, x4, x1, x2)

inst_70924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffff80; valaddr_reg:x3; val_offset:212772*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212772*0 + 3*268*FLEN/8, x4, x1, x2)

inst_70925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffffc0; valaddr_reg:x3; val_offset:212775*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212775*0 + 3*269*FLEN/8, x4, x1, x2)

inst_70926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffffe0; valaddr_reg:x3; val_offset:212778*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212778*0 + 3*270*FLEN/8, x4, x1, x2)

inst_70927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffff0; valaddr_reg:x3; val_offset:212781*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212781*0 + 3*271*FLEN/8, x4, x1, x2)

inst_70928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffff8; valaddr_reg:x3; val_offset:212784*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212784*0 + 3*272*FLEN/8, x4, x1, x2)

inst_70929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffffc; valaddr_reg:x3; val_offset:212787*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212787*0 + 3*273*FLEN/8, x4, x1, x2)

inst_70930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80affffffffffffe; valaddr_reg:x3; val_offset:212790*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212790*0 + 3*274*FLEN/8, x4, x1, x2)

inst_70931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x584d16be65d91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa584d16be65d91; op2val:0x8000;
op3val:0x80afffffffffffff; valaddr_reg:x3; val_offset:212793*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212793*0 + 3*275*FLEN/8, x4, x1, x2)

inst_70932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000000000; valaddr_reg:x3; val_offset:212796*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212796*0 + 3*276*FLEN/8, x4, x1, x2)

inst_70933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000000001; valaddr_reg:x3; val_offset:212799*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212799*0 + 3*277*FLEN/8, x4, x1, x2)

inst_70934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000000003; valaddr_reg:x3; val_offset:212802*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212802*0 + 3*278*FLEN/8, x4, x1, x2)

inst_70935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000000007; valaddr_reg:x3; val_offset:212805*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212805*0 + 3*279*FLEN/8, x4, x1, x2)

inst_70936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000000000f; valaddr_reg:x3; val_offset:212808*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212808*0 + 3*280*FLEN/8, x4, x1, x2)

inst_70937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000000001f; valaddr_reg:x3; val_offset:212811*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212811*0 + 3*281*FLEN/8, x4, x1, x2)

inst_70938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000000003f; valaddr_reg:x3; val_offset:212814*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212814*0 + 3*282*FLEN/8, x4, x1, x2)

inst_70939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000000007f; valaddr_reg:x3; val_offset:212817*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212817*0 + 3*283*FLEN/8, x4, x1, x2)

inst_70940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000000000ff; valaddr_reg:x3; val_offset:212820*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212820*0 + 3*284*FLEN/8, x4, x1, x2)

inst_70941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000000001ff; valaddr_reg:x3; val_offset:212823*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212823*0 + 3*285*FLEN/8, x4, x1, x2)

inst_70942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000000003ff; valaddr_reg:x3; val_offset:212826*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212826*0 + 3*286*FLEN/8, x4, x1, x2)

inst_70943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000000007ff; valaddr_reg:x3; val_offset:212829*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212829*0 + 3*287*FLEN/8, x4, x1, x2)

inst_70944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000000fff; valaddr_reg:x3; val_offset:212832*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212832*0 + 3*288*FLEN/8, x4, x1, x2)

inst_70945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000001fff; valaddr_reg:x3; val_offset:212835*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212835*0 + 3*289*FLEN/8, x4, x1, x2)

inst_70946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000003fff; valaddr_reg:x3; val_offset:212838*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212838*0 + 3*290*FLEN/8, x4, x1, x2)

inst_70947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000007fff; valaddr_reg:x3; val_offset:212841*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212841*0 + 3*291*FLEN/8, x4, x1, x2)

inst_70948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000000ffff; valaddr_reg:x3; val_offset:212844*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212844*0 + 3*292*FLEN/8, x4, x1, x2)

inst_70949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000001ffff; valaddr_reg:x3; val_offset:212847*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212847*0 + 3*293*FLEN/8, x4, x1, x2)

inst_70950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000003ffff; valaddr_reg:x3; val_offset:212850*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212850*0 + 3*294*FLEN/8, x4, x1, x2)

inst_70951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000007ffff; valaddr_reg:x3; val_offset:212853*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212853*0 + 3*295*FLEN/8, x4, x1, x2)

inst_70952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000000fffff; valaddr_reg:x3; val_offset:212856*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212856*0 + 3*296*FLEN/8, x4, x1, x2)

inst_70953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000001fffff; valaddr_reg:x3; val_offset:212859*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212859*0 + 3*297*FLEN/8, x4, x1, x2)

inst_70954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000003fffff; valaddr_reg:x3; val_offset:212862*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212862*0 + 3*298*FLEN/8, x4, x1, x2)

inst_70955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000007fffff; valaddr_reg:x3; val_offset:212865*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212865*0 + 3*299*FLEN/8, x4, x1, x2)

inst_70956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000000ffffff; valaddr_reg:x3; val_offset:212868*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212868*0 + 3*300*FLEN/8, x4, x1, x2)

inst_70957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000001ffffff; valaddr_reg:x3; val_offset:212871*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212871*0 + 3*301*FLEN/8, x4, x1, x2)

inst_70958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000003ffffff; valaddr_reg:x3; val_offset:212874*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212874*0 + 3*302*FLEN/8, x4, x1, x2)

inst_70959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000007ffffff; valaddr_reg:x3; val_offset:212877*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212877*0 + 3*303*FLEN/8, x4, x1, x2)

inst_70960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000000fffffff; valaddr_reg:x3; val_offset:212880*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212880*0 + 3*304*FLEN/8, x4, x1, x2)

inst_70961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000001fffffff; valaddr_reg:x3; val_offset:212883*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212883*0 + 3*305*FLEN/8, x4, x1, x2)

inst_70962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000003fffffff; valaddr_reg:x3; val_offset:212886*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212886*0 + 3*306*FLEN/8, x4, x1, x2)

inst_70963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000007fffffff; valaddr_reg:x3; val_offset:212889*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212889*0 + 3*307*FLEN/8, x4, x1, x2)

inst_70964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500000ffffffff; valaddr_reg:x3; val_offset:212892*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212892*0 + 3*308*FLEN/8, x4, x1, x2)

inst_70965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500001ffffffff; valaddr_reg:x3; val_offset:212895*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212895*0 + 3*309*FLEN/8, x4, x1, x2)

inst_70966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500003ffffffff; valaddr_reg:x3; val_offset:212898*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212898*0 + 3*310*FLEN/8, x4, x1, x2)

inst_70967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500007ffffffff; valaddr_reg:x3; val_offset:212901*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212901*0 + 3*311*FLEN/8, x4, x1, x2)

inst_70968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50000fffffffff; valaddr_reg:x3; val_offset:212904*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212904*0 + 3*312*FLEN/8, x4, x1, x2)

inst_70969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50001fffffffff; valaddr_reg:x3; val_offset:212907*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212907*0 + 3*313*FLEN/8, x4, x1, x2)

inst_70970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50003fffffffff; valaddr_reg:x3; val_offset:212910*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212910*0 + 3*314*FLEN/8, x4, x1, x2)

inst_70971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50007fffffffff; valaddr_reg:x3; val_offset:212913*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212913*0 + 3*315*FLEN/8, x4, x1, x2)

inst_70972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5000ffffffffff; valaddr_reg:x3; val_offset:212916*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212916*0 + 3*316*FLEN/8, x4, x1, x2)

inst_70973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5001ffffffffff; valaddr_reg:x3; val_offset:212919*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212919*0 + 3*317*FLEN/8, x4, x1, x2)

inst_70974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5003ffffffffff; valaddr_reg:x3; val_offset:212922*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212922*0 + 3*318*FLEN/8, x4, x1, x2)

inst_70975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5007ffffffffff; valaddr_reg:x3; val_offset:212925*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212925*0 + 3*319*FLEN/8, x4, x1, x2)

inst_70976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c500fffffffffff; valaddr_reg:x3; val_offset:212928*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212928*0 + 3*320*FLEN/8, x4, x1, x2)

inst_70977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c501fffffffffff; valaddr_reg:x3; val_offset:212931*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212931*0 + 3*321*FLEN/8, x4, x1, x2)

inst_70978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c503fffffffffff; valaddr_reg:x3; val_offset:212934*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212934*0 + 3*322*FLEN/8, x4, x1, x2)

inst_70979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c507fffffffffff; valaddr_reg:x3; val_offset:212937*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212937*0 + 3*323*FLEN/8, x4, x1, x2)

inst_70980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c50ffffffffffff; valaddr_reg:x3; val_offset:212940*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212940*0 + 3*324*FLEN/8, x4, x1, x2)

inst_70981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c51ffffffffffff; valaddr_reg:x3; val_offset:212943*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212943*0 + 3*325*FLEN/8, x4, x1, x2)

inst_70982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c53ffffffffffff; valaddr_reg:x3; val_offset:212946*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212946*0 + 3*326*FLEN/8, x4, x1, x2)

inst_70983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c57ffffffffffff; valaddr_reg:x3; val_offset:212949*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212949*0 + 3*327*FLEN/8, x4, x1, x2)

inst_70984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c58000000000000; valaddr_reg:x3; val_offset:212952*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212952*0 + 3*328*FLEN/8, x4, x1, x2)

inst_70985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5c000000000000; valaddr_reg:x3; val_offset:212955*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212955*0 + 3*329*FLEN/8, x4, x1, x2)

inst_70986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5e000000000000; valaddr_reg:x3; val_offset:212958*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212958*0 + 3*330*FLEN/8, x4, x1, x2)

inst_70987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5f000000000000; valaddr_reg:x3; val_offset:212961*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212961*0 + 3*331*FLEN/8, x4, x1, x2)

inst_70988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5f800000000000; valaddr_reg:x3; val_offset:212964*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212964*0 + 3*332*FLEN/8, x4, x1, x2)

inst_70989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fc00000000000; valaddr_reg:x3; val_offset:212967*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212967*0 + 3*333*FLEN/8, x4, x1, x2)

inst_70990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fe00000000000; valaddr_reg:x3; val_offset:212970*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212970*0 + 3*334*FLEN/8, x4, x1, x2)

inst_70991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ff00000000000; valaddr_reg:x3; val_offset:212973*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212973*0 + 3*335*FLEN/8, x4, x1, x2)

inst_70992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ff80000000000; valaddr_reg:x3; val_offset:212976*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212976*0 + 3*336*FLEN/8, x4, x1, x2)

inst_70993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffc0000000000; valaddr_reg:x3; val_offset:212979*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212979*0 + 3*337*FLEN/8, x4, x1, x2)

inst_70994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffe0000000000; valaddr_reg:x3; val_offset:212982*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212982*0 + 3*338*FLEN/8, x4, x1, x2)

inst_70995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fff0000000000; valaddr_reg:x3; val_offset:212985*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212985*0 + 3*339*FLEN/8, x4, x1, x2)

inst_70996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fff8000000000; valaddr_reg:x3; val_offset:212988*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212988*0 + 3*340*FLEN/8, x4, x1, x2)

inst_70997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffc000000000; valaddr_reg:x3; val_offset:212991*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212991*0 + 3*341*FLEN/8, x4, x1, x2)

inst_70998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffe000000000; valaddr_reg:x3; val_offset:212994*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212994*0 + 3*342*FLEN/8, x4, x1, x2)

inst_70999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffff000000000; valaddr_reg:x3; val_offset:212997*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212997*0 + 3*343*FLEN/8, x4, x1, x2)

inst_71000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffff800000000; valaddr_reg:x3; val_offset:213000*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213000*0 + 3*344*FLEN/8, x4, x1, x2)

inst_71001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffc00000000; valaddr_reg:x3; val_offset:213003*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213003*0 + 3*345*FLEN/8, x4, x1, x2)

inst_71002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffe00000000; valaddr_reg:x3; val_offset:213006*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213006*0 + 3*346*FLEN/8, x4, x1, x2)

inst_71003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffff00000000; valaddr_reg:x3; val_offset:213009*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213009*0 + 3*347*FLEN/8, x4, x1, x2)

inst_71004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffff80000000; valaddr_reg:x3; val_offset:213012*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213012*0 + 3*348*FLEN/8, x4, x1, x2)

inst_71005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffc0000000; valaddr_reg:x3; val_offset:213015*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213015*0 + 3*349*FLEN/8, x4, x1, x2)

inst_71006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffe0000000; valaddr_reg:x3; val_offset:213018*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213018*0 + 3*350*FLEN/8, x4, x1, x2)

inst_71007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffff0000000; valaddr_reg:x3; val_offset:213021*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213021*0 + 3*351*FLEN/8, x4, x1, x2)

inst_71008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffff8000000; valaddr_reg:x3; val_offset:213024*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213024*0 + 3*352*FLEN/8, x4, x1, x2)

inst_71009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffc000000; valaddr_reg:x3; val_offset:213027*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213027*0 + 3*353*FLEN/8, x4, x1, x2)

inst_71010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffe000000; valaddr_reg:x3; val_offset:213030*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213030*0 + 3*354*FLEN/8, x4, x1, x2)

inst_71011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffff000000; valaddr_reg:x3; val_offset:213033*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213033*0 + 3*355*FLEN/8, x4, x1, x2)

inst_71012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffff800000; valaddr_reg:x3; val_offset:213036*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213036*0 + 3*356*FLEN/8, x4, x1, x2)

inst_71013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffc00000; valaddr_reg:x3; val_offset:213039*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213039*0 + 3*357*FLEN/8, x4, x1, x2)

inst_71014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffe00000; valaddr_reg:x3; val_offset:213042*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213042*0 + 3*358*FLEN/8, x4, x1, x2)

inst_71015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffff00000; valaddr_reg:x3; val_offset:213045*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213045*0 + 3*359*FLEN/8, x4, x1, x2)

inst_71016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffff80000; valaddr_reg:x3; val_offset:213048*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213048*0 + 3*360*FLEN/8, x4, x1, x2)

inst_71017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffc0000; valaddr_reg:x3; val_offset:213051*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213051*0 + 3*361*FLEN/8, x4, x1, x2)

inst_71018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffe0000; valaddr_reg:x3; val_offset:213054*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213054*0 + 3*362*FLEN/8, x4, x1, x2)

inst_71019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffff0000; valaddr_reg:x3; val_offset:213057*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213057*0 + 3*363*FLEN/8, x4, x1, x2)

inst_71020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffff8000; valaddr_reg:x3; val_offset:213060*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213060*0 + 3*364*FLEN/8, x4, x1, x2)

inst_71021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffc000; valaddr_reg:x3; val_offset:213063*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213063*0 + 3*365*FLEN/8, x4, x1, x2)

inst_71022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffe000; valaddr_reg:x3; val_offset:213066*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213066*0 + 3*366*FLEN/8, x4, x1, x2)

inst_71023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffff000; valaddr_reg:x3; val_offset:213069*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213069*0 + 3*367*FLEN/8, x4, x1, x2)

inst_71024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffff800; valaddr_reg:x3; val_offset:213072*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213072*0 + 3*368*FLEN/8, x4, x1, x2)

inst_71025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffc00; valaddr_reg:x3; val_offset:213075*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213075*0 + 3*369*FLEN/8, x4, x1, x2)

inst_71026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffe00; valaddr_reg:x3; val_offset:213078*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213078*0 + 3*370*FLEN/8, x4, x1, x2)

inst_71027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffff00; valaddr_reg:x3; val_offset:213081*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213081*0 + 3*371*FLEN/8, x4, x1, x2)

inst_71028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffff80; valaddr_reg:x3; val_offset:213084*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213084*0 + 3*372*FLEN/8, x4, x1, x2)

inst_71029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffffc0; valaddr_reg:x3; val_offset:213087*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213087*0 + 3*373*FLEN/8, x4, x1, x2)

inst_71030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffffe0; valaddr_reg:x3; val_offset:213090*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213090*0 + 3*374*FLEN/8, x4, x1, x2)

inst_71031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffff0; valaddr_reg:x3; val_offset:213093*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213093*0 + 3*375*FLEN/8, x4, x1, x2)

inst_71032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffff8; valaddr_reg:x3; val_offset:213096*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213096*0 + 3*376*FLEN/8, x4, x1, x2)

inst_71033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffffc; valaddr_reg:x3; val_offset:213099*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213099*0 + 3*377*FLEN/8, x4, x1, x2)

inst_71034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5ffffffffffffe; valaddr_reg:x3; val_offset:213102*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213102*0 + 3*378*FLEN/8, x4, x1, x2)

inst_71035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3c5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3c5fffffffffffff; valaddr_reg:x3; val_offset:213105*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213105*0 + 3*379*FLEN/8, x4, x1, x2)

inst_71036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:213108*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213108*0 + 3*380*FLEN/8, x4, x1, x2)

inst_71037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:213111*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213111*0 + 3*381*FLEN/8, x4, x1, x2)

inst_71038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:213114*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213114*0 + 3*382*FLEN/8, x4, x1, x2)

inst_71039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:213117*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213117*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_71040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:213120*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213120*0 + 3*384*FLEN/8, x4, x1, x2)

inst_71041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:213123*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213123*0 + 3*385*FLEN/8, x4, x1, x2)

inst_71042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:213126*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213126*0 + 3*386*FLEN/8, x4, x1, x2)

inst_71043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:213129*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213129*0 + 3*387*FLEN/8, x4, x1, x2)

inst_71044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:213132*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213132*0 + 3*388*FLEN/8, x4, x1, x2)

inst_71045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:213135*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213135*0 + 3*389*FLEN/8, x4, x1, x2)

inst_71046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:213138*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213138*0 + 3*390*FLEN/8, x4, x1, x2)

inst_71047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:213141*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213141*0 + 3*391*FLEN/8, x4, x1, x2)

inst_71048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:213144*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213144*0 + 3*392*FLEN/8, x4, x1, x2)

inst_71049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:213147*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213147*0 + 3*393*FLEN/8, x4, x1, x2)

inst_71050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:213150*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213150*0 + 3*394*FLEN/8, x4, x1, x2)

inst_71051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:213153*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213153*0 + 3*395*FLEN/8, x4, x1, x2)

inst_71052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:213156*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213156*0 + 3*396*FLEN/8, x4, x1, x2)

inst_71053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:213159*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213159*0 + 3*397*FLEN/8, x4, x1, x2)

inst_71054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:213162*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213162*0 + 3*398*FLEN/8, x4, x1, x2)

inst_71055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:213165*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213165*0 + 3*399*FLEN/8, x4, x1, x2)

inst_71056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:213168*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213168*0 + 3*400*FLEN/8, x4, x1, x2)

inst_71057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7ca0e7823ab0c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa585b5334d3411; op2val:0x2037ca0e7823ab0c;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:213171*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213171*0 + 3*401*FLEN/8, x4, x1, x2)

inst_71058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:213174*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213174*0 + 3*402*FLEN/8, x4, x1, x2)

inst_71059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:213177*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213177*0 + 3*403*FLEN/8, x4, x1, x2)

inst_71060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:213180*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213180*0 + 3*404*FLEN/8, x4, x1, x2)

inst_71061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:213183*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213183*0 + 3*405*FLEN/8, x4, x1, x2)

inst_71062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:213186*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213186*0 + 3*406*FLEN/8, x4, x1, x2)

inst_71063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:213189*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213189*0 + 3*407*FLEN/8, x4, x1, x2)

inst_71064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:213192*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213192*0 + 3*408*FLEN/8, x4, x1, x2)

inst_71065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:213195*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213195*0 + 3*409*FLEN/8, x4, x1, x2)

inst_71066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:213198*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213198*0 + 3*410*FLEN/8, x4, x1, x2)

inst_71067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:213201*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213201*0 + 3*411*FLEN/8, x4, x1, x2)

inst_71068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:213204*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213204*0 + 3*412*FLEN/8, x4, x1, x2)

inst_71069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:213207*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213207*0 + 3*413*FLEN/8, x4, x1, x2)

inst_71070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:213210*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213210*0 + 3*414*FLEN/8, x4, x1, x2)

inst_71071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:213213*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213213*0 + 3*415*FLEN/8, x4, x1, x2)

inst_71072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:213216*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213216*0 + 3*416*FLEN/8, x4, x1, x2)

inst_71073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:213219*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213219*0 + 3*417*FLEN/8, x4, x1, x2)

inst_71074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:213222*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213222*0 + 3*418*FLEN/8, x4, x1, x2)

inst_71075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:213225*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213225*0 + 3*419*FLEN/8, x4, x1, x2)

inst_71076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:213228*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213228*0 + 3*420*FLEN/8, x4, x1, x2)

inst_71077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:213231*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213231*0 + 3*421*FLEN/8, x4, x1, x2)

inst_71078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:213234*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213234*0 + 3*422*FLEN/8, x4, x1, x2)

inst_71079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:213237*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213237*0 + 3*423*FLEN/8, x4, x1, x2)

inst_71080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000000000; valaddr_reg:x3; val_offset:213240*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213240*0 + 3*424*FLEN/8, x4, x1, x2)

inst_71081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000000001; valaddr_reg:x3; val_offset:213243*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213243*0 + 3*425*FLEN/8, x4, x1, x2)

inst_71082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000000003; valaddr_reg:x3; val_offset:213246*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213246*0 + 3*426*FLEN/8, x4, x1, x2)

inst_71083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000000007; valaddr_reg:x3; val_offset:213249*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213249*0 + 3*427*FLEN/8, x4, x1, x2)

inst_71084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000000000f; valaddr_reg:x3; val_offset:213252*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213252*0 + 3*428*FLEN/8, x4, x1, x2)

inst_71085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000000001f; valaddr_reg:x3; val_offset:213255*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213255*0 + 3*429*FLEN/8, x4, x1, x2)

inst_71086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000000003f; valaddr_reg:x3; val_offset:213258*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213258*0 + 3*430*FLEN/8, x4, x1, x2)

inst_71087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000000007f; valaddr_reg:x3; val_offset:213261*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213261*0 + 3*431*FLEN/8, x4, x1, x2)

inst_71088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000000000ff; valaddr_reg:x3; val_offset:213264*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213264*0 + 3*432*FLEN/8, x4, x1, x2)

inst_71089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000000001ff; valaddr_reg:x3; val_offset:213267*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213267*0 + 3*433*FLEN/8, x4, x1, x2)

inst_71090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000000003ff; valaddr_reg:x3; val_offset:213270*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213270*0 + 3*434*FLEN/8, x4, x1, x2)

inst_71091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000000007ff; valaddr_reg:x3; val_offset:213273*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213273*0 + 3*435*FLEN/8, x4, x1, x2)

inst_71092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000000fff; valaddr_reg:x3; val_offset:213276*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213276*0 + 3*436*FLEN/8, x4, x1, x2)

inst_71093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000001fff; valaddr_reg:x3; val_offset:213279*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213279*0 + 3*437*FLEN/8, x4, x1, x2)

inst_71094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000003fff; valaddr_reg:x3; val_offset:213282*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213282*0 + 3*438*FLEN/8, x4, x1, x2)

inst_71095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000007fff; valaddr_reg:x3; val_offset:213285*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213285*0 + 3*439*FLEN/8, x4, x1, x2)

inst_71096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000000ffff; valaddr_reg:x3; val_offset:213288*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213288*0 + 3*440*FLEN/8, x4, x1, x2)

inst_71097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000001ffff; valaddr_reg:x3; val_offset:213291*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213291*0 + 3*441*FLEN/8, x4, x1, x2)

inst_71098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000003ffff; valaddr_reg:x3; val_offset:213294*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213294*0 + 3*442*FLEN/8, x4, x1, x2)

inst_71099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000007ffff; valaddr_reg:x3; val_offset:213297*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213297*0 + 3*443*FLEN/8, x4, x1, x2)

inst_71100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000000fffff; valaddr_reg:x3; val_offset:213300*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213300*0 + 3*444*FLEN/8, x4, x1, x2)

inst_71101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000001fffff; valaddr_reg:x3; val_offset:213303*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213303*0 + 3*445*FLEN/8, x4, x1, x2)

inst_71102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000003fffff; valaddr_reg:x3; val_offset:213306*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213306*0 + 3*446*FLEN/8, x4, x1, x2)

inst_71103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000007fffff; valaddr_reg:x3; val_offset:213309*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213309*0 + 3*447*FLEN/8, x4, x1, x2)

inst_71104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000000ffffff; valaddr_reg:x3; val_offset:213312*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213312*0 + 3*448*FLEN/8, x4, x1, x2)

inst_71105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000001ffffff; valaddr_reg:x3; val_offset:213315*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213315*0 + 3*449*FLEN/8, x4, x1, x2)

inst_71106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000003ffffff; valaddr_reg:x3; val_offset:213318*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213318*0 + 3*450*FLEN/8, x4, x1, x2)

inst_71107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000007ffffff; valaddr_reg:x3; val_offset:213321*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213321*0 + 3*451*FLEN/8, x4, x1, x2)

inst_71108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000000fffffff; valaddr_reg:x3; val_offset:213324*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213324*0 + 3*452*FLEN/8, x4, x1, x2)

inst_71109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000001fffffff; valaddr_reg:x3; val_offset:213327*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213327*0 + 3*453*FLEN/8, x4, x1, x2)

inst_71110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000003fffffff; valaddr_reg:x3; val_offset:213330*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213330*0 + 3*454*FLEN/8, x4, x1, x2)

inst_71111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000007fffffff; valaddr_reg:x3; val_offset:213333*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213333*0 + 3*455*FLEN/8, x4, x1, x2)

inst_71112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900000ffffffff; valaddr_reg:x3; val_offset:213336*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213336*0 + 3*456*FLEN/8, x4, x1, x2)

inst_71113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900001ffffffff; valaddr_reg:x3; val_offset:213339*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213339*0 + 3*457*FLEN/8, x4, x1, x2)

inst_71114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900003ffffffff; valaddr_reg:x3; val_offset:213342*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213342*0 + 3*458*FLEN/8, x4, x1, x2)

inst_71115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900007ffffffff; valaddr_reg:x3; val_offset:213345*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213345*0 + 3*459*FLEN/8, x4, x1, x2)

inst_71116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190000fffffffff; valaddr_reg:x3; val_offset:213348*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213348*0 + 3*460*FLEN/8, x4, x1, x2)

inst_71117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190001fffffffff; valaddr_reg:x3; val_offset:213351*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213351*0 + 3*461*FLEN/8, x4, x1, x2)

inst_71118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190003fffffffff; valaddr_reg:x3; val_offset:213354*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213354*0 + 3*462*FLEN/8, x4, x1, x2)

inst_71119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190007fffffffff; valaddr_reg:x3; val_offset:213357*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213357*0 + 3*463*FLEN/8, x4, x1, x2)

inst_71120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819000ffffffffff; valaddr_reg:x3; val_offset:213360*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213360*0 + 3*464*FLEN/8, x4, x1, x2)

inst_71121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819001ffffffffff; valaddr_reg:x3; val_offset:213363*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213363*0 + 3*465*FLEN/8, x4, x1, x2)

inst_71122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819003ffffffffff; valaddr_reg:x3; val_offset:213366*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213366*0 + 3*466*FLEN/8, x4, x1, x2)

inst_71123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819007ffffffffff; valaddr_reg:x3; val_offset:213369*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213369*0 + 3*467*FLEN/8, x4, x1, x2)

inst_71124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81900fffffffffff; valaddr_reg:x3; val_offset:213372*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213372*0 + 3*468*FLEN/8, x4, x1, x2)

inst_71125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81901fffffffffff; valaddr_reg:x3; val_offset:213375*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213375*0 + 3*469*FLEN/8, x4, x1, x2)

inst_71126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81903fffffffffff; valaddr_reg:x3; val_offset:213378*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213378*0 + 3*470*FLEN/8, x4, x1, x2)

inst_71127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x81907fffffffffff; valaddr_reg:x3; val_offset:213381*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213381*0 + 3*471*FLEN/8, x4, x1, x2)

inst_71128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8190ffffffffffff; valaddr_reg:x3; val_offset:213384*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213384*0 + 3*472*FLEN/8, x4, x1, x2)

inst_71129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8191ffffffffffff; valaddr_reg:x3; val_offset:213387*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213387*0 + 3*473*FLEN/8, x4, x1, x2)

inst_71130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8193ffffffffffff; valaddr_reg:x3; val_offset:213390*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213390*0 + 3*474*FLEN/8, x4, x1, x2)

inst_71131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8197ffffffffffff; valaddr_reg:x3; val_offset:213393*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213393*0 + 3*475*FLEN/8, x4, x1, x2)

inst_71132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x8198000000000000; valaddr_reg:x3; val_offset:213396*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213396*0 + 3*476*FLEN/8, x4, x1, x2)

inst_71133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819c000000000000; valaddr_reg:x3; val_offset:213399*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213399*0 + 3*477*FLEN/8, x4, x1, x2)

inst_71134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819e000000000000; valaddr_reg:x3; val_offset:213402*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213402*0 + 3*478*FLEN/8, x4, x1, x2)

inst_71135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819f000000000000; valaddr_reg:x3; val_offset:213405*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213405*0 + 3*479*FLEN/8, x4, x1, x2)

inst_71136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819f800000000000; valaddr_reg:x3; val_offset:213408*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213408*0 + 3*480*FLEN/8, x4, x1, x2)

inst_71137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fc00000000000; valaddr_reg:x3; val_offset:213411*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213411*0 + 3*481*FLEN/8, x4, x1, x2)

inst_71138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fe00000000000; valaddr_reg:x3; val_offset:213414*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213414*0 + 3*482*FLEN/8, x4, x1, x2)

inst_71139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ff00000000000; valaddr_reg:x3; val_offset:213417*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213417*0 + 3*483*FLEN/8, x4, x1, x2)

inst_71140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ff80000000000; valaddr_reg:x3; val_offset:213420*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213420*0 + 3*484*FLEN/8, x4, x1, x2)

inst_71141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffc0000000000; valaddr_reg:x3; val_offset:213423*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213423*0 + 3*485*FLEN/8, x4, x1, x2)

inst_71142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffe0000000000; valaddr_reg:x3; val_offset:213426*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213426*0 + 3*486*FLEN/8, x4, x1, x2)

inst_71143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fff0000000000; valaddr_reg:x3; val_offset:213429*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213429*0 + 3*487*FLEN/8, x4, x1, x2)

inst_71144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fff8000000000; valaddr_reg:x3; val_offset:213432*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213432*0 + 3*488*FLEN/8, x4, x1, x2)

inst_71145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffc000000000; valaddr_reg:x3; val_offset:213435*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213435*0 + 3*489*FLEN/8, x4, x1, x2)

inst_71146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffe000000000; valaddr_reg:x3; val_offset:213438*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213438*0 + 3*490*FLEN/8, x4, x1, x2)

inst_71147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffff000000000; valaddr_reg:x3; val_offset:213441*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213441*0 + 3*491*FLEN/8, x4, x1, x2)

inst_71148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffff800000000; valaddr_reg:x3; val_offset:213444*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213444*0 + 3*492*FLEN/8, x4, x1, x2)

inst_71149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffc00000000; valaddr_reg:x3; val_offset:213447*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213447*0 + 3*493*FLEN/8, x4, x1, x2)

inst_71150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffe00000000; valaddr_reg:x3; val_offset:213450*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213450*0 + 3*494*FLEN/8, x4, x1, x2)

inst_71151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffff00000000; valaddr_reg:x3; val_offset:213453*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213453*0 + 3*495*FLEN/8, x4, x1, x2)

inst_71152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffff80000000; valaddr_reg:x3; val_offset:213456*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213456*0 + 3*496*FLEN/8, x4, x1, x2)

inst_71153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffc0000000; valaddr_reg:x3; val_offset:213459*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213459*0 + 3*497*FLEN/8, x4, x1, x2)

inst_71154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffe0000000; valaddr_reg:x3; val_offset:213462*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213462*0 + 3*498*FLEN/8, x4, x1, x2)

inst_71155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffff0000000; valaddr_reg:x3; val_offset:213465*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213465*0 + 3*499*FLEN/8, x4, x1, x2)

inst_71156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffff8000000; valaddr_reg:x3; val_offset:213468*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213468*0 + 3*500*FLEN/8, x4, x1, x2)

inst_71157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffc000000; valaddr_reg:x3; val_offset:213471*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213471*0 + 3*501*FLEN/8, x4, x1, x2)

inst_71158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffe000000; valaddr_reg:x3; val_offset:213474*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213474*0 + 3*502*FLEN/8, x4, x1, x2)

inst_71159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffff000000; valaddr_reg:x3; val_offset:213477*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213477*0 + 3*503*FLEN/8, x4, x1, x2)

inst_71160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffff800000; valaddr_reg:x3; val_offset:213480*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213480*0 + 3*504*FLEN/8, x4, x1, x2)

inst_71161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffc00000; valaddr_reg:x3; val_offset:213483*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213483*0 + 3*505*FLEN/8, x4, x1, x2)

inst_71162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffe00000; valaddr_reg:x3; val_offset:213486*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213486*0 + 3*506*FLEN/8, x4, x1, x2)

inst_71163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffff00000; valaddr_reg:x3; val_offset:213489*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213489*0 + 3*507*FLEN/8, x4, x1, x2)

inst_71164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffff80000; valaddr_reg:x3; val_offset:213492*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213492*0 + 3*508*FLEN/8, x4, x1, x2)

inst_71165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffc0000; valaddr_reg:x3; val_offset:213495*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213495*0 + 3*509*FLEN/8, x4, x1, x2)

inst_71166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffe0000; valaddr_reg:x3; val_offset:213498*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213498*0 + 3*510*FLEN/8, x4, x1, x2)

inst_71167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffff0000; valaddr_reg:x3; val_offset:213501*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213501*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_71168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffff8000; valaddr_reg:x3; val_offset:213504*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213504*0 + 3*512*FLEN/8, x4, x1, x2)

inst_71169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffc000; valaddr_reg:x3; val_offset:213507*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213507*0 + 3*513*FLEN/8, x4, x1, x2)

inst_71170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffe000; valaddr_reg:x3; val_offset:213510*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213510*0 + 3*514*FLEN/8, x4, x1, x2)

inst_71171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffff000; valaddr_reg:x3; val_offset:213513*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213513*0 + 3*515*FLEN/8, x4, x1, x2)

inst_71172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffff800; valaddr_reg:x3; val_offset:213516*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213516*0 + 3*516*FLEN/8, x4, x1, x2)

inst_71173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffc00; valaddr_reg:x3; val_offset:213519*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213519*0 + 3*517*FLEN/8, x4, x1, x2)

inst_71174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffe00; valaddr_reg:x3; val_offset:213522*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213522*0 + 3*518*FLEN/8, x4, x1, x2)

inst_71175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffff00; valaddr_reg:x3; val_offset:213525*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213525*0 + 3*519*FLEN/8, x4, x1, x2)

inst_71176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffff80; valaddr_reg:x3; val_offset:213528*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213528*0 + 3*520*FLEN/8, x4, x1, x2)

inst_71177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffffc0; valaddr_reg:x3; val_offset:213531*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213531*0 + 3*521*FLEN/8, x4, x1, x2)

inst_71178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffffe0; valaddr_reg:x3; val_offset:213534*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213534*0 + 3*522*FLEN/8, x4, x1, x2)

inst_71179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffff0; valaddr_reg:x3; val_offset:213537*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213537*0 + 3*523*FLEN/8, x4, x1, x2)

inst_71180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffff8; valaddr_reg:x3; val_offset:213540*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213540*0 + 3*524*FLEN/8, x4, x1, x2)

inst_71181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffffc; valaddr_reg:x3; val_offset:213543*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213543*0 + 3*525*FLEN/8, x4, x1, x2)

inst_71182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819ffffffffffffe; valaddr_reg:x3; val_offset:213546*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213546*0 + 3*526*FLEN/8, x4, x1, x2)

inst_71183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58a8980b9c275 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa58a8980b9c275; op2val:0x8000;
op3val:0x819fffffffffffff; valaddr_reg:x3; val_offset:213549*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213549*0 + 3*527*FLEN/8, x4, x1, x2)

inst_71184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:213552*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213552*0 + 3*528*FLEN/8, x4, x1, x2)

inst_71185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:213555*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213555*0 + 3*529*FLEN/8, x4, x1, x2)

inst_71186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:213558*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213558*0 + 3*530*FLEN/8, x4, x1, x2)

inst_71187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:213561*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213561*0 + 3*531*FLEN/8, x4, x1, x2)

inst_71188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:213564*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213564*0 + 3*532*FLEN/8, x4, x1, x2)

inst_71189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:213567*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213567*0 + 3*533*FLEN/8, x4, x1, x2)

inst_71190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:213570*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213570*0 + 3*534*FLEN/8, x4, x1, x2)

inst_71191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:213573*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213573*0 + 3*535*FLEN/8, x4, x1, x2)

inst_71192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:213576*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213576*0 + 3*536*FLEN/8, x4, x1, x2)

inst_71193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:213579*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213579*0 + 3*537*FLEN/8, x4, x1, x2)

inst_71194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:213582*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213582*0 + 3*538*FLEN/8, x4, x1, x2)

inst_71195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:213585*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213585*0 + 3*539*FLEN/8, x4, x1, x2)

inst_71196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:213588*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213588*0 + 3*540*FLEN/8, x4, x1, x2)

inst_71197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:213591*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213591*0 + 3*541*FLEN/8, x4, x1, x2)

inst_71198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:213594*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213594*0 + 3*542*FLEN/8, x4, x1, x2)

inst_71199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:213597*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213597*0 + 3*543*FLEN/8, x4, x1, x2)

inst_71200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:213600*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213600*0 + 3*544*FLEN/8, x4, x1, x2)

inst_71201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:213603*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213603*0 + 3*545*FLEN/8, x4, x1, x2)

inst_71202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:213606*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213606*0 + 3*546*FLEN/8, x4, x1, x2)

inst_71203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:213609*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213609*0 + 3*547*FLEN/8, x4, x1, x2)

inst_71204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:213612*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213612*0 + 3*548*FLEN/8, x4, x1, x2)

inst_71205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:213615*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213615*0 + 3*549*FLEN/8, x4, x1, x2)

inst_71206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:213618*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213618*0 + 3*550*FLEN/8, x4, x1, x2)

inst_71207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:213621*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213621*0 + 3*551*FLEN/8, x4, x1, x2)

inst_71208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:213624*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213624*0 + 3*552*FLEN/8, x4, x1, x2)

inst_71209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:213627*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213627*0 + 3*553*FLEN/8, x4, x1, x2)

inst_71210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:213630*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213630*0 + 3*554*FLEN/8, x4, x1, x2)

inst_71211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:213633*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213633*0 + 3*555*FLEN/8, x4, x1, x2)

inst_71212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:213636*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213636*0 + 3*556*FLEN/8, x4, x1, x2)

inst_71213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:213639*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213639*0 + 3*557*FLEN/8, x4, x1, x2)

inst_71214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:213642*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213642*0 + 3*558*FLEN/8, x4, x1, x2)

inst_71215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:213645*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213645*0 + 3*559*FLEN/8, x4, x1, x2)

inst_71216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:213648*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213648*0 + 3*560*FLEN/8, x4, x1, x2)

inst_71217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:213651*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213651*0 + 3*561*FLEN/8, x4, x1, x2)

inst_71218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:213654*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213654*0 + 3*562*FLEN/8, x4, x1, x2)

inst_71219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:213657*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213657*0 + 3*563*FLEN/8, x4, x1, x2)

inst_71220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:213660*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213660*0 + 3*564*FLEN/8, x4, x1, x2)

inst_71221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:213663*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213663*0 + 3*565*FLEN/8, x4, x1, x2)

inst_71222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:213666*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213666*0 + 3*566*FLEN/8, x4, x1, x2)

inst_71223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:213669*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213669*0 + 3*567*FLEN/8, x4, x1, x2)

inst_71224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:213672*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213672*0 + 3*568*FLEN/8, x4, x1, x2)

inst_71225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:213675*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213675*0 + 3*569*FLEN/8, x4, x1, x2)

inst_71226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:213678*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213678*0 + 3*570*FLEN/8, x4, x1, x2)

inst_71227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:213681*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213681*0 + 3*571*FLEN/8, x4, x1, x2)

inst_71228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:213684*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213684*0 + 3*572*FLEN/8, x4, x1, x2)

inst_71229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:213687*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213687*0 + 3*573*FLEN/8, x4, x1, x2)

inst_71230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:213690*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213690*0 + 3*574*FLEN/8, x4, x1, x2)

inst_71231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:213693*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213693*0 + 3*575*FLEN/8, x4, x1, x2)

inst_71232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:213696*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213696*0 + 3*576*FLEN/8, x4, x1, x2)

inst_71233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:213699*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213699*0 + 3*577*FLEN/8, x4, x1, x2)

inst_71234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:213702*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213702*0 + 3*578*FLEN/8, x4, x1, x2)

inst_71235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:213705*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213705*0 + 3*579*FLEN/8, x4, x1, x2)

inst_71236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:213708*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213708*0 + 3*580*FLEN/8, x4, x1, x2)

inst_71237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:213711*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213711*0 + 3*581*FLEN/8, x4, x1, x2)

inst_71238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:213714*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213714*0 + 3*582*FLEN/8, x4, x1, x2)

inst_71239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:213717*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213717*0 + 3*583*FLEN/8, x4, x1, x2)

inst_71240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:213720*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213720*0 + 3*584*FLEN/8, x4, x1, x2)

inst_71241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:213723*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213723*0 + 3*585*FLEN/8, x4, x1, x2)

inst_71242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:213726*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213726*0 + 3*586*FLEN/8, x4, x1, x2)

inst_71243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:213729*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213729*0 + 3*587*FLEN/8, x4, x1, x2)

inst_71244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:213732*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213732*0 + 3*588*FLEN/8, x4, x1, x2)

inst_71245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:213735*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213735*0 + 3*589*FLEN/8, x4, x1, x2)

inst_71246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:213738*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213738*0 + 3*590*FLEN/8, x4, x1, x2)

inst_71247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:213741*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213741*0 + 3*591*FLEN/8, x4, x1, x2)

inst_71248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:213744*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213744*0 + 3*592*FLEN/8, x4, x1, x2)

inst_71249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:213747*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213747*0 + 3*593*FLEN/8, x4, x1, x2)

inst_71250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:213750*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213750*0 + 3*594*FLEN/8, x4, x1, x2)

inst_71251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:213753*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213753*0 + 3*595*FLEN/8, x4, x1, x2)

inst_71252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:213756*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213756*0 + 3*596*FLEN/8, x4, x1, x2)

inst_71253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:213759*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213759*0 + 3*597*FLEN/8, x4, x1, x2)

inst_71254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:213762*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213762*0 + 3*598*FLEN/8, x4, x1, x2)

inst_71255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:213765*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213765*0 + 3*599*FLEN/8, x4, x1, x2)

inst_71256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:213768*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213768*0 + 3*600*FLEN/8, x4, x1, x2)

inst_71257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:213771*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213771*0 + 3*601*FLEN/8, x4, x1, x2)

inst_71258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:213774*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213774*0 + 3*602*FLEN/8, x4, x1, x2)

inst_71259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:213777*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213777*0 + 3*603*FLEN/8, x4, x1, x2)

inst_71260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:213780*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213780*0 + 3*604*FLEN/8, x4, x1, x2)

inst_71261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:213783*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213783*0 + 3*605*FLEN/8, x4, x1, x2)

inst_71262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:213786*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213786*0 + 3*606*FLEN/8, x4, x1, x2)

inst_71263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:213789*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213789*0 + 3*607*FLEN/8, x4, x1, x2)

inst_71264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:213792*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213792*0 + 3*608*FLEN/8, x4, x1, x2)

inst_71265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:213795*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213795*0 + 3*609*FLEN/8, x4, x1, x2)

inst_71266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:213798*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213798*0 + 3*610*FLEN/8, x4, x1, x2)

inst_71267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:213801*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213801*0 + 3*611*FLEN/8, x4, x1, x2)

inst_71268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:213804*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213804*0 + 3*612*FLEN/8, x4, x1, x2)

inst_71269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:213807*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213807*0 + 3*613*FLEN/8, x4, x1, x2)

inst_71270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:213810*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213810*0 + 3*614*FLEN/8, x4, x1, x2)

inst_71271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:213813*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213813*0 + 3*615*FLEN/8, x4, x1, x2)

inst_71272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:213816*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213816*0 + 3*616*FLEN/8, x4, x1, x2)

inst_71273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:213819*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213819*0 + 3*617*FLEN/8, x4, x1, x2)

inst_71274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:213822*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213822*0 + 3*618*FLEN/8, x4, x1, x2)

inst_71275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:213825*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213825*0 + 3*619*FLEN/8, x4, x1, x2)

inst_71276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:213828*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213828*0 + 3*620*FLEN/8, x4, x1, x2)

inst_71277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:213831*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213831*0 + 3*621*FLEN/8, x4, x1, x2)

inst_71278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:213834*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213834*0 + 3*622*FLEN/8, x4, x1, x2)

inst_71279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:213837*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213837*0 + 3*623*FLEN/8, x4, x1, x2)

inst_71280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:213840*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213840*0 + 3*624*FLEN/8, x4, x1, x2)

inst_71281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:213843*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213843*0 + 3*625*FLEN/8, x4, x1, x2)

inst_71282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:213846*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213846*0 + 3*626*FLEN/8, x4, x1, x2)

inst_71283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:213849*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213849*0 + 3*627*FLEN/8, x4, x1, x2)

inst_71284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:213852*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213852*0 + 3*628*FLEN/8, x4, x1, x2)

inst_71285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:213855*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213855*0 + 3*629*FLEN/8, x4, x1, x2)

inst_71286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:213858*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213858*0 + 3*630*FLEN/8, x4, x1, x2)

inst_71287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:213861*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213861*0 + 3*631*FLEN/8, x4, x1, x2)

inst_71288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:213864*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213864*0 + 3*632*FLEN/8, x4, x1, x2)

inst_71289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:213867*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213867*0 + 3*633*FLEN/8, x4, x1, x2)

inst_71290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:213870*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213870*0 + 3*634*FLEN/8, x4, x1, x2)

inst_71291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:213873*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213873*0 + 3*635*FLEN/8, x4, x1, x2)

inst_71292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:213876*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213876*0 + 3*636*FLEN/8, x4, x1, x2)

inst_71293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:213879*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213879*0 + 3*637*FLEN/8, x4, x1, x2)

inst_71294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:213882*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213882*0 + 3*638*FLEN/8, x4, x1, x2)

inst_71295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:213885*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213885*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_71296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:213888*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213888*0 + 3*640*FLEN/8, x4, x1, x2)

inst_71297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:213891*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213891*0 + 3*641*FLEN/8, x4, x1, x2)

inst_71298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:213894*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213894*0 + 3*642*FLEN/8, x4, x1, x2)

inst_71299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:213897*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213897*0 + 3*643*FLEN/8, x4, x1, x2)

inst_71300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:213900*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213900*0 + 3*644*FLEN/8, x4, x1, x2)

inst_71301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:213903*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213903*0 + 3*645*FLEN/8, x4, x1, x2)

inst_71302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:213906*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213906*0 + 3*646*FLEN/8, x4, x1, x2)

inst_71303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:213909*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213909*0 + 3*647*FLEN/8, x4, x1, x2)

inst_71304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:213912*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213912*0 + 3*648*FLEN/8, x4, x1, x2)

inst_71305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:213915*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213915*0 + 3*649*FLEN/8, x4, x1, x2)

inst_71306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:213918*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213918*0 + 3*650*FLEN/8, x4, x1, x2)

inst_71307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:213921*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213921*0 + 3*651*FLEN/8, x4, x1, x2)

inst_71308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:213924*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213924*0 + 3*652*FLEN/8, x4, x1, x2)

inst_71309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa59556723d53e2; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:213927*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213927*0 + 3*653*FLEN/8, x4, x1, x2)

inst_71310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000000000; valaddr_reg:x3; val_offset:213930*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213930*0 + 3*654*FLEN/8, x4, x1, x2)

inst_71311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000000001; valaddr_reg:x3; val_offset:213933*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213933*0 + 3*655*FLEN/8, x4, x1, x2)

inst_71312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000000003; valaddr_reg:x3; val_offset:213936*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213936*0 + 3*656*FLEN/8, x4, x1, x2)

inst_71313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000000007; valaddr_reg:x3; val_offset:213939*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213939*0 + 3*657*FLEN/8, x4, x1, x2)

inst_71314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000000000f; valaddr_reg:x3; val_offset:213942*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213942*0 + 3*658*FLEN/8, x4, x1, x2)

inst_71315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000000001f; valaddr_reg:x3; val_offset:213945*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213945*0 + 3*659*FLEN/8, x4, x1, x2)

inst_71316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000000003f; valaddr_reg:x3; val_offset:213948*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213948*0 + 3*660*FLEN/8, x4, x1, x2)

inst_71317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000000007f; valaddr_reg:x3; val_offset:213951*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213951*0 + 3*661*FLEN/8, x4, x1, x2)

inst_71318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000000000ff; valaddr_reg:x3; val_offset:213954*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213954*0 + 3*662*FLEN/8, x4, x1, x2)

inst_71319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000000001ff; valaddr_reg:x3; val_offset:213957*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213957*0 + 3*663*FLEN/8, x4, x1, x2)

inst_71320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000000003ff; valaddr_reg:x3; val_offset:213960*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213960*0 + 3*664*FLEN/8, x4, x1, x2)

inst_71321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000000007ff; valaddr_reg:x3; val_offset:213963*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213963*0 + 3*665*FLEN/8, x4, x1, x2)

inst_71322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000000fff; valaddr_reg:x3; val_offset:213966*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213966*0 + 3*666*FLEN/8, x4, x1, x2)

inst_71323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000001fff; valaddr_reg:x3; val_offset:213969*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213969*0 + 3*667*FLEN/8, x4, x1, x2)

inst_71324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000003fff; valaddr_reg:x3; val_offset:213972*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213972*0 + 3*668*FLEN/8, x4, x1, x2)

inst_71325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000007fff; valaddr_reg:x3; val_offset:213975*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213975*0 + 3*669*FLEN/8, x4, x1, x2)

inst_71326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000000ffff; valaddr_reg:x3; val_offset:213978*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213978*0 + 3*670*FLEN/8, x4, x1, x2)

inst_71327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000001ffff; valaddr_reg:x3; val_offset:213981*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213981*0 + 3*671*FLEN/8, x4, x1, x2)

inst_71328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000003ffff; valaddr_reg:x3; val_offset:213984*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213984*0 + 3*672*FLEN/8, x4, x1, x2)

inst_71329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000007ffff; valaddr_reg:x3; val_offset:213987*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213987*0 + 3*673*FLEN/8, x4, x1, x2)

inst_71330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000000fffff; valaddr_reg:x3; val_offset:213990*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213990*0 + 3*674*FLEN/8, x4, x1, x2)

inst_71331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000001fffff; valaddr_reg:x3; val_offset:213993*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213993*0 + 3*675*FLEN/8, x4, x1, x2)

inst_71332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000003fffff; valaddr_reg:x3; val_offset:213996*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213996*0 + 3*676*FLEN/8, x4, x1, x2)

inst_71333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000007fffff; valaddr_reg:x3; val_offset:213999*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213999*0 + 3*677*FLEN/8, x4, x1, x2)

inst_71334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000000ffffff; valaddr_reg:x3; val_offset:214002*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214002*0 + 3*678*FLEN/8, x4, x1, x2)

inst_71335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000001ffffff; valaddr_reg:x3; val_offset:214005*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214005*0 + 3*679*FLEN/8, x4, x1, x2)

inst_71336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000003ffffff; valaddr_reg:x3; val_offset:214008*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214008*0 + 3*680*FLEN/8, x4, x1, x2)

inst_71337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000007ffffff; valaddr_reg:x3; val_offset:214011*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214011*0 + 3*681*FLEN/8, x4, x1, x2)

inst_71338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000000fffffff; valaddr_reg:x3; val_offset:214014*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214014*0 + 3*682*FLEN/8, x4, x1, x2)

inst_71339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000001fffffff; valaddr_reg:x3; val_offset:214017*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214017*0 + 3*683*FLEN/8, x4, x1, x2)

inst_71340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000003fffffff; valaddr_reg:x3; val_offset:214020*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214020*0 + 3*684*FLEN/8, x4, x1, x2)

inst_71341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000007fffffff; valaddr_reg:x3; val_offset:214023*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214023*0 + 3*685*FLEN/8, x4, x1, x2)

inst_71342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800000ffffffff; valaddr_reg:x3; val_offset:214026*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214026*0 + 3*686*FLEN/8, x4, x1, x2)

inst_71343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800001ffffffff; valaddr_reg:x3; val_offset:214029*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214029*0 + 3*687*FLEN/8, x4, x1, x2)

inst_71344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800003ffffffff; valaddr_reg:x3; val_offset:214032*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214032*0 + 3*688*FLEN/8, x4, x1, x2)

inst_71345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800007ffffffff; valaddr_reg:x3; val_offset:214035*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214035*0 + 3*689*FLEN/8, x4, x1, x2)

inst_71346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80000fffffffff; valaddr_reg:x3; val_offset:214038*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214038*0 + 3*690*FLEN/8, x4, x1, x2)

inst_71347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80001fffffffff; valaddr_reg:x3; val_offset:214041*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214041*0 + 3*691*FLEN/8, x4, x1, x2)

inst_71348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80003fffffffff; valaddr_reg:x3; val_offset:214044*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214044*0 + 3*692*FLEN/8, x4, x1, x2)

inst_71349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80007fffffffff; valaddr_reg:x3; val_offset:214047*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214047*0 + 3*693*FLEN/8, x4, x1, x2)

inst_71350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8000ffffffffff; valaddr_reg:x3; val_offset:214050*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214050*0 + 3*694*FLEN/8, x4, x1, x2)

inst_71351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8001ffffffffff; valaddr_reg:x3; val_offset:214053*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214053*0 + 3*695*FLEN/8, x4, x1, x2)

inst_71352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8003ffffffffff; valaddr_reg:x3; val_offset:214056*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214056*0 + 3*696*FLEN/8, x4, x1, x2)

inst_71353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8007ffffffffff; valaddr_reg:x3; val_offset:214059*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214059*0 + 3*697*FLEN/8, x4, x1, x2)

inst_71354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc800fffffffffff; valaddr_reg:x3; val_offset:214062*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214062*0 + 3*698*FLEN/8, x4, x1, x2)

inst_71355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc801fffffffffff; valaddr_reg:x3; val_offset:214065*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214065*0 + 3*699*FLEN/8, x4, x1, x2)

inst_71356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc803fffffffffff; valaddr_reg:x3; val_offset:214068*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214068*0 + 3*700*FLEN/8, x4, x1, x2)

inst_71357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc807fffffffffff; valaddr_reg:x3; val_offset:214071*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214071*0 + 3*701*FLEN/8, x4, x1, x2)

inst_71358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc80ffffffffffff; valaddr_reg:x3; val_offset:214074*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214074*0 + 3*702*FLEN/8, x4, x1, x2)

inst_71359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc81ffffffffffff; valaddr_reg:x3; val_offset:214077*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214077*0 + 3*703*FLEN/8, x4, x1, x2)

inst_71360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc83ffffffffffff; valaddr_reg:x3; val_offset:214080*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214080*0 + 3*704*FLEN/8, x4, x1, x2)

inst_71361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc87ffffffffffff; valaddr_reg:x3; val_offset:214083*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214083*0 + 3*705*FLEN/8, x4, x1, x2)

inst_71362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc88000000000000; valaddr_reg:x3; val_offset:214086*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214086*0 + 3*706*FLEN/8, x4, x1, x2)

inst_71363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8c000000000000; valaddr_reg:x3; val_offset:214089*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214089*0 + 3*707*FLEN/8, x4, x1, x2)

inst_71364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8e000000000000; valaddr_reg:x3; val_offset:214092*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214092*0 + 3*708*FLEN/8, x4, x1, x2)

inst_71365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8f000000000000; valaddr_reg:x3; val_offset:214095*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214095*0 + 3*709*FLEN/8, x4, x1, x2)

inst_71366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8f800000000000; valaddr_reg:x3; val_offset:214098*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214098*0 + 3*710*FLEN/8, x4, x1, x2)

inst_71367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fc00000000000; valaddr_reg:x3; val_offset:214101*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214101*0 + 3*711*FLEN/8, x4, x1, x2)

inst_71368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fe00000000000; valaddr_reg:x3; val_offset:214104*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214104*0 + 3*712*FLEN/8, x4, x1, x2)

inst_71369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ff00000000000; valaddr_reg:x3; val_offset:214107*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214107*0 + 3*713*FLEN/8, x4, x1, x2)

inst_71370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ff80000000000; valaddr_reg:x3; val_offset:214110*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214110*0 + 3*714*FLEN/8, x4, x1, x2)

inst_71371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffc0000000000; valaddr_reg:x3; val_offset:214113*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214113*0 + 3*715*FLEN/8, x4, x1, x2)

inst_71372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffe0000000000; valaddr_reg:x3; val_offset:214116*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214116*0 + 3*716*FLEN/8, x4, x1, x2)

inst_71373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fff0000000000; valaddr_reg:x3; val_offset:214119*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214119*0 + 3*717*FLEN/8, x4, x1, x2)

inst_71374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fff8000000000; valaddr_reg:x3; val_offset:214122*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214122*0 + 3*718*FLEN/8, x4, x1, x2)

inst_71375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffc000000000; valaddr_reg:x3; val_offset:214125*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214125*0 + 3*719*FLEN/8, x4, x1, x2)

inst_71376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffe000000000; valaddr_reg:x3; val_offset:214128*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214128*0 + 3*720*FLEN/8, x4, x1, x2)

inst_71377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffff000000000; valaddr_reg:x3; val_offset:214131*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214131*0 + 3*721*FLEN/8, x4, x1, x2)

inst_71378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffff800000000; valaddr_reg:x3; val_offset:214134*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214134*0 + 3*722*FLEN/8, x4, x1, x2)

inst_71379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffc00000000; valaddr_reg:x3; val_offset:214137*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214137*0 + 3*723*FLEN/8, x4, x1, x2)

inst_71380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffe00000000; valaddr_reg:x3; val_offset:214140*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214140*0 + 3*724*FLEN/8, x4, x1, x2)

inst_71381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffff00000000; valaddr_reg:x3; val_offset:214143*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214143*0 + 3*725*FLEN/8, x4, x1, x2)

inst_71382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffff80000000; valaddr_reg:x3; val_offset:214146*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214146*0 + 3*726*FLEN/8, x4, x1, x2)

inst_71383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffc0000000; valaddr_reg:x3; val_offset:214149*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214149*0 + 3*727*FLEN/8, x4, x1, x2)

inst_71384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffe0000000; valaddr_reg:x3; val_offset:214152*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214152*0 + 3*728*FLEN/8, x4, x1, x2)

inst_71385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffff0000000; valaddr_reg:x3; val_offset:214155*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214155*0 + 3*729*FLEN/8, x4, x1, x2)

inst_71386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffff8000000; valaddr_reg:x3; val_offset:214158*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214158*0 + 3*730*FLEN/8, x4, x1, x2)

inst_71387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffc000000; valaddr_reg:x3; val_offset:214161*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214161*0 + 3*731*FLEN/8, x4, x1, x2)

inst_71388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffe000000; valaddr_reg:x3; val_offset:214164*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214164*0 + 3*732*FLEN/8, x4, x1, x2)

inst_71389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffff000000; valaddr_reg:x3; val_offset:214167*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214167*0 + 3*733*FLEN/8, x4, x1, x2)

inst_71390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffff800000; valaddr_reg:x3; val_offset:214170*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214170*0 + 3*734*FLEN/8, x4, x1, x2)

inst_71391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffc00000; valaddr_reg:x3; val_offset:214173*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214173*0 + 3*735*FLEN/8, x4, x1, x2)

inst_71392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffe00000; valaddr_reg:x3; val_offset:214176*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214176*0 + 3*736*FLEN/8, x4, x1, x2)

inst_71393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffff00000; valaddr_reg:x3; val_offset:214179*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214179*0 + 3*737*FLEN/8, x4, x1, x2)

inst_71394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffff80000; valaddr_reg:x3; val_offset:214182*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214182*0 + 3*738*FLEN/8, x4, x1, x2)

inst_71395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffc0000; valaddr_reg:x3; val_offset:214185*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214185*0 + 3*739*FLEN/8, x4, x1, x2)

inst_71396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffe0000; valaddr_reg:x3; val_offset:214188*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214188*0 + 3*740*FLEN/8, x4, x1, x2)

inst_71397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffff0000; valaddr_reg:x3; val_offset:214191*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214191*0 + 3*741*FLEN/8, x4, x1, x2)

inst_71398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffff8000; valaddr_reg:x3; val_offset:214194*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214194*0 + 3*742*FLEN/8, x4, x1, x2)

inst_71399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffc000; valaddr_reg:x3; val_offset:214197*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214197*0 + 3*743*FLEN/8, x4, x1, x2)

inst_71400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffe000; valaddr_reg:x3; val_offset:214200*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214200*0 + 3*744*FLEN/8, x4, x1, x2)

inst_71401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffff000; valaddr_reg:x3; val_offset:214203*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214203*0 + 3*745*FLEN/8, x4, x1, x2)

inst_71402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffff800; valaddr_reg:x3; val_offset:214206*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214206*0 + 3*746*FLEN/8, x4, x1, x2)

inst_71403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffc00; valaddr_reg:x3; val_offset:214209*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214209*0 + 3*747*FLEN/8, x4, x1, x2)

inst_71404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffe00; valaddr_reg:x3; val_offset:214212*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214212*0 + 3*748*FLEN/8, x4, x1, x2)

inst_71405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffff00; valaddr_reg:x3; val_offset:214215*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214215*0 + 3*749*FLEN/8, x4, x1, x2)

inst_71406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffff80; valaddr_reg:x3; val_offset:214218*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214218*0 + 3*750*FLEN/8, x4, x1, x2)

inst_71407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffffc0; valaddr_reg:x3; val_offset:214221*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214221*0 + 3*751*FLEN/8, x4, x1, x2)

inst_71408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffffe0; valaddr_reg:x3; val_offset:214224*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214224*0 + 3*752*FLEN/8, x4, x1, x2)

inst_71409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffff0; valaddr_reg:x3; val_offset:214227*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214227*0 + 3*753*FLEN/8, x4, x1, x2)

inst_71410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffff8; valaddr_reg:x3; val_offset:214230*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214230*0 + 3*754*FLEN/8, x4, x1, x2)

inst_71411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffffc; valaddr_reg:x3; val_offset:214233*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214233*0 + 3*755*FLEN/8, x4, x1, x2)

inst_71412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8ffffffffffffe; valaddr_reg:x3; val_offset:214236*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214236*0 + 3*756*FLEN/8, x4, x1, x2)

inst_71413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbc8fffffffffffff; valaddr_reg:x3; val_offset:214239*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214239*0 + 3*757*FLEN/8, x4, x1, x2)

inst_71414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:214242*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214242*0 + 3*758*FLEN/8, x4, x1, x2)

inst_71415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:214245*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214245*0 + 3*759*FLEN/8, x4, x1, x2)

inst_71416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:214248*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214248*0 + 3*760*FLEN/8, x4, x1, x2)

inst_71417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:214251*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214251*0 + 3*761*FLEN/8, x4, x1, x2)

inst_71418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:214254*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214254*0 + 3*762*FLEN/8, x4, x1, x2)

inst_71419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:214257*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214257*0 + 3*763*FLEN/8, x4, x1, x2)

inst_71420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:214260*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214260*0 + 3*764*FLEN/8, x4, x1, x2)

inst_71421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:214263*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214263*0 + 3*765*FLEN/8, x4, x1, x2)

inst_71422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:214266*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214266*0 + 3*766*FLEN/8, x4, x1, x2)

inst_71423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x7b5eceb7d55a8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa597fb1bb06230; op2val:0x9fc7b5eceb7d55a8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:214269*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214269*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817097023488,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817101217792,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817103314944,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104363520,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104887808,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105149952,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105281024,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105346560,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105379328,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105395712,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105403904,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105408000,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105410048,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411072,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411584,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411840,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411968,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412032,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412064,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412080,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412088,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412092,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412094,64,FLEN)
NAN_BOXED(6892036531313111496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412095,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146752,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146753,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146755,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146759,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146767,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146783,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146815,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587146879,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587147007,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587147263,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587147775,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587148799,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587150847,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587154943,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587163135,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587179519,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587212287,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587277823,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587408895,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105587671039,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105588195327,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105589243903,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105591341055,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105595535359,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105603923967,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105620701183,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105654255615,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105721364479,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072105855582207,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072106124017663,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072106660888575,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072107734630399,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072109882114047,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072114177081343,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072122767015935,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072139946885119,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072174306623487,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072243026100223,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072380465053695,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227072655342960639,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227073205098774527,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227074304610402303,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227076503633657855,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227080901680168959,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227089697773191167,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227107289959235583,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227142474331324415,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227212843075502079,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227353580563857407,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13227635055540568063,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13228198005493989375,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13229323905400831999,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13229323905400832000,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13230449805307674624,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231012755261095936,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231294230237806592,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231434967726161920,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231505336470339584,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231540520842428416,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231558113028472832,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231566909121495040,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231571307168006144,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231573506191261696,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231574605702889472,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575155458703360,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575430336610304,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575567775563776,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575636495040512,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575670854778880,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575688034648064,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575696624582656,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575700919549952,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575703067033600,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575704140775424,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575704677646336,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575704946081792,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705080299520,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705147408384,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705180962816,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705197740032,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705206128640,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705210322944,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705212420096,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705213468672,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705213992960,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214255104,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214386176,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214451712,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214484480,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214500864,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214509056,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214513152,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214515200,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214516224,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214516736,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214516992,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517120,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517184,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517216,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517232,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517240,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517244,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517246,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13231575705214517247,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892045249955915390,64,FLEN)
NAN_BOXED(11513411499364969861,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481023,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481279,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481791,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128482815,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128484863,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128488959,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128497151,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128513535,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128546303,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128611839,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128742911,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129005055,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129529343,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033130577919,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033132675071,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033136869375,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033145257983,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033162035199,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033195589631,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033262698495,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033396916223,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033665351679,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408034202222591,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408035275964415,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408037423448063,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408041718415359,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408050308349951,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408067488219135,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408101847957503,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408170567434239,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408308006387711,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408582884294655,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268409132640108543,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268410232151736319,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268412431174991871,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268416829221502975,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268425625314525183,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268443217500569599,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268478401872658431,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268548770616836095,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268689508105191423,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268970983081902079,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9269533933035323391,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166015,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166016,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9271785732849008640,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272348682802429952,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272630157779140608,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272770895267495936,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272841264011673600,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272876448383762432,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272894040569806848,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272902836662829056,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272907234709340160,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272909433732595712,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272910533244223488,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911083000037376,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911357877944320,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911495316897792,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911564036374528,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911598396112896,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911615575982080,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911624165916672,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911628460883968,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911630608367616,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911631682109440,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632218980352,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632487415808,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632621633536,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632688742400,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632722296832,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632739074048,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632747462656,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632751656960,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632753754112,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632754802688,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755326976,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755589120,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755720192,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755785728,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755818496,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755834880,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755843072,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755847168,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755849216,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850240,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850752,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851008,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851136,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851200,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851232,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851248,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851256,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851260,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851262,64,FLEN)
NAN_BOXED(6892060839753702801,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851263,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528640,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528641,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528643,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528647,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528655,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528671,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528703,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528767,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412528895,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412529151,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412529663,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412530687,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412532735,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412536831,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412545023,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412561407,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412594175,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412659711,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640412790783,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640413052927,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640413577215,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640414625791,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640416722943,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640420917247,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640429305855,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640446083071,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640479637503,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640546746367,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640680964095,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973640949399551,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973641486270463,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973642560012287,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973644707495935,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973649002463231,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973657592397823,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973674772267007,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973709132005375,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973777851482111,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345973915290435583,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345974190168342527,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345974739924156415,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345975839435784191,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345978038459039743,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345982436505550847,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4345991232598573055,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4346008824784617471,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4346044009156706303,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4346114377900883967,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4346255115389239295,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4346536590365949951,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4347099540319371263,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4348225440226213887,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4348225440226213888,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4349351340133056512,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4349914290086477824,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350195765063188480,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350336502551543808,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350406871295721472,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350442055667810304,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350459647853854720,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350468443946876928,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350472841993388032,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350475041016643584,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350476140528271360,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350476690284085248,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350476965161992192,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477102600945664,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477171320422400,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477205680160768,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477222860029952,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477231449964544,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477235744931840,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477237892415488,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477238966157312,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477239503028224,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477239771463680,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477239905681408,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477239972790272,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240006344704,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240023121920,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240031510528,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240035704832,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240037801984,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240038850560,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039374848,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039636992,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039768064,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039833600,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039866368,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039882752,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039890944,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039895040,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039897088,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039898112,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039898624,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039898880,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899008,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899072,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899104,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899120,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899128,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899132,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899134,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4350477240039899135,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892061818056684561,64,FLEN)
NAN_BOXED(2321546296426736396,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038208,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038209,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038211,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038215,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038223,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038239,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038271,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038335,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038463,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038719,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539039231,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539040255,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539042303,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539046399,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539054591,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539070975,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539103743,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539169279,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539300351,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539562495,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027540086783,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027541135359,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027543232511,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027547426815,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027555815423,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027572592639,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027606147071,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027673255935,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027807473663,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028075909119,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028612780031,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962029686521855,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962031834005503,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962036128972799,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962044718907391,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962061898776575,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962096258514943,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962164977991679,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962302416945151,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962577294852095,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335963127050665983,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335964226562293759,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335966425585549311,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335970823632060415,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335979619725082623,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335997211911127039,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336032396283215871,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336102765027393535,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336243502515748863,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336524977492459519,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9337087927445880831,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723455,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723456,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339339727259566080,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339902677212987392,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340184152189698048,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340324889678053376,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340395258422231040,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340430442794319872,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340448034980364288,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340456831073386496,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340461229119897600,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340463428143153152,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340464527654780928,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465077410594816,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465352288501760,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465489727455232,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465558446931968,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465592806670336,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465609986539520,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465618576474112,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465622871441408,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465625018925056,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626092666880,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626629537792,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626897973248,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627032190976,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627099299840,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627132854272,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627149631488,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627158020096,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627162214400,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627164311552,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165360128,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165884416,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166146560,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166277632,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166343168,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166375936,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166392320,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166400512,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166404608,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166406656,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166407680,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408192,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408448,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408576,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408640,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408672,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408688,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408696,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408700,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408702,64,FLEN)
NAN_BOXED(6892067127935222389,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408703,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6892079003276760034,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415936,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415937,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415939,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415943,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415951,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415967,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149415999,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149416063,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149416191,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149416447,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149416959,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149417983,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149420031,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149424127,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149432319,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149448703,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149481471,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149547007,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149678079,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476149940223,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476150464511,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476151513087,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476153610239,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476157804543,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476166193151,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476182970367,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476216524799,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476283633663,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476417851391,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856476686286847,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856477223157759,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856478296899583,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856480444383231,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856484739350527,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856493329285119,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856510509154303,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856544868892671,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856613588369407,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582856751027322879,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582857025905229823,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582857575661043711,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582858675172671487,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582860874195927039,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582865272242438143,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582874068335460351,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582891660521504767,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582926844893593599,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13582997213637771263,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13583137951126126591,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13583419426102837247,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13583982376056258559,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13585108275963101183,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13585108275963101184,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13586234175869943808,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13586797125823365120,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587078600800075776,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587219338288431104,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587289707032608768,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587324891404697600,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587342483590742016,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587351279683764224,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587355677730275328,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587357876753530880,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587358976265158656,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587359526020972544,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587359800898879488,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587359938337832960,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360007057309696,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360041417048064,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360058596917248,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360067186851840,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360071481819136,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360073629302784,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360074703044608,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075239915520,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075508350976,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075642568704,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075709677568,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075743232000,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075760009216,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075768397824,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075772592128,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075774689280,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075775737856,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776262144,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776524288,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776655360,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776720896,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776753664,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776770048,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776778240,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776782336,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776784384,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776785408,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776785920,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786176,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786304,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786368,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786400,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786416,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786424,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786428,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786430,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13587360075776786431,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892081909517541936,64,FLEN)
NAN_BOXED(11513371001563731368,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
