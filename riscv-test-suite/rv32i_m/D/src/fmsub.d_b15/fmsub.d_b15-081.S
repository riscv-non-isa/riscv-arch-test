
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_61440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffff80000000; valaddr_reg:x3; val_offset:184320*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184320*0 + 3*0*FLEN/8, x4, x1, x2)

inst_61441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffc0000000; valaddr_reg:x3; val_offset:184323*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184323*0 + 3*1*FLEN/8, x4, x1, x2)

inst_61442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffe0000000; valaddr_reg:x3; val_offset:184326*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184326*0 + 3*2*FLEN/8, x4, x1, x2)

inst_61443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffff0000000; valaddr_reg:x3; val_offset:184329*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184329*0 + 3*3*FLEN/8, x4, x1, x2)

inst_61444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffff8000000; valaddr_reg:x3; val_offset:184332*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184332*0 + 3*4*FLEN/8, x4, x1, x2)

inst_61445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffc000000; valaddr_reg:x3; val_offset:184335*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184335*0 + 3*5*FLEN/8, x4, x1, x2)

inst_61446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffe000000; valaddr_reg:x3; val_offset:184338*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184338*0 + 3*6*FLEN/8, x4, x1, x2)

inst_61447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffff000000; valaddr_reg:x3; val_offset:184341*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184341*0 + 3*7*FLEN/8, x4, x1, x2)

inst_61448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffff800000; valaddr_reg:x3; val_offset:184344*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184344*0 + 3*8*FLEN/8, x4, x1, x2)

inst_61449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffc00000; valaddr_reg:x3; val_offset:184347*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184347*0 + 3*9*FLEN/8, x4, x1, x2)

inst_61450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffe00000; valaddr_reg:x3; val_offset:184350*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184350*0 + 3*10*FLEN/8, x4, x1, x2)

inst_61451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffff00000; valaddr_reg:x3; val_offset:184353*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184353*0 + 3*11*FLEN/8, x4, x1, x2)

inst_61452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffff80000; valaddr_reg:x3; val_offset:184356*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184356*0 + 3*12*FLEN/8, x4, x1, x2)

inst_61453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffc0000; valaddr_reg:x3; val_offset:184359*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184359*0 + 3*13*FLEN/8, x4, x1, x2)

inst_61454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffe0000; valaddr_reg:x3; val_offset:184362*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184362*0 + 3*14*FLEN/8, x4, x1, x2)

inst_61455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffff0000; valaddr_reg:x3; val_offset:184365*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184365*0 + 3*15*FLEN/8, x4, x1, x2)

inst_61456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffff8000; valaddr_reg:x3; val_offset:184368*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184368*0 + 3*16*FLEN/8, x4, x1, x2)

inst_61457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffc000; valaddr_reg:x3; val_offset:184371*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184371*0 + 3*17*FLEN/8, x4, x1, x2)

inst_61458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffe000; valaddr_reg:x3; val_offset:184374*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184374*0 + 3*18*FLEN/8, x4, x1, x2)

inst_61459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffff000; valaddr_reg:x3; val_offset:184377*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184377*0 + 3*19*FLEN/8, x4, x1, x2)

inst_61460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffff800; valaddr_reg:x3; val_offset:184380*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184380*0 + 3*20*FLEN/8, x4, x1, x2)

inst_61461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffc00; valaddr_reg:x3; val_offset:184383*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184383*0 + 3*21*FLEN/8, x4, x1, x2)

inst_61462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffe00; valaddr_reg:x3; val_offset:184386*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184386*0 + 3*22*FLEN/8, x4, x1, x2)

inst_61463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffff00; valaddr_reg:x3; val_offset:184389*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184389*0 + 3*23*FLEN/8, x4, x1, x2)

inst_61464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffff80; valaddr_reg:x3; val_offset:184392*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184392*0 + 3*24*FLEN/8, x4, x1, x2)

inst_61465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffffc0; valaddr_reg:x3; val_offset:184395*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184395*0 + 3*25*FLEN/8, x4, x1, x2)

inst_61466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffffe0; valaddr_reg:x3; val_offset:184398*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184398*0 + 3*26*FLEN/8, x4, x1, x2)

inst_61467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffff0; valaddr_reg:x3; val_offset:184401*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184401*0 + 3*27*FLEN/8, x4, x1, x2)

inst_61468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffff8; valaddr_reg:x3; val_offset:184404*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184404*0 + 3*28*FLEN/8, x4, x1, x2)

inst_61469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffffc; valaddr_reg:x3; val_offset:184407*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184407*0 + 3*29*FLEN/8, x4, x1, x2)

inst_61470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffffffffffe; valaddr_reg:x3; val_offset:184410*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184410*0 + 3*30*FLEN/8, x4, x1, x2)

inst_61471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffffffffffff; valaddr_reg:x3; val_offset:184413*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184413*0 + 3*31*FLEN/8, x4, x1, x2)

inst_61472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:184416*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184416*0 + 3*32*FLEN/8, x4, x1, x2)

inst_61473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:184419*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184419*0 + 3*33*FLEN/8, x4, x1, x2)

inst_61474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:184422*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184422*0 + 3*34*FLEN/8, x4, x1, x2)

inst_61475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:184425*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184425*0 + 3*35*FLEN/8, x4, x1, x2)

inst_61476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:184428*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184428*0 + 3*36*FLEN/8, x4, x1, x2)

inst_61477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:184431*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184431*0 + 3*37*FLEN/8, x4, x1, x2)

inst_61478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:184434*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184434*0 + 3*38*FLEN/8, x4, x1, x2)

inst_61479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:184437*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184437*0 + 3*39*FLEN/8, x4, x1, x2)

inst_61480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:184440*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184440*0 + 3*40*FLEN/8, x4, x1, x2)

inst_61481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:184443*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184443*0 + 3*41*FLEN/8, x4, x1, x2)

inst_61482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:184446*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184446*0 + 3*42*FLEN/8, x4, x1, x2)

inst_61483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:184449*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184449*0 + 3*43*FLEN/8, x4, x1, x2)

inst_61484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:184452*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184452*0 + 3*44*FLEN/8, x4, x1, x2)

inst_61485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:184455*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184455*0 + 3*45*FLEN/8, x4, x1, x2)

inst_61486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:184458*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184458*0 + 3*46*FLEN/8, x4, x1, x2)

inst_61487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:184461*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184461*0 + 3*47*FLEN/8, x4, x1, x2)

inst_61488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:184464*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184464*0 + 3*48*FLEN/8, x4, x1, x2)

inst_61489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:184467*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184467*0 + 3*49*FLEN/8, x4, x1, x2)

inst_61490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:184470*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184470*0 + 3*50*FLEN/8, x4, x1, x2)

inst_61491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:184473*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184473*0 + 3*51*FLEN/8, x4, x1, x2)

inst_61492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:184476*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184476*0 + 3*52*FLEN/8, x4, x1, x2)

inst_61493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:184479*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184479*0 + 3*53*FLEN/8, x4, x1, x2)

inst_61494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000000000; valaddr_reg:x3; val_offset:184482*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184482*0 + 3*54*FLEN/8, x4, x1, x2)

inst_61495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000000001; valaddr_reg:x3; val_offset:184485*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184485*0 + 3*55*FLEN/8, x4, x1, x2)

inst_61496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000000003; valaddr_reg:x3; val_offset:184488*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184488*0 + 3*56*FLEN/8, x4, x1, x2)

inst_61497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000000007; valaddr_reg:x3; val_offset:184491*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184491*0 + 3*57*FLEN/8, x4, x1, x2)

inst_61498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000000000f; valaddr_reg:x3; val_offset:184494*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184494*0 + 3*58*FLEN/8, x4, x1, x2)

inst_61499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000000001f; valaddr_reg:x3; val_offset:184497*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184497*0 + 3*59*FLEN/8, x4, x1, x2)

inst_61500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000000003f; valaddr_reg:x3; val_offset:184500*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184500*0 + 3*60*FLEN/8, x4, x1, x2)

inst_61501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000000007f; valaddr_reg:x3; val_offset:184503*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184503*0 + 3*61*FLEN/8, x4, x1, x2)

inst_61502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000000000ff; valaddr_reg:x3; val_offset:184506*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184506*0 + 3*62*FLEN/8, x4, x1, x2)

inst_61503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000000001ff; valaddr_reg:x3; val_offset:184509*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184509*0 + 3*63*FLEN/8, x4, x1, x2)

inst_61504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000000003ff; valaddr_reg:x3; val_offset:184512*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184512*0 + 3*64*FLEN/8, x4, x1, x2)

inst_61505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000000007ff; valaddr_reg:x3; val_offset:184515*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184515*0 + 3*65*FLEN/8, x4, x1, x2)

inst_61506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000000fff; valaddr_reg:x3; val_offset:184518*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184518*0 + 3*66*FLEN/8, x4, x1, x2)

inst_61507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000001fff; valaddr_reg:x3; val_offset:184521*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184521*0 + 3*67*FLEN/8, x4, x1, x2)

inst_61508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000003fff; valaddr_reg:x3; val_offset:184524*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184524*0 + 3*68*FLEN/8, x4, x1, x2)

inst_61509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000007fff; valaddr_reg:x3; val_offset:184527*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184527*0 + 3*69*FLEN/8, x4, x1, x2)

inst_61510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000000ffff; valaddr_reg:x3; val_offset:184530*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184530*0 + 3*70*FLEN/8, x4, x1, x2)

inst_61511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000001ffff; valaddr_reg:x3; val_offset:184533*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184533*0 + 3*71*FLEN/8, x4, x1, x2)

inst_61512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000003ffff; valaddr_reg:x3; val_offset:184536*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184536*0 + 3*72*FLEN/8, x4, x1, x2)

inst_61513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000007ffff; valaddr_reg:x3; val_offset:184539*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184539*0 + 3*73*FLEN/8, x4, x1, x2)

inst_61514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000000fffff; valaddr_reg:x3; val_offset:184542*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184542*0 + 3*74*FLEN/8, x4, x1, x2)

inst_61515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000001fffff; valaddr_reg:x3; val_offset:184545*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184545*0 + 3*75*FLEN/8, x4, x1, x2)

inst_61516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000003fffff; valaddr_reg:x3; val_offset:184548*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184548*0 + 3*76*FLEN/8, x4, x1, x2)

inst_61517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000007fffff; valaddr_reg:x3; val_offset:184551*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184551*0 + 3*77*FLEN/8, x4, x1, x2)

inst_61518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000000ffffff; valaddr_reg:x3; val_offset:184554*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184554*0 + 3*78*FLEN/8, x4, x1, x2)

inst_61519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000001ffffff; valaddr_reg:x3; val_offset:184557*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184557*0 + 3*79*FLEN/8, x4, x1, x2)

inst_61520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000003ffffff; valaddr_reg:x3; val_offset:184560*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184560*0 + 3*80*FLEN/8, x4, x1, x2)

inst_61521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000007ffffff; valaddr_reg:x3; val_offset:184563*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184563*0 + 3*81*FLEN/8, x4, x1, x2)

inst_61522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000000fffffff; valaddr_reg:x3; val_offset:184566*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184566*0 + 3*82*FLEN/8, x4, x1, x2)

inst_61523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000001fffffff; valaddr_reg:x3; val_offset:184569*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184569*0 + 3*83*FLEN/8, x4, x1, x2)

inst_61524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000003fffffff; valaddr_reg:x3; val_offset:184572*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184572*0 + 3*84*FLEN/8, x4, x1, x2)

inst_61525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000007fffffff; valaddr_reg:x3; val_offset:184575*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184575*0 + 3*85*FLEN/8, x4, x1, x2)

inst_61526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500000ffffffff; valaddr_reg:x3; val_offset:184578*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184578*0 + 3*86*FLEN/8, x4, x1, x2)

inst_61527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500001ffffffff; valaddr_reg:x3; val_offset:184581*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184581*0 + 3*87*FLEN/8, x4, x1, x2)

inst_61528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500003ffffffff; valaddr_reg:x3; val_offset:184584*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184584*0 + 3*88*FLEN/8, x4, x1, x2)

inst_61529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500007ffffffff; valaddr_reg:x3; val_offset:184587*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184587*0 + 3*89*FLEN/8, x4, x1, x2)

inst_61530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50000fffffffff; valaddr_reg:x3; val_offset:184590*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184590*0 + 3*90*FLEN/8, x4, x1, x2)

inst_61531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50001fffffffff; valaddr_reg:x3; val_offset:184593*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184593*0 + 3*91*FLEN/8, x4, x1, x2)

inst_61532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50003fffffffff; valaddr_reg:x3; val_offset:184596*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184596*0 + 3*92*FLEN/8, x4, x1, x2)

inst_61533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50007fffffffff; valaddr_reg:x3; val_offset:184599*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184599*0 + 3*93*FLEN/8, x4, x1, x2)

inst_61534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5000ffffffffff; valaddr_reg:x3; val_offset:184602*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184602*0 + 3*94*FLEN/8, x4, x1, x2)

inst_61535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5001ffffffffff; valaddr_reg:x3; val_offset:184605*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184605*0 + 3*95*FLEN/8, x4, x1, x2)

inst_61536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5003ffffffffff; valaddr_reg:x3; val_offset:184608*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184608*0 + 3*96*FLEN/8, x4, x1, x2)

inst_61537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5007ffffffffff; valaddr_reg:x3; val_offset:184611*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184611*0 + 3*97*FLEN/8, x4, x1, x2)

inst_61538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f500fffffffffff; valaddr_reg:x3; val_offset:184614*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184614*0 + 3*98*FLEN/8, x4, x1, x2)

inst_61539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f501fffffffffff; valaddr_reg:x3; val_offset:184617*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184617*0 + 3*99*FLEN/8, x4, x1, x2)

inst_61540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f503fffffffffff; valaddr_reg:x3; val_offset:184620*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184620*0 + 3*100*FLEN/8, x4, x1, x2)

inst_61541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f507fffffffffff; valaddr_reg:x3; val_offset:184623*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184623*0 + 3*101*FLEN/8, x4, x1, x2)

inst_61542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f50ffffffffffff; valaddr_reg:x3; val_offset:184626*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184626*0 + 3*102*FLEN/8, x4, x1, x2)

inst_61543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f51ffffffffffff; valaddr_reg:x3; val_offset:184629*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184629*0 + 3*103*FLEN/8, x4, x1, x2)

inst_61544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f53ffffffffffff; valaddr_reg:x3; val_offset:184632*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184632*0 + 3*104*FLEN/8, x4, x1, x2)

inst_61545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f57ffffffffffff; valaddr_reg:x3; val_offset:184635*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184635*0 + 3*105*FLEN/8, x4, x1, x2)

inst_61546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f58000000000000; valaddr_reg:x3; val_offset:184638*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184638*0 + 3*106*FLEN/8, x4, x1, x2)

inst_61547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5c000000000000; valaddr_reg:x3; val_offset:184641*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184641*0 + 3*107*FLEN/8, x4, x1, x2)

inst_61548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5e000000000000; valaddr_reg:x3; val_offset:184644*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184644*0 + 3*108*FLEN/8, x4, x1, x2)

inst_61549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5f000000000000; valaddr_reg:x3; val_offset:184647*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184647*0 + 3*109*FLEN/8, x4, x1, x2)

inst_61550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5f800000000000; valaddr_reg:x3; val_offset:184650*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184650*0 + 3*110*FLEN/8, x4, x1, x2)

inst_61551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fc00000000000; valaddr_reg:x3; val_offset:184653*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184653*0 + 3*111*FLEN/8, x4, x1, x2)

inst_61552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fe00000000000; valaddr_reg:x3; val_offset:184656*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184656*0 + 3*112*FLEN/8, x4, x1, x2)

inst_61553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ff00000000000; valaddr_reg:x3; val_offset:184659*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184659*0 + 3*113*FLEN/8, x4, x1, x2)

inst_61554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ff80000000000; valaddr_reg:x3; val_offset:184662*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184662*0 + 3*114*FLEN/8, x4, x1, x2)

inst_61555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffc0000000000; valaddr_reg:x3; val_offset:184665*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184665*0 + 3*115*FLEN/8, x4, x1, x2)

inst_61556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffe0000000000; valaddr_reg:x3; val_offset:184668*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184668*0 + 3*116*FLEN/8, x4, x1, x2)

inst_61557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fff0000000000; valaddr_reg:x3; val_offset:184671*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184671*0 + 3*117*FLEN/8, x4, x1, x2)

inst_61558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fff8000000000; valaddr_reg:x3; val_offset:184674*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184674*0 + 3*118*FLEN/8, x4, x1, x2)

inst_61559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffc000000000; valaddr_reg:x3; val_offset:184677*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184677*0 + 3*119*FLEN/8, x4, x1, x2)

inst_61560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffe000000000; valaddr_reg:x3; val_offset:184680*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184680*0 + 3*120*FLEN/8, x4, x1, x2)

inst_61561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffff000000000; valaddr_reg:x3; val_offset:184683*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184683*0 + 3*121*FLEN/8, x4, x1, x2)

inst_61562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffff800000000; valaddr_reg:x3; val_offset:184686*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184686*0 + 3*122*FLEN/8, x4, x1, x2)

inst_61563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffc00000000; valaddr_reg:x3; val_offset:184689*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184689*0 + 3*123*FLEN/8, x4, x1, x2)

inst_61564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffe00000000; valaddr_reg:x3; val_offset:184692*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184692*0 + 3*124*FLEN/8, x4, x1, x2)

inst_61565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffff00000000; valaddr_reg:x3; val_offset:184695*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184695*0 + 3*125*FLEN/8, x4, x1, x2)

inst_61566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffff80000000; valaddr_reg:x3; val_offset:184698*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184698*0 + 3*126*FLEN/8, x4, x1, x2)

inst_61567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffc0000000; valaddr_reg:x3; val_offset:184701*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184701*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_61568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffe0000000; valaddr_reg:x3; val_offset:184704*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184704*0 + 3*128*FLEN/8, x4, x1, x2)

inst_61569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffff0000000; valaddr_reg:x3; val_offset:184707*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184707*0 + 3*129*FLEN/8, x4, x1, x2)

inst_61570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffff8000000; valaddr_reg:x3; val_offset:184710*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184710*0 + 3*130*FLEN/8, x4, x1, x2)

inst_61571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffc000000; valaddr_reg:x3; val_offset:184713*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184713*0 + 3*131*FLEN/8, x4, x1, x2)

inst_61572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffe000000; valaddr_reg:x3; val_offset:184716*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184716*0 + 3*132*FLEN/8, x4, x1, x2)

inst_61573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffff000000; valaddr_reg:x3; val_offset:184719*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184719*0 + 3*133*FLEN/8, x4, x1, x2)

inst_61574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffff800000; valaddr_reg:x3; val_offset:184722*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184722*0 + 3*134*FLEN/8, x4, x1, x2)

inst_61575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffc00000; valaddr_reg:x3; val_offset:184725*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184725*0 + 3*135*FLEN/8, x4, x1, x2)

inst_61576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffe00000; valaddr_reg:x3; val_offset:184728*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184728*0 + 3*136*FLEN/8, x4, x1, x2)

inst_61577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffff00000; valaddr_reg:x3; val_offset:184731*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184731*0 + 3*137*FLEN/8, x4, x1, x2)

inst_61578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffff80000; valaddr_reg:x3; val_offset:184734*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184734*0 + 3*138*FLEN/8, x4, x1, x2)

inst_61579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffc0000; valaddr_reg:x3; val_offset:184737*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184737*0 + 3*139*FLEN/8, x4, x1, x2)

inst_61580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffe0000; valaddr_reg:x3; val_offset:184740*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184740*0 + 3*140*FLEN/8, x4, x1, x2)

inst_61581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffff0000; valaddr_reg:x3; val_offset:184743*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184743*0 + 3*141*FLEN/8, x4, x1, x2)

inst_61582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffff8000; valaddr_reg:x3; val_offset:184746*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184746*0 + 3*142*FLEN/8, x4, x1, x2)

inst_61583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffc000; valaddr_reg:x3; val_offset:184749*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184749*0 + 3*143*FLEN/8, x4, x1, x2)

inst_61584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffe000; valaddr_reg:x3; val_offset:184752*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184752*0 + 3*144*FLEN/8, x4, x1, x2)

inst_61585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffff000; valaddr_reg:x3; val_offset:184755*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184755*0 + 3*145*FLEN/8, x4, x1, x2)

inst_61586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffff800; valaddr_reg:x3; val_offset:184758*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184758*0 + 3*146*FLEN/8, x4, x1, x2)

inst_61587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffc00; valaddr_reg:x3; val_offset:184761*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184761*0 + 3*147*FLEN/8, x4, x1, x2)

inst_61588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffe00; valaddr_reg:x3; val_offset:184764*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184764*0 + 3*148*FLEN/8, x4, x1, x2)

inst_61589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffff00; valaddr_reg:x3; val_offset:184767*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184767*0 + 3*149*FLEN/8, x4, x1, x2)

inst_61590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffff80; valaddr_reg:x3; val_offset:184770*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184770*0 + 3*150*FLEN/8, x4, x1, x2)

inst_61591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffffc0; valaddr_reg:x3; val_offset:184773*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184773*0 + 3*151*FLEN/8, x4, x1, x2)

inst_61592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffffe0; valaddr_reg:x3; val_offset:184776*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184776*0 + 3*152*FLEN/8, x4, x1, x2)

inst_61593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffff0; valaddr_reg:x3; val_offset:184779*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184779*0 + 3*153*FLEN/8, x4, x1, x2)

inst_61594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffff8; valaddr_reg:x3; val_offset:184782*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184782*0 + 3*154*FLEN/8, x4, x1, x2)

inst_61595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffffc; valaddr_reg:x3; val_offset:184785*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184785*0 + 3*155*FLEN/8, x4, x1, x2)

inst_61596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5ffffffffffffe; valaddr_reg:x3; val_offset:184788*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184788*0 + 3*156*FLEN/8, x4, x1, x2)

inst_61597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3f5fffffffffffff; valaddr_reg:x3; val_offset:184791*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184791*0 + 3*157*FLEN/8, x4, x1, x2)

inst_61598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:184794*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184794*0 + 3*158*FLEN/8, x4, x1, x2)

inst_61599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:184797*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184797*0 + 3*159*FLEN/8, x4, x1, x2)

inst_61600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:184800*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184800*0 + 3*160*FLEN/8, x4, x1, x2)

inst_61601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:184803*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184803*0 + 3*161*FLEN/8, x4, x1, x2)

inst_61602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:184806*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184806*0 + 3*162*FLEN/8, x4, x1, x2)

inst_61603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:184809*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184809*0 + 3*163*FLEN/8, x4, x1, x2)

inst_61604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:184812*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184812*0 + 3*164*FLEN/8, x4, x1, x2)

inst_61605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:184815*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184815*0 + 3*165*FLEN/8, x4, x1, x2)

inst_61606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:184818*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184818*0 + 3*166*FLEN/8, x4, x1, x2)

inst_61607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:184821*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184821*0 + 3*167*FLEN/8, x4, x1, x2)

inst_61608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:184824*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184824*0 + 3*168*FLEN/8, x4, x1, x2)

inst_61609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:184827*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184827*0 + 3*169*FLEN/8, x4, x1, x2)

inst_61610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:184830*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184830*0 + 3*170*FLEN/8, x4, x1, x2)

inst_61611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:184833*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184833*0 + 3*171*FLEN/8, x4, x1, x2)

inst_61612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:184836*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184836*0 + 3*172*FLEN/8, x4, x1, x2)

inst_61613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:184839*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184839*0 + 3*173*FLEN/8, x4, x1, x2)

inst_61614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:184842*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184842*0 + 3*174*FLEN/8, x4, x1, x2)

inst_61615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:184845*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184845*0 + 3*175*FLEN/8, x4, x1, x2)

inst_61616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:184848*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184848*0 + 3*176*FLEN/8, x4, x1, x2)

inst_61617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:184851*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184851*0 + 3*177*FLEN/8, x4, x1, x2)

inst_61618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:184854*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184854*0 + 3*178*FLEN/8, x4, x1, x2)

inst_61619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb4ef27947478f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2bfb292e944a1; op2val:0x203b4ef27947478f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:184857*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184857*0 + 3*179*FLEN/8, x4, x1, x2)

inst_61620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000000000; valaddr_reg:x3; val_offset:184860*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184860*0 + 3*180*FLEN/8, x4, x1, x2)

inst_61621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000000001; valaddr_reg:x3; val_offset:184863*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184863*0 + 3*181*FLEN/8, x4, x1, x2)

inst_61622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000000003; valaddr_reg:x3; val_offset:184866*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184866*0 + 3*182*FLEN/8, x4, x1, x2)

inst_61623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000000007; valaddr_reg:x3; val_offset:184869*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184869*0 + 3*183*FLEN/8, x4, x1, x2)

inst_61624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000000000f; valaddr_reg:x3; val_offset:184872*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184872*0 + 3*184*FLEN/8, x4, x1, x2)

inst_61625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000000001f; valaddr_reg:x3; val_offset:184875*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184875*0 + 3*185*FLEN/8, x4, x1, x2)

inst_61626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000000003f; valaddr_reg:x3; val_offset:184878*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184878*0 + 3*186*FLEN/8, x4, x1, x2)

inst_61627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000000007f; valaddr_reg:x3; val_offset:184881*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184881*0 + 3*187*FLEN/8, x4, x1, x2)

inst_61628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000000000ff; valaddr_reg:x3; val_offset:184884*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184884*0 + 3*188*FLEN/8, x4, x1, x2)

inst_61629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000000001ff; valaddr_reg:x3; val_offset:184887*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184887*0 + 3*189*FLEN/8, x4, x1, x2)

inst_61630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000000003ff; valaddr_reg:x3; val_offset:184890*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184890*0 + 3*190*FLEN/8, x4, x1, x2)

inst_61631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000000007ff; valaddr_reg:x3; val_offset:184893*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184893*0 + 3*191*FLEN/8, x4, x1, x2)

inst_61632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000000fff; valaddr_reg:x3; val_offset:184896*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184896*0 + 3*192*FLEN/8, x4, x1, x2)

inst_61633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000001fff; valaddr_reg:x3; val_offset:184899*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184899*0 + 3*193*FLEN/8, x4, x1, x2)

inst_61634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000003fff; valaddr_reg:x3; val_offset:184902*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184902*0 + 3*194*FLEN/8, x4, x1, x2)

inst_61635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000007fff; valaddr_reg:x3; val_offset:184905*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184905*0 + 3*195*FLEN/8, x4, x1, x2)

inst_61636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000000ffff; valaddr_reg:x3; val_offset:184908*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184908*0 + 3*196*FLEN/8, x4, x1, x2)

inst_61637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000001ffff; valaddr_reg:x3; val_offset:184911*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184911*0 + 3*197*FLEN/8, x4, x1, x2)

inst_61638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000003ffff; valaddr_reg:x3; val_offset:184914*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184914*0 + 3*198*FLEN/8, x4, x1, x2)

inst_61639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000007ffff; valaddr_reg:x3; val_offset:184917*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184917*0 + 3*199*FLEN/8, x4, x1, x2)

inst_61640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000000fffff; valaddr_reg:x3; val_offset:184920*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184920*0 + 3*200*FLEN/8, x4, x1, x2)

inst_61641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000001fffff; valaddr_reg:x3; val_offset:184923*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184923*0 + 3*201*FLEN/8, x4, x1, x2)

inst_61642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000003fffff; valaddr_reg:x3; val_offset:184926*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184926*0 + 3*202*FLEN/8, x4, x1, x2)

inst_61643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000007fffff; valaddr_reg:x3; val_offset:184929*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184929*0 + 3*203*FLEN/8, x4, x1, x2)

inst_61644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000000ffffff; valaddr_reg:x3; val_offset:184932*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184932*0 + 3*204*FLEN/8, x4, x1, x2)

inst_61645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000001ffffff; valaddr_reg:x3; val_offset:184935*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184935*0 + 3*205*FLEN/8, x4, x1, x2)

inst_61646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000003ffffff; valaddr_reg:x3; val_offset:184938*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184938*0 + 3*206*FLEN/8, x4, x1, x2)

inst_61647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000007ffffff; valaddr_reg:x3; val_offset:184941*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184941*0 + 3*207*FLEN/8, x4, x1, x2)

inst_61648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000000fffffff; valaddr_reg:x3; val_offset:184944*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184944*0 + 3*208*FLEN/8, x4, x1, x2)

inst_61649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000001fffffff; valaddr_reg:x3; val_offset:184947*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184947*0 + 3*209*FLEN/8, x4, x1, x2)

inst_61650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000003fffffff; valaddr_reg:x3; val_offset:184950*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184950*0 + 3*210*FLEN/8, x4, x1, x2)

inst_61651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000007fffffff; valaddr_reg:x3; val_offset:184953*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184953*0 + 3*211*FLEN/8, x4, x1, x2)

inst_61652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600000ffffffff; valaddr_reg:x3; val_offset:184956*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184956*0 + 3*212*FLEN/8, x4, x1, x2)

inst_61653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600001ffffffff; valaddr_reg:x3; val_offset:184959*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184959*0 + 3*213*FLEN/8, x4, x1, x2)

inst_61654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600003ffffffff; valaddr_reg:x3; val_offset:184962*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184962*0 + 3*214*FLEN/8, x4, x1, x2)

inst_61655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600007ffffffff; valaddr_reg:x3; val_offset:184965*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184965*0 + 3*215*FLEN/8, x4, x1, x2)

inst_61656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60000fffffffff; valaddr_reg:x3; val_offset:184968*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184968*0 + 3*216*FLEN/8, x4, x1, x2)

inst_61657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60001fffffffff; valaddr_reg:x3; val_offset:184971*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184971*0 + 3*217*FLEN/8, x4, x1, x2)

inst_61658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60003fffffffff; valaddr_reg:x3; val_offset:184974*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184974*0 + 3*218*FLEN/8, x4, x1, x2)

inst_61659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60007fffffffff; valaddr_reg:x3; val_offset:184977*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184977*0 + 3*219*FLEN/8, x4, x1, x2)

inst_61660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6000ffffffffff; valaddr_reg:x3; val_offset:184980*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184980*0 + 3*220*FLEN/8, x4, x1, x2)

inst_61661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6001ffffffffff; valaddr_reg:x3; val_offset:184983*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184983*0 + 3*221*FLEN/8, x4, x1, x2)

inst_61662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6003ffffffffff; valaddr_reg:x3; val_offset:184986*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184986*0 + 3*222*FLEN/8, x4, x1, x2)

inst_61663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6007ffffffffff; valaddr_reg:x3; val_offset:184989*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184989*0 + 3*223*FLEN/8, x4, x1, x2)

inst_61664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb600fffffffffff; valaddr_reg:x3; val_offset:184992*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184992*0 + 3*224*FLEN/8, x4, x1, x2)

inst_61665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb601fffffffffff; valaddr_reg:x3; val_offset:184995*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184995*0 + 3*225*FLEN/8, x4, x1, x2)

inst_61666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb603fffffffffff; valaddr_reg:x3; val_offset:184998*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184998*0 + 3*226*FLEN/8, x4, x1, x2)

inst_61667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb607fffffffffff; valaddr_reg:x3; val_offset:185001*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185001*0 + 3*227*FLEN/8, x4, x1, x2)

inst_61668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb60ffffffffffff; valaddr_reg:x3; val_offset:185004*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185004*0 + 3*228*FLEN/8, x4, x1, x2)

inst_61669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb61ffffffffffff; valaddr_reg:x3; val_offset:185007*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185007*0 + 3*229*FLEN/8, x4, x1, x2)

inst_61670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb63ffffffffffff; valaddr_reg:x3; val_offset:185010*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185010*0 + 3*230*FLEN/8, x4, x1, x2)

inst_61671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb67ffffffffffff; valaddr_reg:x3; val_offset:185013*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185013*0 + 3*231*FLEN/8, x4, x1, x2)

inst_61672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb68000000000000; valaddr_reg:x3; val_offset:185016*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185016*0 + 3*232*FLEN/8, x4, x1, x2)

inst_61673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6c000000000000; valaddr_reg:x3; val_offset:185019*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185019*0 + 3*233*FLEN/8, x4, x1, x2)

inst_61674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6e000000000000; valaddr_reg:x3; val_offset:185022*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185022*0 + 3*234*FLEN/8, x4, x1, x2)

inst_61675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6f000000000000; valaddr_reg:x3; val_offset:185025*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185025*0 + 3*235*FLEN/8, x4, x1, x2)

inst_61676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6f800000000000; valaddr_reg:x3; val_offset:185028*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185028*0 + 3*236*FLEN/8, x4, x1, x2)

inst_61677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fc00000000000; valaddr_reg:x3; val_offset:185031*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185031*0 + 3*237*FLEN/8, x4, x1, x2)

inst_61678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fe00000000000; valaddr_reg:x3; val_offset:185034*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185034*0 + 3*238*FLEN/8, x4, x1, x2)

inst_61679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ff00000000000; valaddr_reg:x3; val_offset:185037*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185037*0 + 3*239*FLEN/8, x4, x1, x2)

inst_61680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ff80000000000; valaddr_reg:x3; val_offset:185040*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185040*0 + 3*240*FLEN/8, x4, x1, x2)

inst_61681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffc0000000000; valaddr_reg:x3; val_offset:185043*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185043*0 + 3*241*FLEN/8, x4, x1, x2)

inst_61682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffe0000000000; valaddr_reg:x3; val_offset:185046*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185046*0 + 3*242*FLEN/8, x4, x1, x2)

inst_61683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fff0000000000; valaddr_reg:x3; val_offset:185049*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185049*0 + 3*243*FLEN/8, x4, x1, x2)

inst_61684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fff8000000000; valaddr_reg:x3; val_offset:185052*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185052*0 + 3*244*FLEN/8, x4, x1, x2)

inst_61685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffc000000000; valaddr_reg:x3; val_offset:185055*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185055*0 + 3*245*FLEN/8, x4, x1, x2)

inst_61686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffe000000000; valaddr_reg:x3; val_offset:185058*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185058*0 + 3*246*FLEN/8, x4, x1, x2)

inst_61687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffff000000000; valaddr_reg:x3; val_offset:185061*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185061*0 + 3*247*FLEN/8, x4, x1, x2)

inst_61688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffff800000000; valaddr_reg:x3; val_offset:185064*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185064*0 + 3*248*FLEN/8, x4, x1, x2)

inst_61689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffc00000000; valaddr_reg:x3; val_offset:185067*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185067*0 + 3*249*FLEN/8, x4, x1, x2)

inst_61690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffe00000000; valaddr_reg:x3; val_offset:185070*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185070*0 + 3*250*FLEN/8, x4, x1, x2)

inst_61691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffff00000000; valaddr_reg:x3; val_offset:185073*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185073*0 + 3*251*FLEN/8, x4, x1, x2)

inst_61692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffff80000000; valaddr_reg:x3; val_offset:185076*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185076*0 + 3*252*FLEN/8, x4, x1, x2)

inst_61693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffc0000000; valaddr_reg:x3; val_offset:185079*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185079*0 + 3*253*FLEN/8, x4, x1, x2)

inst_61694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffe0000000; valaddr_reg:x3; val_offset:185082*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185082*0 + 3*254*FLEN/8, x4, x1, x2)

inst_61695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffff0000000; valaddr_reg:x3; val_offset:185085*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185085*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_61696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffff8000000; valaddr_reg:x3; val_offset:185088*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185088*0 + 3*256*FLEN/8, x4, x1, x2)

inst_61697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffc000000; valaddr_reg:x3; val_offset:185091*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185091*0 + 3*257*FLEN/8, x4, x1, x2)

inst_61698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffe000000; valaddr_reg:x3; val_offset:185094*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185094*0 + 3*258*FLEN/8, x4, x1, x2)

inst_61699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffff000000; valaddr_reg:x3; val_offset:185097*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185097*0 + 3*259*FLEN/8, x4, x1, x2)

inst_61700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffff800000; valaddr_reg:x3; val_offset:185100*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185100*0 + 3*260*FLEN/8, x4, x1, x2)

inst_61701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffc00000; valaddr_reg:x3; val_offset:185103*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185103*0 + 3*261*FLEN/8, x4, x1, x2)

inst_61702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffe00000; valaddr_reg:x3; val_offset:185106*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185106*0 + 3*262*FLEN/8, x4, x1, x2)

inst_61703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffff00000; valaddr_reg:x3; val_offset:185109*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185109*0 + 3*263*FLEN/8, x4, x1, x2)

inst_61704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffff80000; valaddr_reg:x3; val_offset:185112*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185112*0 + 3*264*FLEN/8, x4, x1, x2)

inst_61705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffc0000; valaddr_reg:x3; val_offset:185115*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185115*0 + 3*265*FLEN/8, x4, x1, x2)

inst_61706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffe0000; valaddr_reg:x3; val_offset:185118*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185118*0 + 3*266*FLEN/8, x4, x1, x2)

inst_61707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffff0000; valaddr_reg:x3; val_offset:185121*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185121*0 + 3*267*FLEN/8, x4, x1, x2)

inst_61708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffff8000; valaddr_reg:x3; val_offset:185124*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185124*0 + 3*268*FLEN/8, x4, x1, x2)

inst_61709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffc000; valaddr_reg:x3; val_offset:185127*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185127*0 + 3*269*FLEN/8, x4, x1, x2)

inst_61710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffe000; valaddr_reg:x3; val_offset:185130*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185130*0 + 3*270*FLEN/8, x4, x1, x2)

inst_61711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffff000; valaddr_reg:x3; val_offset:185133*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185133*0 + 3*271*FLEN/8, x4, x1, x2)

inst_61712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffff800; valaddr_reg:x3; val_offset:185136*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185136*0 + 3*272*FLEN/8, x4, x1, x2)

inst_61713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffc00; valaddr_reg:x3; val_offset:185139*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185139*0 + 3*273*FLEN/8, x4, x1, x2)

inst_61714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffe00; valaddr_reg:x3; val_offset:185142*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185142*0 + 3*274*FLEN/8, x4, x1, x2)

inst_61715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffff00; valaddr_reg:x3; val_offset:185145*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185145*0 + 3*275*FLEN/8, x4, x1, x2)

inst_61716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffff80; valaddr_reg:x3; val_offset:185148*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185148*0 + 3*276*FLEN/8, x4, x1, x2)

inst_61717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffffc0; valaddr_reg:x3; val_offset:185151*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185151*0 + 3*277*FLEN/8, x4, x1, x2)

inst_61718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffffe0; valaddr_reg:x3; val_offset:185154*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185154*0 + 3*278*FLEN/8, x4, x1, x2)

inst_61719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffff0; valaddr_reg:x3; val_offset:185157*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185157*0 + 3*279*FLEN/8, x4, x1, x2)

inst_61720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffff8; valaddr_reg:x3; val_offset:185160*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185160*0 + 3*280*FLEN/8, x4, x1, x2)

inst_61721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffffc; valaddr_reg:x3; val_offset:185163*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185163*0 + 3*281*FLEN/8, x4, x1, x2)

inst_61722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6ffffffffffffe; valaddr_reg:x3; val_offset:185166*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185166*0 + 3*282*FLEN/8, x4, x1, x2)

inst_61723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbb6fffffffffffff; valaddr_reg:x3; val_offset:185169*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185169*0 + 3*283*FLEN/8, x4, x1, x2)

inst_61724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:185172*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185172*0 + 3*284*FLEN/8, x4, x1, x2)

inst_61725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:185175*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185175*0 + 3*285*FLEN/8, x4, x1, x2)

inst_61726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:185178*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185178*0 + 3*286*FLEN/8, x4, x1, x2)

inst_61727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:185181*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185181*0 + 3*287*FLEN/8, x4, x1, x2)

inst_61728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:185184*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185184*0 + 3*288*FLEN/8, x4, x1, x2)

inst_61729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:185187*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185187*0 + 3*289*FLEN/8, x4, x1, x2)

inst_61730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:185190*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185190*0 + 3*290*FLEN/8, x4, x1, x2)

inst_61731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:185193*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185193*0 + 3*291*FLEN/8, x4, x1, x2)

inst_61732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:185196*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185196*0 + 3*292*FLEN/8, x4, x1, x2)

inst_61733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:185199*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185199*0 + 3*293*FLEN/8, x4, x1, x2)

inst_61734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:185202*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185202*0 + 3*294*FLEN/8, x4, x1, x2)

inst_61735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:185205*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185205*0 + 3*295*FLEN/8, x4, x1, x2)

inst_61736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:185208*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185208*0 + 3*296*FLEN/8, x4, x1, x2)

inst_61737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:185211*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185211*0 + 3*297*FLEN/8, x4, x1, x2)

inst_61738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:185214*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185214*0 + 3*298*FLEN/8, x4, x1, x2)

inst_61739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:185217*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185217*0 + 3*299*FLEN/8, x4, x1, x2)

inst_61740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:185220*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185220*0 + 3*300*FLEN/8, x4, x1, x2)

inst_61741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:185223*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185223*0 + 3*301*FLEN/8, x4, x1, x2)

inst_61742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:185226*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185226*0 + 3*302*FLEN/8, x4, x1, x2)

inst_61743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:185229*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185229*0 + 3*303*FLEN/8, x4, x1, x2)

inst_61744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:185232*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185232*0 + 3*304*FLEN/8, x4, x1, x2)

inst_61745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xb4b0c995844ca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2c2600e5225e4; op2val:0x9fcb4b0c995844ca;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:185235*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185235*0 + 3*305*FLEN/8, x4, x1, x2)

inst_61746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:185238*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185238*0 + 3*306*FLEN/8, x4, x1, x2)

inst_61747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:185241*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185241*0 + 3*307*FLEN/8, x4, x1, x2)

inst_61748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:185244*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185244*0 + 3*308*FLEN/8, x4, x1, x2)

inst_61749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:185247*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185247*0 + 3*309*FLEN/8, x4, x1, x2)

inst_61750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:185250*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185250*0 + 3*310*FLEN/8, x4, x1, x2)

inst_61751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:185253*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185253*0 + 3*311*FLEN/8, x4, x1, x2)

inst_61752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:185256*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185256*0 + 3*312*FLEN/8, x4, x1, x2)

inst_61753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:185259*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185259*0 + 3*313*FLEN/8, x4, x1, x2)

inst_61754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:185262*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185262*0 + 3*314*FLEN/8, x4, x1, x2)

inst_61755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:185265*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185265*0 + 3*315*FLEN/8, x4, x1, x2)

inst_61756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:185268*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185268*0 + 3*316*FLEN/8, x4, x1, x2)

inst_61757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:185271*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185271*0 + 3*317*FLEN/8, x4, x1, x2)

inst_61758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:185274*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185274*0 + 3*318*FLEN/8, x4, x1, x2)

inst_61759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:185277*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185277*0 + 3*319*FLEN/8, x4, x1, x2)

inst_61760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:185280*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185280*0 + 3*320*FLEN/8, x4, x1, x2)

inst_61761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:185283*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185283*0 + 3*321*FLEN/8, x4, x1, x2)

inst_61762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:185286*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185286*0 + 3*322*FLEN/8, x4, x1, x2)

inst_61763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:185289*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185289*0 + 3*323*FLEN/8, x4, x1, x2)

inst_61764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:185292*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185292*0 + 3*324*FLEN/8, x4, x1, x2)

inst_61765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:185295*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185295*0 + 3*325*FLEN/8, x4, x1, x2)

inst_61766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:185298*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185298*0 + 3*326*FLEN/8, x4, x1, x2)

inst_61767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:185301*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185301*0 + 3*327*FLEN/8, x4, x1, x2)

inst_61768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000000000; valaddr_reg:x3; val_offset:185304*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185304*0 + 3*328*FLEN/8, x4, x1, x2)

inst_61769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000000001; valaddr_reg:x3; val_offset:185307*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185307*0 + 3*329*FLEN/8, x4, x1, x2)

inst_61770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000000003; valaddr_reg:x3; val_offset:185310*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185310*0 + 3*330*FLEN/8, x4, x1, x2)

inst_61771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000000007; valaddr_reg:x3; val_offset:185313*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185313*0 + 3*331*FLEN/8, x4, x1, x2)

inst_61772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000000000f; valaddr_reg:x3; val_offset:185316*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185316*0 + 3*332*FLEN/8, x4, x1, x2)

inst_61773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000000001f; valaddr_reg:x3; val_offset:185319*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185319*0 + 3*333*FLEN/8, x4, x1, x2)

inst_61774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000000003f; valaddr_reg:x3; val_offset:185322*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185322*0 + 3*334*FLEN/8, x4, x1, x2)

inst_61775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000000007f; valaddr_reg:x3; val_offset:185325*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185325*0 + 3*335*FLEN/8, x4, x1, x2)

inst_61776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000000000ff; valaddr_reg:x3; val_offset:185328*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185328*0 + 3*336*FLEN/8, x4, x1, x2)

inst_61777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000000001ff; valaddr_reg:x3; val_offset:185331*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185331*0 + 3*337*FLEN/8, x4, x1, x2)

inst_61778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000000003ff; valaddr_reg:x3; val_offset:185334*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185334*0 + 3*338*FLEN/8, x4, x1, x2)

inst_61779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000000007ff; valaddr_reg:x3; val_offset:185337*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185337*0 + 3*339*FLEN/8, x4, x1, x2)

inst_61780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000000fff; valaddr_reg:x3; val_offset:185340*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185340*0 + 3*340*FLEN/8, x4, x1, x2)

inst_61781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000001fff; valaddr_reg:x3; val_offset:185343*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185343*0 + 3*341*FLEN/8, x4, x1, x2)

inst_61782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000003fff; valaddr_reg:x3; val_offset:185346*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185346*0 + 3*342*FLEN/8, x4, x1, x2)

inst_61783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000007fff; valaddr_reg:x3; val_offset:185349*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185349*0 + 3*343*FLEN/8, x4, x1, x2)

inst_61784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000000ffff; valaddr_reg:x3; val_offset:185352*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185352*0 + 3*344*FLEN/8, x4, x1, x2)

inst_61785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000001ffff; valaddr_reg:x3; val_offset:185355*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185355*0 + 3*345*FLEN/8, x4, x1, x2)

inst_61786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000003ffff; valaddr_reg:x3; val_offset:185358*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185358*0 + 3*346*FLEN/8, x4, x1, x2)

inst_61787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000007ffff; valaddr_reg:x3; val_offset:185361*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185361*0 + 3*347*FLEN/8, x4, x1, x2)

inst_61788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000000fffff; valaddr_reg:x3; val_offset:185364*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185364*0 + 3*348*FLEN/8, x4, x1, x2)

inst_61789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000001fffff; valaddr_reg:x3; val_offset:185367*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185367*0 + 3*349*FLEN/8, x4, x1, x2)

inst_61790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000003fffff; valaddr_reg:x3; val_offset:185370*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185370*0 + 3*350*FLEN/8, x4, x1, x2)

inst_61791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000007fffff; valaddr_reg:x3; val_offset:185373*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185373*0 + 3*351*FLEN/8, x4, x1, x2)

inst_61792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000000ffffff; valaddr_reg:x3; val_offset:185376*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185376*0 + 3*352*FLEN/8, x4, x1, x2)

inst_61793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000001ffffff; valaddr_reg:x3; val_offset:185379*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185379*0 + 3*353*FLEN/8, x4, x1, x2)

inst_61794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000003ffffff; valaddr_reg:x3; val_offset:185382*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185382*0 + 3*354*FLEN/8, x4, x1, x2)

inst_61795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000007ffffff; valaddr_reg:x3; val_offset:185385*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185385*0 + 3*355*FLEN/8, x4, x1, x2)

inst_61796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000000fffffff; valaddr_reg:x3; val_offset:185388*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185388*0 + 3*356*FLEN/8, x4, x1, x2)

inst_61797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000001fffffff; valaddr_reg:x3; val_offset:185391*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185391*0 + 3*357*FLEN/8, x4, x1, x2)

inst_61798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000003fffffff; valaddr_reg:x3; val_offset:185394*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185394*0 + 3*358*FLEN/8, x4, x1, x2)

inst_61799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000007fffffff; valaddr_reg:x3; val_offset:185397*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185397*0 + 3*359*FLEN/8, x4, x1, x2)

inst_61800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00000ffffffff; valaddr_reg:x3; val_offset:185400*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185400*0 + 3*360*FLEN/8, x4, x1, x2)

inst_61801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00001ffffffff; valaddr_reg:x3; val_offset:185403*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185403*0 + 3*361*FLEN/8, x4, x1, x2)

inst_61802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00003ffffffff; valaddr_reg:x3; val_offset:185406*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185406*0 + 3*362*FLEN/8, x4, x1, x2)

inst_61803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00007ffffffff; valaddr_reg:x3; val_offset:185409*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185409*0 + 3*363*FLEN/8, x4, x1, x2)

inst_61804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0000fffffffff; valaddr_reg:x3; val_offset:185412*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185412*0 + 3*364*FLEN/8, x4, x1, x2)

inst_61805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0001fffffffff; valaddr_reg:x3; val_offset:185415*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185415*0 + 3*365*FLEN/8, x4, x1, x2)

inst_61806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0003fffffffff; valaddr_reg:x3; val_offset:185418*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185418*0 + 3*366*FLEN/8, x4, x1, x2)

inst_61807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0007fffffffff; valaddr_reg:x3; val_offset:185421*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185421*0 + 3*367*FLEN/8, x4, x1, x2)

inst_61808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d000ffffffffff; valaddr_reg:x3; val_offset:185424*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185424*0 + 3*368*FLEN/8, x4, x1, x2)

inst_61809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d001ffffffffff; valaddr_reg:x3; val_offset:185427*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185427*0 + 3*369*FLEN/8, x4, x1, x2)

inst_61810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d003ffffffffff; valaddr_reg:x3; val_offset:185430*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185430*0 + 3*370*FLEN/8, x4, x1, x2)

inst_61811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d007ffffffffff; valaddr_reg:x3; val_offset:185433*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185433*0 + 3*371*FLEN/8, x4, x1, x2)

inst_61812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d00fffffffffff; valaddr_reg:x3; val_offset:185436*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185436*0 + 3*372*FLEN/8, x4, x1, x2)

inst_61813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d01fffffffffff; valaddr_reg:x3; val_offset:185439*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185439*0 + 3*373*FLEN/8, x4, x1, x2)

inst_61814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d03fffffffffff; valaddr_reg:x3; val_offset:185442*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185442*0 + 3*374*FLEN/8, x4, x1, x2)

inst_61815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d07fffffffffff; valaddr_reg:x3; val_offset:185445*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185445*0 + 3*375*FLEN/8, x4, x1, x2)

inst_61816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d0ffffffffffff; valaddr_reg:x3; val_offset:185448*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185448*0 + 3*376*FLEN/8, x4, x1, x2)

inst_61817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d1ffffffffffff; valaddr_reg:x3; val_offset:185451*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185451*0 + 3*377*FLEN/8, x4, x1, x2)

inst_61818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d3ffffffffffff; valaddr_reg:x3; val_offset:185454*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185454*0 + 3*378*FLEN/8, x4, x1, x2)

inst_61819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d7ffffffffffff; valaddr_reg:x3; val_offset:185457*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185457*0 + 3*379*FLEN/8, x4, x1, x2)

inst_61820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81d8000000000000; valaddr_reg:x3; val_offset:185460*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185460*0 + 3*380*FLEN/8, x4, x1, x2)

inst_61821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dc000000000000; valaddr_reg:x3; val_offset:185463*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185463*0 + 3*381*FLEN/8, x4, x1, x2)

inst_61822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81de000000000000; valaddr_reg:x3; val_offset:185466*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185466*0 + 3*382*FLEN/8, x4, x1, x2)

inst_61823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81df000000000000; valaddr_reg:x3; val_offset:185469*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185469*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_61824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81df800000000000; valaddr_reg:x3; val_offset:185472*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185472*0 + 3*384*FLEN/8, x4, x1, x2)

inst_61825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfc00000000000; valaddr_reg:x3; val_offset:185475*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185475*0 + 3*385*FLEN/8, x4, x1, x2)

inst_61826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfe00000000000; valaddr_reg:x3; val_offset:185478*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185478*0 + 3*386*FLEN/8, x4, x1, x2)

inst_61827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dff00000000000; valaddr_reg:x3; val_offset:185481*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185481*0 + 3*387*FLEN/8, x4, x1, x2)

inst_61828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dff80000000000; valaddr_reg:x3; val_offset:185484*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185484*0 + 3*388*FLEN/8, x4, x1, x2)

inst_61829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffc0000000000; valaddr_reg:x3; val_offset:185487*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185487*0 + 3*389*FLEN/8, x4, x1, x2)

inst_61830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffe0000000000; valaddr_reg:x3; val_offset:185490*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185490*0 + 3*390*FLEN/8, x4, x1, x2)

inst_61831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfff0000000000; valaddr_reg:x3; val_offset:185493*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185493*0 + 3*391*FLEN/8, x4, x1, x2)

inst_61832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfff8000000000; valaddr_reg:x3; val_offset:185496*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185496*0 + 3*392*FLEN/8, x4, x1, x2)

inst_61833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffc000000000; valaddr_reg:x3; val_offset:185499*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185499*0 + 3*393*FLEN/8, x4, x1, x2)

inst_61834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffe000000000; valaddr_reg:x3; val_offset:185502*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185502*0 + 3*394*FLEN/8, x4, x1, x2)

inst_61835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffff000000000; valaddr_reg:x3; val_offset:185505*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185505*0 + 3*395*FLEN/8, x4, x1, x2)

inst_61836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffff800000000; valaddr_reg:x3; val_offset:185508*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185508*0 + 3*396*FLEN/8, x4, x1, x2)

inst_61837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffc00000000; valaddr_reg:x3; val_offset:185511*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185511*0 + 3*397*FLEN/8, x4, x1, x2)

inst_61838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffe00000000; valaddr_reg:x3; val_offset:185514*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185514*0 + 3*398*FLEN/8, x4, x1, x2)

inst_61839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffff00000000; valaddr_reg:x3; val_offset:185517*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185517*0 + 3*399*FLEN/8, x4, x1, x2)

inst_61840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffff80000000; valaddr_reg:x3; val_offset:185520*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185520*0 + 3*400*FLEN/8, x4, x1, x2)

inst_61841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffc0000000; valaddr_reg:x3; val_offset:185523*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185523*0 + 3*401*FLEN/8, x4, x1, x2)

inst_61842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffe0000000; valaddr_reg:x3; val_offset:185526*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185526*0 + 3*402*FLEN/8, x4, x1, x2)

inst_61843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffff0000000; valaddr_reg:x3; val_offset:185529*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185529*0 + 3*403*FLEN/8, x4, x1, x2)

inst_61844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffff8000000; valaddr_reg:x3; val_offset:185532*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185532*0 + 3*404*FLEN/8, x4, x1, x2)

inst_61845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffc000000; valaddr_reg:x3; val_offset:185535*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185535*0 + 3*405*FLEN/8, x4, x1, x2)

inst_61846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffe000000; valaddr_reg:x3; val_offset:185538*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185538*0 + 3*406*FLEN/8, x4, x1, x2)

inst_61847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffff000000; valaddr_reg:x3; val_offset:185541*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185541*0 + 3*407*FLEN/8, x4, x1, x2)

inst_61848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffff800000; valaddr_reg:x3; val_offset:185544*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185544*0 + 3*408*FLEN/8, x4, x1, x2)

inst_61849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffc00000; valaddr_reg:x3; val_offset:185547*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185547*0 + 3*409*FLEN/8, x4, x1, x2)

inst_61850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffe00000; valaddr_reg:x3; val_offset:185550*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185550*0 + 3*410*FLEN/8, x4, x1, x2)

inst_61851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffff00000; valaddr_reg:x3; val_offset:185553*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185553*0 + 3*411*FLEN/8, x4, x1, x2)

inst_61852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffff80000; valaddr_reg:x3; val_offset:185556*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185556*0 + 3*412*FLEN/8, x4, x1, x2)

inst_61853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffc0000; valaddr_reg:x3; val_offset:185559*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185559*0 + 3*413*FLEN/8, x4, x1, x2)

inst_61854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffe0000; valaddr_reg:x3; val_offset:185562*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185562*0 + 3*414*FLEN/8, x4, x1, x2)

inst_61855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffff0000; valaddr_reg:x3; val_offset:185565*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185565*0 + 3*415*FLEN/8, x4, x1, x2)

inst_61856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffff8000; valaddr_reg:x3; val_offset:185568*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185568*0 + 3*416*FLEN/8, x4, x1, x2)

inst_61857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffc000; valaddr_reg:x3; val_offset:185571*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185571*0 + 3*417*FLEN/8, x4, x1, x2)

inst_61858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffe000; valaddr_reg:x3; val_offset:185574*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185574*0 + 3*418*FLEN/8, x4, x1, x2)

inst_61859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffff000; valaddr_reg:x3; val_offset:185577*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185577*0 + 3*419*FLEN/8, x4, x1, x2)

inst_61860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffff800; valaddr_reg:x3; val_offset:185580*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185580*0 + 3*420*FLEN/8, x4, x1, x2)

inst_61861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffc00; valaddr_reg:x3; val_offset:185583*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185583*0 + 3*421*FLEN/8, x4, x1, x2)

inst_61862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffe00; valaddr_reg:x3; val_offset:185586*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185586*0 + 3*422*FLEN/8, x4, x1, x2)

inst_61863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffff00; valaddr_reg:x3; val_offset:185589*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185589*0 + 3*423*FLEN/8, x4, x1, x2)

inst_61864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffff80; valaddr_reg:x3; val_offset:185592*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185592*0 + 3*424*FLEN/8, x4, x1, x2)

inst_61865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffffc0; valaddr_reg:x3; val_offset:185595*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185595*0 + 3*425*FLEN/8, x4, x1, x2)

inst_61866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffffe0; valaddr_reg:x3; val_offset:185598*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185598*0 + 3*426*FLEN/8, x4, x1, x2)

inst_61867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffff0; valaddr_reg:x3; val_offset:185601*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185601*0 + 3*427*FLEN/8, x4, x1, x2)

inst_61868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffff8; valaddr_reg:x3; val_offset:185604*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185604*0 + 3*428*FLEN/8, x4, x1, x2)

inst_61869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffffc; valaddr_reg:x3; val_offset:185607*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185607*0 + 3*429*FLEN/8, x4, x1, x2)

inst_61870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dffffffffffffe; valaddr_reg:x3; val_offset:185610*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185610*0 + 3*430*FLEN/8, x4, x1, x2)

inst_61871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0e69e0aad85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d0e69e0aad85; op2val:0x8000;
op3val:0x81dfffffffffffff; valaddr_reg:x3; val_offset:185613*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185613*0 + 3*431*FLEN/8, x4, x1, x2)

inst_61872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:185616*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185616*0 + 3*432*FLEN/8, x4, x1, x2)

inst_61873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:185619*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185619*0 + 3*433*FLEN/8, x4, x1, x2)

inst_61874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:185622*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185622*0 + 3*434*FLEN/8, x4, x1, x2)

inst_61875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:185625*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185625*0 + 3*435*FLEN/8, x4, x1, x2)

inst_61876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:185628*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185628*0 + 3*436*FLEN/8, x4, x1, x2)

inst_61877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:185631*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185631*0 + 3*437*FLEN/8, x4, x1, x2)

inst_61878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:185634*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185634*0 + 3*438*FLEN/8, x4, x1, x2)

inst_61879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:185637*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185637*0 + 3*439*FLEN/8, x4, x1, x2)

inst_61880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:185640*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185640*0 + 3*440*FLEN/8, x4, x1, x2)

inst_61881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:185643*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185643*0 + 3*441*FLEN/8, x4, x1, x2)

inst_61882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:185646*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185646*0 + 3*442*FLEN/8, x4, x1, x2)

inst_61883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:185649*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185649*0 + 3*443*FLEN/8, x4, x1, x2)

inst_61884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:185652*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185652*0 + 3*444*FLEN/8, x4, x1, x2)

inst_61885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:185655*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185655*0 + 3*445*FLEN/8, x4, x1, x2)

inst_61886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:185658*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185658*0 + 3*446*FLEN/8, x4, x1, x2)

inst_61887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:185661*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185661*0 + 3*447*FLEN/8, x4, x1, x2)

inst_61888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:185664*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185664*0 + 3*448*FLEN/8, x4, x1, x2)

inst_61889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:185667*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185667*0 + 3*449*FLEN/8, x4, x1, x2)

inst_61890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:185670*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185670*0 + 3*450*FLEN/8, x4, x1, x2)

inst_61891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:185673*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185673*0 + 3*451*FLEN/8, x4, x1, x2)

inst_61892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:185676*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185676*0 + 3*452*FLEN/8, x4, x1, x2)

inst_61893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:185679*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185679*0 + 3*453*FLEN/8, x4, x1, x2)

inst_61894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:185682*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185682*0 + 3*454*FLEN/8, x4, x1, x2)

inst_61895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:185685*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185685*0 + 3*455*FLEN/8, x4, x1, x2)

inst_61896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:185688*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185688*0 + 3*456*FLEN/8, x4, x1, x2)

inst_61897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:185691*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185691*0 + 3*457*FLEN/8, x4, x1, x2)

inst_61898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:185694*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185694*0 + 3*458*FLEN/8, x4, x1, x2)

inst_61899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:185697*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185697*0 + 3*459*FLEN/8, x4, x1, x2)

inst_61900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:185700*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185700*0 + 3*460*FLEN/8, x4, x1, x2)

inst_61901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:185703*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185703*0 + 3*461*FLEN/8, x4, x1, x2)

inst_61902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:185706*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185706*0 + 3*462*FLEN/8, x4, x1, x2)

inst_61903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:185709*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185709*0 + 3*463*FLEN/8, x4, x1, x2)

inst_61904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:185712*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185712*0 + 3*464*FLEN/8, x4, x1, x2)

inst_61905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:185715*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185715*0 + 3*465*FLEN/8, x4, x1, x2)

inst_61906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:185718*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185718*0 + 3*466*FLEN/8, x4, x1, x2)

inst_61907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:185721*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185721*0 + 3*467*FLEN/8, x4, x1, x2)

inst_61908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:185724*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185724*0 + 3*468*FLEN/8, x4, x1, x2)

inst_61909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:185727*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185727*0 + 3*469*FLEN/8, x4, x1, x2)

inst_61910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:185730*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185730*0 + 3*470*FLEN/8, x4, x1, x2)

inst_61911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:185733*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185733*0 + 3*471*FLEN/8, x4, x1, x2)

inst_61912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:185736*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185736*0 + 3*472*FLEN/8, x4, x1, x2)

inst_61913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:185739*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185739*0 + 3*473*FLEN/8, x4, x1, x2)

inst_61914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:185742*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185742*0 + 3*474*FLEN/8, x4, x1, x2)

inst_61915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:185745*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185745*0 + 3*475*FLEN/8, x4, x1, x2)

inst_61916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:185748*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185748*0 + 3*476*FLEN/8, x4, x1, x2)

inst_61917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:185751*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185751*0 + 3*477*FLEN/8, x4, x1, x2)

inst_61918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:185754*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185754*0 + 3*478*FLEN/8, x4, x1, x2)

inst_61919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:185757*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185757*0 + 3*479*FLEN/8, x4, x1, x2)

inst_61920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:185760*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185760*0 + 3*480*FLEN/8, x4, x1, x2)

inst_61921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:185763*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185763*0 + 3*481*FLEN/8, x4, x1, x2)

inst_61922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:185766*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185766*0 + 3*482*FLEN/8, x4, x1, x2)

inst_61923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:185769*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185769*0 + 3*483*FLEN/8, x4, x1, x2)

inst_61924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:185772*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185772*0 + 3*484*FLEN/8, x4, x1, x2)

inst_61925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:185775*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185775*0 + 3*485*FLEN/8, x4, x1, x2)

inst_61926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:185778*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185778*0 + 3*486*FLEN/8, x4, x1, x2)

inst_61927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:185781*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185781*0 + 3*487*FLEN/8, x4, x1, x2)

inst_61928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:185784*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185784*0 + 3*488*FLEN/8, x4, x1, x2)

inst_61929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:185787*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185787*0 + 3*489*FLEN/8, x4, x1, x2)

inst_61930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:185790*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185790*0 + 3*490*FLEN/8, x4, x1, x2)

inst_61931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:185793*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185793*0 + 3*491*FLEN/8, x4, x1, x2)

inst_61932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:185796*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185796*0 + 3*492*FLEN/8, x4, x1, x2)

inst_61933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:185799*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185799*0 + 3*493*FLEN/8, x4, x1, x2)

inst_61934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:185802*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185802*0 + 3*494*FLEN/8, x4, x1, x2)

inst_61935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:185805*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185805*0 + 3*495*FLEN/8, x4, x1, x2)

inst_61936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:185808*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185808*0 + 3*496*FLEN/8, x4, x1, x2)

inst_61937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:185811*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185811*0 + 3*497*FLEN/8, x4, x1, x2)

inst_61938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:185814*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185814*0 + 3*498*FLEN/8, x4, x1, x2)

inst_61939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:185817*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185817*0 + 3*499*FLEN/8, x4, x1, x2)

inst_61940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:185820*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185820*0 + 3*500*FLEN/8, x4, x1, x2)

inst_61941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:185823*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185823*0 + 3*501*FLEN/8, x4, x1, x2)

inst_61942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:185826*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185826*0 + 3*502*FLEN/8, x4, x1, x2)

inst_61943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:185829*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185829*0 + 3*503*FLEN/8, x4, x1, x2)

inst_61944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:185832*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185832*0 + 3*504*FLEN/8, x4, x1, x2)

inst_61945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:185835*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185835*0 + 3*505*FLEN/8, x4, x1, x2)

inst_61946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:185838*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185838*0 + 3*506*FLEN/8, x4, x1, x2)

inst_61947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:185841*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185841*0 + 3*507*FLEN/8, x4, x1, x2)

inst_61948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:185844*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185844*0 + 3*508*FLEN/8, x4, x1, x2)

inst_61949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:185847*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185847*0 + 3*509*FLEN/8, x4, x1, x2)

inst_61950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:185850*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185850*0 + 3*510*FLEN/8, x4, x1, x2)

inst_61951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:185853*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185853*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_61952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:185856*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185856*0 + 3*512*FLEN/8, x4, x1, x2)

inst_61953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:185859*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185859*0 + 3*513*FLEN/8, x4, x1, x2)

inst_61954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:185862*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185862*0 + 3*514*FLEN/8, x4, x1, x2)

inst_61955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:185865*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185865*0 + 3*515*FLEN/8, x4, x1, x2)

inst_61956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:185868*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185868*0 + 3*516*FLEN/8, x4, x1, x2)

inst_61957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:185871*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185871*0 + 3*517*FLEN/8, x4, x1, x2)

inst_61958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:185874*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185874*0 + 3*518*FLEN/8, x4, x1, x2)

inst_61959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:185877*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185877*0 + 3*519*FLEN/8, x4, x1, x2)

inst_61960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:185880*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185880*0 + 3*520*FLEN/8, x4, x1, x2)

inst_61961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:185883*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185883*0 + 3*521*FLEN/8, x4, x1, x2)

inst_61962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:185886*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185886*0 + 3*522*FLEN/8, x4, x1, x2)

inst_61963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:185889*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185889*0 + 3*523*FLEN/8, x4, x1, x2)

inst_61964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:185892*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185892*0 + 3*524*FLEN/8, x4, x1, x2)

inst_61965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:185895*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185895*0 + 3*525*FLEN/8, x4, x1, x2)

inst_61966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:185898*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185898*0 + 3*526*FLEN/8, x4, x1, x2)

inst_61967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:185901*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185901*0 + 3*527*FLEN/8, x4, x1, x2)

inst_61968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:185904*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185904*0 + 3*528*FLEN/8, x4, x1, x2)

inst_61969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:185907*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185907*0 + 3*529*FLEN/8, x4, x1, x2)

inst_61970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:185910*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185910*0 + 3*530*FLEN/8, x4, x1, x2)

inst_61971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:185913*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185913*0 + 3*531*FLEN/8, x4, x1, x2)

inst_61972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:185916*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185916*0 + 3*532*FLEN/8, x4, x1, x2)

inst_61973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:185919*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185919*0 + 3*533*FLEN/8, x4, x1, x2)

inst_61974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:185922*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185922*0 + 3*534*FLEN/8, x4, x1, x2)

inst_61975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:185925*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185925*0 + 3*535*FLEN/8, x4, x1, x2)

inst_61976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:185928*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185928*0 + 3*536*FLEN/8, x4, x1, x2)

inst_61977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:185931*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185931*0 + 3*537*FLEN/8, x4, x1, x2)

inst_61978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:185934*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185934*0 + 3*538*FLEN/8, x4, x1, x2)

inst_61979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:185937*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185937*0 + 3*539*FLEN/8, x4, x1, x2)

inst_61980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:185940*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185940*0 + 3*540*FLEN/8, x4, x1, x2)

inst_61981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:185943*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185943*0 + 3*541*FLEN/8, x4, x1, x2)

inst_61982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:185946*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185946*0 + 3*542*FLEN/8, x4, x1, x2)

inst_61983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:185949*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185949*0 + 3*543*FLEN/8, x4, x1, x2)

inst_61984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:185952*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185952*0 + 3*544*FLEN/8, x4, x1, x2)

inst_61985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:185955*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185955*0 + 3*545*FLEN/8, x4, x1, x2)

inst_61986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:185958*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185958*0 + 3*546*FLEN/8, x4, x1, x2)

inst_61987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:185961*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185961*0 + 3*547*FLEN/8, x4, x1, x2)

inst_61988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:185964*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185964*0 + 3*548*FLEN/8, x4, x1, x2)

inst_61989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:185967*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185967*0 + 3*549*FLEN/8, x4, x1, x2)

inst_61990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:185970*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185970*0 + 3*550*FLEN/8, x4, x1, x2)

inst_61991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:185973*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185973*0 + 3*551*FLEN/8, x4, x1, x2)

inst_61992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:185976*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185976*0 + 3*552*FLEN/8, x4, x1, x2)

inst_61993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:185979*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185979*0 + 3*553*FLEN/8, x4, x1, x2)

inst_61994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:185982*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185982*0 + 3*554*FLEN/8, x4, x1, x2)

inst_61995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:185985*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185985*0 + 3*555*FLEN/8, x4, x1, x2)

inst_61996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:185988*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185988*0 + 3*556*FLEN/8, x4, x1, x2)

inst_61997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d276adc9f092 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d276adc9f092; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:185991*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185991*0 + 3*557*FLEN/8, x4, x1, x2)

inst_61998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000000000; valaddr_reg:x3; val_offset:185994*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185994*0 + 3*558*FLEN/8, x4, x1, x2)

inst_61999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000000001; valaddr_reg:x3; val_offset:185997*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 185997*0 + 3*559*FLEN/8, x4, x1, x2)

inst_62000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000000003; valaddr_reg:x3; val_offset:186000*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186000*0 + 3*560*FLEN/8, x4, x1, x2)

inst_62001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000000007; valaddr_reg:x3; val_offset:186003*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186003*0 + 3*561*FLEN/8, x4, x1, x2)

inst_62002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000000000f; valaddr_reg:x3; val_offset:186006*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186006*0 + 3*562*FLEN/8, x4, x1, x2)

inst_62003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000000001f; valaddr_reg:x3; val_offset:186009*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186009*0 + 3*563*FLEN/8, x4, x1, x2)

inst_62004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000000003f; valaddr_reg:x3; val_offset:186012*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186012*0 + 3*564*FLEN/8, x4, x1, x2)

inst_62005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000000007f; valaddr_reg:x3; val_offset:186015*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186015*0 + 3*565*FLEN/8, x4, x1, x2)

inst_62006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000000000ff; valaddr_reg:x3; val_offset:186018*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186018*0 + 3*566*FLEN/8, x4, x1, x2)

inst_62007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000000001ff; valaddr_reg:x3; val_offset:186021*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186021*0 + 3*567*FLEN/8, x4, x1, x2)

inst_62008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000000003ff; valaddr_reg:x3; val_offset:186024*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186024*0 + 3*568*FLEN/8, x4, x1, x2)

inst_62009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000000007ff; valaddr_reg:x3; val_offset:186027*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186027*0 + 3*569*FLEN/8, x4, x1, x2)

inst_62010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000000fff; valaddr_reg:x3; val_offset:186030*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186030*0 + 3*570*FLEN/8, x4, x1, x2)

inst_62011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000001fff; valaddr_reg:x3; val_offset:186033*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186033*0 + 3*571*FLEN/8, x4, x1, x2)

inst_62012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000003fff; valaddr_reg:x3; val_offset:186036*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186036*0 + 3*572*FLEN/8, x4, x1, x2)

inst_62013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000007fff; valaddr_reg:x3; val_offset:186039*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186039*0 + 3*573*FLEN/8, x4, x1, x2)

inst_62014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000000ffff; valaddr_reg:x3; val_offset:186042*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186042*0 + 3*574*FLEN/8, x4, x1, x2)

inst_62015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000001ffff; valaddr_reg:x3; val_offset:186045*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186045*0 + 3*575*FLEN/8, x4, x1, x2)

inst_62016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000003ffff; valaddr_reg:x3; val_offset:186048*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186048*0 + 3*576*FLEN/8, x4, x1, x2)

inst_62017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000007ffff; valaddr_reg:x3; val_offset:186051*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186051*0 + 3*577*FLEN/8, x4, x1, x2)

inst_62018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000000fffff; valaddr_reg:x3; val_offset:186054*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186054*0 + 3*578*FLEN/8, x4, x1, x2)

inst_62019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000001fffff; valaddr_reg:x3; val_offset:186057*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186057*0 + 3*579*FLEN/8, x4, x1, x2)

inst_62020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000003fffff; valaddr_reg:x3; val_offset:186060*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186060*0 + 3*580*FLEN/8, x4, x1, x2)

inst_62021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000007fffff; valaddr_reg:x3; val_offset:186063*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186063*0 + 3*581*FLEN/8, x4, x1, x2)

inst_62022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000000ffffff; valaddr_reg:x3; val_offset:186066*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186066*0 + 3*582*FLEN/8, x4, x1, x2)

inst_62023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000001ffffff; valaddr_reg:x3; val_offset:186069*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186069*0 + 3*583*FLEN/8, x4, x1, x2)

inst_62024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000003ffffff; valaddr_reg:x3; val_offset:186072*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186072*0 + 3*584*FLEN/8, x4, x1, x2)

inst_62025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000007ffffff; valaddr_reg:x3; val_offset:186075*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186075*0 + 3*585*FLEN/8, x4, x1, x2)

inst_62026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000000fffffff; valaddr_reg:x3; val_offset:186078*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186078*0 + 3*586*FLEN/8, x4, x1, x2)

inst_62027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000001fffffff; valaddr_reg:x3; val_offset:186081*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186081*0 + 3*587*FLEN/8, x4, x1, x2)

inst_62028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000003fffffff; valaddr_reg:x3; val_offset:186084*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186084*0 + 3*588*FLEN/8, x4, x1, x2)

inst_62029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000007fffffff; valaddr_reg:x3; val_offset:186087*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186087*0 + 3*589*FLEN/8, x4, x1, x2)

inst_62030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00000ffffffff; valaddr_reg:x3; val_offset:186090*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186090*0 + 3*590*FLEN/8, x4, x1, x2)

inst_62031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00001ffffffff; valaddr_reg:x3; val_offset:186093*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186093*0 + 3*591*FLEN/8, x4, x1, x2)

inst_62032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00003ffffffff; valaddr_reg:x3; val_offset:186096*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186096*0 + 3*592*FLEN/8, x4, x1, x2)

inst_62033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00007ffffffff; valaddr_reg:x3; val_offset:186099*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186099*0 + 3*593*FLEN/8, x4, x1, x2)

inst_62034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0000fffffffff; valaddr_reg:x3; val_offset:186102*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186102*0 + 3*594*FLEN/8, x4, x1, x2)

inst_62035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0001fffffffff; valaddr_reg:x3; val_offset:186105*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186105*0 + 3*595*FLEN/8, x4, x1, x2)

inst_62036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0003fffffffff; valaddr_reg:x3; val_offset:186108*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186108*0 + 3*596*FLEN/8, x4, x1, x2)

inst_62037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0007fffffffff; valaddr_reg:x3; val_offset:186111*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186111*0 + 3*597*FLEN/8, x4, x1, x2)

inst_62038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb000ffffffffff; valaddr_reg:x3; val_offset:186114*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186114*0 + 3*598*FLEN/8, x4, x1, x2)

inst_62039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb001ffffffffff; valaddr_reg:x3; val_offset:186117*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186117*0 + 3*599*FLEN/8, x4, x1, x2)

inst_62040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb003ffffffffff; valaddr_reg:x3; val_offset:186120*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186120*0 + 3*600*FLEN/8, x4, x1, x2)

inst_62041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb007ffffffffff; valaddr_reg:x3; val_offset:186123*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186123*0 + 3*601*FLEN/8, x4, x1, x2)

inst_62042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb00fffffffffff; valaddr_reg:x3; val_offset:186126*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186126*0 + 3*602*FLEN/8, x4, x1, x2)

inst_62043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb01fffffffffff; valaddr_reg:x3; val_offset:186129*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186129*0 + 3*603*FLEN/8, x4, x1, x2)

inst_62044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb03fffffffffff; valaddr_reg:x3; val_offset:186132*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186132*0 + 3*604*FLEN/8, x4, x1, x2)

inst_62045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb07fffffffffff; valaddr_reg:x3; val_offset:186135*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186135*0 + 3*605*FLEN/8, x4, x1, x2)

inst_62046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb0ffffffffffff; valaddr_reg:x3; val_offset:186138*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186138*0 + 3*606*FLEN/8, x4, x1, x2)

inst_62047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb1ffffffffffff; valaddr_reg:x3; val_offset:186141*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186141*0 + 3*607*FLEN/8, x4, x1, x2)

inst_62048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb3ffffffffffff; valaddr_reg:x3; val_offset:186144*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186144*0 + 3*608*FLEN/8, x4, x1, x2)

inst_62049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb7ffffffffffff; valaddr_reg:x3; val_offset:186147*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186147*0 + 3*609*FLEN/8, x4, x1, x2)

inst_62050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cb8000000000000; valaddr_reg:x3; val_offset:186150*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186150*0 + 3*610*FLEN/8, x4, x1, x2)

inst_62051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbc000000000000; valaddr_reg:x3; val_offset:186153*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186153*0 + 3*611*FLEN/8, x4, x1, x2)

inst_62052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbe000000000000; valaddr_reg:x3; val_offset:186156*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186156*0 + 3*612*FLEN/8, x4, x1, x2)

inst_62053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbf000000000000; valaddr_reg:x3; val_offset:186159*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186159*0 + 3*613*FLEN/8, x4, x1, x2)

inst_62054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbf800000000000; valaddr_reg:x3; val_offset:186162*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186162*0 + 3*614*FLEN/8, x4, x1, x2)

inst_62055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfc00000000000; valaddr_reg:x3; val_offset:186165*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186165*0 + 3*615*FLEN/8, x4, x1, x2)

inst_62056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfe00000000000; valaddr_reg:x3; val_offset:186168*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186168*0 + 3*616*FLEN/8, x4, x1, x2)

inst_62057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbff00000000000; valaddr_reg:x3; val_offset:186171*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186171*0 + 3*617*FLEN/8, x4, x1, x2)

inst_62058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbff80000000000; valaddr_reg:x3; val_offset:186174*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186174*0 + 3*618*FLEN/8, x4, x1, x2)

inst_62059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffc0000000000; valaddr_reg:x3; val_offset:186177*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186177*0 + 3*619*FLEN/8, x4, x1, x2)

inst_62060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffe0000000000; valaddr_reg:x3; val_offset:186180*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186180*0 + 3*620*FLEN/8, x4, x1, x2)

inst_62061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfff0000000000; valaddr_reg:x3; val_offset:186183*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186183*0 + 3*621*FLEN/8, x4, x1, x2)

inst_62062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfff8000000000; valaddr_reg:x3; val_offset:186186*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186186*0 + 3*622*FLEN/8, x4, x1, x2)

inst_62063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffc000000000; valaddr_reg:x3; val_offset:186189*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186189*0 + 3*623*FLEN/8, x4, x1, x2)

inst_62064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffe000000000; valaddr_reg:x3; val_offset:186192*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186192*0 + 3*624*FLEN/8, x4, x1, x2)

inst_62065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffff000000000; valaddr_reg:x3; val_offset:186195*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186195*0 + 3*625*FLEN/8, x4, x1, x2)

inst_62066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffff800000000; valaddr_reg:x3; val_offset:186198*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186198*0 + 3*626*FLEN/8, x4, x1, x2)

inst_62067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffc00000000; valaddr_reg:x3; val_offset:186201*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186201*0 + 3*627*FLEN/8, x4, x1, x2)

inst_62068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffe00000000; valaddr_reg:x3; val_offset:186204*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186204*0 + 3*628*FLEN/8, x4, x1, x2)

inst_62069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffff00000000; valaddr_reg:x3; val_offset:186207*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186207*0 + 3*629*FLEN/8, x4, x1, x2)

inst_62070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffff80000000; valaddr_reg:x3; val_offset:186210*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186210*0 + 3*630*FLEN/8, x4, x1, x2)

inst_62071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffc0000000; valaddr_reg:x3; val_offset:186213*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186213*0 + 3*631*FLEN/8, x4, x1, x2)

inst_62072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffe0000000; valaddr_reg:x3; val_offset:186216*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186216*0 + 3*632*FLEN/8, x4, x1, x2)

inst_62073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffff0000000; valaddr_reg:x3; val_offset:186219*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186219*0 + 3*633*FLEN/8, x4, x1, x2)

inst_62074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffff8000000; valaddr_reg:x3; val_offset:186222*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186222*0 + 3*634*FLEN/8, x4, x1, x2)

inst_62075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffc000000; valaddr_reg:x3; val_offset:186225*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186225*0 + 3*635*FLEN/8, x4, x1, x2)

inst_62076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffe000000; valaddr_reg:x3; val_offset:186228*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186228*0 + 3*636*FLEN/8, x4, x1, x2)

inst_62077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffff000000; valaddr_reg:x3; val_offset:186231*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186231*0 + 3*637*FLEN/8, x4, x1, x2)

inst_62078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffff800000; valaddr_reg:x3; val_offset:186234*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186234*0 + 3*638*FLEN/8, x4, x1, x2)

inst_62079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffc00000; valaddr_reg:x3; val_offset:186237*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186237*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_62080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffe00000; valaddr_reg:x3; val_offset:186240*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186240*0 + 3*640*FLEN/8, x4, x1, x2)

inst_62081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffff00000; valaddr_reg:x3; val_offset:186243*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186243*0 + 3*641*FLEN/8, x4, x1, x2)

inst_62082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffff80000; valaddr_reg:x3; val_offset:186246*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186246*0 + 3*642*FLEN/8, x4, x1, x2)

inst_62083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffc0000; valaddr_reg:x3; val_offset:186249*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186249*0 + 3*643*FLEN/8, x4, x1, x2)

inst_62084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffe0000; valaddr_reg:x3; val_offset:186252*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186252*0 + 3*644*FLEN/8, x4, x1, x2)

inst_62085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffff0000; valaddr_reg:x3; val_offset:186255*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186255*0 + 3*645*FLEN/8, x4, x1, x2)

inst_62086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffff8000; valaddr_reg:x3; val_offset:186258*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186258*0 + 3*646*FLEN/8, x4, x1, x2)

inst_62087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffc000; valaddr_reg:x3; val_offset:186261*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186261*0 + 3*647*FLEN/8, x4, x1, x2)

inst_62088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffe000; valaddr_reg:x3; val_offset:186264*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186264*0 + 3*648*FLEN/8, x4, x1, x2)

inst_62089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffff000; valaddr_reg:x3; val_offset:186267*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186267*0 + 3*649*FLEN/8, x4, x1, x2)

inst_62090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffff800; valaddr_reg:x3; val_offset:186270*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186270*0 + 3*650*FLEN/8, x4, x1, x2)

inst_62091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffc00; valaddr_reg:x3; val_offset:186273*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186273*0 + 3*651*FLEN/8, x4, x1, x2)

inst_62092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffe00; valaddr_reg:x3; val_offset:186276*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186276*0 + 3*652*FLEN/8, x4, x1, x2)

inst_62093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffff00; valaddr_reg:x3; val_offset:186279*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186279*0 + 3*653*FLEN/8, x4, x1, x2)

inst_62094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffff80; valaddr_reg:x3; val_offset:186282*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186282*0 + 3*654*FLEN/8, x4, x1, x2)

inst_62095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffffc0; valaddr_reg:x3; val_offset:186285*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186285*0 + 3*655*FLEN/8, x4, x1, x2)

inst_62096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffffe0; valaddr_reg:x3; val_offset:186288*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186288*0 + 3*656*FLEN/8, x4, x1, x2)

inst_62097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffff0; valaddr_reg:x3; val_offset:186291*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186291*0 + 3*657*FLEN/8, x4, x1, x2)

inst_62098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffff8; valaddr_reg:x3; val_offset:186294*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186294*0 + 3*658*FLEN/8, x4, x1, x2)

inst_62099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffffc; valaddr_reg:x3; val_offset:186297*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186297*0 + 3*659*FLEN/8, x4, x1, x2)

inst_62100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbffffffffffffe; valaddr_reg:x3; val_offset:186300*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186300*0 + 3*660*FLEN/8, x4, x1, x2)

inst_62101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3cb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3cbfffffffffffff; valaddr_reg:x3; val_offset:186303*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186303*0 + 3*661*FLEN/8, x4, x1, x2)

inst_62102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:186306*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186306*0 + 3*662*FLEN/8, x4, x1, x2)

inst_62103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:186309*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186309*0 + 3*663*FLEN/8, x4, x1, x2)

inst_62104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:186312*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186312*0 + 3*664*FLEN/8, x4, x1, x2)

inst_62105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:186315*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186315*0 + 3*665*FLEN/8, x4, x1, x2)

inst_62106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:186318*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186318*0 + 3*666*FLEN/8, x4, x1, x2)

inst_62107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:186321*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186321*0 + 3*667*FLEN/8, x4, x1, x2)

inst_62108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:186324*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186324*0 + 3*668*FLEN/8, x4, x1, x2)

inst_62109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:186327*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186327*0 + 3*669*FLEN/8, x4, x1, x2)

inst_62110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:186330*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186330*0 + 3*670*FLEN/8, x4, x1, x2)

inst_62111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:186333*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186333*0 + 3*671*FLEN/8, x4, x1, x2)

inst_62112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:186336*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186336*0 + 3*672*FLEN/8, x4, x1, x2)

inst_62113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:186339*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186339*0 + 3*673*FLEN/8, x4, x1, x2)

inst_62114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:186342*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186342*0 + 3*674*FLEN/8, x4, x1, x2)

inst_62115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:186345*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186345*0 + 3*675*FLEN/8, x4, x1, x2)

inst_62116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:186348*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186348*0 + 3*676*FLEN/8, x4, x1, x2)

inst_62117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:186351*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186351*0 + 3*677*FLEN/8, x4, x1, x2)

inst_62118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:186354*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186354*0 + 3*678*FLEN/8, x4, x1, x2)

inst_62119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:186357*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186357*0 + 3*679*FLEN/8, x4, x1, x2)

inst_62120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:186360*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186360*0 + 3*680*FLEN/8, x4, x1, x2)

inst_62121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:186363*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186363*0 + 3*681*FLEN/8, x4, x1, x2)

inst_62122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:186366*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186366*0 + 3*682*FLEN/8, x4, x1, x2)

inst_62123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb2d2bbe8d07d9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2d6ffe274482f; op2val:0x203b2d2bbe8d07d9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:186369*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186369*0 + 3*683*FLEN/8, x4, x1, x2)

inst_62124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:186372*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186372*0 + 3*684*FLEN/8, x4, x1, x2)

inst_62125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:186375*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186375*0 + 3*685*FLEN/8, x4, x1, x2)

inst_62126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:186378*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186378*0 + 3*686*FLEN/8, x4, x1, x2)

inst_62127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:186381*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186381*0 + 3*687*FLEN/8, x4, x1, x2)

inst_62128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:186384*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186384*0 + 3*688*FLEN/8, x4, x1, x2)

inst_62129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:186387*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186387*0 + 3*689*FLEN/8, x4, x1, x2)

inst_62130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:186390*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186390*0 + 3*690*FLEN/8, x4, x1, x2)

inst_62131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:186393*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186393*0 + 3*691*FLEN/8, x4, x1, x2)

inst_62132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:186396*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186396*0 + 3*692*FLEN/8, x4, x1, x2)

inst_62133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:186399*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186399*0 + 3*693*FLEN/8, x4, x1, x2)

inst_62134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:186402*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186402*0 + 3*694*FLEN/8, x4, x1, x2)

inst_62135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:186405*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186405*0 + 3*695*FLEN/8, x4, x1, x2)

inst_62136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:186408*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186408*0 + 3*696*FLEN/8, x4, x1, x2)

inst_62137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:186411*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186411*0 + 3*697*FLEN/8, x4, x1, x2)

inst_62138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:186414*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186414*0 + 3*698*FLEN/8, x4, x1, x2)

inst_62139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:186417*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186417*0 + 3*699*FLEN/8, x4, x1, x2)

inst_62140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:186420*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186420*0 + 3*700*FLEN/8, x4, x1, x2)

inst_62141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:186423*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186423*0 + 3*701*FLEN/8, x4, x1, x2)

inst_62142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:186426*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186426*0 + 3*702*FLEN/8, x4, x1, x2)

inst_62143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:186429*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186429*0 + 3*703*FLEN/8, x4, x1, x2)

inst_62144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:186432*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186432*0 + 3*704*FLEN/8, x4, x1, x2)

inst_62145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:186435*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186435*0 + 3*705*FLEN/8, x4, x1, x2)

inst_62146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000000000; valaddr_reg:x3; val_offset:186438*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186438*0 + 3*706*FLEN/8, x4, x1, x2)

inst_62147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000000001; valaddr_reg:x3; val_offset:186441*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186441*0 + 3*707*FLEN/8, x4, x1, x2)

inst_62148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000000003; valaddr_reg:x3; val_offset:186444*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186444*0 + 3*708*FLEN/8, x4, x1, x2)

inst_62149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000000007; valaddr_reg:x3; val_offset:186447*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186447*0 + 3*709*FLEN/8, x4, x1, x2)

inst_62150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000000000f; valaddr_reg:x3; val_offset:186450*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186450*0 + 3*710*FLEN/8, x4, x1, x2)

inst_62151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000000001f; valaddr_reg:x3; val_offset:186453*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186453*0 + 3*711*FLEN/8, x4, x1, x2)

inst_62152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000000003f; valaddr_reg:x3; val_offset:186456*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186456*0 + 3*712*FLEN/8, x4, x1, x2)

inst_62153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000000007f; valaddr_reg:x3; val_offset:186459*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186459*0 + 3*713*FLEN/8, x4, x1, x2)

inst_62154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000000000ff; valaddr_reg:x3; val_offset:186462*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186462*0 + 3*714*FLEN/8, x4, x1, x2)

inst_62155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000000001ff; valaddr_reg:x3; val_offset:186465*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186465*0 + 3*715*FLEN/8, x4, x1, x2)

inst_62156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000000003ff; valaddr_reg:x3; val_offset:186468*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186468*0 + 3*716*FLEN/8, x4, x1, x2)

inst_62157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000000007ff; valaddr_reg:x3; val_offset:186471*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186471*0 + 3*717*FLEN/8, x4, x1, x2)

inst_62158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000000fff; valaddr_reg:x3; val_offset:186474*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186474*0 + 3*718*FLEN/8, x4, x1, x2)

inst_62159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000001fff; valaddr_reg:x3; val_offset:186477*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186477*0 + 3*719*FLEN/8, x4, x1, x2)

inst_62160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000003fff; valaddr_reg:x3; val_offset:186480*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186480*0 + 3*720*FLEN/8, x4, x1, x2)

inst_62161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000007fff; valaddr_reg:x3; val_offset:186483*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186483*0 + 3*721*FLEN/8, x4, x1, x2)

inst_62162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000000ffff; valaddr_reg:x3; val_offset:186486*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186486*0 + 3*722*FLEN/8, x4, x1, x2)

inst_62163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000001ffff; valaddr_reg:x3; val_offset:186489*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186489*0 + 3*723*FLEN/8, x4, x1, x2)

inst_62164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000003ffff; valaddr_reg:x3; val_offset:186492*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186492*0 + 3*724*FLEN/8, x4, x1, x2)

inst_62165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000007ffff; valaddr_reg:x3; val_offset:186495*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186495*0 + 3*725*FLEN/8, x4, x1, x2)

inst_62166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000000fffff; valaddr_reg:x3; val_offset:186498*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186498*0 + 3*726*FLEN/8, x4, x1, x2)

inst_62167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000001fffff; valaddr_reg:x3; val_offset:186501*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186501*0 + 3*727*FLEN/8, x4, x1, x2)

inst_62168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000003fffff; valaddr_reg:x3; val_offset:186504*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186504*0 + 3*728*FLEN/8, x4, x1, x2)

inst_62169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000007fffff; valaddr_reg:x3; val_offset:186507*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186507*0 + 3*729*FLEN/8, x4, x1, x2)

inst_62170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000000ffffff; valaddr_reg:x3; val_offset:186510*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186510*0 + 3*730*FLEN/8, x4, x1, x2)

inst_62171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000001ffffff; valaddr_reg:x3; val_offset:186513*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186513*0 + 3*731*FLEN/8, x4, x1, x2)

inst_62172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000003ffffff; valaddr_reg:x3; val_offset:186516*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186516*0 + 3*732*FLEN/8, x4, x1, x2)

inst_62173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000007ffffff; valaddr_reg:x3; val_offset:186519*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186519*0 + 3*733*FLEN/8, x4, x1, x2)

inst_62174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000000fffffff; valaddr_reg:x3; val_offset:186522*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186522*0 + 3*734*FLEN/8, x4, x1, x2)

inst_62175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000001fffffff; valaddr_reg:x3; val_offset:186525*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186525*0 + 3*735*FLEN/8, x4, x1, x2)

inst_62176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000003fffffff; valaddr_reg:x3; val_offset:186528*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186528*0 + 3*736*FLEN/8, x4, x1, x2)

inst_62177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000007fffffff; valaddr_reg:x3; val_offset:186531*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186531*0 + 3*737*FLEN/8, x4, x1, x2)

inst_62178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00000ffffffff; valaddr_reg:x3; val_offset:186534*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186534*0 + 3*738*FLEN/8, x4, x1, x2)

inst_62179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00001ffffffff; valaddr_reg:x3; val_offset:186537*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186537*0 + 3*739*FLEN/8, x4, x1, x2)

inst_62180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00003ffffffff; valaddr_reg:x3; val_offset:186540*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186540*0 + 3*740*FLEN/8, x4, x1, x2)

inst_62181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00007ffffffff; valaddr_reg:x3; val_offset:186543*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186543*0 + 3*741*FLEN/8, x4, x1, x2)

inst_62182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0000fffffffff; valaddr_reg:x3; val_offset:186546*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186546*0 + 3*742*FLEN/8, x4, x1, x2)

inst_62183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0001fffffffff; valaddr_reg:x3; val_offset:186549*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186549*0 + 3*743*FLEN/8, x4, x1, x2)

inst_62184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0003fffffffff; valaddr_reg:x3; val_offset:186552*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186552*0 + 3*744*FLEN/8, x4, x1, x2)

inst_62185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0007fffffffff; valaddr_reg:x3; val_offset:186555*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186555*0 + 3*745*FLEN/8, x4, x1, x2)

inst_62186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c000ffffffffff; valaddr_reg:x3; val_offset:186558*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186558*0 + 3*746*FLEN/8, x4, x1, x2)

inst_62187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c001ffffffffff; valaddr_reg:x3; val_offset:186561*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186561*0 + 3*747*FLEN/8, x4, x1, x2)

inst_62188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c003ffffffffff; valaddr_reg:x3; val_offset:186564*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186564*0 + 3*748*FLEN/8, x4, x1, x2)

inst_62189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c007ffffffffff; valaddr_reg:x3; val_offset:186567*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186567*0 + 3*749*FLEN/8, x4, x1, x2)

inst_62190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c00fffffffffff; valaddr_reg:x3; val_offset:186570*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186570*0 + 3*750*FLEN/8, x4, x1, x2)

inst_62191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c01fffffffffff; valaddr_reg:x3; val_offset:186573*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186573*0 + 3*751*FLEN/8, x4, x1, x2)

inst_62192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c03fffffffffff; valaddr_reg:x3; val_offset:186576*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186576*0 + 3*752*FLEN/8, x4, x1, x2)

inst_62193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c07fffffffffff; valaddr_reg:x3; val_offset:186579*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186579*0 + 3*753*FLEN/8, x4, x1, x2)

inst_62194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c0ffffffffffff; valaddr_reg:x3; val_offset:186582*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186582*0 + 3*754*FLEN/8, x4, x1, x2)

inst_62195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c1ffffffffffff; valaddr_reg:x3; val_offset:186585*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186585*0 + 3*755*FLEN/8, x4, x1, x2)

inst_62196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c3ffffffffffff; valaddr_reg:x3; val_offset:186588*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186588*0 + 3*756*FLEN/8, x4, x1, x2)

inst_62197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c7ffffffffffff; valaddr_reg:x3; val_offset:186591*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186591*0 + 3*757*FLEN/8, x4, x1, x2)

inst_62198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82c8000000000000; valaddr_reg:x3; val_offset:186594*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186594*0 + 3*758*FLEN/8, x4, x1, x2)

inst_62199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cc000000000000; valaddr_reg:x3; val_offset:186597*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186597*0 + 3*759*FLEN/8, x4, x1, x2)

inst_62200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82ce000000000000; valaddr_reg:x3; val_offset:186600*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186600*0 + 3*760*FLEN/8, x4, x1, x2)

inst_62201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cf000000000000; valaddr_reg:x3; val_offset:186603*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186603*0 + 3*761*FLEN/8, x4, x1, x2)

inst_62202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cf800000000000; valaddr_reg:x3; val_offset:186606*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186606*0 + 3*762*FLEN/8, x4, x1, x2)

inst_62203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cfc00000000000; valaddr_reg:x3; val_offset:186609*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186609*0 + 3*763*FLEN/8, x4, x1, x2)

inst_62204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cfe00000000000; valaddr_reg:x3; val_offset:186612*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186612*0 + 3*764*FLEN/8, x4, x1, x2)

inst_62205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cff00000000000; valaddr_reg:x3; val_offset:186615*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186615*0 + 3*765*FLEN/8, x4, x1, x2)

inst_62206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cff80000000000; valaddr_reg:x3; val_offset:186618*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186618*0 + 3*766*FLEN/8, x4, x1, x2)

inst_62207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2dcd7882c3264 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2dcd7882c3264; op2val:0x8000;
op3val:0x82cffc0000000000; valaddr_reg:x3; val_offset:186621*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186621*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728863603851264,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728864677593088,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865214464000,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865482899456,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865617117184,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865684226048,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865717780480,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865734557696,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865742946304,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865747140608,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865749237760,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865750286336,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865750810624,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751072768,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751203840,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751269376,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751302144,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751318528,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751326720,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751330816,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751332864,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751333888,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334400,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334656,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334784,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334848,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334880,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334896,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334904,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334908,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334910,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728865751334911,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312448,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312449,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312451,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312455,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312463,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312479,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312511,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312575,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312703,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526312959,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526313471,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526314495,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526316543,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526320639,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526328831,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526345215,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526377983,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526443519,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526574591,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422526836735,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422527361023,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422528409599,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422530506751,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422534701055,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422543089663,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422559866879,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422593421311,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422660530175,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146422794747903,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146423063183359,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146423600054271,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146424673796095,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146426821279743,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146431116247039,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146439706181631,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146456886050815,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146491245789183,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146559965265919,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146697404219391,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562146972282126335,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562147522037940223,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562148621549567999,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562150820572823551,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562155218619334655,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562164014712356863,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562181606898401279,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562216791270490111,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562287160014667775,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562427897503023103,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4562709372479733759,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4563272322433155071,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4564398222339997695,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4564398222339997696,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4565524122246840320,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566087072200261632,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566368547176972288,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566509284665327616,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566579653409505280,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566614837781594112,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566632429967638528,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566641226060660736,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566645624107171840,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566647823130427392,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566648922642055168,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566649472397869056,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566649747275776000,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566649884714729472,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566649953434206208,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566649987793944576,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650004973813760,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650013563748352,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650017858715648,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650020006199296,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650021079941120,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650021616812032,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650021885247488,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022019465216,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022086574080,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022120128512,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022136905728,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022145294336,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022149488640,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022151585792,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022152634368,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153158656,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153420800,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153551872,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153617408,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153650176,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153666560,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153674752,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153678848,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153680896,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153681920,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682432,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682688,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682816,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682880,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682912,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682928,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682936,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682940,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682942,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4566650022153682943,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891281153520125089,64,FLEN)
NAN_BOXED(2322536836163389327,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747008,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747009,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747011,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747015,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747023,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747039,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747071,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747135,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747263,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856747519,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856748031,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856749055,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856751103,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856755199,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856763391,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856779775,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856812543,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682856878079,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682857009151,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682857271295,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682857795583,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682858844159,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682860941311,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682865135615,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682873524223,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682890301439,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682923855871,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791682990964735,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791683125182463,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791683393617919,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791683930488831,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791685004230655,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791687151714303,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791691446681599,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791700036616191,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791717216485375,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791751576223743,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791820295700479,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501791957734653951,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501792232612560895,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501792782368374783,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501793881880002559,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501796080903258111,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501800478949769215,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501809275042791423,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501826867228835839,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501862051600924671,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13501932420345102335,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13502073157833457663,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13502354632810168319,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13502917582763589631,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13504043482670432255,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13504043482670432256,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13505169382577274880,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13505732332530696192,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506013807507406848,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506154544995762176,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506224913739939840,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506260098112028672,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506277690298073088,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506286486391095296,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506290884437606400,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506293083460861952,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506294182972489728,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506294732728303616,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295007606210560,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295145045164032,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295213764640768,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295248124379136,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295265304248320,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295273894182912,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295278189150208,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295280336633856,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295281410375680,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295281947246592,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282215682048,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282349899776,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282417008640,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282450563072,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282467340288,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282475728896,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282479923200,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282482020352,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282483068928,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282483593216,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282483855360,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282483986432,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484051968,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484084736,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484101120,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484109312,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484113408,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484115456,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484116480,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484116992,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117248,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117376,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117440,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117472,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117488,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117496,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117500,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117502,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13506295282484117503,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891284097643193828,64,FLEN)
NAN_BOXED(11514379389787194570,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520192,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520193,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520195,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520199,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520207,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520223,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520255,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520319,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520447,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520703,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048521215,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048522239,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048524287,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048528383,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048536575,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048552959,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048585727,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048651263,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048782335,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049044479,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049568767,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426050617343,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426052714495,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426056908799,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426065297407,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426082074623,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426115629055,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426182737919,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426316955647,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426585391103,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976427122262015,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976428196003839,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976430343487487,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976434638454783,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976443228389375,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976460408258559,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976494767996927,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976563487473663,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976700926427135,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976975804334079,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353977525560147967,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353978625071775743,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353980824095031295,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353985222141542399,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353994018234564607,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354011610420609023,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354046794792697855,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354117163536875519,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354257901025230847,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354539376001941503,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9355102325955362815,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205439,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205440,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357354125769048064,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357917075722469376,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358198550699180032,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358339288187535360,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358409656931713024,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358444841303801856,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358462433489846272,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358471229582868480,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358475627629379584,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358477826652635136,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358478926164262912,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479475920076800,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479750797983744,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479888236937216,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479956956413952,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479991316152320,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480008496021504,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480017085956096,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480021380923392,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480023528407040,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480024602148864,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025139019776,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025407455232,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025541672960,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025608781824,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025642336256,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025659113472,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025667502080,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025671696384,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025673793536,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025674842112,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675366400,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675628544,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675759616,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675825152,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675857920,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675874304,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675882496,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675886592,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675888640,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675889664,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890176,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890432,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890560,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890624,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890656,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890672,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890680,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890684,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890686,64,FLEN)
NAN_BOXED(6891300068742835589,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890687,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6891301786993946770,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751616,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751617,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751619,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751623,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751631,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751647,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751679,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751743,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176751871,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176752127,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176752639,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176753663,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176755711,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176759807,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176767999,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176784383,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176817151,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238176882687,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238177013759,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238177275903,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238177800191,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238178848767,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238180945919,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238185140223,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238193528831,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238210306047,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238243860479,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238310969343,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238445187071,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995238713622527,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995239250493439,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995240324235263,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995242471718911,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995246766686207,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995255356620799,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995272536489983,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995306896228351,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995375615705087,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995513054658559,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372995787932565503,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372996337688379391,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372997437200007167,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4372999636223262719,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373004034269773823,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373012830362796031,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373030422548840447,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373065606920929279,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373135975665106943,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373276713153462271,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4373558188130172927,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4374121138083594239,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4375247037990436863,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4375247037990436864,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4376372937897279488,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4376935887850700800,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377217362827411456,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377358100315766784,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377428469059944448,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377463653432033280,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377481245618077696,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377490041711099904,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377494439757611008,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377496638780866560,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377497738292494336,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498288048308224,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498562926215168,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498700365168640,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498769084645376,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498803444383744,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498820624252928,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498829214187520,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498833509154816,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498835656638464,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498836730380288,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837267251200,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837535686656,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837669904384,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837737013248,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837770567680,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837787344896,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837795733504,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837799927808,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837802024960,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837803073536,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837803597824,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837803859968,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837803991040,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804056576,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804089344,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804105728,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804113920,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804118016,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804120064,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804121088,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804121600,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804121856,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804121984,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122048,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122080,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122096,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122104,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122108,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122110,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4377498837804122111,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891306774334556207,64,FLEN)
NAN_BOXED(2322499698743379929,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077632,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077633,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077635,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077639,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077647,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077663,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077695,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077759,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077887,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078143,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078655,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459079679,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459081727,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459085823,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459094015,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459110399,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459143167,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459208703,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459339775,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459601919,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420460126207,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420461174783,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420463271935,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420467466239,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420475854847,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420492632063,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420526186495,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420593295359,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420727513087,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420995948543,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530421532819455,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530422606561279,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530424754044927,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530429049012223,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530437638946815,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530454818815999,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530489178554367,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530557898031103,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530695336984575,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530970214891519,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421531519970705407,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421532619482333183,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421534818505588735,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421539216552099839,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421548012645122047,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421565604831166463,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421600789203255295,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421671157947432959,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421811895435788287,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422093370412498943,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422656320365920255,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762879,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762880,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9424908120179605504,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425471070133026816,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425752545109737472,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425893282598092800,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425963651342270464,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425998835714359296,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426016427900403712,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426025223993425920,64,FLEN)
NAN_BOXED(6891313198090957412,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426029622039937024,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
