
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_86784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:260352*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260352*0 + 3*0*FLEN/8, x4, x1, x2)

inst_86785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:260355*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260355*0 + 3*1*FLEN/8, x4, x1, x2)

inst_86786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:260358*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260358*0 + 3*2*FLEN/8, x4, x1, x2)

inst_86787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:260361*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260361*0 + 3*3*FLEN/8, x4, x1, x2)

inst_86788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:260364*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260364*0 + 3*4*FLEN/8, x4, x1, x2)

inst_86789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:260367*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260367*0 + 3*5*FLEN/8, x4, x1, x2)

inst_86790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:260370*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260370*0 + 3*6*FLEN/8, x4, x1, x2)

inst_86791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:260373*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260373*0 + 3*7*FLEN/8, x4, x1, x2)

inst_86792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:260376*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260376*0 + 3*8*FLEN/8, x4, x1, x2)

inst_86793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:260379*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260379*0 + 3*9*FLEN/8, x4, x1, x2)

inst_86794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:260382*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260382*0 + 3*10*FLEN/8, x4, x1, x2)

inst_86795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaca45d2ad2569 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x31c8c6a27d588 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaca45d2ad2569; op2val:0x9fc31c8c6a27d588;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:260385*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260385*0 + 3*11*FLEN/8, x4, x1, x2)

inst_86796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:260388*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260388*0 + 3*12*FLEN/8, x4, x1, x2)

inst_86797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:260391*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260391*0 + 3*13*FLEN/8, x4, x1, x2)

inst_86798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:260394*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260394*0 + 3*14*FLEN/8, x4, x1, x2)

inst_86799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:260397*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260397*0 + 3*15*FLEN/8, x4, x1, x2)

inst_86800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:260400*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260400*0 + 3*16*FLEN/8, x4, x1, x2)

inst_86801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:260403*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260403*0 + 3*17*FLEN/8, x4, x1, x2)

inst_86802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:260406*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260406*0 + 3*18*FLEN/8, x4, x1, x2)

inst_86803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:260409*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260409*0 + 3*19*FLEN/8, x4, x1, x2)

inst_86804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:260412*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260412*0 + 3*20*FLEN/8, x4, x1, x2)

inst_86805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:260415*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260415*0 + 3*21*FLEN/8, x4, x1, x2)

inst_86806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:260418*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260418*0 + 3*22*FLEN/8, x4, x1, x2)

inst_86807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:260421*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260421*0 + 3*23*FLEN/8, x4, x1, x2)

inst_86808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:260424*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260424*0 + 3*24*FLEN/8, x4, x1, x2)

inst_86809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:260427*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260427*0 + 3*25*FLEN/8, x4, x1, x2)

inst_86810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:260430*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260430*0 + 3*26*FLEN/8, x4, x1, x2)

inst_86811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:260433*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260433*0 + 3*27*FLEN/8, x4, x1, x2)

inst_86812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:260436*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260436*0 + 3*28*FLEN/8, x4, x1, x2)

inst_86813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:260439*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260439*0 + 3*29*FLEN/8, x4, x1, x2)

inst_86814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:260442*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260442*0 + 3*30*FLEN/8, x4, x1, x2)

inst_86815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:260445*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260445*0 + 3*31*FLEN/8, x4, x1, x2)

inst_86816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:260448*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260448*0 + 3*32*FLEN/8, x4, x1, x2)

inst_86817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:260451*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260451*0 + 3*33*FLEN/8, x4, x1, x2)

inst_86818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000000000; valaddr_reg:x3; val_offset:260454*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260454*0 + 3*34*FLEN/8, x4, x1, x2)

inst_86819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000000001; valaddr_reg:x3; val_offset:260457*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260457*0 + 3*35*FLEN/8, x4, x1, x2)

inst_86820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000000003; valaddr_reg:x3; val_offset:260460*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260460*0 + 3*36*FLEN/8, x4, x1, x2)

inst_86821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000000007; valaddr_reg:x3; val_offset:260463*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260463*0 + 3*37*FLEN/8, x4, x1, x2)

inst_86822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000000000f; valaddr_reg:x3; val_offset:260466*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260466*0 + 3*38*FLEN/8, x4, x1, x2)

inst_86823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000000001f; valaddr_reg:x3; val_offset:260469*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260469*0 + 3*39*FLEN/8, x4, x1, x2)

inst_86824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000000003f; valaddr_reg:x3; val_offset:260472*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260472*0 + 3*40*FLEN/8, x4, x1, x2)

inst_86825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000000007f; valaddr_reg:x3; val_offset:260475*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260475*0 + 3*41*FLEN/8, x4, x1, x2)

inst_86826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000000000ff; valaddr_reg:x3; val_offset:260478*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260478*0 + 3*42*FLEN/8, x4, x1, x2)

inst_86827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000000001ff; valaddr_reg:x3; val_offset:260481*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260481*0 + 3*43*FLEN/8, x4, x1, x2)

inst_86828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000000003ff; valaddr_reg:x3; val_offset:260484*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260484*0 + 3*44*FLEN/8, x4, x1, x2)

inst_86829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000000007ff; valaddr_reg:x3; val_offset:260487*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260487*0 + 3*45*FLEN/8, x4, x1, x2)

inst_86830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000000fff; valaddr_reg:x3; val_offset:260490*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260490*0 + 3*46*FLEN/8, x4, x1, x2)

inst_86831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000001fff; valaddr_reg:x3; val_offset:260493*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260493*0 + 3*47*FLEN/8, x4, x1, x2)

inst_86832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000003fff; valaddr_reg:x3; val_offset:260496*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260496*0 + 3*48*FLEN/8, x4, x1, x2)

inst_86833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000007fff; valaddr_reg:x3; val_offset:260499*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260499*0 + 3*49*FLEN/8, x4, x1, x2)

inst_86834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000000ffff; valaddr_reg:x3; val_offset:260502*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260502*0 + 3*50*FLEN/8, x4, x1, x2)

inst_86835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000001ffff; valaddr_reg:x3; val_offset:260505*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260505*0 + 3*51*FLEN/8, x4, x1, x2)

inst_86836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000003ffff; valaddr_reg:x3; val_offset:260508*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260508*0 + 3*52*FLEN/8, x4, x1, x2)

inst_86837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000007ffff; valaddr_reg:x3; val_offset:260511*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260511*0 + 3*53*FLEN/8, x4, x1, x2)

inst_86838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000000fffff; valaddr_reg:x3; val_offset:260514*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260514*0 + 3*54*FLEN/8, x4, x1, x2)

inst_86839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000001fffff; valaddr_reg:x3; val_offset:260517*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260517*0 + 3*55*FLEN/8, x4, x1, x2)

inst_86840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000003fffff; valaddr_reg:x3; val_offset:260520*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260520*0 + 3*56*FLEN/8, x4, x1, x2)

inst_86841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000007fffff; valaddr_reg:x3; val_offset:260523*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260523*0 + 3*57*FLEN/8, x4, x1, x2)

inst_86842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000000ffffff; valaddr_reg:x3; val_offset:260526*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260526*0 + 3*58*FLEN/8, x4, x1, x2)

inst_86843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000001ffffff; valaddr_reg:x3; val_offset:260529*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260529*0 + 3*59*FLEN/8, x4, x1, x2)

inst_86844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000003ffffff; valaddr_reg:x3; val_offset:260532*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260532*0 + 3*60*FLEN/8, x4, x1, x2)

inst_86845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000007ffffff; valaddr_reg:x3; val_offset:260535*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260535*0 + 3*61*FLEN/8, x4, x1, x2)

inst_86846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000000fffffff; valaddr_reg:x3; val_offset:260538*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260538*0 + 3*62*FLEN/8, x4, x1, x2)

inst_86847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000001fffffff; valaddr_reg:x3; val_offset:260541*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260541*0 + 3*63*FLEN/8, x4, x1, x2)

inst_86848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000003fffffff; valaddr_reg:x3; val_offset:260544*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260544*0 + 3*64*FLEN/8, x4, x1, x2)

inst_86849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000007fffffff; valaddr_reg:x3; val_offset:260547*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260547*0 + 3*65*FLEN/8, x4, x1, x2)

inst_86850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00000ffffffff; valaddr_reg:x3; val_offset:260550*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260550*0 + 3*66*FLEN/8, x4, x1, x2)

inst_86851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00001ffffffff; valaddr_reg:x3; val_offset:260553*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260553*0 + 3*67*FLEN/8, x4, x1, x2)

inst_86852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00003ffffffff; valaddr_reg:x3; val_offset:260556*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260556*0 + 3*68*FLEN/8, x4, x1, x2)

inst_86853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00007ffffffff; valaddr_reg:x3; val_offset:260559*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260559*0 + 3*69*FLEN/8, x4, x1, x2)

inst_86854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0000fffffffff; valaddr_reg:x3; val_offset:260562*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260562*0 + 3*70*FLEN/8, x4, x1, x2)

inst_86855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0001fffffffff; valaddr_reg:x3; val_offset:260565*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260565*0 + 3*71*FLEN/8, x4, x1, x2)

inst_86856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0003fffffffff; valaddr_reg:x3; val_offset:260568*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260568*0 + 3*72*FLEN/8, x4, x1, x2)

inst_86857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0007fffffffff; valaddr_reg:x3; val_offset:260571*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260571*0 + 3*73*FLEN/8, x4, x1, x2)

inst_86858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b000ffffffffff; valaddr_reg:x3; val_offset:260574*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260574*0 + 3*74*FLEN/8, x4, x1, x2)

inst_86859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b001ffffffffff; valaddr_reg:x3; val_offset:260577*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260577*0 + 3*75*FLEN/8, x4, x1, x2)

inst_86860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b003ffffffffff; valaddr_reg:x3; val_offset:260580*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260580*0 + 3*76*FLEN/8, x4, x1, x2)

inst_86861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b007ffffffffff; valaddr_reg:x3; val_offset:260583*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260583*0 + 3*77*FLEN/8, x4, x1, x2)

inst_86862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b00fffffffffff; valaddr_reg:x3; val_offset:260586*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260586*0 + 3*78*FLEN/8, x4, x1, x2)

inst_86863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b01fffffffffff; valaddr_reg:x3; val_offset:260589*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260589*0 + 3*79*FLEN/8, x4, x1, x2)

inst_86864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b03fffffffffff; valaddr_reg:x3; val_offset:260592*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260592*0 + 3*80*FLEN/8, x4, x1, x2)

inst_86865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b07fffffffffff; valaddr_reg:x3; val_offset:260595*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260595*0 + 3*81*FLEN/8, x4, x1, x2)

inst_86866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b0ffffffffffff; valaddr_reg:x3; val_offset:260598*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260598*0 + 3*82*FLEN/8, x4, x1, x2)

inst_86867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b1ffffffffffff; valaddr_reg:x3; val_offset:260601*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260601*0 + 3*83*FLEN/8, x4, x1, x2)

inst_86868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b3ffffffffffff; valaddr_reg:x3; val_offset:260604*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260604*0 + 3*84*FLEN/8, x4, x1, x2)

inst_86869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b7ffffffffffff; valaddr_reg:x3; val_offset:260607*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260607*0 + 3*85*FLEN/8, x4, x1, x2)

inst_86870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81b8000000000000; valaddr_reg:x3; val_offset:260610*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260610*0 + 3*86*FLEN/8, x4, x1, x2)

inst_86871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bc000000000000; valaddr_reg:x3; val_offset:260613*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260613*0 + 3*87*FLEN/8, x4, x1, x2)

inst_86872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81be000000000000; valaddr_reg:x3; val_offset:260616*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260616*0 + 3*88*FLEN/8, x4, x1, x2)

inst_86873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bf000000000000; valaddr_reg:x3; val_offset:260619*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260619*0 + 3*89*FLEN/8, x4, x1, x2)

inst_86874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bf800000000000; valaddr_reg:x3; val_offset:260622*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260622*0 + 3*90*FLEN/8, x4, x1, x2)

inst_86875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfc00000000000; valaddr_reg:x3; val_offset:260625*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260625*0 + 3*91*FLEN/8, x4, x1, x2)

inst_86876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfe00000000000; valaddr_reg:x3; val_offset:260628*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260628*0 + 3*92*FLEN/8, x4, x1, x2)

inst_86877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bff00000000000; valaddr_reg:x3; val_offset:260631*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260631*0 + 3*93*FLEN/8, x4, x1, x2)

inst_86878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bff80000000000; valaddr_reg:x3; val_offset:260634*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260634*0 + 3*94*FLEN/8, x4, x1, x2)

inst_86879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffc0000000000; valaddr_reg:x3; val_offset:260637*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260637*0 + 3*95*FLEN/8, x4, x1, x2)

inst_86880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffe0000000000; valaddr_reg:x3; val_offset:260640*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260640*0 + 3*96*FLEN/8, x4, x1, x2)

inst_86881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfff0000000000; valaddr_reg:x3; val_offset:260643*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260643*0 + 3*97*FLEN/8, x4, x1, x2)

inst_86882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfff8000000000; valaddr_reg:x3; val_offset:260646*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260646*0 + 3*98*FLEN/8, x4, x1, x2)

inst_86883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffc000000000; valaddr_reg:x3; val_offset:260649*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260649*0 + 3*99*FLEN/8, x4, x1, x2)

inst_86884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffe000000000; valaddr_reg:x3; val_offset:260652*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260652*0 + 3*100*FLEN/8, x4, x1, x2)

inst_86885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffff000000000; valaddr_reg:x3; val_offset:260655*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260655*0 + 3*101*FLEN/8, x4, x1, x2)

inst_86886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffff800000000; valaddr_reg:x3; val_offset:260658*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260658*0 + 3*102*FLEN/8, x4, x1, x2)

inst_86887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffc00000000; valaddr_reg:x3; val_offset:260661*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260661*0 + 3*103*FLEN/8, x4, x1, x2)

inst_86888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffe00000000; valaddr_reg:x3; val_offset:260664*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260664*0 + 3*104*FLEN/8, x4, x1, x2)

inst_86889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffff00000000; valaddr_reg:x3; val_offset:260667*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260667*0 + 3*105*FLEN/8, x4, x1, x2)

inst_86890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffff80000000; valaddr_reg:x3; val_offset:260670*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260670*0 + 3*106*FLEN/8, x4, x1, x2)

inst_86891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffc0000000; valaddr_reg:x3; val_offset:260673*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260673*0 + 3*107*FLEN/8, x4, x1, x2)

inst_86892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffe0000000; valaddr_reg:x3; val_offset:260676*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260676*0 + 3*108*FLEN/8, x4, x1, x2)

inst_86893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffff0000000; valaddr_reg:x3; val_offset:260679*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260679*0 + 3*109*FLEN/8, x4, x1, x2)

inst_86894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffff8000000; valaddr_reg:x3; val_offset:260682*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260682*0 + 3*110*FLEN/8, x4, x1, x2)

inst_86895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffc000000; valaddr_reg:x3; val_offset:260685*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260685*0 + 3*111*FLEN/8, x4, x1, x2)

inst_86896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffe000000; valaddr_reg:x3; val_offset:260688*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260688*0 + 3*112*FLEN/8, x4, x1, x2)

inst_86897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffff000000; valaddr_reg:x3; val_offset:260691*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260691*0 + 3*113*FLEN/8, x4, x1, x2)

inst_86898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffff800000; valaddr_reg:x3; val_offset:260694*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260694*0 + 3*114*FLEN/8, x4, x1, x2)

inst_86899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffc00000; valaddr_reg:x3; val_offset:260697*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260697*0 + 3*115*FLEN/8, x4, x1, x2)

inst_86900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffe00000; valaddr_reg:x3; val_offset:260700*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260700*0 + 3*116*FLEN/8, x4, x1, x2)

inst_86901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffff00000; valaddr_reg:x3; val_offset:260703*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260703*0 + 3*117*FLEN/8, x4, x1, x2)

inst_86902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffff80000; valaddr_reg:x3; val_offset:260706*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260706*0 + 3*118*FLEN/8, x4, x1, x2)

inst_86903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffc0000; valaddr_reg:x3; val_offset:260709*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260709*0 + 3*119*FLEN/8, x4, x1, x2)

inst_86904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffe0000; valaddr_reg:x3; val_offset:260712*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260712*0 + 3*120*FLEN/8, x4, x1, x2)

inst_86905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffff0000; valaddr_reg:x3; val_offset:260715*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260715*0 + 3*121*FLEN/8, x4, x1, x2)

inst_86906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffff8000; valaddr_reg:x3; val_offset:260718*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260718*0 + 3*122*FLEN/8, x4, x1, x2)

inst_86907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffc000; valaddr_reg:x3; val_offset:260721*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260721*0 + 3*123*FLEN/8, x4, x1, x2)

inst_86908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffe000; valaddr_reg:x3; val_offset:260724*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260724*0 + 3*124*FLEN/8, x4, x1, x2)

inst_86909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffff000; valaddr_reg:x3; val_offset:260727*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260727*0 + 3*125*FLEN/8, x4, x1, x2)

inst_86910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffff800; valaddr_reg:x3; val_offset:260730*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260730*0 + 3*126*FLEN/8, x4, x1, x2)

inst_86911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffc00; valaddr_reg:x3; val_offset:260733*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260733*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_86912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffe00; valaddr_reg:x3; val_offset:260736*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260736*0 + 3*128*FLEN/8, x4, x1, x2)

inst_86913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffff00; valaddr_reg:x3; val_offset:260739*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260739*0 + 3*129*FLEN/8, x4, x1, x2)

inst_86914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffff80; valaddr_reg:x3; val_offset:260742*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260742*0 + 3*130*FLEN/8, x4, x1, x2)

inst_86915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffffc0; valaddr_reg:x3; val_offset:260745*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260745*0 + 3*131*FLEN/8, x4, x1, x2)

inst_86916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffffe0; valaddr_reg:x3; val_offset:260748*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260748*0 + 3*132*FLEN/8, x4, x1, x2)

inst_86917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffff0; valaddr_reg:x3; val_offset:260751*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260751*0 + 3*133*FLEN/8, x4, x1, x2)

inst_86918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffff8; valaddr_reg:x3; val_offset:260754*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260754*0 + 3*134*FLEN/8, x4, x1, x2)

inst_86919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffffc; valaddr_reg:x3; val_offset:260757*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260757*0 + 3*135*FLEN/8, x4, x1, x2)

inst_86920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bffffffffffffe; valaddr_reg:x3; val_offset:260760*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260760*0 + 3*136*FLEN/8, x4, x1, x2)

inst_86921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacdf0427c7282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacdf0427c7282; op2val:0x8000;
op3val:0x81bfffffffffffff; valaddr_reg:x3; val_offset:260763*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260763*0 + 3*137*FLEN/8, x4, x1, x2)

inst_86922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:260766*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260766*0 + 3*138*FLEN/8, x4, x1, x2)

inst_86923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:260769*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260769*0 + 3*139*FLEN/8, x4, x1, x2)

inst_86924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:260772*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260772*0 + 3*140*FLEN/8, x4, x1, x2)

inst_86925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:260775*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260775*0 + 3*141*FLEN/8, x4, x1, x2)

inst_86926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:260778*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260778*0 + 3*142*FLEN/8, x4, x1, x2)

inst_86927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:260781*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260781*0 + 3*143*FLEN/8, x4, x1, x2)

inst_86928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:260784*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260784*0 + 3*144*FLEN/8, x4, x1, x2)

inst_86929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:260787*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260787*0 + 3*145*FLEN/8, x4, x1, x2)

inst_86930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:260790*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260790*0 + 3*146*FLEN/8, x4, x1, x2)

inst_86931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:260793*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260793*0 + 3*147*FLEN/8, x4, x1, x2)

inst_86932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:260796*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260796*0 + 3*148*FLEN/8, x4, x1, x2)

inst_86933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:260799*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260799*0 + 3*149*FLEN/8, x4, x1, x2)

inst_86934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:260802*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260802*0 + 3*150*FLEN/8, x4, x1, x2)

inst_86935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:260805*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260805*0 + 3*151*FLEN/8, x4, x1, x2)

inst_86936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:260808*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260808*0 + 3*152*FLEN/8, x4, x1, x2)

inst_86937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:260811*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260811*0 + 3*153*FLEN/8, x4, x1, x2)

inst_86938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:260814*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260814*0 + 3*154*FLEN/8, x4, x1, x2)

inst_86939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:260817*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260817*0 + 3*155*FLEN/8, x4, x1, x2)

inst_86940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:260820*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260820*0 + 3*156*FLEN/8, x4, x1, x2)

inst_86941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:260823*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260823*0 + 3*157*FLEN/8, x4, x1, x2)

inst_86942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:260826*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260826*0 + 3*158*FLEN/8, x4, x1, x2)

inst_86943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:260829*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260829*0 + 3*159*FLEN/8, x4, x1, x2)

inst_86944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000000000; valaddr_reg:x3; val_offset:260832*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260832*0 + 3*160*FLEN/8, x4, x1, x2)

inst_86945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000000001; valaddr_reg:x3; val_offset:260835*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260835*0 + 3*161*FLEN/8, x4, x1, x2)

inst_86946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000000003; valaddr_reg:x3; val_offset:260838*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260838*0 + 3*162*FLEN/8, x4, x1, x2)

inst_86947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000000007; valaddr_reg:x3; val_offset:260841*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260841*0 + 3*163*FLEN/8, x4, x1, x2)

inst_86948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000000000f; valaddr_reg:x3; val_offset:260844*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260844*0 + 3*164*FLEN/8, x4, x1, x2)

inst_86949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000000001f; valaddr_reg:x3; val_offset:260847*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260847*0 + 3*165*FLEN/8, x4, x1, x2)

inst_86950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000000003f; valaddr_reg:x3; val_offset:260850*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260850*0 + 3*166*FLEN/8, x4, x1, x2)

inst_86951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000000007f; valaddr_reg:x3; val_offset:260853*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260853*0 + 3*167*FLEN/8, x4, x1, x2)

inst_86952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000000000ff; valaddr_reg:x3; val_offset:260856*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260856*0 + 3*168*FLEN/8, x4, x1, x2)

inst_86953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000000001ff; valaddr_reg:x3; val_offset:260859*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260859*0 + 3*169*FLEN/8, x4, x1, x2)

inst_86954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000000003ff; valaddr_reg:x3; val_offset:260862*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260862*0 + 3*170*FLEN/8, x4, x1, x2)

inst_86955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000000007ff; valaddr_reg:x3; val_offset:260865*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260865*0 + 3*171*FLEN/8, x4, x1, x2)

inst_86956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000000fff; valaddr_reg:x3; val_offset:260868*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260868*0 + 3*172*FLEN/8, x4, x1, x2)

inst_86957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000001fff; valaddr_reg:x3; val_offset:260871*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260871*0 + 3*173*FLEN/8, x4, x1, x2)

inst_86958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000003fff; valaddr_reg:x3; val_offset:260874*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260874*0 + 3*174*FLEN/8, x4, x1, x2)

inst_86959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000007fff; valaddr_reg:x3; val_offset:260877*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260877*0 + 3*175*FLEN/8, x4, x1, x2)

inst_86960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000000ffff; valaddr_reg:x3; val_offset:260880*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260880*0 + 3*176*FLEN/8, x4, x1, x2)

inst_86961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000001ffff; valaddr_reg:x3; val_offset:260883*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260883*0 + 3*177*FLEN/8, x4, x1, x2)

inst_86962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000003ffff; valaddr_reg:x3; val_offset:260886*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260886*0 + 3*178*FLEN/8, x4, x1, x2)

inst_86963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000007ffff; valaddr_reg:x3; val_offset:260889*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260889*0 + 3*179*FLEN/8, x4, x1, x2)

inst_86964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000000fffff; valaddr_reg:x3; val_offset:260892*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260892*0 + 3*180*FLEN/8, x4, x1, x2)

inst_86965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000001fffff; valaddr_reg:x3; val_offset:260895*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260895*0 + 3*181*FLEN/8, x4, x1, x2)

inst_86966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000003fffff; valaddr_reg:x3; val_offset:260898*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260898*0 + 3*182*FLEN/8, x4, x1, x2)

inst_86967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000007fffff; valaddr_reg:x3; val_offset:260901*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260901*0 + 3*183*FLEN/8, x4, x1, x2)

inst_86968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000000ffffff; valaddr_reg:x3; val_offset:260904*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260904*0 + 3*184*FLEN/8, x4, x1, x2)

inst_86969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000001ffffff; valaddr_reg:x3; val_offset:260907*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260907*0 + 3*185*FLEN/8, x4, x1, x2)

inst_86970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000003ffffff; valaddr_reg:x3; val_offset:260910*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260910*0 + 3*186*FLEN/8, x4, x1, x2)

inst_86971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000007ffffff; valaddr_reg:x3; val_offset:260913*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260913*0 + 3*187*FLEN/8, x4, x1, x2)

inst_86972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000000fffffff; valaddr_reg:x3; val_offset:260916*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260916*0 + 3*188*FLEN/8, x4, x1, x2)

inst_86973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000001fffffff; valaddr_reg:x3; val_offset:260919*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260919*0 + 3*189*FLEN/8, x4, x1, x2)

inst_86974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000003fffffff; valaddr_reg:x3; val_offset:260922*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260922*0 + 3*190*FLEN/8, x4, x1, x2)

inst_86975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000007fffffff; valaddr_reg:x3; val_offset:260925*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260925*0 + 3*191*FLEN/8, x4, x1, x2)

inst_86976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800000ffffffff; valaddr_reg:x3; val_offset:260928*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260928*0 + 3*192*FLEN/8, x4, x1, x2)

inst_86977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800001ffffffff; valaddr_reg:x3; val_offset:260931*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260931*0 + 3*193*FLEN/8, x4, x1, x2)

inst_86978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800003ffffffff; valaddr_reg:x3; val_offset:260934*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260934*0 + 3*194*FLEN/8, x4, x1, x2)

inst_86979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800007ffffffff; valaddr_reg:x3; val_offset:260937*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260937*0 + 3*195*FLEN/8, x4, x1, x2)

inst_86980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080000fffffffff; valaddr_reg:x3; val_offset:260940*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260940*0 + 3*196*FLEN/8, x4, x1, x2)

inst_86981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080001fffffffff; valaddr_reg:x3; val_offset:260943*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260943*0 + 3*197*FLEN/8, x4, x1, x2)

inst_86982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080003fffffffff; valaddr_reg:x3; val_offset:260946*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260946*0 + 3*198*FLEN/8, x4, x1, x2)

inst_86983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080007fffffffff; valaddr_reg:x3; val_offset:260949*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260949*0 + 3*199*FLEN/8, x4, x1, x2)

inst_86984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808000ffffffffff; valaddr_reg:x3; val_offset:260952*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260952*0 + 3*200*FLEN/8, x4, x1, x2)

inst_86985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808001ffffffffff; valaddr_reg:x3; val_offset:260955*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260955*0 + 3*201*FLEN/8, x4, x1, x2)

inst_86986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808003ffffffffff; valaddr_reg:x3; val_offset:260958*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260958*0 + 3*202*FLEN/8, x4, x1, x2)

inst_86987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808007ffffffffff; valaddr_reg:x3; val_offset:260961*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260961*0 + 3*203*FLEN/8, x4, x1, x2)

inst_86988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80800fffffffffff; valaddr_reg:x3; val_offset:260964*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260964*0 + 3*204*FLEN/8, x4, x1, x2)

inst_86989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80801fffffffffff; valaddr_reg:x3; val_offset:260967*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260967*0 + 3*205*FLEN/8, x4, x1, x2)

inst_86990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80803fffffffffff; valaddr_reg:x3; val_offset:260970*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260970*0 + 3*206*FLEN/8, x4, x1, x2)

inst_86991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x80807fffffffffff; valaddr_reg:x3; val_offset:260973*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260973*0 + 3*207*FLEN/8, x4, x1, x2)

inst_86992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8080ffffffffffff; valaddr_reg:x3; val_offset:260976*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260976*0 + 3*208*FLEN/8, x4, x1, x2)

inst_86993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8081ffffffffffff; valaddr_reg:x3; val_offset:260979*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260979*0 + 3*209*FLEN/8, x4, x1, x2)

inst_86994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8083ffffffffffff; valaddr_reg:x3; val_offset:260982*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260982*0 + 3*210*FLEN/8, x4, x1, x2)

inst_86995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8087ffffffffffff; valaddr_reg:x3; val_offset:260985*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260985*0 + 3*211*FLEN/8, x4, x1, x2)

inst_86996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x8088000000000000; valaddr_reg:x3; val_offset:260988*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260988*0 + 3*212*FLEN/8, x4, x1, x2)

inst_86997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808c000000000000; valaddr_reg:x3; val_offset:260991*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260991*0 + 3*213*FLEN/8, x4, x1, x2)

inst_86998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808e000000000000; valaddr_reg:x3; val_offset:260994*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260994*0 + 3*214*FLEN/8, x4, x1, x2)

inst_86999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808f000000000000; valaddr_reg:x3; val_offset:260997*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260997*0 + 3*215*FLEN/8, x4, x1, x2)

inst_87000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808f800000000000; valaddr_reg:x3; val_offset:261000*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261000*0 + 3*216*FLEN/8, x4, x1, x2)

inst_87001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fc00000000000; valaddr_reg:x3; val_offset:261003*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261003*0 + 3*217*FLEN/8, x4, x1, x2)

inst_87002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fe00000000000; valaddr_reg:x3; val_offset:261006*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261006*0 + 3*218*FLEN/8, x4, x1, x2)

inst_87003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ff00000000000; valaddr_reg:x3; val_offset:261009*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261009*0 + 3*219*FLEN/8, x4, x1, x2)

inst_87004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ff80000000000; valaddr_reg:x3; val_offset:261012*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261012*0 + 3*220*FLEN/8, x4, x1, x2)

inst_87005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffc0000000000; valaddr_reg:x3; val_offset:261015*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261015*0 + 3*221*FLEN/8, x4, x1, x2)

inst_87006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffe0000000000; valaddr_reg:x3; val_offset:261018*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261018*0 + 3*222*FLEN/8, x4, x1, x2)

inst_87007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fff0000000000; valaddr_reg:x3; val_offset:261021*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261021*0 + 3*223*FLEN/8, x4, x1, x2)

inst_87008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fff8000000000; valaddr_reg:x3; val_offset:261024*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261024*0 + 3*224*FLEN/8, x4, x1, x2)

inst_87009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffc000000000; valaddr_reg:x3; val_offset:261027*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261027*0 + 3*225*FLEN/8, x4, x1, x2)

inst_87010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffe000000000; valaddr_reg:x3; val_offset:261030*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261030*0 + 3*226*FLEN/8, x4, x1, x2)

inst_87011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffff000000000; valaddr_reg:x3; val_offset:261033*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261033*0 + 3*227*FLEN/8, x4, x1, x2)

inst_87012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffff800000000; valaddr_reg:x3; val_offset:261036*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261036*0 + 3*228*FLEN/8, x4, x1, x2)

inst_87013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffc00000000; valaddr_reg:x3; val_offset:261039*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261039*0 + 3*229*FLEN/8, x4, x1, x2)

inst_87014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffe00000000; valaddr_reg:x3; val_offset:261042*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261042*0 + 3*230*FLEN/8, x4, x1, x2)

inst_87015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffff00000000; valaddr_reg:x3; val_offset:261045*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261045*0 + 3*231*FLEN/8, x4, x1, x2)

inst_87016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffff80000000; valaddr_reg:x3; val_offset:261048*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261048*0 + 3*232*FLEN/8, x4, x1, x2)

inst_87017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffc0000000; valaddr_reg:x3; val_offset:261051*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261051*0 + 3*233*FLEN/8, x4, x1, x2)

inst_87018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffe0000000; valaddr_reg:x3; val_offset:261054*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261054*0 + 3*234*FLEN/8, x4, x1, x2)

inst_87019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffff0000000; valaddr_reg:x3; val_offset:261057*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261057*0 + 3*235*FLEN/8, x4, x1, x2)

inst_87020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffff8000000; valaddr_reg:x3; val_offset:261060*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261060*0 + 3*236*FLEN/8, x4, x1, x2)

inst_87021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffc000000; valaddr_reg:x3; val_offset:261063*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261063*0 + 3*237*FLEN/8, x4, x1, x2)

inst_87022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffe000000; valaddr_reg:x3; val_offset:261066*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261066*0 + 3*238*FLEN/8, x4, x1, x2)

inst_87023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffff000000; valaddr_reg:x3; val_offset:261069*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261069*0 + 3*239*FLEN/8, x4, x1, x2)

inst_87024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffff800000; valaddr_reg:x3; val_offset:261072*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261072*0 + 3*240*FLEN/8, x4, x1, x2)

inst_87025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffc00000; valaddr_reg:x3; val_offset:261075*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261075*0 + 3*241*FLEN/8, x4, x1, x2)

inst_87026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffe00000; valaddr_reg:x3; val_offset:261078*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261078*0 + 3*242*FLEN/8, x4, x1, x2)

inst_87027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffff00000; valaddr_reg:x3; val_offset:261081*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261081*0 + 3*243*FLEN/8, x4, x1, x2)

inst_87028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffff80000; valaddr_reg:x3; val_offset:261084*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261084*0 + 3*244*FLEN/8, x4, x1, x2)

inst_87029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffc0000; valaddr_reg:x3; val_offset:261087*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261087*0 + 3*245*FLEN/8, x4, x1, x2)

inst_87030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffe0000; valaddr_reg:x3; val_offset:261090*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261090*0 + 3*246*FLEN/8, x4, x1, x2)

inst_87031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffff0000; valaddr_reg:x3; val_offset:261093*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261093*0 + 3*247*FLEN/8, x4, x1, x2)

inst_87032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffff8000; valaddr_reg:x3; val_offset:261096*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261096*0 + 3*248*FLEN/8, x4, x1, x2)

inst_87033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffc000; valaddr_reg:x3; val_offset:261099*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261099*0 + 3*249*FLEN/8, x4, x1, x2)

inst_87034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffe000; valaddr_reg:x3; val_offset:261102*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261102*0 + 3*250*FLEN/8, x4, x1, x2)

inst_87035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffff000; valaddr_reg:x3; val_offset:261105*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261105*0 + 3*251*FLEN/8, x4, x1, x2)

inst_87036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffff800; valaddr_reg:x3; val_offset:261108*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261108*0 + 3*252*FLEN/8, x4, x1, x2)

inst_87037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffc00; valaddr_reg:x3; val_offset:261111*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261111*0 + 3*253*FLEN/8, x4, x1, x2)

inst_87038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffe00; valaddr_reg:x3; val_offset:261114*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261114*0 + 3*254*FLEN/8, x4, x1, x2)

inst_87039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffff00; valaddr_reg:x3; val_offset:261117*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261117*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_87040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffff80; valaddr_reg:x3; val_offset:261120*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261120*0 + 3*256*FLEN/8, x4, x1, x2)

inst_87041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffffc0; valaddr_reg:x3; val_offset:261123*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261123*0 + 3*257*FLEN/8, x4, x1, x2)

inst_87042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffffe0; valaddr_reg:x3; val_offset:261126*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261126*0 + 3*258*FLEN/8, x4, x1, x2)

inst_87043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffff0; valaddr_reg:x3; val_offset:261129*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261129*0 + 3*259*FLEN/8, x4, x1, x2)

inst_87044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffff8; valaddr_reg:x3; val_offset:261132*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261132*0 + 3*260*FLEN/8, x4, x1, x2)

inst_87045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffffc; valaddr_reg:x3; val_offset:261135*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261135*0 + 3*261*FLEN/8, x4, x1, x2)

inst_87046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808ffffffffffffe; valaddr_reg:x3; val_offset:261138*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261138*0 + 3*262*FLEN/8, x4, x1, x2)

inst_87047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacf1fde886c3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faacf1fde886c3f; op2val:0x8000;
op3val:0x808fffffffffffff; valaddr_reg:x3; val_offset:261141*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261141*0 + 3*263*FLEN/8, x4, x1, x2)

inst_87048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000000000; valaddr_reg:x3; val_offset:261144*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261144*0 + 3*264*FLEN/8, x4, x1, x2)

inst_87049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000000001; valaddr_reg:x3; val_offset:261147*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261147*0 + 3*265*FLEN/8, x4, x1, x2)

inst_87050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000000003; valaddr_reg:x3; val_offset:261150*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261150*0 + 3*266*FLEN/8, x4, x1, x2)

inst_87051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000000007; valaddr_reg:x3; val_offset:261153*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261153*0 + 3*267*FLEN/8, x4, x1, x2)

inst_87052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000000000f; valaddr_reg:x3; val_offset:261156*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261156*0 + 3*268*FLEN/8, x4, x1, x2)

inst_87053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000000001f; valaddr_reg:x3; val_offset:261159*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261159*0 + 3*269*FLEN/8, x4, x1, x2)

inst_87054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000000003f; valaddr_reg:x3; val_offset:261162*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261162*0 + 3*270*FLEN/8, x4, x1, x2)

inst_87055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000000007f; valaddr_reg:x3; val_offset:261165*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261165*0 + 3*271*FLEN/8, x4, x1, x2)

inst_87056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000000000ff; valaddr_reg:x3; val_offset:261168*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261168*0 + 3*272*FLEN/8, x4, x1, x2)

inst_87057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000000001ff; valaddr_reg:x3; val_offset:261171*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261171*0 + 3*273*FLEN/8, x4, x1, x2)

inst_87058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000000003ff; valaddr_reg:x3; val_offset:261174*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261174*0 + 3*274*FLEN/8, x4, x1, x2)

inst_87059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000000007ff; valaddr_reg:x3; val_offset:261177*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261177*0 + 3*275*FLEN/8, x4, x1, x2)

inst_87060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000000fff; valaddr_reg:x3; val_offset:261180*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261180*0 + 3*276*FLEN/8, x4, x1, x2)

inst_87061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000001fff; valaddr_reg:x3; val_offset:261183*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261183*0 + 3*277*FLEN/8, x4, x1, x2)

inst_87062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000003fff; valaddr_reg:x3; val_offset:261186*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261186*0 + 3*278*FLEN/8, x4, x1, x2)

inst_87063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000007fff; valaddr_reg:x3; val_offset:261189*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261189*0 + 3*279*FLEN/8, x4, x1, x2)

inst_87064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000000ffff; valaddr_reg:x3; val_offset:261192*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261192*0 + 3*280*FLEN/8, x4, x1, x2)

inst_87065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000001ffff; valaddr_reg:x3; val_offset:261195*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261195*0 + 3*281*FLEN/8, x4, x1, x2)

inst_87066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000003ffff; valaddr_reg:x3; val_offset:261198*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261198*0 + 3*282*FLEN/8, x4, x1, x2)

inst_87067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000007ffff; valaddr_reg:x3; val_offset:261201*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261201*0 + 3*283*FLEN/8, x4, x1, x2)

inst_87068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000000fffff; valaddr_reg:x3; val_offset:261204*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261204*0 + 3*284*FLEN/8, x4, x1, x2)

inst_87069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000001fffff; valaddr_reg:x3; val_offset:261207*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261207*0 + 3*285*FLEN/8, x4, x1, x2)

inst_87070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000003fffff; valaddr_reg:x3; val_offset:261210*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261210*0 + 3*286*FLEN/8, x4, x1, x2)

inst_87071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000007fffff; valaddr_reg:x3; val_offset:261213*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261213*0 + 3*287*FLEN/8, x4, x1, x2)

inst_87072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000000ffffff; valaddr_reg:x3; val_offset:261216*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261216*0 + 3*288*FLEN/8, x4, x1, x2)

inst_87073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000001ffffff; valaddr_reg:x3; val_offset:261219*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261219*0 + 3*289*FLEN/8, x4, x1, x2)

inst_87074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000003ffffff; valaddr_reg:x3; val_offset:261222*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261222*0 + 3*290*FLEN/8, x4, x1, x2)

inst_87075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000007ffffff; valaddr_reg:x3; val_offset:261225*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261225*0 + 3*291*FLEN/8, x4, x1, x2)

inst_87076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000000fffffff; valaddr_reg:x3; val_offset:261228*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261228*0 + 3*292*FLEN/8, x4, x1, x2)

inst_87077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000001fffffff; valaddr_reg:x3; val_offset:261231*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261231*0 + 3*293*FLEN/8, x4, x1, x2)

inst_87078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000003fffffff; valaddr_reg:x3; val_offset:261234*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261234*0 + 3*294*FLEN/8, x4, x1, x2)

inst_87079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000007fffffff; valaddr_reg:x3; val_offset:261237*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261237*0 + 3*295*FLEN/8, x4, x1, x2)

inst_87080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400000ffffffff; valaddr_reg:x3; val_offset:261240*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261240*0 + 3*296*FLEN/8, x4, x1, x2)

inst_87081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400001ffffffff; valaddr_reg:x3; val_offset:261243*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261243*0 + 3*297*FLEN/8, x4, x1, x2)

inst_87082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400003ffffffff; valaddr_reg:x3; val_offset:261246*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261246*0 + 3*298*FLEN/8, x4, x1, x2)

inst_87083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400007ffffffff; valaddr_reg:x3; val_offset:261249*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261249*0 + 3*299*FLEN/8, x4, x1, x2)

inst_87084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40000fffffffff; valaddr_reg:x3; val_offset:261252*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261252*0 + 3*300*FLEN/8, x4, x1, x2)

inst_87085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40001fffffffff; valaddr_reg:x3; val_offset:261255*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261255*0 + 3*301*FLEN/8, x4, x1, x2)

inst_87086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40003fffffffff; valaddr_reg:x3; val_offset:261258*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261258*0 + 3*302*FLEN/8, x4, x1, x2)

inst_87087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40007fffffffff; valaddr_reg:x3; val_offset:261261*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261261*0 + 3*303*FLEN/8, x4, x1, x2)

inst_87088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4000ffffffffff; valaddr_reg:x3; val_offset:261264*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261264*0 + 3*304*FLEN/8, x4, x1, x2)

inst_87089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4001ffffffffff; valaddr_reg:x3; val_offset:261267*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261267*0 + 3*305*FLEN/8, x4, x1, x2)

inst_87090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4003ffffffffff; valaddr_reg:x3; val_offset:261270*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261270*0 + 3*306*FLEN/8, x4, x1, x2)

inst_87091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4007ffffffffff; valaddr_reg:x3; val_offset:261273*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261273*0 + 3*307*FLEN/8, x4, x1, x2)

inst_87092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c400fffffffffff; valaddr_reg:x3; val_offset:261276*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261276*0 + 3*308*FLEN/8, x4, x1, x2)

inst_87093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c401fffffffffff; valaddr_reg:x3; val_offset:261279*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261279*0 + 3*309*FLEN/8, x4, x1, x2)

inst_87094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c403fffffffffff; valaddr_reg:x3; val_offset:261282*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261282*0 + 3*310*FLEN/8, x4, x1, x2)

inst_87095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c407fffffffffff; valaddr_reg:x3; val_offset:261285*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261285*0 + 3*311*FLEN/8, x4, x1, x2)

inst_87096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c40ffffffffffff; valaddr_reg:x3; val_offset:261288*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261288*0 + 3*312*FLEN/8, x4, x1, x2)

inst_87097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c41ffffffffffff; valaddr_reg:x3; val_offset:261291*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261291*0 + 3*313*FLEN/8, x4, x1, x2)

inst_87098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c43ffffffffffff; valaddr_reg:x3; val_offset:261294*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261294*0 + 3*314*FLEN/8, x4, x1, x2)

inst_87099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c47ffffffffffff; valaddr_reg:x3; val_offset:261297*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261297*0 + 3*315*FLEN/8, x4, x1, x2)

inst_87100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c48000000000000; valaddr_reg:x3; val_offset:261300*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261300*0 + 3*316*FLEN/8, x4, x1, x2)

inst_87101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4c000000000000; valaddr_reg:x3; val_offset:261303*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261303*0 + 3*317*FLEN/8, x4, x1, x2)

inst_87102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4e000000000000; valaddr_reg:x3; val_offset:261306*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261306*0 + 3*318*FLEN/8, x4, x1, x2)

inst_87103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4f000000000000; valaddr_reg:x3; val_offset:261309*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261309*0 + 3*319*FLEN/8, x4, x1, x2)

inst_87104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4f800000000000; valaddr_reg:x3; val_offset:261312*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261312*0 + 3*320*FLEN/8, x4, x1, x2)

inst_87105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fc00000000000; valaddr_reg:x3; val_offset:261315*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261315*0 + 3*321*FLEN/8, x4, x1, x2)

inst_87106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fe00000000000; valaddr_reg:x3; val_offset:261318*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261318*0 + 3*322*FLEN/8, x4, x1, x2)

inst_87107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ff00000000000; valaddr_reg:x3; val_offset:261321*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261321*0 + 3*323*FLEN/8, x4, x1, x2)

inst_87108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ff80000000000; valaddr_reg:x3; val_offset:261324*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261324*0 + 3*324*FLEN/8, x4, x1, x2)

inst_87109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffc0000000000; valaddr_reg:x3; val_offset:261327*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261327*0 + 3*325*FLEN/8, x4, x1, x2)

inst_87110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffe0000000000; valaddr_reg:x3; val_offset:261330*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261330*0 + 3*326*FLEN/8, x4, x1, x2)

inst_87111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fff0000000000; valaddr_reg:x3; val_offset:261333*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261333*0 + 3*327*FLEN/8, x4, x1, x2)

inst_87112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fff8000000000; valaddr_reg:x3; val_offset:261336*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261336*0 + 3*328*FLEN/8, x4, x1, x2)

inst_87113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffc000000000; valaddr_reg:x3; val_offset:261339*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261339*0 + 3*329*FLEN/8, x4, x1, x2)

inst_87114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffe000000000; valaddr_reg:x3; val_offset:261342*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261342*0 + 3*330*FLEN/8, x4, x1, x2)

inst_87115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffff000000000; valaddr_reg:x3; val_offset:261345*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261345*0 + 3*331*FLEN/8, x4, x1, x2)

inst_87116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffff800000000; valaddr_reg:x3; val_offset:261348*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261348*0 + 3*332*FLEN/8, x4, x1, x2)

inst_87117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffc00000000; valaddr_reg:x3; val_offset:261351*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261351*0 + 3*333*FLEN/8, x4, x1, x2)

inst_87118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffe00000000; valaddr_reg:x3; val_offset:261354*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261354*0 + 3*334*FLEN/8, x4, x1, x2)

inst_87119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffff00000000; valaddr_reg:x3; val_offset:261357*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261357*0 + 3*335*FLEN/8, x4, x1, x2)

inst_87120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffff80000000; valaddr_reg:x3; val_offset:261360*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261360*0 + 3*336*FLEN/8, x4, x1, x2)

inst_87121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffc0000000; valaddr_reg:x3; val_offset:261363*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261363*0 + 3*337*FLEN/8, x4, x1, x2)

inst_87122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffe0000000; valaddr_reg:x3; val_offset:261366*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261366*0 + 3*338*FLEN/8, x4, x1, x2)

inst_87123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffff0000000; valaddr_reg:x3; val_offset:261369*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261369*0 + 3*339*FLEN/8, x4, x1, x2)

inst_87124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffff8000000; valaddr_reg:x3; val_offset:261372*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261372*0 + 3*340*FLEN/8, x4, x1, x2)

inst_87125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffc000000; valaddr_reg:x3; val_offset:261375*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261375*0 + 3*341*FLEN/8, x4, x1, x2)

inst_87126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffe000000; valaddr_reg:x3; val_offset:261378*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261378*0 + 3*342*FLEN/8, x4, x1, x2)

inst_87127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffff000000; valaddr_reg:x3; val_offset:261381*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261381*0 + 3*343*FLEN/8, x4, x1, x2)

inst_87128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffff800000; valaddr_reg:x3; val_offset:261384*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261384*0 + 3*344*FLEN/8, x4, x1, x2)

inst_87129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffc00000; valaddr_reg:x3; val_offset:261387*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261387*0 + 3*345*FLEN/8, x4, x1, x2)

inst_87130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffe00000; valaddr_reg:x3; val_offset:261390*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261390*0 + 3*346*FLEN/8, x4, x1, x2)

inst_87131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffff00000; valaddr_reg:x3; val_offset:261393*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261393*0 + 3*347*FLEN/8, x4, x1, x2)

inst_87132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffff80000; valaddr_reg:x3; val_offset:261396*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261396*0 + 3*348*FLEN/8, x4, x1, x2)

inst_87133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffc0000; valaddr_reg:x3; val_offset:261399*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261399*0 + 3*349*FLEN/8, x4, x1, x2)

inst_87134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffe0000; valaddr_reg:x3; val_offset:261402*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261402*0 + 3*350*FLEN/8, x4, x1, x2)

inst_87135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffff0000; valaddr_reg:x3; val_offset:261405*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261405*0 + 3*351*FLEN/8, x4, x1, x2)

inst_87136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffff8000; valaddr_reg:x3; val_offset:261408*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261408*0 + 3*352*FLEN/8, x4, x1, x2)

inst_87137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffc000; valaddr_reg:x3; val_offset:261411*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261411*0 + 3*353*FLEN/8, x4, x1, x2)

inst_87138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffe000; valaddr_reg:x3; val_offset:261414*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261414*0 + 3*354*FLEN/8, x4, x1, x2)

inst_87139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffff000; valaddr_reg:x3; val_offset:261417*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261417*0 + 3*355*FLEN/8, x4, x1, x2)

inst_87140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffff800; valaddr_reg:x3; val_offset:261420*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261420*0 + 3*356*FLEN/8, x4, x1, x2)

inst_87141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffc00; valaddr_reg:x3; val_offset:261423*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261423*0 + 3*357*FLEN/8, x4, x1, x2)

inst_87142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffe00; valaddr_reg:x3; val_offset:261426*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261426*0 + 3*358*FLEN/8, x4, x1, x2)

inst_87143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffff00; valaddr_reg:x3; val_offset:261429*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261429*0 + 3*359*FLEN/8, x4, x1, x2)

inst_87144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffff80; valaddr_reg:x3; val_offset:261432*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261432*0 + 3*360*FLEN/8, x4, x1, x2)

inst_87145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffffc0; valaddr_reg:x3; val_offset:261435*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261435*0 + 3*361*FLEN/8, x4, x1, x2)

inst_87146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffffe0; valaddr_reg:x3; val_offset:261438*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261438*0 + 3*362*FLEN/8, x4, x1, x2)

inst_87147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffff0; valaddr_reg:x3; val_offset:261441*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261441*0 + 3*363*FLEN/8, x4, x1, x2)

inst_87148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffff8; valaddr_reg:x3; val_offset:261444*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261444*0 + 3*364*FLEN/8, x4, x1, x2)

inst_87149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffffc; valaddr_reg:x3; val_offset:261447*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261447*0 + 3*365*FLEN/8, x4, x1, x2)

inst_87150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4ffffffffffffe; valaddr_reg:x3; val_offset:261450*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261450*0 + 3*366*FLEN/8, x4, x1, x2)

inst_87151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3c4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3c4fffffffffffff; valaddr_reg:x3; val_offset:261453*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261453*0 + 3*367*FLEN/8, x4, x1, x2)

inst_87152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:261456*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261456*0 + 3*368*FLEN/8, x4, x1, x2)

inst_87153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:261459*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261459*0 + 3*369*FLEN/8, x4, x1, x2)

inst_87154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:261462*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261462*0 + 3*370*FLEN/8, x4, x1, x2)

inst_87155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:261465*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261465*0 + 3*371*FLEN/8, x4, x1, x2)

inst_87156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:261468*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261468*0 + 3*372*FLEN/8, x4, x1, x2)

inst_87157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:261471*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261471*0 + 3*373*FLEN/8, x4, x1, x2)

inst_87158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:261474*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261474*0 + 3*374*FLEN/8, x4, x1, x2)

inst_87159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:261477*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261477*0 + 3*375*FLEN/8, x4, x1, x2)

inst_87160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:261480*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261480*0 + 3*376*FLEN/8, x4, x1, x2)

inst_87161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:261483*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261483*0 + 3*377*FLEN/8, x4, x1, x2)

inst_87162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:261486*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261486*0 + 3*378*FLEN/8, x4, x1, x2)

inst_87163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:261489*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261489*0 + 3*379*FLEN/8, x4, x1, x2)

inst_87164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:261492*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261492*0 + 3*380*FLEN/8, x4, x1, x2)

inst_87165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:261495*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261495*0 + 3*381*FLEN/8, x4, x1, x2)

inst_87166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:261498*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261498*0 + 3*382*FLEN/8, x4, x1, x2)

inst_87167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:261501*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261501*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_87168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:261504*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261504*0 + 3*384*FLEN/8, x4, x1, x2)

inst_87169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:261507*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261507*0 + 3*385*FLEN/8, x4, x1, x2)

inst_87170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:261510*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261510*0 + 3*386*FLEN/8, x4, x1, x2)

inst_87171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:261513*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261513*0 + 3*387*FLEN/8, x4, x1, x2)

inst_87172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:261516*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261516*0 + 3*388*FLEN/8, x4, x1, x2)

inst_87173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x308a468bdeeb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae64a7b19f21e; op2val:0x203308a468bdeeb0;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:261519*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261519*0 + 3*389*FLEN/8, x4, x1, x2)

inst_87174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000000000; valaddr_reg:x3; val_offset:261522*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261522*0 + 3*390*FLEN/8, x4, x1, x2)

inst_87175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000000001; valaddr_reg:x3; val_offset:261525*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261525*0 + 3*391*FLEN/8, x4, x1, x2)

inst_87176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000000003; valaddr_reg:x3; val_offset:261528*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261528*0 + 3*392*FLEN/8, x4, x1, x2)

inst_87177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000000007; valaddr_reg:x3; val_offset:261531*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261531*0 + 3*393*FLEN/8, x4, x1, x2)

inst_87178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000000000f; valaddr_reg:x3; val_offset:261534*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261534*0 + 3*394*FLEN/8, x4, x1, x2)

inst_87179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000000001f; valaddr_reg:x3; val_offset:261537*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261537*0 + 3*395*FLEN/8, x4, x1, x2)

inst_87180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000000003f; valaddr_reg:x3; val_offset:261540*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261540*0 + 3*396*FLEN/8, x4, x1, x2)

inst_87181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000000007f; valaddr_reg:x3; val_offset:261543*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261543*0 + 3*397*FLEN/8, x4, x1, x2)

inst_87182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000000000ff; valaddr_reg:x3; val_offset:261546*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261546*0 + 3*398*FLEN/8, x4, x1, x2)

inst_87183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000000001ff; valaddr_reg:x3; val_offset:261549*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261549*0 + 3*399*FLEN/8, x4, x1, x2)

inst_87184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000000003ff; valaddr_reg:x3; val_offset:261552*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261552*0 + 3*400*FLEN/8, x4, x1, x2)

inst_87185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000000007ff; valaddr_reg:x3; val_offset:261555*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261555*0 + 3*401*FLEN/8, x4, x1, x2)

inst_87186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000000fff; valaddr_reg:x3; val_offset:261558*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261558*0 + 3*402*FLEN/8, x4, x1, x2)

inst_87187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000001fff; valaddr_reg:x3; val_offset:261561*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261561*0 + 3*403*FLEN/8, x4, x1, x2)

inst_87188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000003fff; valaddr_reg:x3; val_offset:261564*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261564*0 + 3*404*FLEN/8, x4, x1, x2)

inst_87189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000007fff; valaddr_reg:x3; val_offset:261567*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261567*0 + 3*405*FLEN/8, x4, x1, x2)

inst_87190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000000ffff; valaddr_reg:x3; val_offset:261570*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261570*0 + 3*406*FLEN/8, x4, x1, x2)

inst_87191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000001ffff; valaddr_reg:x3; val_offset:261573*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261573*0 + 3*407*FLEN/8, x4, x1, x2)

inst_87192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000003ffff; valaddr_reg:x3; val_offset:261576*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261576*0 + 3*408*FLEN/8, x4, x1, x2)

inst_87193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000007ffff; valaddr_reg:x3; val_offset:261579*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261579*0 + 3*409*FLEN/8, x4, x1, x2)

inst_87194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000000fffff; valaddr_reg:x3; val_offset:261582*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261582*0 + 3*410*FLEN/8, x4, x1, x2)

inst_87195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000001fffff; valaddr_reg:x3; val_offset:261585*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261585*0 + 3*411*FLEN/8, x4, x1, x2)

inst_87196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000003fffff; valaddr_reg:x3; val_offset:261588*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261588*0 + 3*412*FLEN/8, x4, x1, x2)

inst_87197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000007fffff; valaddr_reg:x3; val_offset:261591*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261591*0 + 3*413*FLEN/8, x4, x1, x2)

inst_87198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000000ffffff; valaddr_reg:x3; val_offset:261594*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261594*0 + 3*414*FLEN/8, x4, x1, x2)

inst_87199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000001ffffff; valaddr_reg:x3; val_offset:261597*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261597*0 + 3*415*FLEN/8, x4, x1, x2)

inst_87200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000003ffffff; valaddr_reg:x3; val_offset:261600*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261600*0 + 3*416*FLEN/8, x4, x1, x2)

inst_87201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000007ffffff; valaddr_reg:x3; val_offset:261603*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261603*0 + 3*417*FLEN/8, x4, x1, x2)

inst_87202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000000fffffff; valaddr_reg:x3; val_offset:261606*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261606*0 + 3*418*FLEN/8, x4, x1, x2)

inst_87203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000001fffffff; valaddr_reg:x3; val_offset:261609*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261609*0 + 3*419*FLEN/8, x4, x1, x2)

inst_87204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000003fffffff; valaddr_reg:x3; val_offset:261612*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261612*0 + 3*420*FLEN/8, x4, x1, x2)

inst_87205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000007fffffff; valaddr_reg:x3; val_offset:261615*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261615*0 + 3*421*FLEN/8, x4, x1, x2)

inst_87206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00000ffffffff; valaddr_reg:x3; val_offset:261618*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261618*0 + 3*422*FLEN/8, x4, x1, x2)

inst_87207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00001ffffffff; valaddr_reg:x3; val_offset:261621*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261621*0 + 3*423*FLEN/8, x4, x1, x2)

inst_87208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00003ffffffff; valaddr_reg:x3; val_offset:261624*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261624*0 + 3*424*FLEN/8, x4, x1, x2)

inst_87209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00007ffffffff; valaddr_reg:x3; val_offset:261627*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261627*0 + 3*425*FLEN/8, x4, x1, x2)

inst_87210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0000fffffffff; valaddr_reg:x3; val_offset:261630*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261630*0 + 3*426*FLEN/8, x4, x1, x2)

inst_87211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0001fffffffff; valaddr_reg:x3; val_offset:261633*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261633*0 + 3*427*FLEN/8, x4, x1, x2)

inst_87212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0003fffffffff; valaddr_reg:x3; val_offset:261636*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261636*0 + 3*428*FLEN/8, x4, x1, x2)

inst_87213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0007fffffffff; valaddr_reg:x3; val_offset:261639*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261639*0 + 3*429*FLEN/8, x4, x1, x2)

inst_87214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef000ffffffffff; valaddr_reg:x3; val_offset:261642*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261642*0 + 3*430*FLEN/8, x4, x1, x2)

inst_87215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef001ffffffffff; valaddr_reg:x3; val_offset:261645*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261645*0 + 3*431*FLEN/8, x4, x1, x2)

inst_87216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef003ffffffffff; valaddr_reg:x3; val_offset:261648*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261648*0 + 3*432*FLEN/8, x4, x1, x2)

inst_87217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef007ffffffffff; valaddr_reg:x3; val_offset:261651*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261651*0 + 3*433*FLEN/8, x4, x1, x2)

inst_87218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef00fffffffffff; valaddr_reg:x3; val_offset:261654*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261654*0 + 3*434*FLEN/8, x4, x1, x2)

inst_87219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef01fffffffffff; valaddr_reg:x3; val_offset:261657*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261657*0 + 3*435*FLEN/8, x4, x1, x2)

inst_87220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef03fffffffffff; valaddr_reg:x3; val_offset:261660*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261660*0 + 3*436*FLEN/8, x4, x1, x2)

inst_87221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef07fffffffffff; valaddr_reg:x3; val_offset:261663*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261663*0 + 3*437*FLEN/8, x4, x1, x2)

inst_87222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef0ffffffffffff; valaddr_reg:x3; val_offset:261666*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261666*0 + 3*438*FLEN/8, x4, x1, x2)

inst_87223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef1ffffffffffff; valaddr_reg:x3; val_offset:261669*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261669*0 + 3*439*FLEN/8, x4, x1, x2)

inst_87224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef3ffffffffffff; valaddr_reg:x3; val_offset:261672*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261672*0 + 3*440*FLEN/8, x4, x1, x2)

inst_87225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef7ffffffffffff; valaddr_reg:x3; val_offset:261675*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261675*0 + 3*441*FLEN/8, x4, x1, x2)

inst_87226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbef8000000000000; valaddr_reg:x3; val_offset:261678*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261678*0 + 3*442*FLEN/8, x4, x1, x2)

inst_87227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefc000000000000; valaddr_reg:x3; val_offset:261681*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261681*0 + 3*443*FLEN/8, x4, x1, x2)

inst_87228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefe000000000000; valaddr_reg:x3; val_offset:261684*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261684*0 + 3*444*FLEN/8, x4, x1, x2)

inst_87229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeff000000000000; valaddr_reg:x3; val_offset:261687*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261687*0 + 3*445*FLEN/8, x4, x1, x2)

inst_87230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeff800000000000; valaddr_reg:x3; val_offset:261690*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261690*0 + 3*446*FLEN/8, x4, x1, x2)

inst_87231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffc00000000000; valaddr_reg:x3; val_offset:261693*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261693*0 + 3*447*FLEN/8, x4, x1, x2)

inst_87232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffe00000000000; valaddr_reg:x3; val_offset:261696*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261696*0 + 3*448*FLEN/8, x4, x1, x2)

inst_87233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefff00000000000; valaddr_reg:x3; val_offset:261699*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261699*0 + 3*449*FLEN/8, x4, x1, x2)

inst_87234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefff80000000000; valaddr_reg:x3; val_offset:261702*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261702*0 + 3*450*FLEN/8, x4, x1, x2)

inst_87235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffc0000000000; valaddr_reg:x3; val_offset:261705*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261705*0 + 3*451*FLEN/8, x4, x1, x2)

inst_87236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffe0000000000; valaddr_reg:x3; val_offset:261708*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261708*0 + 3*452*FLEN/8, x4, x1, x2)

inst_87237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffff0000000000; valaddr_reg:x3; val_offset:261711*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261711*0 + 3*453*FLEN/8, x4, x1, x2)

inst_87238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffff8000000000; valaddr_reg:x3; val_offset:261714*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261714*0 + 3*454*FLEN/8, x4, x1, x2)

inst_87239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffc000000000; valaddr_reg:x3; val_offset:261717*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261717*0 + 3*455*FLEN/8, x4, x1, x2)

inst_87240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffe000000000; valaddr_reg:x3; val_offset:261720*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261720*0 + 3*456*FLEN/8, x4, x1, x2)

inst_87241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffff000000000; valaddr_reg:x3; val_offset:261723*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261723*0 + 3*457*FLEN/8, x4, x1, x2)

inst_87242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffff800000000; valaddr_reg:x3; val_offset:261726*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261726*0 + 3*458*FLEN/8, x4, x1, x2)

inst_87243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffc00000000; valaddr_reg:x3; val_offset:261729*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261729*0 + 3*459*FLEN/8, x4, x1, x2)

inst_87244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffe00000000; valaddr_reg:x3; val_offset:261732*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261732*0 + 3*460*FLEN/8, x4, x1, x2)

inst_87245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffff00000000; valaddr_reg:x3; val_offset:261735*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261735*0 + 3*461*FLEN/8, x4, x1, x2)

inst_87246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffff80000000; valaddr_reg:x3; val_offset:261738*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261738*0 + 3*462*FLEN/8, x4, x1, x2)

inst_87247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffc0000000; valaddr_reg:x3; val_offset:261741*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261741*0 + 3*463*FLEN/8, x4, x1, x2)

inst_87248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffe0000000; valaddr_reg:x3; val_offset:261744*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261744*0 + 3*464*FLEN/8, x4, x1, x2)

inst_87249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffff0000000; valaddr_reg:x3; val_offset:261747*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261747*0 + 3*465*FLEN/8, x4, x1, x2)

inst_87250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffff8000000; valaddr_reg:x3; val_offset:261750*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261750*0 + 3*466*FLEN/8, x4, x1, x2)

inst_87251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffc000000; valaddr_reg:x3; val_offset:261753*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261753*0 + 3*467*FLEN/8, x4, x1, x2)

inst_87252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffe000000; valaddr_reg:x3; val_offset:261756*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261756*0 + 3*468*FLEN/8, x4, x1, x2)

inst_87253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffff000000; valaddr_reg:x3; val_offset:261759*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261759*0 + 3*469*FLEN/8, x4, x1, x2)

inst_87254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffff800000; valaddr_reg:x3; val_offset:261762*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261762*0 + 3*470*FLEN/8, x4, x1, x2)

inst_87255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffc00000; valaddr_reg:x3; val_offset:261765*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261765*0 + 3*471*FLEN/8, x4, x1, x2)

inst_87256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffe00000; valaddr_reg:x3; val_offset:261768*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261768*0 + 3*472*FLEN/8, x4, x1, x2)

inst_87257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffff00000; valaddr_reg:x3; val_offset:261771*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261771*0 + 3*473*FLEN/8, x4, x1, x2)

inst_87258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffff80000; valaddr_reg:x3; val_offset:261774*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261774*0 + 3*474*FLEN/8, x4, x1, x2)

inst_87259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffc0000; valaddr_reg:x3; val_offset:261777*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261777*0 + 3*475*FLEN/8, x4, x1, x2)

inst_87260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffe0000; valaddr_reg:x3; val_offset:261780*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261780*0 + 3*476*FLEN/8, x4, x1, x2)

inst_87261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffff0000; valaddr_reg:x3; val_offset:261783*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261783*0 + 3*477*FLEN/8, x4, x1, x2)

inst_87262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffff8000; valaddr_reg:x3; val_offset:261786*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261786*0 + 3*478*FLEN/8, x4, x1, x2)

inst_87263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffc000; valaddr_reg:x3; val_offset:261789*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261789*0 + 3*479*FLEN/8, x4, x1, x2)

inst_87264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffe000; valaddr_reg:x3; val_offset:261792*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261792*0 + 3*480*FLEN/8, x4, x1, x2)

inst_87265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffff000; valaddr_reg:x3; val_offset:261795*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261795*0 + 3*481*FLEN/8, x4, x1, x2)

inst_87266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffff800; valaddr_reg:x3; val_offset:261798*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261798*0 + 3*482*FLEN/8, x4, x1, x2)

inst_87267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffc00; valaddr_reg:x3; val_offset:261801*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261801*0 + 3*483*FLEN/8, x4, x1, x2)

inst_87268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffe00; valaddr_reg:x3; val_offset:261804*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261804*0 + 3*484*FLEN/8, x4, x1, x2)

inst_87269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffff00; valaddr_reg:x3; val_offset:261807*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261807*0 + 3*485*FLEN/8, x4, x1, x2)

inst_87270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffff80; valaddr_reg:x3; val_offset:261810*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261810*0 + 3*486*FLEN/8, x4, x1, x2)

inst_87271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffffc0; valaddr_reg:x3; val_offset:261813*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261813*0 + 3*487*FLEN/8, x4, x1, x2)

inst_87272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffffe0; valaddr_reg:x3; val_offset:261816*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261816*0 + 3*488*FLEN/8, x4, x1, x2)

inst_87273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffff0; valaddr_reg:x3; val_offset:261819*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261819*0 + 3*489*FLEN/8, x4, x1, x2)

inst_87274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffff8; valaddr_reg:x3; val_offset:261822*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261822*0 + 3*490*FLEN/8, x4, x1, x2)

inst_87275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffffc; valaddr_reg:x3; val_offset:261825*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261825*0 + 3*491*FLEN/8, x4, x1, x2)

inst_87276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbefffffffffffffe; valaddr_reg:x3; val_offset:261828*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261828*0 + 3*492*FLEN/8, x4, x1, x2)

inst_87277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbeffffffffffffff; valaddr_reg:x3; val_offset:261831*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261831*0 + 3*493*FLEN/8, x4, x1, x2)

inst_87278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:261834*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261834*0 + 3*494*FLEN/8, x4, x1, x2)

inst_87279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:261837*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261837*0 + 3*495*FLEN/8, x4, x1, x2)

inst_87280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:261840*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261840*0 + 3*496*FLEN/8, x4, x1, x2)

inst_87281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:261843*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261843*0 + 3*497*FLEN/8, x4, x1, x2)

inst_87282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:261846*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261846*0 + 3*498*FLEN/8, x4, x1, x2)

inst_87283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:261849*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261849*0 + 3*499*FLEN/8, x4, x1, x2)

inst_87284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:261852*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261852*0 + 3*500*FLEN/8, x4, x1, x2)

inst_87285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:261855*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261855*0 + 3*501*FLEN/8, x4, x1, x2)

inst_87286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:261858*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261858*0 + 3*502*FLEN/8, x4, x1, x2)

inst_87287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:261861*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261861*0 + 3*503*FLEN/8, x4, x1, x2)

inst_87288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:261864*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261864*0 + 3*504*FLEN/8, x4, x1, x2)

inst_87289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:261867*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261867*0 + 3*505*FLEN/8, x4, x1, x2)

inst_87290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:261870*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261870*0 + 3*506*FLEN/8, x4, x1, x2)

inst_87291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:261873*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261873*0 + 3*507*FLEN/8, x4, x1, x2)

inst_87292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:261876*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261876*0 + 3*508*FLEN/8, x4, x1, x2)

inst_87293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:261879*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261879*0 + 3*509*FLEN/8, x4, x1, x2)

inst_87294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:261882*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261882*0 + 3*510*FLEN/8, x4, x1, x2)

inst_87295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:261885*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261885*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_87296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:261888*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261888*0 + 3*512*FLEN/8, x4, x1, x2)

inst_87297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:261891*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261891*0 + 3*513*FLEN/8, x4, x1, x2)

inst_87298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:261894*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261894*0 + 3*514*FLEN/8, x4, x1, x2)

inst_87299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3081a4cc3b92f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae70dafae96a3; op2val:0x9fc3081a4cc3b92f;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:261897*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261897*0 + 3*515*FLEN/8, x4, x1, x2)

inst_87300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:261900*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261900*0 + 3*516*FLEN/8, x4, x1, x2)

inst_87301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:261903*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261903*0 + 3*517*FLEN/8, x4, x1, x2)

inst_87302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:261906*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261906*0 + 3*518*FLEN/8, x4, x1, x2)

inst_87303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:261909*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261909*0 + 3*519*FLEN/8, x4, x1, x2)

inst_87304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:261912*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261912*0 + 3*520*FLEN/8, x4, x1, x2)

inst_87305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:261915*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261915*0 + 3*521*FLEN/8, x4, x1, x2)

inst_87306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:261918*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261918*0 + 3*522*FLEN/8, x4, x1, x2)

inst_87307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:261921*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261921*0 + 3*523*FLEN/8, x4, x1, x2)

inst_87308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:261924*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261924*0 + 3*524*FLEN/8, x4, x1, x2)

inst_87309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:261927*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261927*0 + 3*525*FLEN/8, x4, x1, x2)

inst_87310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:261930*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261930*0 + 3*526*FLEN/8, x4, x1, x2)

inst_87311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:261933*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261933*0 + 3*527*FLEN/8, x4, x1, x2)

inst_87312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:261936*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261936*0 + 3*528*FLEN/8, x4, x1, x2)

inst_87313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:261939*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261939*0 + 3*529*FLEN/8, x4, x1, x2)

inst_87314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:261942*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261942*0 + 3*530*FLEN/8, x4, x1, x2)

inst_87315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:261945*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261945*0 + 3*531*FLEN/8, x4, x1, x2)

inst_87316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:261948*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261948*0 + 3*532*FLEN/8, x4, x1, x2)

inst_87317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:261951*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261951*0 + 3*533*FLEN/8, x4, x1, x2)

inst_87318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:261954*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261954*0 + 3*534*FLEN/8, x4, x1, x2)

inst_87319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:261957*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261957*0 + 3*535*FLEN/8, x4, x1, x2)

inst_87320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:261960*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261960*0 + 3*536*FLEN/8, x4, x1, x2)

inst_87321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:261963*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261963*0 + 3*537*FLEN/8, x4, x1, x2)

inst_87322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000000000; valaddr_reg:x3; val_offset:261966*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261966*0 + 3*538*FLEN/8, x4, x1, x2)

inst_87323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000000001; valaddr_reg:x3; val_offset:261969*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261969*0 + 3*539*FLEN/8, x4, x1, x2)

inst_87324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000000003; valaddr_reg:x3; val_offset:261972*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261972*0 + 3*540*FLEN/8, x4, x1, x2)

inst_87325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000000007; valaddr_reg:x3; val_offset:261975*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261975*0 + 3*541*FLEN/8, x4, x1, x2)

inst_87326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000000000f; valaddr_reg:x3; val_offset:261978*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261978*0 + 3*542*FLEN/8, x4, x1, x2)

inst_87327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000000001f; valaddr_reg:x3; val_offset:261981*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261981*0 + 3*543*FLEN/8, x4, x1, x2)

inst_87328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000000003f; valaddr_reg:x3; val_offset:261984*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261984*0 + 3*544*FLEN/8, x4, x1, x2)

inst_87329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000000007f; valaddr_reg:x3; val_offset:261987*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261987*0 + 3*545*FLEN/8, x4, x1, x2)

inst_87330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000000000ff; valaddr_reg:x3; val_offset:261990*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261990*0 + 3*546*FLEN/8, x4, x1, x2)

inst_87331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000000001ff; valaddr_reg:x3; val_offset:261993*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261993*0 + 3*547*FLEN/8, x4, x1, x2)

inst_87332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000000003ff; valaddr_reg:x3; val_offset:261996*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261996*0 + 3*548*FLEN/8, x4, x1, x2)

inst_87333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000000007ff; valaddr_reg:x3; val_offset:261999*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261999*0 + 3*549*FLEN/8, x4, x1, x2)

inst_87334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000000fff; valaddr_reg:x3; val_offset:262002*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262002*0 + 3*550*FLEN/8, x4, x1, x2)

inst_87335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000001fff; valaddr_reg:x3; val_offset:262005*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262005*0 + 3*551*FLEN/8, x4, x1, x2)

inst_87336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000003fff; valaddr_reg:x3; val_offset:262008*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262008*0 + 3*552*FLEN/8, x4, x1, x2)

inst_87337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000007fff; valaddr_reg:x3; val_offset:262011*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262011*0 + 3*553*FLEN/8, x4, x1, x2)

inst_87338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000000ffff; valaddr_reg:x3; val_offset:262014*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262014*0 + 3*554*FLEN/8, x4, x1, x2)

inst_87339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000001ffff; valaddr_reg:x3; val_offset:262017*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262017*0 + 3*555*FLEN/8, x4, x1, x2)

inst_87340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000003ffff; valaddr_reg:x3; val_offset:262020*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262020*0 + 3*556*FLEN/8, x4, x1, x2)

inst_87341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000007ffff; valaddr_reg:x3; val_offset:262023*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262023*0 + 3*557*FLEN/8, x4, x1, x2)

inst_87342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000000fffff; valaddr_reg:x3; val_offset:262026*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262026*0 + 3*558*FLEN/8, x4, x1, x2)

inst_87343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000001fffff; valaddr_reg:x3; val_offset:262029*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262029*0 + 3*559*FLEN/8, x4, x1, x2)

inst_87344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000003fffff; valaddr_reg:x3; val_offset:262032*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262032*0 + 3*560*FLEN/8, x4, x1, x2)

inst_87345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000007fffff; valaddr_reg:x3; val_offset:262035*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262035*0 + 3*561*FLEN/8, x4, x1, x2)

inst_87346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000000ffffff; valaddr_reg:x3; val_offset:262038*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262038*0 + 3*562*FLEN/8, x4, x1, x2)

inst_87347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000001ffffff; valaddr_reg:x3; val_offset:262041*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262041*0 + 3*563*FLEN/8, x4, x1, x2)

inst_87348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000003ffffff; valaddr_reg:x3; val_offset:262044*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262044*0 + 3*564*FLEN/8, x4, x1, x2)

inst_87349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000007ffffff; valaddr_reg:x3; val_offset:262047*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262047*0 + 3*565*FLEN/8, x4, x1, x2)

inst_87350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000000fffffff; valaddr_reg:x3; val_offset:262050*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262050*0 + 3*566*FLEN/8, x4, x1, x2)

inst_87351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000001fffffff; valaddr_reg:x3; val_offset:262053*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262053*0 + 3*567*FLEN/8, x4, x1, x2)

inst_87352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000003fffffff; valaddr_reg:x3; val_offset:262056*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262056*0 + 3*568*FLEN/8, x4, x1, x2)

inst_87353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000007fffffff; valaddr_reg:x3; val_offset:262059*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262059*0 + 3*569*FLEN/8, x4, x1, x2)

inst_87354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100000ffffffff; valaddr_reg:x3; val_offset:262062*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262062*0 + 3*570*FLEN/8, x4, x1, x2)

inst_87355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100001ffffffff; valaddr_reg:x3; val_offset:262065*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262065*0 + 3*571*FLEN/8, x4, x1, x2)

inst_87356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100003ffffffff; valaddr_reg:x3; val_offset:262068*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262068*0 + 3*572*FLEN/8, x4, x1, x2)

inst_87357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100007ffffffff; valaddr_reg:x3; val_offset:262071*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262071*0 + 3*573*FLEN/8, x4, x1, x2)

inst_87358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210000fffffffff; valaddr_reg:x3; val_offset:262074*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262074*0 + 3*574*FLEN/8, x4, x1, x2)

inst_87359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210001fffffffff; valaddr_reg:x3; val_offset:262077*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262077*0 + 3*575*FLEN/8, x4, x1, x2)

inst_87360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210003fffffffff; valaddr_reg:x3; val_offset:262080*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262080*0 + 3*576*FLEN/8, x4, x1, x2)

inst_87361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210007fffffffff; valaddr_reg:x3; val_offset:262083*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262083*0 + 3*577*FLEN/8, x4, x1, x2)

inst_87362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821000ffffffffff; valaddr_reg:x3; val_offset:262086*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262086*0 + 3*578*FLEN/8, x4, x1, x2)

inst_87363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821001ffffffffff; valaddr_reg:x3; val_offset:262089*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262089*0 + 3*579*FLEN/8, x4, x1, x2)

inst_87364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821003ffffffffff; valaddr_reg:x3; val_offset:262092*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262092*0 + 3*580*FLEN/8, x4, x1, x2)

inst_87365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821007ffffffffff; valaddr_reg:x3; val_offset:262095*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262095*0 + 3*581*FLEN/8, x4, x1, x2)

inst_87366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82100fffffffffff; valaddr_reg:x3; val_offset:262098*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262098*0 + 3*582*FLEN/8, x4, x1, x2)

inst_87367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82101fffffffffff; valaddr_reg:x3; val_offset:262101*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262101*0 + 3*583*FLEN/8, x4, x1, x2)

inst_87368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82103fffffffffff; valaddr_reg:x3; val_offset:262104*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262104*0 + 3*584*FLEN/8, x4, x1, x2)

inst_87369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x82107fffffffffff; valaddr_reg:x3; val_offset:262107*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262107*0 + 3*585*FLEN/8, x4, x1, x2)

inst_87370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8210ffffffffffff; valaddr_reg:x3; val_offset:262110*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262110*0 + 3*586*FLEN/8, x4, x1, x2)

inst_87371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8211ffffffffffff; valaddr_reg:x3; val_offset:262113*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262113*0 + 3*587*FLEN/8, x4, x1, x2)

inst_87372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8213ffffffffffff; valaddr_reg:x3; val_offset:262116*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262116*0 + 3*588*FLEN/8, x4, x1, x2)

inst_87373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8217ffffffffffff; valaddr_reg:x3; val_offset:262119*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262119*0 + 3*589*FLEN/8, x4, x1, x2)

inst_87374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x8218000000000000; valaddr_reg:x3; val_offset:262122*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262122*0 + 3*590*FLEN/8, x4, x1, x2)

inst_87375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821c000000000000; valaddr_reg:x3; val_offset:262125*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262125*0 + 3*591*FLEN/8, x4, x1, x2)

inst_87376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821e000000000000; valaddr_reg:x3; val_offset:262128*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262128*0 + 3*592*FLEN/8, x4, x1, x2)

inst_87377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821f000000000000; valaddr_reg:x3; val_offset:262131*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262131*0 + 3*593*FLEN/8, x4, x1, x2)

inst_87378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821f800000000000; valaddr_reg:x3; val_offset:262134*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262134*0 + 3*594*FLEN/8, x4, x1, x2)

inst_87379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fc00000000000; valaddr_reg:x3; val_offset:262137*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262137*0 + 3*595*FLEN/8, x4, x1, x2)

inst_87380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fe00000000000; valaddr_reg:x3; val_offset:262140*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262140*0 + 3*596*FLEN/8, x4, x1, x2)

inst_87381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ff00000000000; valaddr_reg:x3; val_offset:262143*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262143*0 + 3*597*FLEN/8, x4, x1, x2)

inst_87382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ff80000000000; valaddr_reg:x3; val_offset:262146*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262146*0 + 3*598*FLEN/8, x4, x1, x2)

inst_87383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffc0000000000; valaddr_reg:x3; val_offset:262149*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262149*0 + 3*599*FLEN/8, x4, x1, x2)

inst_87384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffe0000000000; valaddr_reg:x3; val_offset:262152*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262152*0 + 3*600*FLEN/8, x4, x1, x2)

inst_87385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fff0000000000; valaddr_reg:x3; val_offset:262155*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262155*0 + 3*601*FLEN/8, x4, x1, x2)

inst_87386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fff8000000000; valaddr_reg:x3; val_offset:262158*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262158*0 + 3*602*FLEN/8, x4, x1, x2)

inst_87387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffc000000000; valaddr_reg:x3; val_offset:262161*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262161*0 + 3*603*FLEN/8, x4, x1, x2)

inst_87388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffe000000000; valaddr_reg:x3; val_offset:262164*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262164*0 + 3*604*FLEN/8, x4, x1, x2)

inst_87389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffff000000000; valaddr_reg:x3; val_offset:262167*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262167*0 + 3*605*FLEN/8, x4, x1, x2)

inst_87390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffff800000000; valaddr_reg:x3; val_offset:262170*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262170*0 + 3*606*FLEN/8, x4, x1, x2)

inst_87391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffc00000000; valaddr_reg:x3; val_offset:262173*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262173*0 + 3*607*FLEN/8, x4, x1, x2)

inst_87392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffe00000000; valaddr_reg:x3; val_offset:262176*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262176*0 + 3*608*FLEN/8, x4, x1, x2)

inst_87393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffff00000000; valaddr_reg:x3; val_offset:262179*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262179*0 + 3*609*FLEN/8, x4, x1, x2)

inst_87394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffff80000000; valaddr_reg:x3; val_offset:262182*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262182*0 + 3*610*FLEN/8, x4, x1, x2)

inst_87395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffc0000000; valaddr_reg:x3; val_offset:262185*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262185*0 + 3*611*FLEN/8, x4, x1, x2)

inst_87396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffe0000000; valaddr_reg:x3; val_offset:262188*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262188*0 + 3*612*FLEN/8, x4, x1, x2)

inst_87397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffff0000000; valaddr_reg:x3; val_offset:262191*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262191*0 + 3*613*FLEN/8, x4, x1, x2)

inst_87398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffff8000000; valaddr_reg:x3; val_offset:262194*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262194*0 + 3*614*FLEN/8, x4, x1, x2)

inst_87399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffc000000; valaddr_reg:x3; val_offset:262197*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262197*0 + 3*615*FLEN/8, x4, x1, x2)

inst_87400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffe000000; valaddr_reg:x3; val_offset:262200*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262200*0 + 3*616*FLEN/8, x4, x1, x2)

inst_87401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffff000000; valaddr_reg:x3; val_offset:262203*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262203*0 + 3*617*FLEN/8, x4, x1, x2)

inst_87402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffff800000; valaddr_reg:x3; val_offset:262206*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262206*0 + 3*618*FLEN/8, x4, x1, x2)

inst_87403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffc00000; valaddr_reg:x3; val_offset:262209*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262209*0 + 3*619*FLEN/8, x4, x1, x2)

inst_87404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffe00000; valaddr_reg:x3; val_offset:262212*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262212*0 + 3*620*FLEN/8, x4, x1, x2)

inst_87405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffff00000; valaddr_reg:x3; val_offset:262215*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262215*0 + 3*621*FLEN/8, x4, x1, x2)

inst_87406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffff80000; valaddr_reg:x3; val_offset:262218*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262218*0 + 3*622*FLEN/8, x4, x1, x2)

inst_87407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffc0000; valaddr_reg:x3; val_offset:262221*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262221*0 + 3*623*FLEN/8, x4, x1, x2)

inst_87408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffe0000; valaddr_reg:x3; val_offset:262224*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262224*0 + 3*624*FLEN/8, x4, x1, x2)

inst_87409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffff0000; valaddr_reg:x3; val_offset:262227*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262227*0 + 3*625*FLEN/8, x4, x1, x2)

inst_87410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffff8000; valaddr_reg:x3; val_offset:262230*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262230*0 + 3*626*FLEN/8, x4, x1, x2)

inst_87411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffc000; valaddr_reg:x3; val_offset:262233*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262233*0 + 3*627*FLEN/8, x4, x1, x2)

inst_87412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffe000; valaddr_reg:x3; val_offset:262236*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262236*0 + 3*628*FLEN/8, x4, x1, x2)

inst_87413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffff000; valaddr_reg:x3; val_offset:262239*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262239*0 + 3*629*FLEN/8, x4, x1, x2)

inst_87414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffff800; valaddr_reg:x3; val_offset:262242*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262242*0 + 3*630*FLEN/8, x4, x1, x2)

inst_87415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffc00; valaddr_reg:x3; val_offset:262245*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262245*0 + 3*631*FLEN/8, x4, x1, x2)

inst_87416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffe00; valaddr_reg:x3; val_offset:262248*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262248*0 + 3*632*FLEN/8, x4, x1, x2)

inst_87417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffff00; valaddr_reg:x3; val_offset:262251*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262251*0 + 3*633*FLEN/8, x4, x1, x2)

inst_87418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffff80; valaddr_reg:x3; val_offset:262254*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262254*0 + 3*634*FLEN/8, x4, x1, x2)

inst_87419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffffc0; valaddr_reg:x3; val_offset:262257*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262257*0 + 3*635*FLEN/8, x4, x1, x2)

inst_87420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffffe0; valaddr_reg:x3; val_offset:262260*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262260*0 + 3*636*FLEN/8, x4, x1, x2)

inst_87421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffff0; valaddr_reg:x3; val_offset:262263*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262263*0 + 3*637*FLEN/8, x4, x1, x2)

inst_87422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffff8; valaddr_reg:x3; val_offset:262266*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262266*0 + 3*638*FLEN/8, x4, x1, x2)

inst_87423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffffc; valaddr_reg:x3; val_offset:262269*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262269*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_87424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821ffffffffffffe; valaddr_reg:x3; val_offset:262272*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262272*0 + 3*640*FLEN/8, x4, x1, x2)

inst_87425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae7c346c42567 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faae7c346c42567; op2val:0x8000;
op3val:0x821fffffffffffff; valaddr_reg:x3; val_offset:262275*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262275*0 + 3*641*FLEN/8, x4, x1, x2)

inst_87426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:262278*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262278*0 + 3*642*FLEN/8, x4, x1, x2)

inst_87427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:262281*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262281*0 + 3*643*FLEN/8, x4, x1, x2)

inst_87428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:262284*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262284*0 + 3*644*FLEN/8, x4, x1, x2)

inst_87429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:262287*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262287*0 + 3*645*FLEN/8, x4, x1, x2)

inst_87430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:262290*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262290*0 + 3*646*FLEN/8, x4, x1, x2)

inst_87431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:262293*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262293*0 + 3*647*FLEN/8, x4, x1, x2)

inst_87432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:262296*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262296*0 + 3*648*FLEN/8, x4, x1, x2)

inst_87433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:262299*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262299*0 + 3*649*FLEN/8, x4, x1, x2)

inst_87434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:262302*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262302*0 + 3*650*FLEN/8, x4, x1, x2)

inst_87435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:262305*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262305*0 + 3*651*FLEN/8, x4, x1, x2)

inst_87436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:262308*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262308*0 + 3*652*FLEN/8, x4, x1, x2)

inst_87437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:262311*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262311*0 + 3*653*FLEN/8, x4, x1, x2)

inst_87438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:262314*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262314*0 + 3*654*FLEN/8, x4, x1, x2)

inst_87439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:262317*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262317*0 + 3*655*FLEN/8, x4, x1, x2)

inst_87440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:262320*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262320*0 + 3*656*FLEN/8, x4, x1, x2)

inst_87441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:262323*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262323*0 + 3*657*FLEN/8, x4, x1, x2)

inst_87442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:262326*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262326*0 + 3*658*FLEN/8, x4, x1, x2)

inst_87443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:262329*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262329*0 + 3*659*FLEN/8, x4, x1, x2)

inst_87444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:262332*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262332*0 + 3*660*FLEN/8, x4, x1, x2)

inst_87445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:262335*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262335*0 + 3*661*FLEN/8, x4, x1, x2)

inst_87446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:262338*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262338*0 + 3*662*FLEN/8, x4, x1, x2)

inst_87447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:262341*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262341*0 + 3*663*FLEN/8, x4, x1, x2)

inst_87448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:262344*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262344*0 + 3*664*FLEN/8, x4, x1, x2)

inst_87449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:262347*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262347*0 + 3*665*FLEN/8, x4, x1, x2)

inst_87450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:262350*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262350*0 + 3*666*FLEN/8, x4, x1, x2)

inst_87451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:262353*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262353*0 + 3*667*FLEN/8, x4, x1, x2)

inst_87452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:262356*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262356*0 + 3*668*FLEN/8, x4, x1, x2)

inst_87453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:262359*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262359*0 + 3*669*FLEN/8, x4, x1, x2)

inst_87454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:262362*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262362*0 + 3*670*FLEN/8, x4, x1, x2)

inst_87455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:262365*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262365*0 + 3*671*FLEN/8, x4, x1, x2)

inst_87456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:262368*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262368*0 + 3*672*FLEN/8, x4, x1, x2)

inst_87457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:262371*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262371*0 + 3*673*FLEN/8, x4, x1, x2)

inst_87458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:262374*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262374*0 + 3*674*FLEN/8, x4, x1, x2)

inst_87459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:262377*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262377*0 + 3*675*FLEN/8, x4, x1, x2)

inst_87460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:262380*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262380*0 + 3*676*FLEN/8, x4, x1, x2)

inst_87461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:262383*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262383*0 + 3*677*FLEN/8, x4, x1, x2)

inst_87462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:262386*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262386*0 + 3*678*FLEN/8, x4, x1, x2)

inst_87463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:262389*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262389*0 + 3*679*FLEN/8, x4, x1, x2)

inst_87464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:262392*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262392*0 + 3*680*FLEN/8, x4, x1, x2)

inst_87465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:262395*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262395*0 + 3*681*FLEN/8, x4, x1, x2)

inst_87466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:262398*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262398*0 + 3*682*FLEN/8, x4, x1, x2)

inst_87467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:262401*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262401*0 + 3*683*FLEN/8, x4, x1, x2)

inst_87468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:262404*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262404*0 + 3*684*FLEN/8, x4, x1, x2)

inst_87469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:262407*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262407*0 + 3*685*FLEN/8, x4, x1, x2)

inst_87470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:262410*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262410*0 + 3*686*FLEN/8, x4, x1, x2)

inst_87471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:262413*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262413*0 + 3*687*FLEN/8, x4, x1, x2)

inst_87472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:262416*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262416*0 + 3*688*FLEN/8, x4, x1, x2)

inst_87473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:262419*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262419*0 + 3*689*FLEN/8, x4, x1, x2)

inst_87474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:262422*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262422*0 + 3*690*FLEN/8, x4, x1, x2)

inst_87475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:262425*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262425*0 + 3*691*FLEN/8, x4, x1, x2)

inst_87476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:262428*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262428*0 + 3*692*FLEN/8, x4, x1, x2)

inst_87477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:262431*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262431*0 + 3*693*FLEN/8, x4, x1, x2)

inst_87478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:262434*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262434*0 + 3*694*FLEN/8, x4, x1, x2)

inst_87479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:262437*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262437*0 + 3*695*FLEN/8, x4, x1, x2)

inst_87480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:262440*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262440*0 + 3*696*FLEN/8, x4, x1, x2)

inst_87481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:262443*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262443*0 + 3*697*FLEN/8, x4, x1, x2)

inst_87482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:262446*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262446*0 + 3*698*FLEN/8, x4, x1, x2)

inst_87483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:262449*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262449*0 + 3*699*FLEN/8, x4, x1, x2)

inst_87484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:262452*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262452*0 + 3*700*FLEN/8, x4, x1, x2)

inst_87485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:262455*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262455*0 + 3*701*FLEN/8, x4, x1, x2)

inst_87486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:262458*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262458*0 + 3*702*FLEN/8, x4, x1, x2)

inst_87487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:262461*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262461*0 + 3*703*FLEN/8, x4, x1, x2)

inst_87488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:262464*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262464*0 + 3*704*FLEN/8, x4, x1, x2)

inst_87489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:262467*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262467*0 + 3*705*FLEN/8, x4, x1, x2)

inst_87490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:262470*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262470*0 + 3*706*FLEN/8, x4, x1, x2)

inst_87491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:262473*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262473*0 + 3*707*FLEN/8, x4, x1, x2)

inst_87492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:262476*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262476*0 + 3*708*FLEN/8, x4, x1, x2)

inst_87493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:262479*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262479*0 + 3*709*FLEN/8, x4, x1, x2)

inst_87494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:262482*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262482*0 + 3*710*FLEN/8, x4, x1, x2)

inst_87495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:262485*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262485*0 + 3*711*FLEN/8, x4, x1, x2)

inst_87496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:262488*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262488*0 + 3*712*FLEN/8, x4, x1, x2)

inst_87497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:262491*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262491*0 + 3*713*FLEN/8, x4, x1, x2)

inst_87498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:262494*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262494*0 + 3*714*FLEN/8, x4, x1, x2)

inst_87499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:262497*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262497*0 + 3*715*FLEN/8, x4, x1, x2)

inst_87500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:262500*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262500*0 + 3*716*FLEN/8, x4, x1, x2)

inst_87501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:262503*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262503*0 + 3*717*FLEN/8, x4, x1, x2)

inst_87502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:262506*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262506*0 + 3*718*FLEN/8, x4, x1, x2)

inst_87503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:262509*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262509*0 + 3*719*FLEN/8, x4, x1, x2)

inst_87504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:262512*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262512*0 + 3*720*FLEN/8, x4, x1, x2)

inst_87505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:262515*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262515*0 + 3*721*FLEN/8, x4, x1, x2)

inst_87506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:262518*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262518*0 + 3*722*FLEN/8, x4, x1, x2)

inst_87507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:262521*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262521*0 + 3*723*FLEN/8, x4, x1, x2)

inst_87508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:262524*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262524*0 + 3*724*FLEN/8, x4, x1, x2)

inst_87509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:262527*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262527*0 + 3*725*FLEN/8, x4, x1, x2)

inst_87510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:262530*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262530*0 + 3*726*FLEN/8, x4, x1, x2)

inst_87511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:262533*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262533*0 + 3*727*FLEN/8, x4, x1, x2)

inst_87512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:262536*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262536*0 + 3*728*FLEN/8, x4, x1, x2)

inst_87513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:262539*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262539*0 + 3*729*FLEN/8, x4, x1, x2)

inst_87514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:262542*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262542*0 + 3*730*FLEN/8, x4, x1, x2)

inst_87515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:262545*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262545*0 + 3*731*FLEN/8, x4, x1, x2)

inst_87516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:262548*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262548*0 + 3*732*FLEN/8, x4, x1, x2)

inst_87517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:262551*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262551*0 + 3*733*FLEN/8, x4, x1, x2)

inst_87518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:262554*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262554*0 + 3*734*FLEN/8, x4, x1, x2)

inst_87519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:262557*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262557*0 + 3*735*FLEN/8, x4, x1, x2)

inst_87520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:262560*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262560*0 + 3*736*FLEN/8, x4, x1, x2)

inst_87521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:262563*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262563*0 + 3*737*FLEN/8, x4, x1, x2)

inst_87522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffe0000000; valaddr_reg:x3; val_offset:262566*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262566*0 + 3*738*FLEN/8, x4, x1, x2)

inst_87523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffff0000000; valaddr_reg:x3; val_offset:262569*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262569*0 + 3*739*FLEN/8, x4, x1, x2)

inst_87524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffff8000000; valaddr_reg:x3; val_offset:262572*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262572*0 + 3*740*FLEN/8, x4, x1, x2)

inst_87525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffc000000; valaddr_reg:x3; val_offset:262575*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262575*0 + 3*741*FLEN/8, x4, x1, x2)

inst_87526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffe000000; valaddr_reg:x3; val_offset:262578*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262578*0 + 3*742*FLEN/8, x4, x1, x2)

inst_87527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffff000000; valaddr_reg:x3; val_offset:262581*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262581*0 + 3*743*FLEN/8, x4, x1, x2)

inst_87528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffff800000; valaddr_reg:x3; val_offset:262584*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262584*0 + 3*744*FLEN/8, x4, x1, x2)

inst_87529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffc00000; valaddr_reg:x3; val_offset:262587*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262587*0 + 3*745*FLEN/8, x4, x1, x2)

inst_87530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffe00000; valaddr_reg:x3; val_offset:262590*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262590*0 + 3*746*FLEN/8, x4, x1, x2)

inst_87531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffff00000; valaddr_reg:x3; val_offset:262593*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262593*0 + 3*747*FLEN/8, x4, x1, x2)

inst_87532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffff80000; valaddr_reg:x3; val_offset:262596*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262596*0 + 3*748*FLEN/8, x4, x1, x2)

inst_87533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffc0000; valaddr_reg:x3; val_offset:262599*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262599*0 + 3*749*FLEN/8, x4, x1, x2)

inst_87534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffe0000; valaddr_reg:x3; val_offset:262602*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262602*0 + 3*750*FLEN/8, x4, x1, x2)

inst_87535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffff0000; valaddr_reg:x3; val_offset:262605*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262605*0 + 3*751*FLEN/8, x4, x1, x2)

inst_87536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffff8000; valaddr_reg:x3; val_offset:262608*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262608*0 + 3*752*FLEN/8, x4, x1, x2)

inst_87537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffc000; valaddr_reg:x3; val_offset:262611*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262611*0 + 3*753*FLEN/8, x4, x1, x2)

inst_87538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffe000; valaddr_reg:x3; val_offset:262614*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262614*0 + 3*754*FLEN/8, x4, x1, x2)

inst_87539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffff000; valaddr_reg:x3; val_offset:262617*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262617*0 + 3*755*FLEN/8, x4, x1, x2)

inst_87540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffff800; valaddr_reg:x3; val_offset:262620*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262620*0 + 3*756*FLEN/8, x4, x1, x2)

inst_87541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffc00; valaddr_reg:x3; val_offset:262623*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262623*0 + 3*757*FLEN/8, x4, x1, x2)

inst_87542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffe00; valaddr_reg:x3; val_offset:262626*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262626*0 + 3*758*FLEN/8, x4, x1, x2)

inst_87543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffff00; valaddr_reg:x3; val_offset:262629*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262629*0 + 3*759*FLEN/8, x4, x1, x2)

inst_87544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffff80; valaddr_reg:x3; val_offset:262632*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262632*0 + 3*760*FLEN/8, x4, x1, x2)

inst_87545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffffc0; valaddr_reg:x3; val_offset:262635*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262635*0 + 3*761*FLEN/8, x4, x1, x2)

inst_87546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffffe0; valaddr_reg:x3; val_offset:262638*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262638*0 + 3*762*FLEN/8, x4, x1, x2)

inst_87547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffff0; valaddr_reg:x3; val_offset:262641*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262641*0 + 3*763*FLEN/8, x4, x1, x2)

inst_87548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffff8; valaddr_reg:x3; val_offset:262644*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262644*0 + 3*764*FLEN/8, x4, x1, x2)

inst_87549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffffc; valaddr_reg:x3; val_offset:262647*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262647*0 + 3*765*FLEN/8, x4, x1, x2)

inst_87550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811ffffffffffffe; valaddr_reg:x3; val_offset:262650*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262650*0 + 3*766*FLEN/8, x4, x1, x2)

inst_87551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0d4dc0773572 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0d4dc0773572; op2val:0x8000;
op3val:0x811fffffffffffff; valaddr_reg:x3; val_offset:262653*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262653*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893544580880082281,64,FLEN)
NAN_BOXED(11512076461891114376,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779200,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779201,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779203,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779207,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779215,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779231,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779263,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779327,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779455,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779711,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793780223,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793781247,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793783295,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793787391,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793795583,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793811967,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793844735,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793910271,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794041343,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794303487,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794827775,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226795876351,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226797973503,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226802167807,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226810556415,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226827333631,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226860888063,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226927996927,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227062214655,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227330650111,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227867521023,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969228941262847,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969231088746495,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969235383713791,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969243973648383,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969261153517567,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969295513255935,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969364232732671,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969501671686143,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969776549593087,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344970326305406975,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344971425817034751,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344973624840290303,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344978022886801407,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344986818979823615,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345004411165868031,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345039595537956863,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345109964282134527,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345250701770489855,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345532176747200511,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9346095126700621823,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464447,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464448,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348346926514307072,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348909876467728384,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349191351444439040,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349332088932794368,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349402457676972032,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349437642049060864,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349455234235105280,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349464030328127488,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349468428374638592,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349470627397894144,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349471726909521920,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472276665335808,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472551543242752,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472688982196224,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472757701672960,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472792061411328,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472809241280512,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472817831215104,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472822126182400,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472824273666048,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825347407872,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825884278784,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826152714240,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826286931968,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826354040832,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826387595264,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826404372480,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826412761088,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826416955392,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826419052544,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420101120,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420625408,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420887552,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421018624,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421084160,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421116928,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421133312,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421141504,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421145600,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421147648,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421148672,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149184,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149440,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149568,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149632,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149664,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149680,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149688,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149692,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149694,64,FLEN)
NAN_BOXED(6893548611435262594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149695,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739776,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739777,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739779,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739783,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739791,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739807,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739839,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739903,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740031,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740287,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740799,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873741823,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873743871,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873747967,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873756159,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873772543,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873805311,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873870847,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874001919,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874264063,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874788351,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833875836927,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833877934079,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833882128383,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833890516991,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833907294207,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833940848639,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834007957503,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834142175231,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834410610687,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834947481599,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400836021223423,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400838168707071,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400842463674367,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400851053608959,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400868233478143,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400902593216511,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400971312693247,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401108751646719,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401383629553663,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401933385367551,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259403032896995327,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259405231920250879,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259409629966761983,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259418426059784191,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259436018245828607,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259471202617917439,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259541571362095103,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259682308850450431,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259963783827161087,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9260526733780582399,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425023,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425024,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9262778533594267648,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263341483547688960,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263622958524399616,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263763696012754944,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263834064756932608,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263869249129021440,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263886841315065856,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263895637408088064,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263900035454599168,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263902234477854720,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263903333989482496,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263903883745296384,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904158623203328,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904296062156800,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904364781633536,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904399141371904,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904416321241088,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904424911175680,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904429206142976,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904431353626624,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904432427368448,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904432964239360,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433232674816,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433366892544,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433434001408,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433467555840,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433484333056,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433492721664,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433496915968,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433499013120,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500061696,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500585984,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500848128,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500979200,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501044736,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501077504,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501093888,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501102080,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501106176,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501108224,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501109248,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501109760,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110016,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110144,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110208,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110240,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110256,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110264,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110268,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110270,64,FLEN)
NAN_BOXED(6893549915428383807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110271,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158144,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158145,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158147,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158151,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158159,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158175,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158207,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158271,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158399,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785158655,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785159167,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785160191,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785162239,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785166335,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785174527,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785190911,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785223679,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785289215,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785420287,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040785682431,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040786206719,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040787255295,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040789352447,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040793546751,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040801935359,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040818712575,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040852267007,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470040919375871,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470041053593599,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470041322029055,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470041858899967,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470042932641791,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470045080125439,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470049375092735,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470057965027327,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470075144896511,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470109504634879,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470178224111615,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470315663065087,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341470590540972031,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341471140296785919,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341472239808413695,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341474438831669247,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341478836878180351,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341487632971202559,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341505225157246975,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341540409529335807,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341610778273513471,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4341751515761868799,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4342032990738579455,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4342595940692000767,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4343721840598843391,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4343721840598843392,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4344847740505686016,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345410690459107328,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345692165435817984,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345832902924173312,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345903271668350976,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345938456040439808,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345956048226484224,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345964844319506432,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345969242366017536,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345971441389273088,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345972540900900864,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973090656714752,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973365534621696,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973502973575168,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973571693051904,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973606052790272,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973623232659456,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973631822594048,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973636117561344,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973638265044992,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973639338786816,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973639875657728,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640144093184,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640278310912,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640345419776,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640378974208,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640395751424,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640404140032,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640408334336,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640410431488,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640411480064,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412004352,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412266496,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412397568,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412463104,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412495872,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412512256,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412520448,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412524544,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412526592,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412527616,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528128,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528384,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528512,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528576,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528608,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528624,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528632,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528636,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528638,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4345973640412528639,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893575387211231774,64,FLEN)
NAN_BOXED(2320207735250874032,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865280,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865281,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865283,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865287,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865295,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865311,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865343,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865407,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865535,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616865791,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616866303,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616867327,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616869375,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616873471,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616881663,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616898047,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616930815,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861616996351,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861617127423,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861617389567,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861617913855,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861618962431,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861621059583,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861625253887,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861633642495,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861650419711,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861683974143,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861751083007,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496861885300735,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496862153736191,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496862690607103,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496863764348927,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496865911832575,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496870206799871,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496878796734463,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496895976603647,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496930336342015,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758496999055818751,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758497136494772223,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758497411372679167,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758497961128493055,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758499060640120831,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758501259663376383,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758505657709887487,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758514453802909695,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758532045988954111,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758567230361042943,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758637599105220607,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13758778336593575935,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13759059811570286591,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13759622761523707903,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13760748661430550527,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13760748661430550528,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13761874561337393152,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762437511290814464,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762718986267525120,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762859723755880448,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762930092500058112,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762965276872146944,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762982869058191360,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762991665151213568,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762996063197724672,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762998262220980224,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762999361732608000,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13762999911488421888,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000186366328832,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000323805282304,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000392524759040,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000426884497408,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000444064366592,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000452654301184,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000456949268480,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000459096752128,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000460170493952,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000460707364864,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000460975800320,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461110018048,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461177126912,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461210681344,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461227458560,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461235847168,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461240041472,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461242138624,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461243187200,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461243711488,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461243973632,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244104704,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244170240,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244203008,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244219392,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244227584,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244231680,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244233728,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244234752,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235264,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235520,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235648,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235712,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235744,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235760,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235768,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235772,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235774,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13763000461244235775,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893576225612011171,64,FLEN)
NAN_BOXED(11512053981539186991,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002176,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002177,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002179,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002183,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002191,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002207,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002239,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002303,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002431,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002687,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558003199,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558004223,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558006271,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558010367,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558018559,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558034943,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558067711,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558133247,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558264319,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558526463,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824559050751,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824560099327,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824562196479,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824566390783,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824574779391,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824591556607,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824625111039,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824692219903,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824826437631,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825094873087,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825631743999,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990826705485823,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990828852969471,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990833147936767,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990841737871359,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990858917740543,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990893277478911,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990961996955647,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991099435909119,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991374313816063,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991924069629951,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371993023581257727,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371995222604513279,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371999620651024383,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372008416744046591,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372026008930091007,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372061193302179839,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372131562046357503,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372272299534712831,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372553774511423487,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9373116724464844799,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687423,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687424,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375368524278530048,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375931474231951360,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376212949208662016,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376353686697017344,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376424055441195008,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376459239813283840,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376476831999328256,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376485628092350464,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376490026138861568,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376492225162117120,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493324673744896,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493874429558784,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494149307465728,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494286746419200,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494355465895936,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494389825634304,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494407005503488,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494415595438080,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494419890405376,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494422037889024,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423111630848,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423648501760,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423916937216,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424051154944,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424118263808,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424151818240,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424168595456,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424176984064,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424181178368,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424183275520,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184324096,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184848384,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185110528,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185241600,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185307136,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185339904,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185356288,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185364480,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185368576,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185370624,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185371648,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372160,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372416,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372544,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372608,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372640,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372656,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372664,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372668,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372670,64,FLEN)
NAN_BOXED(6893577005535864167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372671,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829610573824,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829879009280,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830013227008,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830080335872,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830113890304,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830130667520,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830139056128,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830143250432,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830145347584,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146396160,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146920448,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147182592,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147313664,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147379200,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147411968,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147428352,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147436544,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147440640,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147442688,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147443712,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444224,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444480,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444608,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444672,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444704,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444720,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444728,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444732,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444734,64,FLEN)
NAN_BOXED(6893618282213356914,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444735,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
