
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_59136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:177408*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177408*0 + 3*0*FLEN/8, x4, x1, x2)

inst_59137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:177411*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177411*0 + 3*1*FLEN/8, x4, x1, x2)

inst_59138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:177414*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177414*0 + 3*2*FLEN/8, x4, x1, x2)

inst_59139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:177417*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177417*0 + 3*3*FLEN/8, x4, x1, x2)

inst_59140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:177420*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177420*0 + 3*4*FLEN/8, x4, x1, x2)

inst_59141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:177423*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177423*0 + 3*5*FLEN/8, x4, x1, x2)

inst_59142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:177426*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177426*0 + 3*6*FLEN/8, x4, x1, x2)

inst_59143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:177429*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177429*0 + 3*7*FLEN/8, x4, x1, x2)

inst_59144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:177432*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177432*0 + 3*8*FLEN/8, x4, x1, x2)

inst_59145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:177435*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177435*0 + 3*9*FLEN/8, x4, x1, x2)

inst_59146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:177438*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177438*0 + 3*10*FLEN/8, x4, x1, x2)

inst_59147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:177441*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177441*0 + 3*11*FLEN/8, x4, x1, x2)

inst_59148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:177444*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177444*0 + 3*12*FLEN/8, x4, x1, x2)

inst_59149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:177447*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177447*0 + 3*13*FLEN/8, x4, x1, x2)

inst_59150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:177450*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177450*0 + 3*14*FLEN/8, x4, x1, x2)

inst_59151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:177453*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177453*0 + 3*15*FLEN/8, x4, x1, x2)

inst_59152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:177456*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177456*0 + 3*16*FLEN/8, x4, x1, x2)

inst_59153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:177459*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177459*0 + 3*17*FLEN/8, x4, x1, x2)

inst_59154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:177462*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177462*0 + 3*18*FLEN/8, x4, x1, x2)

inst_59155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:177465*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177465*0 + 3*19*FLEN/8, x4, x1, x2)

inst_59156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:177468*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177468*0 + 3*20*FLEN/8, x4, x1, x2)

inst_59157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:177471*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177471*0 + 3*21*FLEN/8, x4, x1, x2)

inst_59158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:177474*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177474*0 + 3*22*FLEN/8, x4, x1, x2)

inst_59159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:177477*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177477*0 + 3*23*FLEN/8, x4, x1, x2)

inst_59160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:177480*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177480*0 + 3*24*FLEN/8, x4, x1, x2)

inst_59161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:177483*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177483*0 + 3*25*FLEN/8, x4, x1, x2)

inst_59162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:177486*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177486*0 + 3*26*FLEN/8, x4, x1, x2)

inst_59163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:177489*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177489*0 + 3*27*FLEN/8, x4, x1, x2)

inst_59164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:177492*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177492*0 + 3*28*FLEN/8, x4, x1, x2)

inst_59165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:177495*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177495*0 + 3*29*FLEN/8, x4, x1, x2)

inst_59166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:177498*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177498*0 + 3*30*FLEN/8, x4, x1, x2)

inst_59167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:177501*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177501*0 + 3*31*FLEN/8, x4, x1, x2)

inst_59168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:177504*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177504*0 + 3*32*FLEN/8, x4, x1, x2)

inst_59169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:177507*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177507*0 + 3*33*FLEN/8, x4, x1, x2)

inst_59170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:177510*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177510*0 + 3*34*FLEN/8, x4, x1, x2)

inst_59171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:177513*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177513*0 + 3*35*FLEN/8, x4, x1, x2)

inst_59172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:177516*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177516*0 + 3*36*FLEN/8, x4, x1, x2)

inst_59173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:177519*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177519*0 + 3*37*FLEN/8, x4, x1, x2)

inst_59174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:177522*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177522*0 + 3*38*FLEN/8, x4, x1, x2)

inst_59175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:177525*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177525*0 + 3*39*FLEN/8, x4, x1, x2)

inst_59176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:177528*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177528*0 + 3*40*FLEN/8, x4, x1, x2)

inst_59177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:177531*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177531*0 + 3*41*FLEN/8, x4, x1, x2)

inst_59178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:177534*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177534*0 + 3*42*FLEN/8, x4, x1, x2)

inst_59179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:177537*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177537*0 + 3*43*FLEN/8, x4, x1, x2)

inst_59180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:177540*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177540*0 + 3*44*FLEN/8, x4, x1, x2)

inst_59181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:177543*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177543*0 + 3*45*FLEN/8, x4, x1, x2)

inst_59182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:177546*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177546*0 + 3*46*FLEN/8, x4, x1, x2)

inst_59183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:177549*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177549*0 + 3*47*FLEN/8, x4, x1, x2)

inst_59184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:177552*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177552*0 + 3*48*FLEN/8, x4, x1, x2)

inst_59185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:177555*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177555*0 + 3*49*FLEN/8, x4, x1, x2)

inst_59186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:177558*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177558*0 + 3*50*FLEN/8, x4, x1, x2)

inst_59187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:177561*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177561*0 + 3*51*FLEN/8, x4, x1, x2)

inst_59188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:177564*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177564*0 + 3*52*FLEN/8, x4, x1, x2)

inst_59189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:177567*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177567*0 + 3*53*FLEN/8, x4, x1, x2)

inst_59190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:177570*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177570*0 + 3*54*FLEN/8, x4, x1, x2)

inst_59191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:177573*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177573*0 + 3*55*FLEN/8, x4, x1, x2)

inst_59192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:177576*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177576*0 + 3*56*FLEN/8, x4, x1, x2)

inst_59193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:177579*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177579*0 + 3*57*FLEN/8, x4, x1, x2)

inst_59194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:177582*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177582*0 + 3*58*FLEN/8, x4, x1, x2)

inst_59195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:177585*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177585*0 + 3*59*FLEN/8, x4, x1, x2)

inst_59196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:177588*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177588*0 + 3*60*FLEN/8, x4, x1, x2)

inst_59197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:177591*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177591*0 + 3*61*FLEN/8, x4, x1, x2)

inst_59198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:177594*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177594*0 + 3*62*FLEN/8, x4, x1, x2)

inst_59199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:177597*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177597*0 + 3*63*FLEN/8, x4, x1, x2)

inst_59200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:177600*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177600*0 + 3*64*FLEN/8, x4, x1, x2)

inst_59201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:177603*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177603*0 + 3*65*FLEN/8, x4, x1, x2)

inst_59202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:177606*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177606*0 + 3*66*FLEN/8, x4, x1, x2)

inst_59203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:177609*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177609*0 + 3*67*FLEN/8, x4, x1, x2)

inst_59204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:177612*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177612*0 + 3*68*FLEN/8, x4, x1, x2)

inst_59205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:177615*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177615*0 + 3*69*FLEN/8, x4, x1, x2)

inst_59206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:177618*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177618*0 + 3*70*FLEN/8, x4, x1, x2)

inst_59207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:177621*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177621*0 + 3*71*FLEN/8, x4, x1, x2)

inst_59208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:177624*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177624*0 + 3*72*FLEN/8, x4, x1, x2)

inst_59209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:177627*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177627*0 + 3*73*FLEN/8, x4, x1, x2)

inst_59210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:177630*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177630*0 + 3*74*FLEN/8, x4, x1, x2)

inst_59211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:177633*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177633*0 + 3*75*FLEN/8, x4, x1, x2)

inst_59212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:177636*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177636*0 + 3*76*FLEN/8, x4, x1, x2)

inst_59213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:177639*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177639*0 + 3*77*FLEN/8, x4, x1, x2)

inst_59214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:177642*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177642*0 + 3*78*FLEN/8, x4, x1, x2)

inst_59215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:177645*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177645*0 + 3*79*FLEN/8, x4, x1, x2)

inst_59216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:177648*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177648*0 + 3*80*FLEN/8, x4, x1, x2)

inst_59217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:177651*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177651*0 + 3*81*FLEN/8, x4, x1, x2)

inst_59218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:177654*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177654*0 + 3*82*FLEN/8, x4, x1, x2)

inst_59219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:177657*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177657*0 + 3*83*FLEN/8, x4, x1, x2)

inst_59220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:177660*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177660*0 + 3*84*FLEN/8, x4, x1, x2)

inst_59221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:177663*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177663*0 + 3*85*FLEN/8, x4, x1, x2)

inst_59222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:177666*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177666*0 + 3*86*FLEN/8, x4, x1, x2)

inst_59223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:177669*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177669*0 + 3*87*FLEN/8, x4, x1, x2)

inst_59224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:177672*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177672*0 + 3*88*FLEN/8, x4, x1, x2)

inst_59225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e16a741f1a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1e16a741f1a1b; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:177675*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177675*0 + 3*89*FLEN/8, x4, x1, x2)

inst_59226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:177678*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177678*0 + 3*90*FLEN/8, x4, x1, x2)

inst_59227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:177681*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177681*0 + 3*91*FLEN/8, x4, x1, x2)

inst_59228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:177684*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177684*0 + 3*92*FLEN/8, x4, x1, x2)

inst_59229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:177687*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177687*0 + 3*93*FLEN/8, x4, x1, x2)

inst_59230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:177690*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177690*0 + 3*94*FLEN/8, x4, x1, x2)

inst_59231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:177693*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177693*0 + 3*95*FLEN/8, x4, x1, x2)

inst_59232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:177696*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177696*0 + 3*96*FLEN/8, x4, x1, x2)

inst_59233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:177699*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177699*0 + 3*97*FLEN/8, x4, x1, x2)

inst_59234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:177702*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177702*0 + 3*98*FLEN/8, x4, x1, x2)

inst_59235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:177705*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177705*0 + 3*99*FLEN/8, x4, x1, x2)

inst_59236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:177708*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177708*0 + 3*100*FLEN/8, x4, x1, x2)

inst_59237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:177711*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177711*0 + 3*101*FLEN/8, x4, x1, x2)

inst_59238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:177714*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177714*0 + 3*102*FLEN/8, x4, x1, x2)

inst_59239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:177717*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177717*0 + 3*103*FLEN/8, x4, x1, x2)

inst_59240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:177720*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177720*0 + 3*104*FLEN/8, x4, x1, x2)

inst_59241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:177723*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177723*0 + 3*105*FLEN/8, x4, x1, x2)

inst_59242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:177726*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177726*0 + 3*106*FLEN/8, x4, x1, x2)

inst_59243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:177729*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177729*0 + 3*107*FLEN/8, x4, x1, x2)

inst_59244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:177732*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177732*0 + 3*108*FLEN/8, x4, x1, x2)

inst_59245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:177735*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177735*0 + 3*109*FLEN/8, x4, x1, x2)

inst_59246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:177738*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177738*0 + 3*110*FLEN/8, x4, x1, x2)

inst_59247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:177741*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177741*0 + 3*111*FLEN/8, x4, x1, x2)

inst_59248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:177744*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177744*0 + 3*112*FLEN/8, x4, x1, x2)

inst_59249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:177747*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177747*0 + 3*113*FLEN/8, x4, x1, x2)

inst_59250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:177750*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177750*0 + 3*114*FLEN/8, x4, x1, x2)

inst_59251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:177753*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177753*0 + 3*115*FLEN/8, x4, x1, x2)

inst_59252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:177756*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177756*0 + 3*116*FLEN/8, x4, x1, x2)

inst_59253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:177759*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177759*0 + 3*117*FLEN/8, x4, x1, x2)

inst_59254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:177762*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177762*0 + 3*118*FLEN/8, x4, x1, x2)

inst_59255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:177765*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177765*0 + 3*119*FLEN/8, x4, x1, x2)

inst_59256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:177768*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177768*0 + 3*120*FLEN/8, x4, x1, x2)

inst_59257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:177771*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177771*0 + 3*121*FLEN/8, x4, x1, x2)

inst_59258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:177774*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177774*0 + 3*122*FLEN/8, x4, x1, x2)

inst_59259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:177777*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177777*0 + 3*123*FLEN/8, x4, x1, x2)

inst_59260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:177780*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177780*0 + 3*124*FLEN/8, x4, x1, x2)

inst_59261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:177783*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177783*0 + 3*125*FLEN/8, x4, x1, x2)

inst_59262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:177786*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177786*0 + 3*126*FLEN/8, x4, x1, x2)

inst_59263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:177789*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177789*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_59264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:177792*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177792*0 + 3*128*FLEN/8, x4, x1, x2)

inst_59265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:177795*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177795*0 + 3*129*FLEN/8, x4, x1, x2)

inst_59266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:177798*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177798*0 + 3*130*FLEN/8, x4, x1, x2)

inst_59267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:177801*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177801*0 + 3*131*FLEN/8, x4, x1, x2)

inst_59268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:177804*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177804*0 + 3*132*FLEN/8, x4, x1, x2)

inst_59269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:177807*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177807*0 + 3*133*FLEN/8, x4, x1, x2)

inst_59270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:177810*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177810*0 + 3*134*FLEN/8, x4, x1, x2)

inst_59271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:177813*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177813*0 + 3*135*FLEN/8, x4, x1, x2)

inst_59272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:177816*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177816*0 + 3*136*FLEN/8, x4, x1, x2)

inst_59273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:177819*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177819*0 + 3*137*FLEN/8, x4, x1, x2)

inst_59274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:177822*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177822*0 + 3*138*FLEN/8, x4, x1, x2)

inst_59275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:177825*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177825*0 + 3*139*FLEN/8, x4, x1, x2)

inst_59276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:177828*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177828*0 + 3*140*FLEN/8, x4, x1, x2)

inst_59277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:177831*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177831*0 + 3*141*FLEN/8, x4, x1, x2)

inst_59278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:177834*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177834*0 + 3*142*FLEN/8, x4, x1, x2)

inst_59279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:177837*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177837*0 + 3*143*FLEN/8, x4, x1, x2)

inst_59280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:177840*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177840*0 + 3*144*FLEN/8, x4, x1, x2)

inst_59281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:177843*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177843*0 + 3*145*FLEN/8, x4, x1, x2)

inst_59282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:177846*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177846*0 + 3*146*FLEN/8, x4, x1, x2)

inst_59283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:177849*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177849*0 + 3*147*FLEN/8, x4, x1, x2)

inst_59284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:177852*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177852*0 + 3*148*FLEN/8, x4, x1, x2)

inst_59285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:177855*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177855*0 + 3*149*FLEN/8, x4, x1, x2)

inst_59286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:177858*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177858*0 + 3*150*FLEN/8, x4, x1, x2)

inst_59287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:177861*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177861*0 + 3*151*FLEN/8, x4, x1, x2)

inst_59288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:177864*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177864*0 + 3*152*FLEN/8, x4, x1, x2)

inst_59289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:177867*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177867*0 + 3*153*FLEN/8, x4, x1, x2)

inst_59290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:177870*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177870*0 + 3*154*FLEN/8, x4, x1, x2)

inst_59291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:177873*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177873*0 + 3*155*FLEN/8, x4, x1, x2)

inst_59292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:177876*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177876*0 + 3*156*FLEN/8, x4, x1, x2)

inst_59293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:177879*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177879*0 + 3*157*FLEN/8, x4, x1, x2)

inst_59294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:177882*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177882*0 + 3*158*FLEN/8, x4, x1, x2)

inst_59295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:177885*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177885*0 + 3*159*FLEN/8, x4, x1, x2)

inst_59296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:177888*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177888*0 + 3*160*FLEN/8, x4, x1, x2)

inst_59297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:177891*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177891*0 + 3*161*FLEN/8, x4, x1, x2)

inst_59298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:177894*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177894*0 + 3*162*FLEN/8, x4, x1, x2)

inst_59299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:177897*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177897*0 + 3*163*FLEN/8, x4, x1, x2)

inst_59300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:177900*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177900*0 + 3*164*FLEN/8, x4, x1, x2)

inst_59301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:177903*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177903*0 + 3*165*FLEN/8, x4, x1, x2)

inst_59302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:177906*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177906*0 + 3*166*FLEN/8, x4, x1, x2)

inst_59303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:177909*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177909*0 + 3*167*FLEN/8, x4, x1, x2)

inst_59304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:177912*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177912*0 + 3*168*FLEN/8, x4, x1, x2)

inst_59305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:177915*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177915*0 + 3*169*FLEN/8, x4, x1, x2)

inst_59306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:177918*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177918*0 + 3*170*FLEN/8, x4, x1, x2)

inst_59307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:177921*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177921*0 + 3*171*FLEN/8, x4, x1, x2)

inst_59308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:177924*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177924*0 + 3*172*FLEN/8, x4, x1, x2)

inst_59309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:177927*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177927*0 + 3*173*FLEN/8, x4, x1, x2)

inst_59310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:177930*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177930*0 + 3*174*FLEN/8, x4, x1, x2)

inst_59311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:177933*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177933*0 + 3*175*FLEN/8, x4, x1, x2)

inst_59312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:177936*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177936*0 + 3*176*FLEN/8, x4, x1, x2)

inst_59313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:177939*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177939*0 + 3*177*FLEN/8, x4, x1, x2)

inst_59314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:177942*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177942*0 + 3*178*FLEN/8, x4, x1, x2)

inst_59315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:177945*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177945*0 + 3*179*FLEN/8, x4, x1, x2)

inst_59316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:177948*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177948*0 + 3*180*FLEN/8, x4, x1, x2)

inst_59317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:177951*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177951*0 + 3*181*FLEN/8, x4, x1, x2)

inst_59318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:177954*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177954*0 + 3*182*FLEN/8, x4, x1, x2)

inst_59319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:177957*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177957*0 + 3*183*FLEN/8, x4, x1, x2)

inst_59320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:177960*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177960*0 + 3*184*FLEN/8, x4, x1, x2)

inst_59321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:177963*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177963*0 + 3*185*FLEN/8, x4, x1, x2)

inst_59322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:177966*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177966*0 + 3*186*FLEN/8, x4, x1, x2)

inst_59323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:177969*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177969*0 + 3*187*FLEN/8, x4, x1, x2)

inst_59324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:177972*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177972*0 + 3*188*FLEN/8, x4, x1, x2)

inst_59325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:177975*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177975*0 + 3*189*FLEN/8, x4, x1, x2)

inst_59326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:177978*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177978*0 + 3*190*FLEN/8, x4, x1, x2)

inst_59327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:177981*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177981*0 + 3*191*FLEN/8, x4, x1, x2)

inst_59328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:177984*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177984*0 + 3*192*FLEN/8, x4, x1, x2)

inst_59329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:177987*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177987*0 + 3*193*FLEN/8, x4, x1, x2)

inst_59330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:177990*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177990*0 + 3*194*FLEN/8, x4, x1, x2)

inst_59331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:177993*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177993*0 + 3*195*FLEN/8, x4, x1, x2)

inst_59332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:177996*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177996*0 + 3*196*FLEN/8, x4, x1, x2)

inst_59333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:177999*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177999*0 + 3*197*FLEN/8, x4, x1, x2)

inst_59334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:178002*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178002*0 + 3*198*FLEN/8, x4, x1, x2)

inst_59335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:178005*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178005*0 + 3*199*FLEN/8, x4, x1, x2)

inst_59336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:178008*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178008*0 + 3*200*FLEN/8, x4, x1, x2)

inst_59337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:178011*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178011*0 + 3*201*FLEN/8, x4, x1, x2)

inst_59338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:178014*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178014*0 + 3*202*FLEN/8, x4, x1, x2)

inst_59339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:178017*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178017*0 + 3*203*FLEN/8, x4, x1, x2)

inst_59340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:178020*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178020*0 + 3*204*FLEN/8, x4, x1, x2)

inst_59341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:178023*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178023*0 + 3*205*FLEN/8, x4, x1, x2)

inst_59342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:178026*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178026*0 + 3*206*FLEN/8, x4, x1, x2)

inst_59343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:178029*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178029*0 + 3*207*FLEN/8, x4, x1, x2)

inst_59344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:178032*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178032*0 + 3*208*FLEN/8, x4, x1, x2)

inst_59345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:178035*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178035*0 + 3*209*FLEN/8, x4, x1, x2)

inst_59346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:178038*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178038*0 + 3*210*FLEN/8, x4, x1, x2)

inst_59347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:178041*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178041*0 + 3*211*FLEN/8, x4, x1, x2)

inst_59348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:178044*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178044*0 + 3*212*FLEN/8, x4, x1, x2)

inst_59349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:178047*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178047*0 + 3*213*FLEN/8, x4, x1, x2)

inst_59350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:178050*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178050*0 + 3*214*FLEN/8, x4, x1, x2)

inst_59351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1efb36cb5b1e4; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:178053*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178053*0 + 3*215*FLEN/8, x4, x1, x2)

inst_59352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:178056*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178056*0 + 3*216*FLEN/8, x4, x1, x2)

inst_59353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:178059*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178059*0 + 3*217*FLEN/8, x4, x1, x2)

inst_59354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:178062*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178062*0 + 3*218*FLEN/8, x4, x1, x2)

inst_59355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:178065*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178065*0 + 3*219*FLEN/8, x4, x1, x2)

inst_59356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:178068*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178068*0 + 3*220*FLEN/8, x4, x1, x2)

inst_59357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:178071*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178071*0 + 3*221*FLEN/8, x4, x1, x2)

inst_59358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:178074*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178074*0 + 3*222*FLEN/8, x4, x1, x2)

inst_59359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:178077*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178077*0 + 3*223*FLEN/8, x4, x1, x2)

inst_59360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:178080*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178080*0 + 3*224*FLEN/8, x4, x1, x2)

inst_59361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:178083*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178083*0 + 3*225*FLEN/8, x4, x1, x2)

inst_59362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:178086*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178086*0 + 3*226*FLEN/8, x4, x1, x2)

inst_59363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:178089*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178089*0 + 3*227*FLEN/8, x4, x1, x2)

inst_59364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:178092*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178092*0 + 3*228*FLEN/8, x4, x1, x2)

inst_59365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:178095*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178095*0 + 3*229*FLEN/8, x4, x1, x2)

inst_59366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:178098*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178098*0 + 3*230*FLEN/8, x4, x1, x2)

inst_59367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:178101*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178101*0 + 3*231*FLEN/8, x4, x1, x2)

inst_59368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:178104*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178104*0 + 3*232*FLEN/8, x4, x1, x2)

inst_59369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:178107*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178107*0 + 3*233*FLEN/8, x4, x1, x2)

inst_59370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:178110*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178110*0 + 3*234*FLEN/8, x4, x1, x2)

inst_59371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:178113*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178113*0 + 3*235*FLEN/8, x4, x1, x2)

inst_59372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:178116*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178116*0 + 3*236*FLEN/8, x4, x1, x2)

inst_59373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:178119*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178119*0 + 3*237*FLEN/8, x4, x1, x2)

inst_59374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000000000; valaddr_reg:x3; val_offset:178122*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178122*0 + 3*238*FLEN/8, x4, x1, x2)

inst_59375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000000001; valaddr_reg:x3; val_offset:178125*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178125*0 + 3*239*FLEN/8, x4, x1, x2)

inst_59376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000000003; valaddr_reg:x3; val_offset:178128*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178128*0 + 3*240*FLEN/8, x4, x1, x2)

inst_59377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000000007; valaddr_reg:x3; val_offset:178131*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178131*0 + 3*241*FLEN/8, x4, x1, x2)

inst_59378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000000000f; valaddr_reg:x3; val_offset:178134*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178134*0 + 3*242*FLEN/8, x4, x1, x2)

inst_59379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000000001f; valaddr_reg:x3; val_offset:178137*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178137*0 + 3*243*FLEN/8, x4, x1, x2)

inst_59380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000000003f; valaddr_reg:x3; val_offset:178140*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178140*0 + 3*244*FLEN/8, x4, x1, x2)

inst_59381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000000007f; valaddr_reg:x3; val_offset:178143*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178143*0 + 3*245*FLEN/8, x4, x1, x2)

inst_59382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000000000ff; valaddr_reg:x3; val_offset:178146*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178146*0 + 3*246*FLEN/8, x4, x1, x2)

inst_59383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000000001ff; valaddr_reg:x3; val_offset:178149*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178149*0 + 3*247*FLEN/8, x4, x1, x2)

inst_59384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000000003ff; valaddr_reg:x3; val_offset:178152*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178152*0 + 3*248*FLEN/8, x4, x1, x2)

inst_59385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000000007ff; valaddr_reg:x3; val_offset:178155*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178155*0 + 3*249*FLEN/8, x4, x1, x2)

inst_59386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000000fff; valaddr_reg:x3; val_offset:178158*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178158*0 + 3*250*FLEN/8, x4, x1, x2)

inst_59387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000001fff; valaddr_reg:x3; val_offset:178161*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178161*0 + 3*251*FLEN/8, x4, x1, x2)

inst_59388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000003fff; valaddr_reg:x3; val_offset:178164*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178164*0 + 3*252*FLEN/8, x4, x1, x2)

inst_59389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000007fff; valaddr_reg:x3; val_offset:178167*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178167*0 + 3*253*FLEN/8, x4, x1, x2)

inst_59390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000000ffff; valaddr_reg:x3; val_offset:178170*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178170*0 + 3*254*FLEN/8, x4, x1, x2)

inst_59391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000001ffff; valaddr_reg:x3; val_offset:178173*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178173*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_59392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000003ffff; valaddr_reg:x3; val_offset:178176*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178176*0 + 3*256*FLEN/8, x4, x1, x2)

inst_59393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000007ffff; valaddr_reg:x3; val_offset:178179*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178179*0 + 3*257*FLEN/8, x4, x1, x2)

inst_59394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000000fffff; valaddr_reg:x3; val_offset:178182*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178182*0 + 3*258*FLEN/8, x4, x1, x2)

inst_59395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000001fffff; valaddr_reg:x3; val_offset:178185*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178185*0 + 3*259*FLEN/8, x4, x1, x2)

inst_59396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000003fffff; valaddr_reg:x3; val_offset:178188*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178188*0 + 3*260*FLEN/8, x4, x1, x2)

inst_59397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000007fffff; valaddr_reg:x3; val_offset:178191*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178191*0 + 3*261*FLEN/8, x4, x1, x2)

inst_59398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000000ffffff; valaddr_reg:x3; val_offset:178194*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178194*0 + 3*262*FLEN/8, x4, x1, x2)

inst_59399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000001ffffff; valaddr_reg:x3; val_offset:178197*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178197*0 + 3*263*FLEN/8, x4, x1, x2)

inst_59400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000003ffffff; valaddr_reg:x3; val_offset:178200*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178200*0 + 3*264*FLEN/8, x4, x1, x2)

inst_59401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000007ffffff; valaddr_reg:x3; val_offset:178203*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178203*0 + 3*265*FLEN/8, x4, x1, x2)

inst_59402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000000fffffff; valaddr_reg:x3; val_offset:178206*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178206*0 + 3*266*FLEN/8, x4, x1, x2)

inst_59403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000001fffffff; valaddr_reg:x3; val_offset:178209*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178209*0 + 3*267*FLEN/8, x4, x1, x2)

inst_59404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000003fffffff; valaddr_reg:x3; val_offset:178212*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178212*0 + 3*268*FLEN/8, x4, x1, x2)

inst_59405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000007fffffff; valaddr_reg:x3; val_offset:178215*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178215*0 + 3*269*FLEN/8, x4, x1, x2)

inst_59406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00000ffffffff; valaddr_reg:x3; val_offset:178218*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178218*0 + 3*270*FLEN/8, x4, x1, x2)

inst_59407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00001ffffffff; valaddr_reg:x3; val_offset:178221*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178221*0 + 3*271*FLEN/8, x4, x1, x2)

inst_59408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00003ffffffff; valaddr_reg:x3; val_offset:178224*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178224*0 + 3*272*FLEN/8, x4, x1, x2)

inst_59409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00007ffffffff; valaddr_reg:x3; val_offset:178227*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178227*0 + 3*273*FLEN/8, x4, x1, x2)

inst_59410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0000fffffffff; valaddr_reg:x3; val_offset:178230*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178230*0 + 3*274*FLEN/8, x4, x1, x2)

inst_59411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0001fffffffff; valaddr_reg:x3; val_offset:178233*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178233*0 + 3*275*FLEN/8, x4, x1, x2)

inst_59412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0003fffffffff; valaddr_reg:x3; val_offset:178236*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178236*0 + 3*276*FLEN/8, x4, x1, x2)

inst_59413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0007fffffffff; valaddr_reg:x3; val_offset:178239*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178239*0 + 3*277*FLEN/8, x4, x1, x2)

inst_59414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd000ffffffffff; valaddr_reg:x3; val_offset:178242*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178242*0 + 3*278*FLEN/8, x4, x1, x2)

inst_59415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd001ffffffffff; valaddr_reg:x3; val_offset:178245*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178245*0 + 3*279*FLEN/8, x4, x1, x2)

inst_59416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd003ffffffffff; valaddr_reg:x3; val_offset:178248*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178248*0 + 3*280*FLEN/8, x4, x1, x2)

inst_59417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd007ffffffffff; valaddr_reg:x3; val_offset:178251*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178251*0 + 3*281*FLEN/8, x4, x1, x2)

inst_59418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd00fffffffffff; valaddr_reg:x3; val_offset:178254*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178254*0 + 3*282*FLEN/8, x4, x1, x2)

inst_59419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd01fffffffffff; valaddr_reg:x3; val_offset:178257*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178257*0 + 3*283*FLEN/8, x4, x1, x2)

inst_59420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd03fffffffffff; valaddr_reg:x3; val_offset:178260*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178260*0 + 3*284*FLEN/8, x4, x1, x2)

inst_59421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd07fffffffffff; valaddr_reg:x3; val_offset:178263*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178263*0 + 3*285*FLEN/8, x4, x1, x2)

inst_59422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd0ffffffffffff; valaddr_reg:x3; val_offset:178266*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178266*0 + 3*286*FLEN/8, x4, x1, x2)

inst_59423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd1ffffffffffff; valaddr_reg:x3; val_offset:178269*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178269*0 + 3*287*FLEN/8, x4, x1, x2)

inst_59424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd3ffffffffffff; valaddr_reg:x3; val_offset:178272*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178272*0 + 3*288*FLEN/8, x4, x1, x2)

inst_59425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd7ffffffffffff; valaddr_reg:x3; val_offset:178275*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178275*0 + 3*289*FLEN/8, x4, x1, x2)

inst_59426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xd8000000000000; valaddr_reg:x3; val_offset:178278*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178278*0 + 3*290*FLEN/8, x4, x1, x2)

inst_59427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdc000000000000; valaddr_reg:x3; val_offset:178281*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178281*0 + 3*291*FLEN/8, x4, x1, x2)

inst_59428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xde000000000000; valaddr_reg:x3; val_offset:178284*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178284*0 + 3*292*FLEN/8, x4, x1, x2)

inst_59429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdf000000000000; valaddr_reg:x3; val_offset:178287*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178287*0 + 3*293*FLEN/8, x4, x1, x2)

inst_59430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdf800000000000; valaddr_reg:x3; val_offset:178290*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178290*0 + 3*294*FLEN/8, x4, x1, x2)

inst_59431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfc00000000000; valaddr_reg:x3; val_offset:178293*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178293*0 + 3*295*FLEN/8, x4, x1, x2)

inst_59432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfe00000000000; valaddr_reg:x3; val_offset:178296*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178296*0 + 3*296*FLEN/8, x4, x1, x2)

inst_59433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdff00000000000; valaddr_reg:x3; val_offset:178299*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178299*0 + 3*297*FLEN/8, x4, x1, x2)

inst_59434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdff80000000000; valaddr_reg:x3; val_offset:178302*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178302*0 + 3*298*FLEN/8, x4, x1, x2)

inst_59435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffc0000000000; valaddr_reg:x3; val_offset:178305*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178305*0 + 3*299*FLEN/8, x4, x1, x2)

inst_59436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffe0000000000; valaddr_reg:x3; val_offset:178308*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178308*0 + 3*300*FLEN/8, x4, x1, x2)

inst_59437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfff0000000000; valaddr_reg:x3; val_offset:178311*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178311*0 + 3*301*FLEN/8, x4, x1, x2)

inst_59438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfff8000000000; valaddr_reg:x3; val_offset:178314*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178314*0 + 3*302*FLEN/8, x4, x1, x2)

inst_59439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffc000000000; valaddr_reg:x3; val_offset:178317*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178317*0 + 3*303*FLEN/8, x4, x1, x2)

inst_59440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffe000000000; valaddr_reg:x3; val_offset:178320*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178320*0 + 3*304*FLEN/8, x4, x1, x2)

inst_59441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffff000000000; valaddr_reg:x3; val_offset:178323*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178323*0 + 3*305*FLEN/8, x4, x1, x2)

inst_59442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffff800000000; valaddr_reg:x3; val_offset:178326*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178326*0 + 3*306*FLEN/8, x4, x1, x2)

inst_59443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffc00000000; valaddr_reg:x3; val_offset:178329*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178329*0 + 3*307*FLEN/8, x4, x1, x2)

inst_59444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffe00000000; valaddr_reg:x3; val_offset:178332*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178332*0 + 3*308*FLEN/8, x4, x1, x2)

inst_59445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffff00000000; valaddr_reg:x3; val_offset:178335*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178335*0 + 3*309*FLEN/8, x4, x1, x2)

inst_59446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffff80000000; valaddr_reg:x3; val_offset:178338*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178338*0 + 3*310*FLEN/8, x4, x1, x2)

inst_59447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffc0000000; valaddr_reg:x3; val_offset:178341*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178341*0 + 3*311*FLEN/8, x4, x1, x2)

inst_59448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffe0000000; valaddr_reg:x3; val_offset:178344*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178344*0 + 3*312*FLEN/8, x4, x1, x2)

inst_59449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffff0000000; valaddr_reg:x3; val_offset:178347*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178347*0 + 3*313*FLEN/8, x4, x1, x2)

inst_59450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffff8000000; valaddr_reg:x3; val_offset:178350*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178350*0 + 3*314*FLEN/8, x4, x1, x2)

inst_59451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffc000000; valaddr_reg:x3; val_offset:178353*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178353*0 + 3*315*FLEN/8, x4, x1, x2)

inst_59452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffe000000; valaddr_reg:x3; val_offset:178356*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178356*0 + 3*316*FLEN/8, x4, x1, x2)

inst_59453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffff000000; valaddr_reg:x3; val_offset:178359*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178359*0 + 3*317*FLEN/8, x4, x1, x2)

inst_59454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffff800000; valaddr_reg:x3; val_offset:178362*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178362*0 + 3*318*FLEN/8, x4, x1, x2)

inst_59455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffc00000; valaddr_reg:x3; val_offset:178365*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178365*0 + 3*319*FLEN/8, x4, x1, x2)

inst_59456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffe00000; valaddr_reg:x3; val_offset:178368*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178368*0 + 3*320*FLEN/8, x4, x1, x2)

inst_59457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffff00000; valaddr_reg:x3; val_offset:178371*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178371*0 + 3*321*FLEN/8, x4, x1, x2)

inst_59458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffff80000; valaddr_reg:x3; val_offset:178374*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178374*0 + 3*322*FLEN/8, x4, x1, x2)

inst_59459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffc0000; valaddr_reg:x3; val_offset:178377*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178377*0 + 3*323*FLEN/8, x4, x1, x2)

inst_59460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffe0000; valaddr_reg:x3; val_offset:178380*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178380*0 + 3*324*FLEN/8, x4, x1, x2)

inst_59461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffff0000; valaddr_reg:x3; val_offset:178383*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178383*0 + 3*325*FLEN/8, x4, x1, x2)

inst_59462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffff8000; valaddr_reg:x3; val_offset:178386*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178386*0 + 3*326*FLEN/8, x4, x1, x2)

inst_59463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffc000; valaddr_reg:x3; val_offset:178389*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178389*0 + 3*327*FLEN/8, x4, x1, x2)

inst_59464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffe000; valaddr_reg:x3; val_offset:178392*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178392*0 + 3*328*FLEN/8, x4, x1, x2)

inst_59465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffff000; valaddr_reg:x3; val_offset:178395*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178395*0 + 3*329*FLEN/8, x4, x1, x2)

inst_59466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffff800; valaddr_reg:x3; val_offset:178398*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178398*0 + 3*330*FLEN/8, x4, x1, x2)

inst_59467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffc00; valaddr_reg:x3; val_offset:178401*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178401*0 + 3*331*FLEN/8, x4, x1, x2)

inst_59468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffe00; valaddr_reg:x3; val_offset:178404*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178404*0 + 3*332*FLEN/8, x4, x1, x2)

inst_59469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffff00; valaddr_reg:x3; val_offset:178407*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178407*0 + 3*333*FLEN/8, x4, x1, x2)

inst_59470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffff80; valaddr_reg:x3; val_offset:178410*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178410*0 + 3*334*FLEN/8, x4, x1, x2)

inst_59471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffffc0; valaddr_reg:x3; val_offset:178413*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178413*0 + 3*335*FLEN/8, x4, x1, x2)

inst_59472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffffe0; valaddr_reg:x3; val_offset:178416*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178416*0 + 3*336*FLEN/8, x4, x1, x2)

inst_59473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffff0; valaddr_reg:x3; val_offset:178419*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178419*0 + 3*337*FLEN/8, x4, x1, x2)

inst_59474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffff8; valaddr_reg:x3; val_offset:178422*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178422*0 + 3*338*FLEN/8, x4, x1, x2)

inst_59475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffffc; valaddr_reg:x3; val_offset:178425*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178425*0 + 3*339*FLEN/8, x4, x1, x2)

inst_59476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdffffffffffffe; valaddr_reg:x3; val_offset:178428*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178428*0 + 3*340*FLEN/8, x4, x1, x2)

inst_59477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1f50d603f6150 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1f50d603f6150; op2val:0x0;
op3val:0xdfffffffffffff; valaddr_reg:x3; val_offset:178431*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178431*0 + 3*341*FLEN/8, x4, x1, x2)

inst_59478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:178434*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178434*0 + 3*342*FLEN/8, x4, x1, x2)

inst_59479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:178437*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178437*0 + 3*343*FLEN/8, x4, x1, x2)

inst_59480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:178440*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178440*0 + 3*344*FLEN/8, x4, x1, x2)

inst_59481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:178443*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178443*0 + 3*345*FLEN/8, x4, x1, x2)

inst_59482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:178446*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178446*0 + 3*346*FLEN/8, x4, x1, x2)

inst_59483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:178449*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178449*0 + 3*347*FLEN/8, x4, x1, x2)

inst_59484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:178452*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178452*0 + 3*348*FLEN/8, x4, x1, x2)

inst_59485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:178455*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178455*0 + 3*349*FLEN/8, x4, x1, x2)

inst_59486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:178458*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178458*0 + 3*350*FLEN/8, x4, x1, x2)

inst_59487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:178461*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178461*0 + 3*351*FLEN/8, x4, x1, x2)

inst_59488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:178464*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178464*0 + 3*352*FLEN/8, x4, x1, x2)

inst_59489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:178467*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178467*0 + 3*353*FLEN/8, x4, x1, x2)

inst_59490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:178470*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178470*0 + 3*354*FLEN/8, x4, x1, x2)

inst_59491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:178473*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178473*0 + 3*355*FLEN/8, x4, x1, x2)

inst_59492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:178476*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178476*0 + 3*356*FLEN/8, x4, x1, x2)

inst_59493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:178479*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178479*0 + 3*357*FLEN/8, x4, x1, x2)

inst_59494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:178482*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178482*0 + 3*358*FLEN/8, x4, x1, x2)

inst_59495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:178485*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178485*0 + 3*359*FLEN/8, x4, x1, x2)

inst_59496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:178488*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178488*0 + 3*360*FLEN/8, x4, x1, x2)

inst_59497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:178491*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178491*0 + 3*361*FLEN/8, x4, x1, x2)

inst_59498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:178494*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178494*0 + 3*362*FLEN/8, x4, x1, x2)

inst_59499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:178497*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178497*0 + 3*363*FLEN/8, x4, x1, x2)

inst_59500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000000000; valaddr_reg:x3; val_offset:178500*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178500*0 + 3*364*FLEN/8, x4, x1, x2)

inst_59501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000000001; valaddr_reg:x3; val_offset:178503*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178503*0 + 3*365*FLEN/8, x4, x1, x2)

inst_59502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000000003; valaddr_reg:x3; val_offset:178506*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178506*0 + 3*366*FLEN/8, x4, x1, x2)

inst_59503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000000007; valaddr_reg:x3; val_offset:178509*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178509*0 + 3*367*FLEN/8, x4, x1, x2)

inst_59504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000000000f; valaddr_reg:x3; val_offset:178512*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178512*0 + 3*368*FLEN/8, x4, x1, x2)

inst_59505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000000001f; valaddr_reg:x3; val_offset:178515*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178515*0 + 3*369*FLEN/8, x4, x1, x2)

inst_59506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000000003f; valaddr_reg:x3; val_offset:178518*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178518*0 + 3*370*FLEN/8, x4, x1, x2)

inst_59507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000000007f; valaddr_reg:x3; val_offset:178521*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178521*0 + 3*371*FLEN/8, x4, x1, x2)

inst_59508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000000000ff; valaddr_reg:x3; val_offset:178524*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178524*0 + 3*372*FLEN/8, x4, x1, x2)

inst_59509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000000001ff; valaddr_reg:x3; val_offset:178527*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178527*0 + 3*373*FLEN/8, x4, x1, x2)

inst_59510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000000003ff; valaddr_reg:x3; val_offset:178530*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178530*0 + 3*374*FLEN/8, x4, x1, x2)

inst_59511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000000007ff; valaddr_reg:x3; val_offset:178533*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178533*0 + 3*375*FLEN/8, x4, x1, x2)

inst_59512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000000fff; valaddr_reg:x3; val_offset:178536*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178536*0 + 3*376*FLEN/8, x4, x1, x2)

inst_59513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000001fff; valaddr_reg:x3; val_offset:178539*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178539*0 + 3*377*FLEN/8, x4, x1, x2)

inst_59514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000003fff; valaddr_reg:x3; val_offset:178542*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178542*0 + 3*378*FLEN/8, x4, x1, x2)

inst_59515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000007fff; valaddr_reg:x3; val_offset:178545*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178545*0 + 3*379*FLEN/8, x4, x1, x2)

inst_59516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000000ffff; valaddr_reg:x3; val_offset:178548*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178548*0 + 3*380*FLEN/8, x4, x1, x2)

inst_59517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000001ffff; valaddr_reg:x3; val_offset:178551*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178551*0 + 3*381*FLEN/8, x4, x1, x2)

inst_59518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000003ffff; valaddr_reg:x3; val_offset:178554*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178554*0 + 3*382*FLEN/8, x4, x1, x2)

inst_59519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000007ffff; valaddr_reg:x3; val_offset:178557*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178557*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_59520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000000fffff; valaddr_reg:x3; val_offset:178560*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178560*0 + 3*384*FLEN/8, x4, x1, x2)

inst_59521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000001fffff; valaddr_reg:x3; val_offset:178563*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178563*0 + 3*385*FLEN/8, x4, x1, x2)

inst_59522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000003fffff; valaddr_reg:x3; val_offset:178566*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178566*0 + 3*386*FLEN/8, x4, x1, x2)

inst_59523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000007fffff; valaddr_reg:x3; val_offset:178569*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178569*0 + 3*387*FLEN/8, x4, x1, x2)

inst_59524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000000ffffff; valaddr_reg:x3; val_offset:178572*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178572*0 + 3*388*FLEN/8, x4, x1, x2)

inst_59525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000001ffffff; valaddr_reg:x3; val_offset:178575*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178575*0 + 3*389*FLEN/8, x4, x1, x2)

inst_59526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000003ffffff; valaddr_reg:x3; val_offset:178578*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178578*0 + 3*390*FLEN/8, x4, x1, x2)

inst_59527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000007ffffff; valaddr_reg:x3; val_offset:178581*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178581*0 + 3*391*FLEN/8, x4, x1, x2)

inst_59528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000000fffffff; valaddr_reg:x3; val_offset:178584*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178584*0 + 3*392*FLEN/8, x4, x1, x2)

inst_59529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000001fffffff; valaddr_reg:x3; val_offset:178587*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178587*0 + 3*393*FLEN/8, x4, x1, x2)

inst_59530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000003fffffff; valaddr_reg:x3; val_offset:178590*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178590*0 + 3*394*FLEN/8, x4, x1, x2)

inst_59531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000007fffffff; valaddr_reg:x3; val_offset:178593*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178593*0 + 3*395*FLEN/8, x4, x1, x2)

inst_59532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200000ffffffff; valaddr_reg:x3; val_offset:178596*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178596*0 + 3*396*FLEN/8, x4, x1, x2)

inst_59533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200001ffffffff; valaddr_reg:x3; val_offset:178599*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178599*0 + 3*397*FLEN/8, x4, x1, x2)

inst_59534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200003ffffffff; valaddr_reg:x3; val_offset:178602*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178602*0 + 3*398*FLEN/8, x4, x1, x2)

inst_59535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200007ffffffff; valaddr_reg:x3; val_offset:178605*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178605*0 + 3*399*FLEN/8, x4, x1, x2)

inst_59536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020000fffffffff; valaddr_reg:x3; val_offset:178608*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178608*0 + 3*400*FLEN/8, x4, x1, x2)

inst_59537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020001fffffffff; valaddr_reg:x3; val_offset:178611*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178611*0 + 3*401*FLEN/8, x4, x1, x2)

inst_59538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020003fffffffff; valaddr_reg:x3; val_offset:178614*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178614*0 + 3*402*FLEN/8, x4, x1, x2)

inst_59539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020007fffffffff; valaddr_reg:x3; val_offset:178617*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178617*0 + 3*403*FLEN/8, x4, x1, x2)

inst_59540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802000ffffffffff; valaddr_reg:x3; val_offset:178620*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178620*0 + 3*404*FLEN/8, x4, x1, x2)

inst_59541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802001ffffffffff; valaddr_reg:x3; val_offset:178623*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178623*0 + 3*405*FLEN/8, x4, x1, x2)

inst_59542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802003ffffffffff; valaddr_reg:x3; val_offset:178626*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178626*0 + 3*406*FLEN/8, x4, x1, x2)

inst_59543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802007ffffffffff; valaddr_reg:x3; val_offset:178629*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178629*0 + 3*407*FLEN/8, x4, x1, x2)

inst_59544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80200fffffffffff; valaddr_reg:x3; val_offset:178632*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178632*0 + 3*408*FLEN/8, x4, x1, x2)

inst_59545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80201fffffffffff; valaddr_reg:x3; val_offset:178635*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178635*0 + 3*409*FLEN/8, x4, x1, x2)

inst_59546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80203fffffffffff; valaddr_reg:x3; val_offset:178638*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178638*0 + 3*410*FLEN/8, x4, x1, x2)

inst_59547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x80207fffffffffff; valaddr_reg:x3; val_offset:178641*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178641*0 + 3*411*FLEN/8, x4, x1, x2)

inst_59548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8020ffffffffffff; valaddr_reg:x3; val_offset:178644*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178644*0 + 3*412*FLEN/8, x4, x1, x2)

inst_59549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8021ffffffffffff; valaddr_reg:x3; val_offset:178647*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178647*0 + 3*413*FLEN/8, x4, x1, x2)

inst_59550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8023ffffffffffff; valaddr_reg:x3; val_offset:178650*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178650*0 + 3*414*FLEN/8, x4, x1, x2)

inst_59551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8027ffffffffffff; valaddr_reg:x3; val_offset:178653*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178653*0 + 3*415*FLEN/8, x4, x1, x2)

inst_59552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x8028000000000000; valaddr_reg:x3; val_offset:178656*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178656*0 + 3*416*FLEN/8, x4, x1, x2)

inst_59553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802c000000000000; valaddr_reg:x3; val_offset:178659*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178659*0 + 3*417*FLEN/8, x4, x1, x2)

inst_59554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802e000000000000; valaddr_reg:x3; val_offset:178662*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178662*0 + 3*418*FLEN/8, x4, x1, x2)

inst_59555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802f000000000000; valaddr_reg:x3; val_offset:178665*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178665*0 + 3*419*FLEN/8, x4, x1, x2)

inst_59556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802f800000000000; valaddr_reg:x3; val_offset:178668*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178668*0 + 3*420*FLEN/8, x4, x1, x2)

inst_59557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fc00000000000; valaddr_reg:x3; val_offset:178671*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178671*0 + 3*421*FLEN/8, x4, x1, x2)

inst_59558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fe00000000000; valaddr_reg:x3; val_offset:178674*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178674*0 + 3*422*FLEN/8, x4, x1, x2)

inst_59559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ff00000000000; valaddr_reg:x3; val_offset:178677*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178677*0 + 3*423*FLEN/8, x4, x1, x2)

inst_59560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ff80000000000; valaddr_reg:x3; val_offset:178680*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178680*0 + 3*424*FLEN/8, x4, x1, x2)

inst_59561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffc0000000000; valaddr_reg:x3; val_offset:178683*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178683*0 + 3*425*FLEN/8, x4, x1, x2)

inst_59562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffe0000000000; valaddr_reg:x3; val_offset:178686*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178686*0 + 3*426*FLEN/8, x4, x1, x2)

inst_59563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fff0000000000; valaddr_reg:x3; val_offset:178689*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178689*0 + 3*427*FLEN/8, x4, x1, x2)

inst_59564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fff8000000000; valaddr_reg:x3; val_offset:178692*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178692*0 + 3*428*FLEN/8, x4, x1, x2)

inst_59565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffc000000000; valaddr_reg:x3; val_offset:178695*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178695*0 + 3*429*FLEN/8, x4, x1, x2)

inst_59566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffe000000000; valaddr_reg:x3; val_offset:178698*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178698*0 + 3*430*FLEN/8, x4, x1, x2)

inst_59567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffff000000000; valaddr_reg:x3; val_offset:178701*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178701*0 + 3*431*FLEN/8, x4, x1, x2)

inst_59568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffff800000000; valaddr_reg:x3; val_offset:178704*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178704*0 + 3*432*FLEN/8, x4, x1, x2)

inst_59569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffc00000000; valaddr_reg:x3; val_offset:178707*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178707*0 + 3*433*FLEN/8, x4, x1, x2)

inst_59570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffe00000000; valaddr_reg:x3; val_offset:178710*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178710*0 + 3*434*FLEN/8, x4, x1, x2)

inst_59571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffff00000000; valaddr_reg:x3; val_offset:178713*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178713*0 + 3*435*FLEN/8, x4, x1, x2)

inst_59572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffff80000000; valaddr_reg:x3; val_offset:178716*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178716*0 + 3*436*FLEN/8, x4, x1, x2)

inst_59573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffc0000000; valaddr_reg:x3; val_offset:178719*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178719*0 + 3*437*FLEN/8, x4, x1, x2)

inst_59574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffe0000000; valaddr_reg:x3; val_offset:178722*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178722*0 + 3*438*FLEN/8, x4, x1, x2)

inst_59575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffff0000000; valaddr_reg:x3; val_offset:178725*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178725*0 + 3*439*FLEN/8, x4, x1, x2)

inst_59576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffff8000000; valaddr_reg:x3; val_offset:178728*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178728*0 + 3*440*FLEN/8, x4, x1, x2)

inst_59577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffc000000; valaddr_reg:x3; val_offset:178731*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178731*0 + 3*441*FLEN/8, x4, x1, x2)

inst_59578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffe000000; valaddr_reg:x3; val_offset:178734*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178734*0 + 3*442*FLEN/8, x4, x1, x2)

inst_59579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffff000000; valaddr_reg:x3; val_offset:178737*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178737*0 + 3*443*FLEN/8, x4, x1, x2)

inst_59580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffff800000; valaddr_reg:x3; val_offset:178740*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178740*0 + 3*444*FLEN/8, x4, x1, x2)

inst_59581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffc00000; valaddr_reg:x3; val_offset:178743*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178743*0 + 3*445*FLEN/8, x4, x1, x2)

inst_59582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffe00000; valaddr_reg:x3; val_offset:178746*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178746*0 + 3*446*FLEN/8, x4, x1, x2)

inst_59583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffff00000; valaddr_reg:x3; val_offset:178749*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178749*0 + 3*447*FLEN/8, x4, x1, x2)

inst_59584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffff80000; valaddr_reg:x3; val_offset:178752*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178752*0 + 3*448*FLEN/8, x4, x1, x2)

inst_59585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffc0000; valaddr_reg:x3; val_offset:178755*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178755*0 + 3*449*FLEN/8, x4, x1, x2)

inst_59586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffe0000; valaddr_reg:x3; val_offset:178758*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178758*0 + 3*450*FLEN/8, x4, x1, x2)

inst_59587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffff0000; valaddr_reg:x3; val_offset:178761*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178761*0 + 3*451*FLEN/8, x4, x1, x2)

inst_59588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffff8000; valaddr_reg:x3; val_offset:178764*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178764*0 + 3*452*FLEN/8, x4, x1, x2)

inst_59589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffc000; valaddr_reg:x3; val_offset:178767*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178767*0 + 3*453*FLEN/8, x4, x1, x2)

inst_59590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffe000; valaddr_reg:x3; val_offset:178770*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178770*0 + 3*454*FLEN/8, x4, x1, x2)

inst_59591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffff000; valaddr_reg:x3; val_offset:178773*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178773*0 + 3*455*FLEN/8, x4, x1, x2)

inst_59592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffff800; valaddr_reg:x3; val_offset:178776*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178776*0 + 3*456*FLEN/8, x4, x1, x2)

inst_59593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffc00; valaddr_reg:x3; val_offset:178779*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178779*0 + 3*457*FLEN/8, x4, x1, x2)

inst_59594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffe00; valaddr_reg:x3; val_offset:178782*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178782*0 + 3*458*FLEN/8, x4, x1, x2)

inst_59595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffff00; valaddr_reg:x3; val_offset:178785*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178785*0 + 3*459*FLEN/8, x4, x1, x2)

inst_59596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffff80; valaddr_reg:x3; val_offset:178788*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178788*0 + 3*460*FLEN/8, x4, x1, x2)

inst_59597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffffc0; valaddr_reg:x3; val_offset:178791*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178791*0 + 3*461*FLEN/8, x4, x1, x2)

inst_59598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffffe0; valaddr_reg:x3; val_offset:178794*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178794*0 + 3*462*FLEN/8, x4, x1, x2)

inst_59599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffff0; valaddr_reg:x3; val_offset:178797*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178797*0 + 3*463*FLEN/8, x4, x1, x2)

inst_59600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffff8; valaddr_reg:x3; val_offset:178800*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178800*0 + 3*464*FLEN/8, x4, x1, x2)

inst_59601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffffc; valaddr_reg:x3; val_offset:178803*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178803*0 + 3*465*FLEN/8, x4, x1, x2)

inst_59602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802ffffffffffffe; valaddr_reg:x3; val_offset:178806*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178806*0 + 3*466*FLEN/8, x4, x1, x2)

inst_59603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1fd732a122c76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1fd732a122c76; op2val:0x8000;
op3val:0x802fffffffffffff; valaddr_reg:x3; val_offset:178809*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178809*0 + 3*467*FLEN/8, x4, x1, x2)

inst_59604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:178812*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178812*0 + 3*468*FLEN/8, x4, x1, x2)

inst_59605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:178815*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178815*0 + 3*469*FLEN/8, x4, x1, x2)

inst_59606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:178818*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178818*0 + 3*470*FLEN/8, x4, x1, x2)

inst_59607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:178821*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178821*0 + 3*471*FLEN/8, x4, x1, x2)

inst_59608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:178824*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178824*0 + 3*472*FLEN/8, x4, x1, x2)

inst_59609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:178827*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178827*0 + 3*473*FLEN/8, x4, x1, x2)

inst_59610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:178830*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178830*0 + 3*474*FLEN/8, x4, x1, x2)

inst_59611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:178833*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178833*0 + 3*475*FLEN/8, x4, x1, x2)

inst_59612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:178836*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178836*0 + 3*476*FLEN/8, x4, x1, x2)

inst_59613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:178839*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178839*0 + 3*477*FLEN/8, x4, x1, x2)

inst_59614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:178842*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178842*0 + 3*478*FLEN/8, x4, x1, x2)

inst_59615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:178845*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178845*0 + 3*479*FLEN/8, x4, x1, x2)

inst_59616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:178848*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178848*0 + 3*480*FLEN/8, x4, x1, x2)

inst_59617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:178851*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178851*0 + 3*481*FLEN/8, x4, x1, x2)

inst_59618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:178854*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178854*0 + 3*482*FLEN/8, x4, x1, x2)

inst_59619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:178857*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178857*0 + 3*483*FLEN/8, x4, x1, x2)

inst_59620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:178860*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178860*0 + 3*484*FLEN/8, x4, x1, x2)

inst_59621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:178863*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178863*0 + 3*485*FLEN/8, x4, x1, x2)

inst_59622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:178866*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178866*0 + 3*486*FLEN/8, x4, x1, x2)

inst_59623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:178869*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178869*0 + 3*487*FLEN/8, x4, x1, x2)

inst_59624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:178872*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178872*0 + 3*488*FLEN/8, x4, x1, x2)

inst_59625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:178875*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178875*0 + 3*489*FLEN/8, x4, x1, x2)

inst_59626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:178878*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178878*0 + 3*490*FLEN/8, x4, x1, x2)

inst_59627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:178881*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178881*0 + 3*491*FLEN/8, x4, x1, x2)

inst_59628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:178884*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178884*0 + 3*492*FLEN/8, x4, x1, x2)

inst_59629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:178887*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178887*0 + 3*493*FLEN/8, x4, x1, x2)

inst_59630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:178890*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178890*0 + 3*494*FLEN/8, x4, x1, x2)

inst_59631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:178893*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178893*0 + 3*495*FLEN/8, x4, x1, x2)

inst_59632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:178896*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178896*0 + 3*496*FLEN/8, x4, x1, x2)

inst_59633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:178899*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178899*0 + 3*497*FLEN/8, x4, x1, x2)

inst_59634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:178902*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178902*0 + 3*498*FLEN/8, x4, x1, x2)

inst_59635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:178905*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178905*0 + 3*499*FLEN/8, x4, x1, x2)

inst_59636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:178908*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178908*0 + 3*500*FLEN/8, x4, x1, x2)

inst_59637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:178911*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178911*0 + 3*501*FLEN/8, x4, x1, x2)

inst_59638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:178914*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178914*0 + 3*502*FLEN/8, x4, x1, x2)

inst_59639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:178917*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178917*0 + 3*503*FLEN/8, x4, x1, x2)

inst_59640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:178920*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178920*0 + 3*504*FLEN/8, x4, x1, x2)

inst_59641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:178923*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178923*0 + 3*505*FLEN/8, x4, x1, x2)

inst_59642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:178926*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178926*0 + 3*506*FLEN/8, x4, x1, x2)

inst_59643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:178929*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178929*0 + 3*507*FLEN/8, x4, x1, x2)

inst_59644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:178932*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178932*0 + 3*508*FLEN/8, x4, x1, x2)

inst_59645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:178935*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178935*0 + 3*509*FLEN/8, x4, x1, x2)

inst_59646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:178938*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178938*0 + 3*510*FLEN/8, x4, x1, x2)

inst_59647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:178941*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178941*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_59648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:178944*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178944*0 + 3*512*FLEN/8, x4, x1, x2)

inst_59649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:178947*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178947*0 + 3*513*FLEN/8, x4, x1, x2)

inst_59650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:178950*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178950*0 + 3*514*FLEN/8, x4, x1, x2)

inst_59651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:178953*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178953*0 + 3*515*FLEN/8, x4, x1, x2)

inst_59652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:178956*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178956*0 + 3*516*FLEN/8, x4, x1, x2)

inst_59653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:178959*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178959*0 + 3*517*FLEN/8, x4, x1, x2)

inst_59654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:178962*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178962*0 + 3*518*FLEN/8, x4, x1, x2)

inst_59655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:178965*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178965*0 + 3*519*FLEN/8, x4, x1, x2)

inst_59656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:178968*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178968*0 + 3*520*FLEN/8, x4, x1, x2)

inst_59657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:178971*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178971*0 + 3*521*FLEN/8, x4, x1, x2)

inst_59658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:178974*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178974*0 + 3*522*FLEN/8, x4, x1, x2)

inst_59659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:178977*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178977*0 + 3*523*FLEN/8, x4, x1, x2)

inst_59660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:178980*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178980*0 + 3*524*FLEN/8, x4, x1, x2)

inst_59661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:178983*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178983*0 + 3*525*FLEN/8, x4, x1, x2)

inst_59662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:178986*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178986*0 + 3*526*FLEN/8, x4, x1, x2)

inst_59663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:178989*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178989*0 + 3*527*FLEN/8, x4, x1, x2)

inst_59664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:178992*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178992*0 + 3*528*FLEN/8, x4, x1, x2)

inst_59665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:178995*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178995*0 + 3*529*FLEN/8, x4, x1, x2)

inst_59666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:178998*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178998*0 + 3*530*FLEN/8, x4, x1, x2)

inst_59667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:179001*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179001*0 + 3*531*FLEN/8, x4, x1, x2)

inst_59668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:179004*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179004*0 + 3*532*FLEN/8, x4, x1, x2)

inst_59669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:179007*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179007*0 + 3*533*FLEN/8, x4, x1, x2)

inst_59670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:179010*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179010*0 + 3*534*FLEN/8, x4, x1, x2)

inst_59671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:179013*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179013*0 + 3*535*FLEN/8, x4, x1, x2)

inst_59672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:179016*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179016*0 + 3*536*FLEN/8, x4, x1, x2)

inst_59673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:179019*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179019*0 + 3*537*FLEN/8, x4, x1, x2)

inst_59674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:179022*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179022*0 + 3*538*FLEN/8, x4, x1, x2)

inst_59675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:179025*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179025*0 + 3*539*FLEN/8, x4, x1, x2)

inst_59676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:179028*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179028*0 + 3*540*FLEN/8, x4, x1, x2)

inst_59677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:179031*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179031*0 + 3*541*FLEN/8, x4, x1, x2)

inst_59678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:179034*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179034*0 + 3*542*FLEN/8, x4, x1, x2)

inst_59679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:179037*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179037*0 + 3*543*FLEN/8, x4, x1, x2)

inst_59680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:179040*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179040*0 + 3*544*FLEN/8, x4, x1, x2)

inst_59681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:179043*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179043*0 + 3*545*FLEN/8, x4, x1, x2)

inst_59682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:179046*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179046*0 + 3*546*FLEN/8, x4, x1, x2)

inst_59683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:179049*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179049*0 + 3*547*FLEN/8, x4, x1, x2)

inst_59684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:179052*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179052*0 + 3*548*FLEN/8, x4, x1, x2)

inst_59685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:179055*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179055*0 + 3*549*FLEN/8, x4, x1, x2)

inst_59686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:179058*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179058*0 + 3*550*FLEN/8, x4, x1, x2)

inst_59687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:179061*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179061*0 + 3*551*FLEN/8, x4, x1, x2)

inst_59688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:179064*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179064*0 + 3*552*FLEN/8, x4, x1, x2)

inst_59689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:179067*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179067*0 + 3*553*FLEN/8, x4, x1, x2)

inst_59690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:179070*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179070*0 + 3*554*FLEN/8, x4, x1, x2)

inst_59691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:179073*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179073*0 + 3*555*FLEN/8, x4, x1, x2)

inst_59692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:179076*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179076*0 + 3*556*FLEN/8, x4, x1, x2)

inst_59693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:179079*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179079*0 + 3*557*FLEN/8, x4, x1, x2)

inst_59694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:179082*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179082*0 + 3*558*FLEN/8, x4, x1, x2)

inst_59695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:179085*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179085*0 + 3*559*FLEN/8, x4, x1, x2)

inst_59696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:179088*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179088*0 + 3*560*FLEN/8, x4, x1, x2)

inst_59697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:179091*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179091*0 + 3*561*FLEN/8, x4, x1, x2)

inst_59698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:179094*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179094*0 + 3*562*FLEN/8, x4, x1, x2)

inst_59699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:179097*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179097*0 + 3*563*FLEN/8, x4, x1, x2)

inst_59700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:179100*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179100*0 + 3*564*FLEN/8, x4, x1, x2)

inst_59701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:179103*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179103*0 + 3*565*FLEN/8, x4, x1, x2)

inst_59702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:179106*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179106*0 + 3*566*FLEN/8, x4, x1, x2)

inst_59703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:179109*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179109*0 + 3*567*FLEN/8, x4, x1, x2)

inst_59704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:179112*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179112*0 + 3*568*FLEN/8, x4, x1, x2)

inst_59705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:179115*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179115*0 + 3*569*FLEN/8, x4, x1, x2)

inst_59706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:179118*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179118*0 + 3*570*FLEN/8, x4, x1, x2)

inst_59707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:179121*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179121*0 + 3*571*FLEN/8, x4, x1, x2)

inst_59708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:179124*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179124*0 + 3*572*FLEN/8, x4, x1, x2)

inst_59709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:179127*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179127*0 + 3*573*FLEN/8, x4, x1, x2)

inst_59710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:179130*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179130*0 + 3*574*FLEN/8, x4, x1, x2)

inst_59711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:179133*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179133*0 + 3*575*FLEN/8, x4, x1, x2)

inst_59712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:179136*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179136*0 + 3*576*FLEN/8, x4, x1, x2)

inst_59713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:179139*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179139*0 + 3*577*FLEN/8, x4, x1, x2)

inst_59714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:179142*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179142*0 + 3*578*FLEN/8, x4, x1, x2)

inst_59715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:179145*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179145*0 + 3*579*FLEN/8, x4, x1, x2)

inst_59716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:179148*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179148*0 + 3*580*FLEN/8, x4, x1, x2)

inst_59717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:179151*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179151*0 + 3*581*FLEN/8, x4, x1, x2)

inst_59718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:179154*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179154*0 + 3*582*FLEN/8, x4, x1, x2)

inst_59719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:179157*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179157*0 + 3*583*FLEN/8, x4, x1, x2)

inst_59720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:179160*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179160*0 + 3*584*FLEN/8, x4, x1, x2)

inst_59721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:179163*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179163*0 + 3*585*FLEN/8, x4, x1, x2)

inst_59722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:179166*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179166*0 + 3*586*FLEN/8, x4, x1, x2)

inst_59723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:179169*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179169*0 + 3*587*FLEN/8, x4, x1, x2)

inst_59724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:179172*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179172*0 + 3*588*FLEN/8, x4, x1, x2)

inst_59725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:179175*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179175*0 + 3*589*FLEN/8, x4, x1, x2)

inst_59726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:179178*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179178*0 + 3*590*FLEN/8, x4, x1, x2)

inst_59727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:179181*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179181*0 + 3*591*FLEN/8, x4, x1, x2)

inst_59728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:179184*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179184*0 + 3*592*FLEN/8, x4, x1, x2)

inst_59729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x213bd11327f93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa213bd11327f93; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:179187*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179187*0 + 3*593*FLEN/8, x4, x1, x2)

inst_59730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000000000; valaddr_reg:x3; val_offset:179190*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179190*0 + 3*594*FLEN/8, x4, x1, x2)

inst_59731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000000001; valaddr_reg:x3; val_offset:179193*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179193*0 + 3*595*FLEN/8, x4, x1, x2)

inst_59732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000000003; valaddr_reg:x3; val_offset:179196*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179196*0 + 3*596*FLEN/8, x4, x1, x2)

inst_59733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000000007; valaddr_reg:x3; val_offset:179199*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179199*0 + 3*597*FLEN/8, x4, x1, x2)

inst_59734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000000000f; valaddr_reg:x3; val_offset:179202*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179202*0 + 3*598*FLEN/8, x4, x1, x2)

inst_59735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000000001f; valaddr_reg:x3; val_offset:179205*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179205*0 + 3*599*FLEN/8, x4, x1, x2)

inst_59736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000000003f; valaddr_reg:x3; val_offset:179208*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179208*0 + 3*600*FLEN/8, x4, x1, x2)

inst_59737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000000007f; valaddr_reg:x3; val_offset:179211*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179211*0 + 3*601*FLEN/8, x4, x1, x2)

inst_59738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000000000ff; valaddr_reg:x3; val_offset:179214*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179214*0 + 3*602*FLEN/8, x4, x1, x2)

inst_59739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000000001ff; valaddr_reg:x3; val_offset:179217*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179217*0 + 3*603*FLEN/8, x4, x1, x2)

inst_59740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000000003ff; valaddr_reg:x3; val_offset:179220*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179220*0 + 3*604*FLEN/8, x4, x1, x2)

inst_59741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000000007ff; valaddr_reg:x3; val_offset:179223*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179223*0 + 3*605*FLEN/8, x4, x1, x2)

inst_59742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000000fff; valaddr_reg:x3; val_offset:179226*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179226*0 + 3*606*FLEN/8, x4, x1, x2)

inst_59743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000001fff; valaddr_reg:x3; val_offset:179229*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179229*0 + 3*607*FLEN/8, x4, x1, x2)

inst_59744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000003fff; valaddr_reg:x3; val_offset:179232*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179232*0 + 3*608*FLEN/8, x4, x1, x2)

inst_59745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000007fff; valaddr_reg:x3; val_offset:179235*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179235*0 + 3*609*FLEN/8, x4, x1, x2)

inst_59746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000000ffff; valaddr_reg:x3; val_offset:179238*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179238*0 + 3*610*FLEN/8, x4, x1, x2)

inst_59747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000001ffff; valaddr_reg:x3; val_offset:179241*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179241*0 + 3*611*FLEN/8, x4, x1, x2)

inst_59748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000003ffff; valaddr_reg:x3; val_offset:179244*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179244*0 + 3*612*FLEN/8, x4, x1, x2)

inst_59749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000007ffff; valaddr_reg:x3; val_offset:179247*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179247*0 + 3*613*FLEN/8, x4, x1, x2)

inst_59750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000000fffff; valaddr_reg:x3; val_offset:179250*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179250*0 + 3*614*FLEN/8, x4, x1, x2)

inst_59751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000001fffff; valaddr_reg:x3; val_offset:179253*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179253*0 + 3*615*FLEN/8, x4, x1, x2)

inst_59752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000003fffff; valaddr_reg:x3; val_offset:179256*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179256*0 + 3*616*FLEN/8, x4, x1, x2)

inst_59753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000007fffff; valaddr_reg:x3; val_offset:179259*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179259*0 + 3*617*FLEN/8, x4, x1, x2)

inst_59754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000000ffffff; valaddr_reg:x3; val_offset:179262*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179262*0 + 3*618*FLEN/8, x4, x1, x2)

inst_59755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000001ffffff; valaddr_reg:x3; val_offset:179265*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179265*0 + 3*619*FLEN/8, x4, x1, x2)

inst_59756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000003ffffff; valaddr_reg:x3; val_offset:179268*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179268*0 + 3*620*FLEN/8, x4, x1, x2)

inst_59757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000007ffffff; valaddr_reg:x3; val_offset:179271*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179271*0 + 3*621*FLEN/8, x4, x1, x2)

inst_59758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000000fffffff; valaddr_reg:x3; val_offset:179274*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179274*0 + 3*622*FLEN/8, x4, x1, x2)

inst_59759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000001fffffff; valaddr_reg:x3; val_offset:179277*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179277*0 + 3*623*FLEN/8, x4, x1, x2)

inst_59760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000003fffffff; valaddr_reg:x3; val_offset:179280*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179280*0 + 3*624*FLEN/8, x4, x1, x2)

inst_59761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000007fffffff; valaddr_reg:x3; val_offset:179283*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179283*0 + 3*625*FLEN/8, x4, x1, x2)

inst_59762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00000ffffffff; valaddr_reg:x3; val_offset:179286*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179286*0 + 3*626*FLEN/8, x4, x1, x2)

inst_59763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00001ffffffff; valaddr_reg:x3; val_offset:179289*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179289*0 + 3*627*FLEN/8, x4, x1, x2)

inst_59764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00003ffffffff; valaddr_reg:x3; val_offset:179292*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179292*0 + 3*628*FLEN/8, x4, x1, x2)

inst_59765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00007ffffffff; valaddr_reg:x3; val_offset:179295*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179295*0 + 3*629*FLEN/8, x4, x1, x2)

inst_59766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0000fffffffff; valaddr_reg:x3; val_offset:179298*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179298*0 + 3*630*FLEN/8, x4, x1, x2)

inst_59767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0001fffffffff; valaddr_reg:x3; val_offset:179301*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179301*0 + 3*631*FLEN/8, x4, x1, x2)

inst_59768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0003fffffffff; valaddr_reg:x3; val_offset:179304*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179304*0 + 3*632*FLEN/8, x4, x1, x2)

inst_59769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0007fffffffff; valaddr_reg:x3; val_offset:179307*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179307*0 + 3*633*FLEN/8, x4, x1, x2)

inst_59770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd000ffffffffff; valaddr_reg:x3; val_offset:179310*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179310*0 + 3*634*FLEN/8, x4, x1, x2)

inst_59771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd001ffffffffff; valaddr_reg:x3; val_offset:179313*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179313*0 + 3*635*FLEN/8, x4, x1, x2)

inst_59772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd003ffffffffff; valaddr_reg:x3; val_offset:179316*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179316*0 + 3*636*FLEN/8, x4, x1, x2)

inst_59773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd007ffffffffff; valaddr_reg:x3; val_offset:179319*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179319*0 + 3*637*FLEN/8, x4, x1, x2)

inst_59774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd00fffffffffff; valaddr_reg:x3; val_offset:179322*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179322*0 + 3*638*FLEN/8, x4, x1, x2)

inst_59775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd01fffffffffff; valaddr_reg:x3; val_offset:179325*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179325*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_59776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd03fffffffffff; valaddr_reg:x3; val_offset:179328*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179328*0 + 3*640*FLEN/8, x4, x1, x2)

inst_59777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd07fffffffffff; valaddr_reg:x3; val_offset:179331*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179331*0 + 3*641*FLEN/8, x4, x1, x2)

inst_59778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd0ffffffffffff; valaddr_reg:x3; val_offset:179334*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179334*0 + 3*642*FLEN/8, x4, x1, x2)

inst_59779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd1ffffffffffff; valaddr_reg:x3; val_offset:179337*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179337*0 + 3*643*FLEN/8, x4, x1, x2)

inst_59780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd3ffffffffffff; valaddr_reg:x3; val_offset:179340*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179340*0 + 3*644*FLEN/8, x4, x1, x2)

inst_59781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd7ffffffffffff; valaddr_reg:x3; val_offset:179343*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179343*0 + 3*645*FLEN/8, x4, x1, x2)

inst_59782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbd8000000000000; valaddr_reg:x3; val_offset:179346*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179346*0 + 3*646*FLEN/8, x4, x1, x2)

inst_59783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdc000000000000; valaddr_reg:x3; val_offset:179349*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179349*0 + 3*647*FLEN/8, x4, x1, x2)

inst_59784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbde000000000000; valaddr_reg:x3; val_offset:179352*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179352*0 + 3*648*FLEN/8, x4, x1, x2)

inst_59785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdf000000000000; valaddr_reg:x3; val_offset:179355*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179355*0 + 3*649*FLEN/8, x4, x1, x2)

inst_59786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdf800000000000; valaddr_reg:x3; val_offset:179358*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179358*0 + 3*650*FLEN/8, x4, x1, x2)

inst_59787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfc00000000000; valaddr_reg:x3; val_offset:179361*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179361*0 + 3*651*FLEN/8, x4, x1, x2)

inst_59788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfe00000000000; valaddr_reg:x3; val_offset:179364*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179364*0 + 3*652*FLEN/8, x4, x1, x2)

inst_59789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdff00000000000; valaddr_reg:x3; val_offset:179367*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179367*0 + 3*653*FLEN/8, x4, x1, x2)

inst_59790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdff80000000000; valaddr_reg:x3; val_offset:179370*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179370*0 + 3*654*FLEN/8, x4, x1, x2)

inst_59791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffc0000000000; valaddr_reg:x3; val_offset:179373*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179373*0 + 3*655*FLEN/8, x4, x1, x2)

inst_59792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffe0000000000; valaddr_reg:x3; val_offset:179376*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179376*0 + 3*656*FLEN/8, x4, x1, x2)

inst_59793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfff0000000000; valaddr_reg:x3; val_offset:179379*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179379*0 + 3*657*FLEN/8, x4, x1, x2)

inst_59794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfff8000000000; valaddr_reg:x3; val_offset:179382*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179382*0 + 3*658*FLEN/8, x4, x1, x2)

inst_59795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffc000000000; valaddr_reg:x3; val_offset:179385*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179385*0 + 3*659*FLEN/8, x4, x1, x2)

inst_59796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffe000000000; valaddr_reg:x3; val_offset:179388*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179388*0 + 3*660*FLEN/8, x4, x1, x2)

inst_59797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffff000000000; valaddr_reg:x3; val_offset:179391*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179391*0 + 3*661*FLEN/8, x4, x1, x2)

inst_59798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffff800000000; valaddr_reg:x3; val_offset:179394*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179394*0 + 3*662*FLEN/8, x4, x1, x2)

inst_59799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffc00000000; valaddr_reg:x3; val_offset:179397*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179397*0 + 3*663*FLEN/8, x4, x1, x2)

inst_59800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffe00000000; valaddr_reg:x3; val_offset:179400*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179400*0 + 3*664*FLEN/8, x4, x1, x2)

inst_59801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffff00000000; valaddr_reg:x3; val_offset:179403*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179403*0 + 3*665*FLEN/8, x4, x1, x2)

inst_59802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffff80000000; valaddr_reg:x3; val_offset:179406*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179406*0 + 3*666*FLEN/8, x4, x1, x2)

inst_59803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffc0000000; valaddr_reg:x3; val_offset:179409*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179409*0 + 3*667*FLEN/8, x4, x1, x2)

inst_59804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffe0000000; valaddr_reg:x3; val_offset:179412*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179412*0 + 3*668*FLEN/8, x4, x1, x2)

inst_59805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffff0000000; valaddr_reg:x3; val_offset:179415*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179415*0 + 3*669*FLEN/8, x4, x1, x2)

inst_59806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffff8000000; valaddr_reg:x3; val_offset:179418*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179418*0 + 3*670*FLEN/8, x4, x1, x2)

inst_59807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffc000000; valaddr_reg:x3; val_offset:179421*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179421*0 + 3*671*FLEN/8, x4, x1, x2)

inst_59808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffe000000; valaddr_reg:x3; val_offset:179424*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179424*0 + 3*672*FLEN/8, x4, x1, x2)

inst_59809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffff000000; valaddr_reg:x3; val_offset:179427*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179427*0 + 3*673*FLEN/8, x4, x1, x2)

inst_59810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffff800000; valaddr_reg:x3; val_offset:179430*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179430*0 + 3*674*FLEN/8, x4, x1, x2)

inst_59811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffc00000; valaddr_reg:x3; val_offset:179433*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179433*0 + 3*675*FLEN/8, x4, x1, x2)

inst_59812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffe00000; valaddr_reg:x3; val_offset:179436*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179436*0 + 3*676*FLEN/8, x4, x1, x2)

inst_59813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffff00000; valaddr_reg:x3; val_offset:179439*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179439*0 + 3*677*FLEN/8, x4, x1, x2)

inst_59814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffff80000; valaddr_reg:x3; val_offset:179442*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179442*0 + 3*678*FLEN/8, x4, x1, x2)

inst_59815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffc0000; valaddr_reg:x3; val_offset:179445*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179445*0 + 3*679*FLEN/8, x4, x1, x2)

inst_59816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffe0000; valaddr_reg:x3; val_offset:179448*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179448*0 + 3*680*FLEN/8, x4, x1, x2)

inst_59817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffff0000; valaddr_reg:x3; val_offset:179451*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179451*0 + 3*681*FLEN/8, x4, x1, x2)

inst_59818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffff8000; valaddr_reg:x3; val_offset:179454*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179454*0 + 3*682*FLEN/8, x4, x1, x2)

inst_59819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffc000; valaddr_reg:x3; val_offset:179457*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179457*0 + 3*683*FLEN/8, x4, x1, x2)

inst_59820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffe000; valaddr_reg:x3; val_offset:179460*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179460*0 + 3*684*FLEN/8, x4, x1, x2)

inst_59821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffff000; valaddr_reg:x3; val_offset:179463*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179463*0 + 3*685*FLEN/8, x4, x1, x2)

inst_59822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffff800; valaddr_reg:x3; val_offset:179466*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179466*0 + 3*686*FLEN/8, x4, x1, x2)

inst_59823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffc00; valaddr_reg:x3; val_offset:179469*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179469*0 + 3*687*FLEN/8, x4, x1, x2)

inst_59824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffe00; valaddr_reg:x3; val_offset:179472*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179472*0 + 3*688*FLEN/8, x4, x1, x2)

inst_59825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffff00; valaddr_reg:x3; val_offset:179475*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179475*0 + 3*689*FLEN/8, x4, x1, x2)

inst_59826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffff80; valaddr_reg:x3; val_offset:179478*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179478*0 + 3*690*FLEN/8, x4, x1, x2)

inst_59827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffffc0; valaddr_reg:x3; val_offset:179481*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179481*0 + 3*691*FLEN/8, x4, x1, x2)

inst_59828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffffe0; valaddr_reg:x3; val_offset:179484*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179484*0 + 3*692*FLEN/8, x4, x1, x2)

inst_59829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffff0; valaddr_reg:x3; val_offset:179487*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179487*0 + 3*693*FLEN/8, x4, x1, x2)

inst_59830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffff8; valaddr_reg:x3; val_offset:179490*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179490*0 + 3*694*FLEN/8, x4, x1, x2)

inst_59831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffffc; valaddr_reg:x3; val_offset:179493*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179493*0 + 3*695*FLEN/8, x4, x1, x2)

inst_59832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdffffffffffffe; valaddr_reg:x3; val_offset:179496*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179496*0 + 3*696*FLEN/8, x4, x1, x2)

inst_59833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3bd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbbdfffffffffffff; valaddr_reg:x3; val_offset:179499*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179499*0 + 3*697*FLEN/8, x4, x1, x2)

inst_59834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:179502*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179502*0 + 3*698*FLEN/8, x4, x1, x2)

inst_59835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:179505*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179505*0 + 3*699*FLEN/8, x4, x1, x2)

inst_59836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:179508*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179508*0 + 3*700*FLEN/8, x4, x1, x2)

inst_59837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:179511*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179511*0 + 3*701*FLEN/8, x4, x1, x2)

inst_59838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:179514*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179514*0 + 3*702*FLEN/8, x4, x1, x2)

inst_59839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:179517*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179517*0 + 3*703*FLEN/8, x4, x1, x2)

inst_59840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:179520*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179520*0 + 3*704*FLEN/8, x4, x1, x2)

inst_59841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:179523*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179523*0 + 3*705*FLEN/8, x4, x1, x2)

inst_59842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:179526*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179526*0 + 3*706*FLEN/8, x4, x1, x2)

inst_59843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:179529*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179529*0 + 3*707*FLEN/8, x4, x1, x2)

inst_59844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:179532*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179532*0 + 3*708*FLEN/8, x4, x1, x2)

inst_59845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:179535*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179535*0 + 3*709*FLEN/8, x4, x1, x2)

inst_59846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:179538*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179538*0 + 3*710*FLEN/8, x4, x1, x2)

inst_59847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:179541*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179541*0 + 3*711*FLEN/8, x4, x1, x2)

inst_59848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:179544*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179544*0 + 3*712*FLEN/8, x4, x1, x2)

inst_59849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:179547*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179547*0 + 3*713*FLEN/8, x4, x1, x2)

inst_59850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:179550*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179550*0 + 3*714*FLEN/8, x4, x1, x2)

inst_59851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:179553*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179553*0 + 3*715*FLEN/8, x4, x1, x2)

inst_59852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:179556*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179556*0 + 3*716*FLEN/8, x4, x1, x2)

inst_59853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:179559*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179559*0 + 3*717*FLEN/8, x4, x1, x2)

inst_59854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:179562*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179562*0 + 3*718*FLEN/8, x4, x1, x2)

inst_59855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21d7278b1bb7f and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xc438a1bc819f3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa21d7278b1bb7f; op2val:0x9fcc438a1bc819f3;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:179565*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179565*0 + 3*719*FLEN/8, x4, x1, x2)

inst_59856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:179568*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179568*0 + 3*720*FLEN/8, x4, x1, x2)

inst_59857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:179571*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179571*0 + 3*721*FLEN/8, x4, x1, x2)

inst_59858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:179574*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179574*0 + 3*722*FLEN/8, x4, x1, x2)

inst_59859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:179577*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179577*0 + 3*723*FLEN/8, x4, x1, x2)

inst_59860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:179580*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179580*0 + 3*724*FLEN/8, x4, x1, x2)

inst_59861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:179583*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179583*0 + 3*725*FLEN/8, x4, x1, x2)

inst_59862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:179586*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179586*0 + 3*726*FLEN/8, x4, x1, x2)

inst_59863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:179589*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179589*0 + 3*727*FLEN/8, x4, x1, x2)

inst_59864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:179592*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179592*0 + 3*728*FLEN/8, x4, x1, x2)

inst_59865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:179595*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179595*0 + 3*729*FLEN/8, x4, x1, x2)

inst_59866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:179598*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179598*0 + 3*730*FLEN/8, x4, x1, x2)

inst_59867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:179601*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179601*0 + 3*731*FLEN/8, x4, x1, x2)

inst_59868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:179604*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179604*0 + 3*732*FLEN/8, x4, x1, x2)

inst_59869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:179607*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179607*0 + 3*733*FLEN/8, x4, x1, x2)

inst_59870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:179610*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179610*0 + 3*734*FLEN/8, x4, x1, x2)

inst_59871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:179613*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179613*0 + 3*735*FLEN/8, x4, x1, x2)

inst_59872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:179616*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179616*0 + 3*736*FLEN/8, x4, x1, x2)

inst_59873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:179619*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179619*0 + 3*737*FLEN/8, x4, x1, x2)

inst_59874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:179622*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179622*0 + 3*738*FLEN/8, x4, x1, x2)

inst_59875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:179625*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179625*0 + 3*739*FLEN/8, x4, x1, x2)

inst_59876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:179628*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179628*0 + 3*740*FLEN/8, x4, x1, x2)

inst_59877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:179631*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179631*0 + 3*741*FLEN/8, x4, x1, x2)

inst_59878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:179634*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179634*0 + 3*742*FLEN/8, x4, x1, x2)

inst_59879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:179637*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179637*0 + 3*743*FLEN/8, x4, x1, x2)

inst_59880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:179640*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179640*0 + 3*744*FLEN/8, x4, x1, x2)

inst_59881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:179643*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179643*0 + 3*745*FLEN/8, x4, x1, x2)

inst_59882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:179646*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179646*0 + 3*746*FLEN/8, x4, x1, x2)

inst_59883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:179649*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179649*0 + 3*747*FLEN/8, x4, x1, x2)

inst_59884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:179652*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179652*0 + 3*748*FLEN/8, x4, x1, x2)

inst_59885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:179655*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179655*0 + 3*749*FLEN/8, x4, x1, x2)

inst_59886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:179658*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179658*0 + 3*750*FLEN/8, x4, x1, x2)

inst_59887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:179661*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179661*0 + 3*751*FLEN/8, x4, x1, x2)

inst_59888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:179664*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179664*0 + 3*752*FLEN/8, x4, x1, x2)

inst_59889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:179667*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179667*0 + 3*753*FLEN/8, x4, x1, x2)

inst_59890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:179670*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179670*0 + 3*754*FLEN/8, x4, x1, x2)

inst_59891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:179673*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179673*0 + 3*755*FLEN/8, x4, x1, x2)

inst_59892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:179676*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179676*0 + 3*756*FLEN/8, x4, x1, x2)

inst_59893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:179679*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179679*0 + 3*757*FLEN/8, x4, x1, x2)

inst_59894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:179682*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179682*0 + 3*758*FLEN/8, x4, x1, x2)

inst_59895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:179685*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179685*0 + 3*759*FLEN/8, x4, x1, x2)

inst_59896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:179688*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179688*0 + 3*760*FLEN/8, x4, x1, x2)

inst_59897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:179691*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179691*0 + 3*761*FLEN/8, x4, x1, x2)

inst_59898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:179694*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179694*0 + 3*762*FLEN/8, x4, x1, x2)

inst_59899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:179697*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179697*0 + 3*763*FLEN/8, x4, x1, x2)

inst_59900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:179700*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179700*0 + 3*764*FLEN/8, x4, x1, x2)

inst_59901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:179703*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179703*0 + 3*765*FLEN/8, x4, x1, x2)

inst_59902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:179706*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179706*0 + 3*766*FLEN/8, x4, x1, x2)

inst_59903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa22aa3d2e74e72; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:179709*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179709*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6891036752184547867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6891052458755600868,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816448,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816449,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816451,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816455,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816463,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816479,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816511,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816575,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816703,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816959,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155817471,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155818495,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155820543,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155824639,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155832831,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155849215,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155881983,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155947519,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156078591,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156340735,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156865023,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795157913599,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795160010751,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795164205055,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795172593663,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795189370879,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795222925311,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795290034175,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795424251903,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795692687359,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546796229558271,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546797303300095,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546799450783743,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546803745751039,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546812335685631,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546829515554815,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546863875293183,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546932594769919,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547070033723391,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547344911630335,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547894667444223,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58548994179071999,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58551193202327551,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58555591248838655,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58564387341860863,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58581979527905279,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58617163899994111,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58687532644171775,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58828270132527103,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59109745109237759,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59672695062659071,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501695,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501696,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(61924494876344320,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62487444829765632,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62768919806476288,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62909657294831616,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62980026039009280,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63015210411098112,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63032802597142528,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63041598690164736,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63045996736675840,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63048195759931392,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049295271559168,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049845027373056,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050119905280000,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050257344233472,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050326063710208,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050360423448576,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050377603317760,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050386193252352,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050390488219648,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050392635703296,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050393709445120,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394246316032,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394514751488,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394648969216,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394716078080,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394749632512,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394766409728,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394774798336,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394778992640,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394781089792,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782138368,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782662656,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394782924800,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783055872,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783121408,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783154176,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783170560,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783178752,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783182848,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783184896,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783185920,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186432,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186688,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186816,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186880,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186912,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186928,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186936,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186940,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186942,64,FLEN)
NAN_BOXED(6891058342651715920,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186943,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516800,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516801,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516803,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516807,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516815,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516831,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516863,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516927,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517055,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517311,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517823,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109518847,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109520895,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109524991,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109533183,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109549567,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109582335,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109647871,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109778943,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110041087,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110565375,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236111613951,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236113711103,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236117905407,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236126294015,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236143071231,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236176625663,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236243734527,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236377952255,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236646387711,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379237183258623,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379238257000447,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379240404484095,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379244699451391,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379253289385983,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379270469255167,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379304828993535,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379373548470271,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379510987423743,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379785865330687,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232380335621144575,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232381435132772351,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232383634156027903,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232388032202539007,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232396828295561215,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232414420481605631,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232449604853694463,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232519973597872127,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232660711086227455,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232942186062938111,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9233505136016359423,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202047,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202048,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9235756935830044672,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236319885783465984,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236601360760176640,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236742098248531968,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236812466992709632,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236847651364798464,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236865243550842880,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236874039643865088,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236878437690376192,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236880636713631744,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236881736225259520,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882285981073408,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882560858980352,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882698297933824,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882767017410560,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882801377148928,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882818557018112,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882827146952704,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882831441920000,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882833589403648,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882834663145472,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835200016384,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835468451840,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835602669568,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835669778432,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835703332864,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835720110080,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835728498688,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835732692992,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835734790144,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835735838720,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736363008,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736625152,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736756224,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736821760,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736854528,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736870912,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736879104,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736883200,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736885248,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886272,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886784,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887040,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887168,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887232,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887264,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887280,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887288,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887292,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887294,64,FLEN)
NAN_BOXED(6891067575922470006,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887295,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6891092082588549011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340480,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340481,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340483,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340487,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340495,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340511,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340543,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340607,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340735,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248340991,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248341503,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248342527,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248344575,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248348671,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248356863,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248373247,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248406015,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248471551,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248602623,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880248864767,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880249389055,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880250437631,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880252534783,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880256729087,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880265117695,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880281894911,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880315449343,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880382558207,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880516775935,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316880785211391,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316881322082303,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316882395824127,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316884543307775,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316888838275071,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316897428209663,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316914608078847,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533316948967817215,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533317017687293951,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533317155126247423,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533317430004154367,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533317979759968255,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533319079271596031,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533321278294851583,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533325676341362687,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533334472434384895,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533352064620429311,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533387248992518143,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533457617736695807,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533598355225051135,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13533879830201761791,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13534442780155183103,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13535568680062025727,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13535568680062025728,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13536694579968868352,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537257529922289664,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537539004899000320,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537679742387355648,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537750111131533312,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537785295503622144,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537802887689666560,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537811683782688768,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537816081829199872,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537818280852455424,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537819380364083200,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537819930119897088,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820204997804032,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820342436757504,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820411156234240,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820445515972608,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820462695841792,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820471285776384,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820475580743680,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820477728227328,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820478801969152,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479338840064,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479607275520,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479741493248,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479808602112,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479842156544,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479858933760,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479867322368,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479871516672,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479873613824,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479874662400,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875186688,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875448832,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875579904,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875645440,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875678208,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875694592,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875702784,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875706880,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875708928,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875709952,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710464,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710720,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710848,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710912,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710944,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710960,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710968,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710972,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710974,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13537820479875710975,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891102757318671231,64,FLEN)
NAN_BOXED(11514652607730162163,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6891117262936690290,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
