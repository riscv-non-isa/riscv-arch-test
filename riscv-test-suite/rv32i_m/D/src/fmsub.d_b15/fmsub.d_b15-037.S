
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_27648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:82944*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82944*0 + 3*0*FLEN/8, x4, x1, x2)

inst_27649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:82947*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82947*0 + 3*1*FLEN/8, x4, x1, x2)

inst_27650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:82950*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82950*0 + 3*2*FLEN/8, x4, x1, x2)

inst_27651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:82953*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82953*0 + 3*3*FLEN/8, x4, x1, x2)

inst_27652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:82956*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82956*0 + 3*4*FLEN/8, x4, x1, x2)

inst_27653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:82959*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82959*0 + 3*5*FLEN/8, x4, x1, x2)

inst_27654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:82962*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82962*0 + 3*6*FLEN/8, x4, x1, x2)

inst_27655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:82965*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82965*0 + 3*7*FLEN/8, x4, x1, x2)

inst_27656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:82968*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82968*0 + 3*8*FLEN/8, x4, x1, x2)

inst_27657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:82971*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82971*0 + 3*9*FLEN/8, x4, x1, x2)

inst_27658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:82974*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82974*0 + 3*10*FLEN/8, x4, x1, x2)

inst_27659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x115a197052a31 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xdf7fc1952cfcd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9115a197052a31; op2val:0x9fddf7fc1952cfcd;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:82977*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82977*0 + 3*11*FLEN/8, x4, x1, x2)

inst_27660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:82980*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82980*0 + 3*12*FLEN/8, x4, x1, x2)

inst_27661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:82983*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82983*0 + 3*13*FLEN/8, x4, x1, x2)

inst_27662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:82986*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82986*0 + 3*14*FLEN/8, x4, x1, x2)

inst_27663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:82989*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82989*0 + 3*15*FLEN/8, x4, x1, x2)

inst_27664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:82992*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82992*0 + 3*16*FLEN/8, x4, x1, x2)

inst_27665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:82995*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82995*0 + 3*17*FLEN/8, x4, x1, x2)

inst_27666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:82998*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82998*0 + 3*18*FLEN/8, x4, x1, x2)

inst_27667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:83001*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83001*0 + 3*19*FLEN/8, x4, x1, x2)

inst_27668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:83004*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83004*0 + 3*20*FLEN/8, x4, x1, x2)

inst_27669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:83007*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83007*0 + 3*21*FLEN/8, x4, x1, x2)

inst_27670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:83010*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83010*0 + 3*22*FLEN/8, x4, x1, x2)

inst_27671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:83013*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83013*0 + 3*23*FLEN/8, x4, x1, x2)

inst_27672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:83016*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83016*0 + 3*24*FLEN/8, x4, x1, x2)

inst_27673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:83019*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83019*0 + 3*25*FLEN/8, x4, x1, x2)

inst_27674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:83022*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83022*0 + 3*26*FLEN/8, x4, x1, x2)

inst_27675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:83025*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83025*0 + 3*27*FLEN/8, x4, x1, x2)

inst_27676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:83028*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83028*0 + 3*28*FLEN/8, x4, x1, x2)

inst_27677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:83031*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83031*0 + 3*29*FLEN/8, x4, x1, x2)

inst_27678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:83034*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83034*0 + 3*30*FLEN/8, x4, x1, x2)

inst_27679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:83037*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83037*0 + 3*31*FLEN/8, x4, x1, x2)

inst_27680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:83040*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83040*0 + 3*32*FLEN/8, x4, x1, x2)

inst_27681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:83043*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83043*0 + 3*33*FLEN/8, x4, x1, x2)

inst_27682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000000000; valaddr_reg:x3; val_offset:83046*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83046*0 + 3*34*FLEN/8, x4, x1, x2)

inst_27683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000000001; valaddr_reg:x3; val_offset:83049*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83049*0 + 3*35*FLEN/8, x4, x1, x2)

inst_27684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000000003; valaddr_reg:x3; val_offset:83052*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83052*0 + 3*36*FLEN/8, x4, x1, x2)

inst_27685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000000007; valaddr_reg:x3; val_offset:83055*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83055*0 + 3*37*FLEN/8, x4, x1, x2)

inst_27686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000000000f; valaddr_reg:x3; val_offset:83058*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83058*0 + 3*38*FLEN/8, x4, x1, x2)

inst_27687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000000001f; valaddr_reg:x3; val_offset:83061*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83061*0 + 3*39*FLEN/8, x4, x1, x2)

inst_27688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000000003f; valaddr_reg:x3; val_offset:83064*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83064*0 + 3*40*FLEN/8, x4, x1, x2)

inst_27689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000000007f; valaddr_reg:x3; val_offset:83067*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83067*0 + 3*41*FLEN/8, x4, x1, x2)

inst_27690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000000000ff; valaddr_reg:x3; val_offset:83070*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83070*0 + 3*42*FLEN/8, x4, x1, x2)

inst_27691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000000001ff; valaddr_reg:x3; val_offset:83073*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83073*0 + 3*43*FLEN/8, x4, x1, x2)

inst_27692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000000003ff; valaddr_reg:x3; val_offset:83076*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83076*0 + 3*44*FLEN/8, x4, x1, x2)

inst_27693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000000007ff; valaddr_reg:x3; val_offset:83079*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83079*0 + 3*45*FLEN/8, x4, x1, x2)

inst_27694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000000fff; valaddr_reg:x3; val_offset:83082*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83082*0 + 3*46*FLEN/8, x4, x1, x2)

inst_27695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000001fff; valaddr_reg:x3; val_offset:83085*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83085*0 + 3*47*FLEN/8, x4, x1, x2)

inst_27696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000003fff; valaddr_reg:x3; val_offset:83088*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83088*0 + 3*48*FLEN/8, x4, x1, x2)

inst_27697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000007fff; valaddr_reg:x3; val_offset:83091*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83091*0 + 3*49*FLEN/8, x4, x1, x2)

inst_27698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000000ffff; valaddr_reg:x3; val_offset:83094*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83094*0 + 3*50*FLEN/8, x4, x1, x2)

inst_27699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000001ffff; valaddr_reg:x3; val_offset:83097*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83097*0 + 3*51*FLEN/8, x4, x1, x2)

inst_27700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000003ffff; valaddr_reg:x3; val_offset:83100*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83100*0 + 3*52*FLEN/8, x4, x1, x2)

inst_27701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000007ffff; valaddr_reg:x3; val_offset:83103*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83103*0 + 3*53*FLEN/8, x4, x1, x2)

inst_27702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000000fffff; valaddr_reg:x3; val_offset:83106*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83106*0 + 3*54*FLEN/8, x4, x1, x2)

inst_27703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000001fffff; valaddr_reg:x3; val_offset:83109*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83109*0 + 3*55*FLEN/8, x4, x1, x2)

inst_27704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000003fffff; valaddr_reg:x3; val_offset:83112*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83112*0 + 3*56*FLEN/8, x4, x1, x2)

inst_27705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000007fffff; valaddr_reg:x3; val_offset:83115*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83115*0 + 3*57*FLEN/8, x4, x1, x2)

inst_27706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000000ffffff; valaddr_reg:x3; val_offset:83118*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83118*0 + 3*58*FLEN/8, x4, x1, x2)

inst_27707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000001ffffff; valaddr_reg:x3; val_offset:83121*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83121*0 + 3*59*FLEN/8, x4, x1, x2)

inst_27708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000003ffffff; valaddr_reg:x3; val_offset:83124*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83124*0 + 3*60*FLEN/8, x4, x1, x2)

inst_27709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000007ffffff; valaddr_reg:x3; val_offset:83127*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83127*0 + 3*61*FLEN/8, x4, x1, x2)

inst_27710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000000fffffff; valaddr_reg:x3; val_offset:83130*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83130*0 + 3*62*FLEN/8, x4, x1, x2)

inst_27711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000001fffffff; valaddr_reg:x3; val_offset:83133*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83133*0 + 3*63*FLEN/8, x4, x1, x2)

inst_27712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000003fffffff; valaddr_reg:x3; val_offset:83136*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83136*0 + 3*64*FLEN/8, x4, x1, x2)

inst_27713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000007fffffff; valaddr_reg:x3; val_offset:83139*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83139*0 + 3*65*FLEN/8, x4, x1, x2)

inst_27714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000000ffffffff; valaddr_reg:x3; val_offset:83142*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83142*0 + 3*66*FLEN/8, x4, x1, x2)

inst_27715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000001ffffffff; valaddr_reg:x3; val_offset:83145*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83145*0 + 3*67*FLEN/8, x4, x1, x2)

inst_27716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000003ffffffff; valaddr_reg:x3; val_offset:83148*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83148*0 + 3*68*FLEN/8, x4, x1, x2)

inst_27717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000007ffffffff; valaddr_reg:x3; val_offset:83151*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83151*0 + 3*69*FLEN/8, x4, x1, x2)

inst_27718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400000fffffffff; valaddr_reg:x3; val_offset:83154*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83154*0 + 3*70*FLEN/8, x4, x1, x2)

inst_27719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400001fffffffff; valaddr_reg:x3; val_offset:83157*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83157*0 + 3*71*FLEN/8, x4, x1, x2)

inst_27720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400003fffffffff; valaddr_reg:x3; val_offset:83160*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83160*0 + 3*72*FLEN/8, x4, x1, x2)

inst_27721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400007fffffffff; valaddr_reg:x3; val_offset:83163*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83163*0 + 3*73*FLEN/8, x4, x1, x2)

inst_27722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40000ffffffffff; valaddr_reg:x3; val_offset:83166*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83166*0 + 3*74*FLEN/8, x4, x1, x2)

inst_27723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40001ffffffffff; valaddr_reg:x3; val_offset:83169*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83169*0 + 3*75*FLEN/8, x4, x1, x2)

inst_27724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40003ffffffffff; valaddr_reg:x3; val_offset:83172*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83172*0 + 3*76*FLEN/8, x4, x1, x2)

inst_27725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40007ffffffffff; valaddr_reg:x3; val_offset:83175*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83175*0 + 3*77*FLEN/8, x4, x1, x2)

inst_27726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4000fffffffffff; valaddr_reg:x3; val_offset:83178*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83178*0 + 3*78*FLEN/8, x4, x1, x2)

inst_27727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4001fffffffffff; valaddr_reg:x3; val_offset:83181*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83181*0 + 3*79*FLEN/8, x4, x1, x2)

inst_27728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4003fffffffffff; valaddr_reg:x3; val_offset:83184*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83184*0 + 3*80*FLEN/8, x4, x1, x2)

inst_27729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x4007fffffffffff; valaddr_reg:x3; val_offset:83187*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83187*0 + 3*81*FLEN/8, x4, x1, x2)

inst_27730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x400ffffffffffff; valaddr_reg:x3; val_offset:83190*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83190*0 + 3*82*FLEN/8, x4, x1, x2)

inst_27731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x401ffffffffffff; valaddr_reg:x3; val_offset:83193*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83193*0 + 3*83*FLEN/8, x4, x1, x2)

inst_27732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x403ffffffffffff; valaddr_reg:x3; val_offset:83196*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83196*0 + 3*84*FLEN/8, x4, x1, x2)

inst_27733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x407ffffffffffff; valaddr_reg:x3; val_offset:83199*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83199*0 + 3*85*FLEN/8, x4, x1, x2)

inst_27734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x408000000000000; valaddr_reg:x3; val_offset:83202*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83202*0 + 3*86*FLEN/8, x4, x1, x2)

inst_27735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40c000000000000; valaddr_reg:x3; val_offset:83205*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83205*0 + 3*87*FLEN/8, x4, x1, x2)

inst_27736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40e000000000000; valaddr_reg:x3; val_offset:83208*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83208*0 + 3*88*FLEN/8, x4, x1, x2)

inst_27737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40f000000000000; valaddr_reg:x3; val_offset:83211*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83211*0 + 3*89*FLEN/8, x4, x1, x2)

inst_27738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40f800000000000; valaddr_reg:x3; val_offset:83214*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83214*0 + 3*90*FLEN/8, x4, x1, x2)

inst_27739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fc00000000000; valaddr_reg:x3; val_offset:83217*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83217*0 + 3*91*FLEN/8, x4, x1, x2)

inst_27740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fe00000000000; valaddr_reg:x3; val_offset:83220*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83220*0 + 3*92*FLEN/8, x4, x1, x2)

inst_27741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ff00000000000; valaddr_reg:x3; val_offset:83223*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83223*0 + 3*93*FLEN/8, x4, x1, x2)

inst_27742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ff80000000000; valaddr_reg:x3; val_offset:83226*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83226*0 + 3*94*FLEN/8, x4, x1, x2)

inst_27743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffc0000000000; valaddr_reg:x3; val_offset:83229*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83229*0 + 3*95*FLEN/8, x4, x1, x2)

inst_27744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffe0000000000; valaddr_reg:x3; val_offset:83232*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83232*0 + 3*96*FLEN/8, x4, x1, x2)

inst_27745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fff0000000000; valaddr_reg:x3; val_offset:83235*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83235*0 + 3*97*FLEN/8, x4, x1, x2)

inst_27746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fff8000000000; valaddr_reg:x3; val_offset:83238*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83238*0 + 3*98*FLEN/8, x4, x1, x2)

inst_27747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffc000000000; valaddr_reg:x3; val_offset:83241*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83241*0 + 3*99*FLEN/8, x4, x1, x2)

inst_27748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffe000000000; valaddr_reg:x3; val_offset:83244*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83244*0 + 3*100*FLEN/8, x4, x1, x2)

inst_27749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffff000000000; valaddr_reg:x3; val_offset:83247*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83247*0 + 3*101*FLEN/8, x4, x1, x2)

inst_27750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffff800000000; valaddr_reg:x3; val_offset:83250*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83250*0 + 3*102*FLEN/8, x4, x1, x2)

inst_27751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffc00000000; valaddr_reg:x3; val_offset:83253*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83253*0 + 3*103*FLEN/8, x4, x1, x2)

inst_27752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffe00000000; valaddr_reg:x3; val_offset:83256*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83256*0 + 3*104*FLEN/8, x4, x1, x2)

inst_27753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffff00000000; valaddr_reg:x3; val_offset:83259*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83259*0 + 3*105*FLEN/8, x4, x1, x2)

inst_27754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffff80000000; valaddr_reg:x3; val_offset:83262*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83262*0 + 3*106*FLEN/8, x4, x1, x2)

inst_27755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffc0000000; valaddr_reg:x3; val_offset:83265*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83265*0 + 3*107*FLEN/8, x4, x1, x2)

inst_27756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffe0000000; valaddr_reg:x3; val_offset:83268*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83268*0 + 3*108*FLEN/8, x4, x1, x2)

inst_27757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffff0000000; valaddr_reg:x3; val_offset:83271*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83271*0 + 3*109*FLEN/8, x4, x1, x2)

inst_27758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffff8000000; valaddr_reg:x3; val_offset:83274*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83274*0 + 3*110*FLEN/8, x4, x1, x2)

inst_27759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffc000000; valaddr_reg:x3; val_offset:83277*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83277*0 + 3*111*FLEN/8, x4, x1, x2)

inst_27760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffe000000; valaddr_reg:x3; val_offset:83280*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83280*0 + 3*112*FLEN/8, x4, x1, x2)

inst_27761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffff000000; valaddr_reg:x3; val_offset:83283*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83283*0 + 3*113*FLEN/8, x4, x1, x2)

inst_27762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffff800000; valaddr_reg:x3; val_offset:83286*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83286*0 + 3*114*FLEN/8, x4, x1, x2)

inst_27763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffc00000; valaddr_reg:x3; val_offset:83289*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83289*0 + 3*115*FLEN/8, x4, x1, x2)

inst_27764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffe00000; valaddr_reg:x3; val_offset:83292*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83292*0 + 3*116*FLEN/8, x4, x1, x2)

inst_27765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffff00000; valaddr_reg:x3; val_offset:83295*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83295*0 + 3*117*FLEN/8, x4, x1, x2)

inst_27766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffff80000; valaddr_reg:x3; val_offset:83298*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83298*0 + 3*118*FLEN/8, x4, x1, x2)

inst_27767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffc0000; valaddr_reg:x3; val_offset:83301*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83301*0 + 3*119*FLEN/8, x4, x1, x2)

inst_27768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffe0000; valaddr_reg:x3; val_offset:83304*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83304*0 + 3*120*FLEN/8, x4, x1, x2)

inst_27769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffff0000; valaddr_reg:x3; val_offset:83307*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83307*0 + 3*121*FLEN/8, x4, x1, x2)

inst_27770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffff8000; valaddr_reg:x3; val_offset:83310*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83310*0 + 3*122*FLEN/8, x4, x1, x2)

inst_27771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffc000; valaddr_reg:x3; val_offset:83313*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83313*0 + 3*123*FLEN/8, x4, x1, x2)

inst_27772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffe000; valaddr_reg:x3; val_offset:83316*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83316*0 + 3*124*FLEN/8, x4, x1, x2)

inst_27773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffff000; valaddr_reg:x3; val_offset:83319*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83319*0 + 3*125*FLEN/8, x4, x1, x2)

inst_27774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffff800; valaddr_reg:x3; val_offset:83322*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83322*0 + 3*126*FLEN/8, x4, x1, x2)

inst_27775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffc00; valaddr_reg:x3; val_offset:83325*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83325*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_27776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffe00; valaddr_reg:x3; val_offset:83328*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83328*0 + 3*128*FLEN/8, x4, x1, x2)

inst_27777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffff00; valaddr_reg:x3; val_offset:83331*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83331*0 + 3*129*FLEN/8, x4, x1, x2)

inst_27778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffff80; valaddr_reg:x3; val_offset:83334*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83334*0 + 3*130*FLEN/8, x4, x1, x2)

inst_27779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffffc0; valaddr_reg:x3; val_offset:83337*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83337*0 + 3*131*FLEN/8, x4, x1, x2)

inst_27780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffffe0; valaddr_reg:x3; val_offset:83340*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83340*0 + 3*132*FLEN/8, x4, x1, x2)

inst_27781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffff0; valaddr_reg:x3; val_offset:83343*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83343*0 + 3*133*FLEN/8, x4, x1, x2)

inst_27782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffff8; valaddr_reg:x3; val_offset:83346*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83346*0 + 3*134*FLEN/8, x4, x1, x2)

inst_27783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffffc; valaddr_reg:x3; val_offset:83349*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83349*0 + 3*135*FLEN/8, x4, x1, x2)

inst_27784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40ffffffffffffe; valaddr_reg:x3; val_offset:83352*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83352*0 + 3*136*FLEN/8, x4, x1, x2)

inst_27785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91292a3e2f1241; op2val:0x0;
op3val:0x40fffffffffffff; valaddr_reg:x3; val_offset:83355*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83355*0 + 3*137*FLEN/8, x4, x1, x2)

inst_27786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:83358*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83358*0 + 3*138*FLEN/8, x4, x1, x2)

inst_27787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:83361*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83361*0 + 3*139*FLEN/8, x4, x1, x2)

inst_27788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:83364*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83364*0 + 3*140*FLEN/8, x4, x1, x2)

inst_27789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:83367*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83367*0 + 3*141*FLEN/8, x4, x1, x2)

inst_27790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:83370*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83370*0 + 3*142*FLEN/8, x4, x1, x2)

inst_27791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:83373*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83373*0 + 3*143*FLEN/8, x4, x1, x2)

inst_27792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:83376*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83376*0 + 3*144*FLEN/8, x4, x1, x2)

inst_27793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:83379*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83379*0 + 3*145*FLEN/8, x4, x1, x2)

inst_27794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:83382*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83382*0 + 3*146*FLEN/8, x4, x1, x2)

inst_27795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:83385*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83385*0 + 3*147*FLEN/8, x4, x1, x2)

inst_27796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:83388*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83388*0 + 3*148*FLEN/8, x4, x1, x2)

inst_27797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:83391*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83391*0 + 3*149*FLEN/8, x4, x1, x2)

inst_27798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:83394*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83394*0 + 3*150*FLEN/8, x4, x1, x2)

inst_27799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:83397*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83397*0 + 3*151*FLEN/8, x4, x1, x2)

inst_27800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:83400*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83400*0 + 3*152*FLEN/8, x4, x1, x2)

inst_27801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:83403*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83403*0 + 3*153*FLEN/8, x4, x1, x2)

inst_27802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:83406*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83406*0 + 3*154*FLEN/8, x4, x1, x2)

inst_27803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:83409*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83409*0 + 3*155*FLEN/8, x4, x1, x2)

inst_27804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:83412*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83412*0 + 3*156*FLEN/8, x4, x1, x2)

inst_27805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:83415*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83415*0 + 3*157*FLEN/8, x4, x1, x2)

inst_27806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:83418*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83418*0 + 3*158*FLEN/8, x4, x1, x2)

inst_27807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:83421*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83421*0 + 3*159*FLEN/8, x4, x1, x2)

inst_27808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000000000; valaddr_reg:x3; val_offset:83424*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83424*0 + 3*160*FLEN/8, x4, x1, x2)

inst_27809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000000001; valaddr_reg:x3; val_offset:83427*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83427*0 + 3*161*FLEN/8, x4, x1, x2)

inst_27810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000000003; valaddr_reg:x3; val_offset:83430*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83430*0 + 3*162*FLEN/8, x4, x1, x2)

inst_27811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000000007; valaddr_reg:x3; val_offset:83433*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83433*0 + 3*163*FLEN/8, x4, x1, x2)

inst_27812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000000000f; valaddr_reg:x3; val_offset:83436*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83436*0 + 3*164*FLEN/8, x4, x1, x2)

inst_27813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000000001f; valaddr_reg:x3; val_offset:83439*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83439*0 + 3*165*FLEN/8, x4, x1, x2)

inst_27814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000000003f; valaddr_reg:x3; val_offset:83442*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83442*0 + 3*166*FLEN/8, x4, x1, x2)

inst_27815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000000007f; valaddr_reg:x3; val_offset:83445*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83445*0 + 3*167*FLEN/8, x4, x1, x2)

inst_27816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000000000ff; valaddr_reg:x3; val_offset:83448*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83448*0 + 3*168*FLEN/8, x4, x1, x2)

inst_27817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000000001ff; valaddr_reg:x3; val_offset:83451*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83451*0 + 3*169*FLEN/8, x4, x1, x2)

inst_27818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000000003ff; valaddr_reg:x3; val_offset:83454*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83454*0 + 3*170*FLEN/8, x4, x1, x2)

inst_27819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000000007ff; valaddr_reg:x3; val_offset:83457*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83457*0 + 3*171*FLEN/8, x4, x1, x2)

inst_27820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000000fff; valaddr_reg:x3; val_offset:83460*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83460*0 + 3*172*FLEN/8, x4, x1, x2)

inst_27821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000001fff; valaddr_reg:x3; val_offset:83463*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83463*0 + 3*173*FLEN/8, x4, x1, x2)

inst_27822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000003fff; valaddr_reg:x3; val_offset:83466*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83466*0 + 3*174*FLEN/8, x4, x1, x2)

inst_27823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000007fff; valaddr_reg:x3; val_offset:83469*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83469*0 + 3*175*FLEN/8, x4, x1, x2)

inst_27824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000000ffff; valaddr_reg:x3; val_offset:83472*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83472*0 + 3*176*FLEN/8, x4, x1, x2)

inst_27825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000001ffff; valaddr_reg:x3; val_offset:83475*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83475*0 + 3*177*FLEN/8, x4, x1, x2)

inst_27826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000003ffff; valaddr_reg:x3; val_offset:83478*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83478*0 + 3*178*FLEN/8, x4, x1, x2)

inst_27827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000007ffff; valaddr_reg:x3; val_offset:83481*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83481*0 + 3*179*FLEN/8, x4, x1, x2)

inst_27828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000000fffff; valaddr_reg:x3; val_offset:83484*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83484*0 + 3*180*FLEN/8, x4, x1, x2)

inst_27829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000001fffff; valaddr_reg:x3; val_offset:83487*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83487*0 + 3*181*FLEN/8, x4, x1, x2)

inst_27830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000003fffff; valaddr_reg:x3; val_offset:83490*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83490*0 + 3*182*FLEN/8, x4, x1, x2)

inst_27831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000007fffff; valaddr_reg:x3; val_offset:83493*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83493*0 + 3*183*FLEN/8, x4, x1, x2)

inst_27832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000000ffffff; valaddr_reg:x3; val_offset:83496*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83496*0 + 3*184*FLEN/8, x4, x1, x2)

inst_27833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000001ffffff; valaddr_reg:x3; val_offset:83499*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83499*0 + 3*185*FLEN/8, x4, x1, x2)

inst_27834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000003ffffff; valaddr_reg:x3; val_offset:83502*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83502*0 + 3*186*FLEN/8, x4, x1, x2)

inst_27835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000007ffffff; valaddr_reg:x3; val_offset:83505*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83505*0 + 3*187*FLEN/8, x4, x1, x2)

inst_27836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000000fffffff; valaddr_reg:x3; val_offset:83508*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83508*0 + 3*188*FLEN/8, x4, x1, x2)

inst_27837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000001fffffff; valaddr_reg:x3; val_offset:83511*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83511*0 + 3*189*FLEN/8, x4, x1, x2)

inst_27838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000003fffffff; valaddr_reg:x3; val_offset:83514*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83514*0 + 3*190*FLEN/8, x4, x1, x2)

inst_27839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000007fffffff; valaddr_reg:x3; val_offset:83517*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83517*0 + 3*191*FLEN/8, x4, x1, x2)

inst_27840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000000ffffffff; valaddr_reg:x3; val_offset:83520*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83520*0 + 3*192*FLEN/8, x4, x1, x2)

inst_27841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000001ffffffff; valaddr_reg:x3; val_offset:83523*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83523*0 + 3*193*FLEN/8, x4, x1, x2)

inst_27842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000003ffffffff; valaddr_reg:x3; val_offset:83526*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83526*0 + 3*194*FLEN/8, x4, x1, x2)

inst_27843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000007ffffffff; valaddr_reg:x3; val_offset:83529*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83529*0 + 3*195*FLEN/8, x4, x1, x2)

inst_27844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100000fffffffff; valaddr_reg:x3; val_offset:83532*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83532*0 + 3*196*FLEN/8, x4, x1, x2)

inst_27845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100001fffffffff; valaddr_reg:x3; val_offset:83535*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83535*0 + 3*197*FLEN/8, x4, x1, x2)

inst_27846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100003fffffffff; valaddr_reg:x3; val_offset:83538*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83538*0 + 3*198*FLEN/8, x4, x1, x2)

inst_27847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100007fffffffff; valaddr_reg:x3; val_offset:83541*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83541*0 + 3*199*FLEN/8, x4, x1, x2)

inst_27848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10000ffffffffff; valaddr_reg:x3; val_offset:83544*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83544*0 + 3*200*FLEN/8, x4, x1, x2)

inst_27849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10001ffffffffff; valaddr_reg:x3; val_offset:83547*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83547*0 + 3*201*FLEN/8, x4, x1, x2)

inst_27850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10003ffffffffff; valaddr_reg:x3; val_offset:83550*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83550*0 + 3*202*FLEN/8, x4, x1, x2)

inst_27851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10007ffffffffff; valaddr_reg:x3; val_offset:83553*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83553*0 + 3*203*FLEN/8, x4, x1, x2)

inst_27852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1000fffffffffff; valaddr_reg:x3; val_offset:83556*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83556*0 + 3*204*FLEN/8, x4, x1, x2)

inst_27853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1001fffffffffff; valaddr_reg:x3; val_offset:83559*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83559*0 + 3*205*FLEN/8, x4, x1, x2)

inst_27854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1003fffffffffff; valaddr_reg:x3; val_offset:83562*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83562*0 + 3*206*FLEN/8, x4, x1, x2)

inst_27855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x1007fffffffffff; valaddr_reg:x3; val_offset:83565*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83565*0 + 3*207*FLEN/8, x4, x1, x2)

inst_27856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x100ffffffffffff; valaddr_reg:x3; val_offset:83568*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83568*0 + 3*208*FLEN/8, x4, x1, x2)

inst_27857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x101ffffffffffff; valaddr_reg:x3; val_offset:83571*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83571*0 + 3*209*FLEN/8, x4, x1, x2)

inst_27858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x103ffffffffffff; valaddr_reg:x3; val_offset:83574*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83574*0 + 3*210*FLEN/8, x4, x1, x2)

inst_27859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x107ffffffffffff; valaddr_reg:x3; val_offset:83577*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83577*0 + 3*211*FLEN/8, x4, x1, x2)

inst_27860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x108000000000000; valaddr_reg:x3; val_offset:83580*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83580*0 + 3*212*FLEN/8, x4, x1, x2)

inst_27861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10c000000000000; valaddr_reg:x3; val_offset:83583*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83583*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10e000000000000; valaddr_reg:x3; val_offset:83586*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83586*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10f000000000000; valaddr_reg:x3; val_offset:83589*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83589*0 + 3*215*FLEN/8, x4, x1, x2)

inst_27864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10f800000000000; valaddr_reg:x3; val_offset:83592*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83592*0 + 3*216*FLEN/8, x4, x1, x2)

inst_27865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fc00000000000; valaddr_reg:x3; val_offset:83595*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83595*0 + 3*217*FLEN/8, x4, x1, x2)

inst_27866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fe00000000000; valaddr_reg:x3; val_offset:83598*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83598*0 + 3*218*FLEN/8, x4, x1, x2)

inst_27867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ff00000000000; valaddr_reg:x3; val_offset:83601*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83601*0 + 3*219*FLEN/8, x4, x1, x2)

inst_27868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ff80000000000; valaddr_reg:x3; val_offset:83604*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83604*0 + 3*220*FLEN/8, x4, x1, x2)

inst_27869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffc0000000000; valaddr_reg:x3; val_offset:83607*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83607*0 + 3*221*FLEN/8, x4, x1, x2)

inst_27870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffe0000000000; valaddr_reg:x3; val_offset:83610*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83610*0 + 3*222*FLEN/8, x4, x1, x2)

inst_27871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fff0000000000; valaddr_reg:x3; val_offset:83613*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83613*0 + 3*223*FLEN/8, x4, x1, x2)

inst_27872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fff8000000000; valaddr_reg:x3; val_offset:83616*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83616*0 + 3*224*FLEN/8, x4, x1, x2)

inst_27873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffc000000000; valaddr_reg:x3; val_offset:83619*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83619*0 + 3*225*FLEN/8, x4, x1, x2)

inst_27874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffe000000000; valaddr_reg:x3; val_offset:83622*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83622*0 + 3*226*FLEN/8, x4, x1, x2)

inst_27875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffff000000000; valaddr_reg:x3; val_offset:83625*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83625*0 + 3*227*FLEN/8, x4, x1, x2)

inst_27876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffff800000000; valaddr_reg:x3; val_offset:83628*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83628*0 + 3*228*FLEN/8, x4, x1, x2)

inst_27877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffc00000000; valaddr_reg:x3; val_offset:83631*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83631*0 + 3*229*FLEN/8, x4, x1, x2)

inst_27878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffe00000000; valaddr_reg:x3; val_offset:83634*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83634*0 + 3*230*FLEN/8, x4, x1, x2)

inst_27879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffff00000000; valaddr_reg:x3; val_offset:83637*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83637*0 + 3*231*FLEN/8, x4, x1, x2)

inst_27880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffff80000000; valaddr_reg:x3; val_offset:83640*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83640*0 + 3*232*FLEN/8, x4, x1, x2)

inst_27881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffc0000000; valaddr_reg:x3; val_offset:83643*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83643*0 + 3*233*FLEN/8, x4, x1, x2)

inst_27882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffe0000000; valaddr_reg:x3; val_offset:83646*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83646*0 + 3*234*FLEN/8, x4, x1, x2)

inst_27883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffff0000000; valaddr_reg:x3; val_offset:83649*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83649*0 + 3*235*FLEN/8, x4, x1, x2)

inst_27884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffff8000000; valaddr_reg:x3; val_offset:83652*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83652*0 + 3*236*FLEN/8, x4, x1, x2)

inst_27885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffc000000; valaddr_reg:x3; val_offset:83655*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83655*0 + 3*237*FLEN/8, x4, x1, x2)

inst_27886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffe000000; valaddr_reg:x3; val_offset:83658*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83658*0 + 3*238*FLEN/8, x4, x1, x2)

inst_27887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffff000000; valaddr_reg:x3; val_offset:83661*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83661*0 + 3*239*FLEN/8, x4, x1, x2)

inst_27888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffff800000; valaddr_reg:x3; val_offset:83664*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83664*0 + 3*240*FLEN/8, x4, x1, x2)

inst_27889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffc00000; valaddr_reg:x3; val_offset:83667*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83667*0 + 3*241*FLEN/8, x4, x1, x2)

inst_27890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffe00000; valaddr_reg:x3; val_offset:83670*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83670*0 + 3*242*FLEN/8, x4, x1, x2)

inst_27891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffff00000; valaddr_reg:x3; val_offset:83673*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83673*0 + 3*243*FLEN/8, x4, x1, x2)

inst_27892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffff80000; valaddr_reg:x3; val_offset:83676*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83676*0 + 3*244*FLEN/8, x4, x1, x2)

inst_27893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffc0000; valaddr_reg:x3; val_offset:83679*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83679*0 + 3*245*FLEN/8, x4, x1, x2)

inst_27894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffe0000; valaddr_reg:x3; val_offset:83682*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83682*0 + 3*246*FLEN/8, x4, x1, x2)

inst_27895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffff0000; valaddr_reg:x3; val_offset:83685*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83685*0 + 3*247*FLEN/8, x4, x1, x2)

inst_27896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffff8000; valaddr_reg:x3; val_offset:83688*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83688*0 + 3*248*FLEN/8, x4, x1, x2)

inst_27897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffc000; valaddr_reg:x3; val_offset:83691*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83691*0 + 3*249*FLEN/8, x4, x1, x2)

inst_27898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffe000; valaddr_reg:x3; val_offset:83694*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83694*0 + 3*250*FLEN/8, x4, x1, x2)

inst_27899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffff000; valaddr_reg:x3; val_offset:83697*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83697*0 + 3*251*FLEN/8, x4, x1, x2)

inst_27900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffff800; valaddr_reg:x3; val_offset:83700*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83700*0 + 3*252*FLEN/8, x4, x1, x2)

inst_27901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffc00; valaddr_reg:x3; val_offset:83703*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83703*0 + 3*253*FLEN/8, x4, x1, x2)

inst_27902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffe00; valaddr_reg:x3; val_offset:83706*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83706*0 + 3*254*FLEN/8, x4, x1, x2)

inst_27903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffff00; valaddr_reg:x3; val_offset:83709*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83709*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_27904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffff80; valaddr_reg:x3; val_offset:83712*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83712*0 + 3*256*FLEN/8, x4, x1, x2)

inst_27905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffffc0; valaddr_reg:x3; val_offset:83715*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83715*0 + 3*257*FLEN/8, x4, x1, x2)

inst_27906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffffe0; valaddr_reg:x3; val_offset:83718*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83718*0 + 3*258*FLEN/8, x4, x1, x2)

inst_27907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffff0; valaddr_reg:x3; val_offset:83721*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83721*0 + 3*259*FLEN/8, x4, x1, x2)

inst_27908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffff8; valaddr_reg:x3; val_offset:83724*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83724*0 + 3*260*FLEN/8, x4, x1, x2)

inst_27909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffffc; valaddr_reg:x3; val_offset:83727*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83727*0 + 3*261*FLEN/8, x4, x1, x2)

inst_27910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10ffffffffffffe; valaddr_reg:x3; val_offset:83730*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83730*0 + 3*262*FLEN/8, x4, x1, x2)

inst_27911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912adb3735ac6d; op2val:0x0;
op3val:0x10fffffffffffff; valaddr_reg:x3; val_offset:83733*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83733*0 + 3*263*FLEN/8, x4, x1, x2)

inst_27912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:83736*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83736*0 + 3*264*FLEN/8, x4, x1, x2)

inst_27913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:83739*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83739*0 + 3*265*FLEN/8, x4, x1, x2)

inst_27914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:83742*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83742*0 + 3*266*FLEN/8, x4, x1, x2)

inst_27915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:83745*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83745*0 + 3*267*FLEN/8, x4, x1, x2)

inst_27916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:83748*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83748*0 + 3*268*FLEN/8, x4, x1, x2)

inst_27917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:83751*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83751*0 + 3*269*FLEN/8, x4, x1, x2)

inst_27918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:83754*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83754*0 + 3*270*FLEN/8, x4, x1, x2)

inst_27919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:83757*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83757*0 + 3*271*FLEN/8, x4, x1, x2)

inst_27920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:83760*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83760*0 + 3*272*FLEN/8, x4, x1, x2)

inst_27921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:83763*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83763*0 + 3*273*FLEN/8, x4, x1, x2)

inst_27922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:83766*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83766*0 + 3*274*FLEN/8, x4, x1, x2)

inst_27923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:83769*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83769*0 + 3*275*FLEN/8, x4, x1, x2)

inst_27924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:83772*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83772*0 + 3*276*FLEN/8, x4, x1, x2)

inst_27925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:83775*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83775*0 + 3*277*FLEN/8, x4, x1, x2)

inst_27926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:83778*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83778*0 + 3*278*FLEN/8, x4, x1, x2)

inst_27927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:83781*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83781*0 + 3*279*FLEN/8, x4, x1, x2)

inst_27928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:83784*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83784*0 + 3*280*FLEN/8, x4, x1, x2)

inst_27929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:83787*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83787*0 + 3*281*FLEN/8, x4, x1, x2)

inst_27930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:83790*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83790*0 + 3*282*FLEN/8, x4, x1, x2)

inst_27931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:83793*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83793*0 + 3*283*FLEN/8, x4, x1, x2)

inst_27932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:83796*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83796*0 + 3*284*FLEN/8, x4, x1, x2)

inst_27933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:83799*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83799*0 + 3*285*FLEN/8, x4, x1, x2)

inst_27934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:83802*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83802*0 + 3*286*FLEN/8, x4, x1, x2)

inst_27935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:83805*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83805*0 + 3*287*FLEN/8, x4, x1, x2)

inst_27936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:83808*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83808*0 + 3*288*FLEN/8, x4, x1, x2)

inst_27937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:83811*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83811*0 + 3*289*FLEN/8, x4, x1, x2)

inst_27938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:83814*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83814*0 + 3*290*FLEN/8, x4, x1, x2)

inst_27939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:83817*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83817*0 + 3*291*FLEN/8, x4, x1, x2)

inst_27940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:83820*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83820*0 + 3*292*FLEN/8, x4, x1, x2)

inst_27941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:83823*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83823*0 + 3*293*FLEN/8, x4, x1, x2)

inst_27942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:83826*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83826*0 + 3*294*FLEN/8, x4, x1, x2)

inst_27943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:83829*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83829*0 + 3*295*FLEN/8, x4, x1, x2)

inst_27944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:83832*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83832*0 + 3*296*FLEN/8, x4, x1, x2)

inst_27945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:83835*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83835*0 + 3*297*FLEN/8, x4, x1, x2)

inst_27946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:83838*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83838*0 + 3*298*FLEN/8, x4, x1, x2)

inst_27947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:83841*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83841*0 + 3*299*FLEN/8, x4, x1, x2)

inst_27948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:83844*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83844*0 + 3*300*FLEN/8, x4, x1, x2)

inst_27949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:83847*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83847*0 + 3*301*FLEN/8, x4, x1, x2)

inst_27950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:83850*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83850*0 + 3*302*FLEN/8, x4, x1, x2)

inst_27951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:83853*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83853*0 + 3*303*FLEN/8, x4, x1, x2)

inst_27952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:83856*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83856*0 + 3*304*FLEN/8, x4, x1, x2)

inst_27953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:83859*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83859*0 + 3*305*FLEN/8, x4, x1, x2)

inst_27954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:83862*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83862*0 + 3*306*FLEN/8, x4, x1, x2)

inst_27955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:83865*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83865*0 + 3*307*FLEN/8, x4, x1, x2)

inst_27956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:83868*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83868*0 + 3*308*FLEN/8, x4, x1, x2)

inst_27957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:83871*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83871*0 + 3*309*FLEN/8, x4, x1, x2)

inst_27958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:83874*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83874*0 + 3*310*FLEN/8, x4, x1, x2)

inst_27959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:83877*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83877*0 + 3*311*FLEN/8, x4, x1, x2)

inst_27960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:83880*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83880*0 + 3*312*FLEN/8, x4, x1, x2)

inst_27961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:83883*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83883*0 + 3*313*FLEN/8, x4, x1, x2)

inst_27962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:83886*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83886*0 + 3*314*FLEN/8, x4, x1, x2)

inst_27963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:83889*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83889*0 + 3*315*FLEN/8, x4, x1, x2)

inst_27964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:83892*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83892*0 + 3*316*FLEN/8, x4, x1, x2)

inst_27965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:83895*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83895*0 + 3*317*FLEN/8, x4, x1, x2)

inst_27966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:83898*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83898*0 + 3*318*FLEN/8, x4, x1, x2)

inst_27967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:83901*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83901*0 + 3*319*FLEN/8, x4, x1, x2)

inst_27968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:83904*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83904*0 + 3*320*FLEN/8, x4, x1, x2)

inst_27969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:83907*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83907*0 + 3*321*FLEN/8, x4, x1, x2)

inst_27970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:83910*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83910*0 + 3*322*FLEN/8, x4, x1, x2)

inst_27971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:83913*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83913*0 + 3*323*FLEN/8, x4, x1, x2)

inst_27972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:83916*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83916*0 + 3*324*FLEN/8, x4, x1, x2)

inst_27973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:83919*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83919*0 + 3*325*FLEN/8, x4, x1, x2)

inst_27974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:83922*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83922*0 + 3*326*FLEN/8, x4, x1, x2)

inst_27975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:83925*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83925*0 + 3*327*FLEN/8, x4, x1, x2)

inst_27976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:83928*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83928*0 + 3*328*FLEN/8, x4, x1, x2)

inst_27977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:83931*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83931*0 + 3*329*FLEN/8, x4, x1, x2)

inst_27978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:83934*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83934*0 + 3*330*FLEN/8, x4, x1, x2)

inst_27979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:83937*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83937*0 + 3*331*FLEN/8, x4, x1, x2)

inst_27980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:83940*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83940*0 + 3*332*FLEN/8, x4, x1, x2)

inst_27981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:83943*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83943*0 + 3*333*FLEN/8, x4, x1, x2)

inst_27982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:83946*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83946*0 + 3*334*FLEN/8, x4, x1, x2)

inst_27983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:83949*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83949*0 + 3*335*FLEN/8, x4, x1, x2)

inst_27984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:83952*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83952*0 + 3*336*FLEN/8, x4, x1, x2)

inst_27985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:83955*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83955*0 + 3*337*FLEN/8, x4, x1, x2)

inst_27986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:83958*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83958*0 + 3*338*FLEN/8, x4, x1, x2)

inst_27987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:83961*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83961*0 + 3*339*FLEN/8, x4, x1, x2)

inst_27988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:83964*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83964*0 + 3*340*FLEN/8, x4, x1, x2)

inst_27989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:83967*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83967*0 + 3*341*FLEN/8, x4, x1, x2)

inst_27990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:83970*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83970*0 + 3*342*FLEN/8, x4, x1, x2)

inst_27991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:83973*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83973*0 + 3*343*FLEN/8, x4, x1, x2)

inst_27992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:83976*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83976*0 + 3*344*FLEN/8, x4, x1, x2)

inst_27993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:83979*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83979*0 + 3*345*FLEN/8, x4, x1, x2)

inst_27994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:83982*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83982*0 + 3*346*FLEN/8, x4, x1, x2)

inst_27995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:83985*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83985*0 + 3*347*FLEN/8, x4, x1, x2)

inst_27996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:83988*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83988*0 + 3*348*FLEN/8, x4, x1, x2)

inst_27997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:83991*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83991*0 + 3*349*FLEN/8, x4, x1, x2)

inst_27998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:83994*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83994*0 + 3*350*FLEN/8, x4, x1, x2)

inst_27999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:83997*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 83997*0 + 3*351*FLEN/8, x4, x1, x2)

inst_28000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:84000*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84000*0 + 3*352*FLEN/8, x4, x1, x2)

inst_28001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:84003*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84003*0 + 3*353*FLEN/8, x4, x1, x2)

inst_28002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:84006*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84006*0 + 3*354*FLEN/8, x4, x1, x2)

inst_28003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:84009*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84009*0 + 3*355*FLEN/8, x4, x1, x2)

inst_28004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:84012*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84012*0 + 3*356*FLEN/8, x4, x1, x2)

inst_28005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:84015*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84015*0 + 3*357*FLEN/8, x4, x1, x2)

inst_28006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:84018*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84018*0 + 3*358*FLEN/8, x4, x1, x2)

inst_28007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:84021*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84021*0 + 3*359*FLEN/8, x4, x1, x2)

inst_28008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:84024*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84024*0 + 3*360*FLEN/8, x4, x1, x2)

inst_28009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:84027*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84027*0 + 3*361*FLEN/8, x4, x1, x2)

inst_28010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:84030*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84030*0 + 3*362*FLEN/8, x4, x1, x2)

inst_28011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:84033*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84033*0 + 3*363*FLEN/8, x4, x1, x2)

inst_28012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:84036*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84036*0 + 3*364*FLEN/8, x4, x1, x2)

inst_28013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:84039*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84039*0 + 3*365*FLEN/8, x4, x1, x2)

inst_28014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:84042*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84042*0 + 3*366*FLEN/8, x4, x1, x2)

inst_28015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:84045*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84045*0 + 3*367*FLEN/8, x4, x1, x2)

inst_28016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:84048*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84048*0 + 3*368*FLEN/8, x4, x1, x2)

inst_28017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:84051*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84051*0 + 3*369*FLEN/8, x4, x1, x2)

inst_28018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:84054*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84054*0 + 3*370*FLEN/8, x4, x1, x2)

inst_28019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:84057*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84057*0 + 3*371*FLEN/8, x4, x1, x2)

inst_28020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:84060*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84060*0 + 3*372*FLEN/8, x4, x1, x2)

inst_28021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:84063*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84063*0 + 3*373*FLEN/8, x4, x1, x2)

inst_28022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:84066*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84066*0 + 3*374*FLEN/8, x4, x1, x2)

inst_28023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:84069*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84069*0 + 3*375*FLEN/8, x4, x1, x2)

inst_28024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:84072*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84072*0 + 3*376*FLEN/8, x4, x1, x2)

inst_28025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:84075*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84075*0 + 3*377*FLEN/8, x4, x1, x2)

inst_28026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:84078*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84078*0 + 3*378*FLEN/8, x4, x1, x2)

inst_28027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:84081*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84081*0 + 3*379*FLEN/8, x4, x1, x2)

inst_28028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:84084*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84084*0 + 3*380*FLEN/8, x4, x1, x2)

inst_28029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:84087*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84087*0 + 3*381*FLEN/8, x4, x1, x2)

inst_28030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:84090*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84090*0 + 3*382*FLEN/8, x4, x1, x2)

inst_28031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:84093*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84093*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_28032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:84096*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84096*0 + 3*384*FLEN/8, x4, x1, x2)

inst_28033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:84099*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84099*0 + 3*385*FLEN/8, x4, x1, x2)

inst_28034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:84102*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84102*0 + 3*386*FLEN/8, x4, x1, x2)

inst_28035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:84105*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84105*0 + 3*387*FLEN/8, x4, x1, x2)

inst_28036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:84108*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84108*0 + 3*388*FLEN/8, x4, x1, x2)

inst_28037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12bf373c92701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912bf373c92701; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:84111*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84111*0 + 3*389*FLEN/8, x4, x1, x2)

inst_28038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:84114*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84114*0 + 3*390*FLEN/8, x4, x1, x2)

inst_28039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:84117*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84117*0 + 3*391*FLEN/8, x4, x1, x2)

inst_28040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:84120*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84120*0 + 3*392*FLEN/8, x4, x1, x2)

inst_28041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:84123*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84123*0 + 3*393*FLEN/8, x4, x1, x2)

inst_28042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:84126*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84126*0 + 3*394*FLEN/8, x4, x1, x2)

inst_28043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:84129*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84129*0 + 3*395*FLEN/8, x4, x1, x2)

inst_28044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:84132*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84132*0 + 3*396*FLEN/8, x4, x1, x2)

inst_28045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:84135*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84135*0 + 3*397*FLEN/8, x4, x1, x2)

inst_28046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:84138*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84138*0 + 3*398*FLEN/8, x4, x1, x2)

inst_28047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:84141*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84141*0 + 3*399*FLEN/8, x4, x1, x2)

inst_28048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:84144*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84144*0 + 3*400*FLEN/8, x4, x1, x2)

inst_28049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:84147*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84147*0 + 3*401*FLEN/8, x4, x1, x2)

inst_28050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:84150*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84150*0 + 3*402*FLEN/8, x4, x1, x2)

inst_28051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:84153*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84153*0 + 3*403*FLEN/8, x4, x1, x2)

inst_28052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:84156*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84156*0 + 3*404*FLEN/8, x4, x1, x2)

inst_28053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:84159*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84159*0 + 3*405*FLEN/8, x4, x1, x2)

inst_28054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:84162*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84162*0 + 3*406*FLEN/8, x4, x1, x2)

inst_28055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:84165*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84165*0 + 3*407*FLEN/8, x4, x1, x2)

inst_28056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:84168*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84168*0 + 3*408*FLEN/8, x4, x1, x2)

inst_28057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:84171*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84171*0 + 3*409*FLEN/8, x4, x1, x2)

inst_28058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:84174*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84174*0 + 3*410*FLEN/8, x4, x1, x2)

inst_28059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:84177*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84177*0 + 3*411*FLEN/8, x4, x1, x2)

inst_28060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000000000; valaddr_reg:x3; val_offset:84180*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84180*0 + 3*412*FLEN/8, x4, x1, x2)

inst_28061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000000001; valaddr_reg:x3; val_offset:84183*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84183*0 + 3*413*FLEN/8, x4, x1, x2)

inst_28062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000000003; valaddr_reg:x3; val_offset:84186*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84186*0 + 3*414*FLEN/8, x4, x1, x2)

inst_28063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000000007; valaddr_reg:x3; val_offset:84189*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84189*0 + 3*415*FLEN/8, x4, x1, x2)

inst_28064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000000000f; valaddr_reg:x3; val_offset:84192*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84192*0 + 3*416*FLEN/8, x4, x1, x2)

inst_28065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000000001f; valaddr_reg:x3; val_offset:84195*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84195*0 + 3*417*FLEN/8, x4, x1, x2)

inst_28066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000000003f; valaddr_reg:x3; val_offset:84198*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84198*0 + 3*418*FLEN/8, x4, x1, x2)

inst_28067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000000007f; valaddr_reg:x3; val_offset:84201*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84201*0 + 3*419*FLEN/8, x4, x1, x2)

inst_28068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000000000ff; valaddr_reg:x3; val_offset:84204*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84204*0 + 3*420*FLEN/8, x4, x1, x2)

inst_28069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000000001ff; valaddr_reg:x3; val_offset:84207*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84207*0 + 3*421*FLEN/8, x4, x1, x2)

inst_28070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000000003ff; valaddr_reg:x3; val_offset:84210*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84210*0 + 3*422*FLEN/8, x4, x1, x2)

inst_28071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000000007ff; valaddr_reg:x3; val_offset:84213*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84213*0 + 3*423*FLEN/8, x4, x1, x2)

inst_28072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000000fff; valaddr_reg:x3; val_offset:84216*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84216*0 + 3*424*FLEN/8, x4, x1, x2)

inst_28073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000001fff; valaddr_reg:x3; val_offset:84219*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84219*0 + 3*425*FLEN/8, x4, x1, x2)

inst_28074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000003fff; valaddr_reg:x3; val_offset:84222*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84222*0 + 3*426*FLEN/8, x4, x1, x2)

inst_28075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000007fff; valaddr_reg:x3; val_offset:84225*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84225*0 + 3*427*FLEN/8, x4, x1, x2)

inst_28076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000000ffff; valaddr_reg:x3; val_offset:84228*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84228*0 + 3*428*FLEN/8, x4, x1, x2)

inst_28077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000001ffff; valaddr_reg:x3; val_offset:84231*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84231*0 + 3*429*FLEN/8, x4, x1, x2)

inst_28078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000003ffff; valaddr_reg:x3; val_offset:84234*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84234*0 + 3*430*FLEN/8, x4, x1, x2)

inst_28079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000007ffff; valaddr_reg:x3; val_offset:84237*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84237*0 + 3*431*FLEN/8, x4, x1, x2)

inst_28080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000000fffff; valaddr_reg:x3; val_offset:84240*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84240*0 + 3*432*FLEN/8, x4, x1, x2)

inst_28081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000001fffff; valaddr_reg:x3; val_offset:84243*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84243*0 + 3*433*FLEN/8, x4, x1, x2)

inst_28082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000003fffff; valaddr_reg:x3; val_offset:84246*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84246*0 + 3*434*FLEN/8, x4, x1, x2)

inst_28083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000007fffff; valaddr_reg:x3; val_offset:84249*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84249*0 + 3*435*FLEN/8, x4, x1, x2)

inst_28084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000000ffffff; valaddr_reg:x3; val_offset:84252*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84252*0 + 3*436*FLEN/8, x4, x1, x2)

inst_28085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000001ffffff; valaddr_reg:x3; val_offset:84255*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84255*0 + 3*437*FLEN/8, x4, x1, x2)

inst_28086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000003ffffff; valaddr_reg:x3; val_offset:84258*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84258*0 + 3*438*FLEN/8, x4, x1, x2)

inst_28087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000007ffffff; valaddr_reg:x3; val_offset:84261*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84261*0 + 3*439*FLEN/8, x4, x1, x2)

inst_28088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000000fffffff; valaddr_reg:x3; val_offset:84264*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84264*0 + 3*440*FLEN/8, x4, x1, x2)

inst_28089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000001fffffff; valaddr_reg:x3; val_offset:84267*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84267*0 + 3*441*FLEN/8, x4, x1, x2)

inst_28090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000003fffffff; valaddr_reg:x3; val_offset:84270*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84270*0 + 3*442*FLEN/8, x4, x1, x2)

inst_28091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000007fffffff; valaddr_reg:x3; val_offset:84273*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84273*0 + 3*443*FLEN/8, x4, x1, x2)

inst_28092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300000ffffffff; valaddr_reg:x3; val_offset:84276*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84276*0 + 3*444*FLEN/8, x4, x1, x2)

inst_28093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300001ffffffff; valaddr_reg:x3; val_offset:84279*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84279*0 + 3*445*FLEN/8, x4, x1, x2)

inst_28094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300003ffffffff; valaddr_reg:x3; val_offset:84282*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84282*0 + 3*446*FLEN/8, x4, x1, x2)

inst_28095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300007ffffffff; valaddr_reg:x3; val_offset:84285*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84285*0 + 3*447*FLEN/8, x4, x1, x2)

inst_28096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130000fffffffff; valaddr_reg:x3; val_offset:84288*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84288*0 + 3*448*FLEN/8, x4, x1, x2)

inst_28097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130001fffffffff; valaddr_reg:x3; val_offset:84291*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84291*0 + 3*449*FLEN/8, x4, x1, x2)

inst_28098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130003fffffffff; valaddr_reg:x3; val_offset:84294*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84294*0 + 3*450*FLEN/8, x4, x1, x2)

inst_28099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130007fffffffff; valaddr_reg:x3; val_offset:84297*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84297*0 + 3*451*FLEN/8, x4, x1, x2)

inst_28100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13000ffffffffff; valaddr_reg:x3; val_offset:84300*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84300*0 + 3*452*FLEN/8, x4, x1, x2)

inst_28101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13001ffffffffff; valaddr_reg:x3; val_offset:84303*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84303*0 + 3*453*FLEN/8, x4, x1, x2)

inst_28102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13003ffffffffff; valaddr_reg:x3; val_offset:84306*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84306*0 + 3*454*FLEN/8, x4, x1, x2)

inst_28103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13007ffffffffff; valaddr_reg:x3; val_offset:84309*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84309*0 + 3*455*FLEN/8, x4, x1, x2)

inst_28104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1300fffffffffff; valaddr_reg:x3; val_offset:84312*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84312*0 + 3*456*FLEN/8, x4, x1, x2)

inst_28105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1301fffffffffff; valaddr_reg:x3; val_offset:84315*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84315*0 + 3*457*FLEN/8, x4, x1, x2)

inst_28106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1303fffffffffff; valaddr_reg:x3; val_offset:84318*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84318*0 + 3*458*FLEN/8, x4, x1, x2)

inst_28107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x1307fffffffffff; valaddr_reg:x3; val_offset:84321*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84321*0 + 3*459*FLEN/8, x4, x1, x2)

inst_28108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x130ffffffffffff; valaddr_reg:x3; val_offset:84324*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84324*0 + 3*460*FLEN/8, x4, x1, x2)

inst_28109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x131ffffffffffff; valaddr_reg:x3; val_offset:84327*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84327*0 + 3*461*FLEN/8, x4, x1, x2)

inst_28110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x133ffffffffffff; valaddr_reg:x3; val_offset:84330*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84330*0 + 3*462*FLEN/8, x4, x1, x2)

inst_28111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x137ffffffffffff; valaddr_reg:x3; val_offset:84333*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84333*0 + 3*463*FLEN/8, x4, x1, x2)

inst_28112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x138000000000000; valaddr_reg:x3; val_offset:84336*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84336*0 + 3*464*FLEN/8, x4, x1, x2)

inst_28113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13c000000000000; valaddr_reg:x3; val_offset:84339*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84339*0 + 3*465*FLEN/8, x4, x1, x2)

inst_28114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13e000000000000; valaddr_reg:x3; val_offset:84342*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84342*0 + 3*466*FLEN/8, x4, x1, x2)

inst_28115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13f000000000000; valaddr_reg:x3; val_offset:84345*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84345*0 + 3*467*FLEN/8, x4, x1, x2)

inst_28116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13f800000000000; valaddr_reg:x3; val_offset:84348*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84348*0 + 3*468*FLEN/8, x4, x1, x2)

inst_28117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fc00000000000; valaddr_reg:x3; val_offset:84351*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84351*0 + 3*469*FLEN/8, x4, x1, x2)

inst_28118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fe00000000000; valaddr_reg:x3; val_offset:84354*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84354*0 + 3*470*FLEN/8, x4, x1, x2)

inst_28119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ff00000000000; valaddr_reg:x3; val_offset:84357*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84357*0 + 3*471*FLEN/8, x4, x1, x2)

inst_28120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ff80000000000; valaddr_reg:x3; val_offset:84360*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84360*0 + 3*472*FLEN/8, x4, x1, x2)

inst_28121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffc0000000000; valaddr_reg:x3; val_offset:84363*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84363*0 + 3*473*FLEN/8, x4, x1, x2)

inst_28122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:84366*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84366*0 + 3*474*FLEN/8, x4, x1, x2)

inst_28123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:84369*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84369*0 + 3*475*FLEN/8, x4, x1, x2)

inst_28124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:84372*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84372*0 + 3*476*FLEN/8, x4, x1, x2)

inst_28125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:84375*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84375*0 + 3*477*FLEN/8, x4, x1, x2)

inst_28126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:84378*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84378*0 + 3*478*FLEN/8, x4, x1, x2)

inst_28127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:84381*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84381*0 + 3*479*FLEN/8, x4, x1, x2)

inst_28128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:84384*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84384*0 + 3*480*FLEN/8, x4, x1, x2)

inst_28129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:84387*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84387*0 + 3*481*FLEN/8, x4, x1, x2)

inst_28130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:84390*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84390*0 + 3*482*FLEN/8, x4, x1, x2)

inst_28131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:84393*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84393*0 + 3*483*FLEN/8, x4, x1, x2)

inst_28132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:84396*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84396*0 + 3*484*FLEN/8, x4, x1, x2)

inst_28133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:84399*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84399*0 + 3*485*FLEN/8, x4, x1, x2)

inst_28134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:84402*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84402*0 + 3*486*FLEN/8, x4, x1, x2)

inst_28135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:84405*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84405*0 + 3*487*FLEN/8, x4, x1, x2)

inst_28136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:84408*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84408*0 + 3*488*FLEN/8, x4, x1, x2)

inst_28137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:84411*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84411*0 + 3*489*FLEN/8, x4, x1, x2)

inst_28138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:84414*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84414*0 + 3*490*FLEN/8, x4, x1, x2)

inst_28139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:84417*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84417*0 + 3*491*FLEN/8, x4, x1, x2)

inst_28140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:84420*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84420*0 + 3*492*FLEN/8, x4, x1, x2)

inst_28141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:84423*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84423*0 + 3*493*FLEN/8, x4, x1, x2)

inst_28142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:84426*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84426*0 + 3*494*FLEN/8, x4, x1, x2)

inst_28143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:84429*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84429*0 + 3*495*FLEN/8, x4, x1, x2)

inst_28144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:84432*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84432*0 + 3*496*FLEN/8, x4, x1, x2)

inst_28145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:84435*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84435*0 + 3*497*FLEN/8, x4, x1, x2)

inst_28146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:84438*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84438*0 + 3*498*FLEN/8, x4, x1, x2)

inst_28147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:84441*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84441*0 + 3*499*FLEN/8, x4, x1, x2)

inst_28148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:84444*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84444*0 + 3*500*FLEN/8, x4, x1, x2)

inst_28149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:84447*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84447*0 + 3*501*FLEN/8, x4, x1, x2)

inst_28150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:84450*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84450*0 + 3*502*FLEN/8, x4, x1, x2)

inst_28151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:84453*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84453*0 + 3*503*FLEN/8, x4, x1, x2)

inst_28152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:84456*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84456*0 + 3*504*FLEN/8, x4, x1, x2)

inst_28153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:84459*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84459*0 + 3*505*FLEN/8, x4, x1, x2)

inst_28154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:84462*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84462*0 + 3*506*FLEN/8, x4, x1, x2)

inst_28155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:84465*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84465*0 + 3*507*FLEN/8, x4, x1, x2)

inst_28156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:84468*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84468*0 + 3*508*FLEN/8, x4, x1, x2)

inst_28157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:84471*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84471*0 + 3*509*FLEN/8, x4, x1, x2)

inst_28158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:84474*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84474*0 + 3*510*FLEN/8, x4, x1, x2)

inst_28159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:84477*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84477*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_28160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:84480*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84480*0 + 3*512*FLEN/8, x4, x1, x2)

inst_28161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:84483*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84483*0 + 3*513*FLEN/8, x4, x1, x2)

inst_28162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:84486*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84486*0 + 3*514*FLEN/8, x4, x1, x2)

inst_28163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x131536677e1e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9131536677e1e9; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:84489*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84489*0 + 3*515*FLEN/8, x4, x1, x2)

inst_28164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000000000; valaddr_reg:x3; val_offset:84492*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84492*0 + 3*516*FLEN/8, x4, x1, x2)

inst_28165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000000001; valaddr_reg:x3; val_offset:84495*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84495*0 + 3*517*FLEN/8, x4, x1, x2)

inst_28166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000000003; valaddr_reg:x3; val_offset:84498*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84498*0 + 3*518*FLEN/8, x4, x1, x2)

inst_28167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000000007; valaddr_reg:x3; val_offset:84501*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84501*0 + 3*519*FLEN/8, x4, x1, x2)

inst_28168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000000000f; valaddr_reg:x3; val_offset:84504*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84504*0 + 3*520*FLEN/8, x4, x1, x2)

inst_28169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000000001f; valaddr_reg:x3; val_offset:84507*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84507*0 + 3*521*FLEN/8, x4, x1, x2)

inst_28170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000000003f; valaddr_reg:x3; val_offset:84510*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84510*0 + 3*522*FLEN/8, x4, x1, x2)

inst_28171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000000007f; valaddr_reg:x3; val_offset:84513*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84513*0 + 3*523*FLEN/8, x4, x1, x2)

inst_28172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000000000ff; valaddr_reg:x3; val_offset:84516*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84516*0 + 3*524*FLEN/8, x4, x1, x2)

inst_28173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000000001ff; valaddr_reg:x3; val_offset:84519*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84519*0 + 3*525*FLEN/8, x4, x1, x2)

inst_28174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000000003ff; valaddr_reg:x3; val_offset:84522*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84522*0 + 3*526*FLEN/8, x4, x1, x2)

inst_28175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000000007ff; valaddr_reg:x3; val_offset:84525*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84525*0 + 3*527*FLEN/8, x4, x1, x2)

inst_28176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000000fff; valaddr_reg:x3; val_offset:84528*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84528*0 + 3*528*FLEN/8, x4, x1, x2)

inst_28177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000001fff; valaddr_reg:x3; val_offset:84531*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84531*0 + 3*529*FLEN/8, x4, x1, x2)

inst_28178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000003fff; valaddr_reg:x3; val_offset:84534*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84534*0 + 3*530*FLEN/8, x4, x1, x2)

inst_28179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000007fff; valaddr_reg:x3; val_offset:84537*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84537*0 + 3*531*FLEN/8, x4, x1, x2)

inst_28180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000000ffff; valaddr_reg:x3; val_offset:84540*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84540*0 + 3*532*FLEN/8, x4, x1, x2)

inst_28181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000001ffff; valaddr_reg:x3; val_offset:84543*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84543*0 + 3*533*FLEN/8, x4, x1, x2)

inst_28182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000003ffff; valaddr_reg:x3; val_offset:84546*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84546*0 + 3*534*FLEN/8, x4, x1, x2)

inst_28183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000007ffff; valaddr_reg:x3; val_offset:84549*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84549*0 + 3*535*FLEN/8, x4, x1, x2)

inst_28184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000000fffff; valaddr_reg:x3; val_offset:84552*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84552*0 + 3*536*FLEN/8, x4, x1, x2)

inst_28185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000001fffff; valaddr_reg:x3; val_offset:84555*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84555*0 + 3*537*FLEN/8, x4, x1, x2)

inst_28186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000003fffff; valaddr_reg:x3; val_offset:84558*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84558*0 + 3*538*FLEN/8, x4, x1, x2)

inst_28187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000007fffff; valaddr_reg:x3; val_offset:84561*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84561*0 + 3*539*FLEN/8, x4, x1, x2)

inst_28188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000000ffffff; valaddr_reg:x3; val_offset:84564*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84564*0 + 3*540*FLEN/8, x4, x1, x2)

inst_28189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000001ffffff; valaddr_reg:x3; val_offset:84567*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84567*0 + 3*541*FLEN/8, x4, x1, x2)

inst_28190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000003ffffff; valaddr_reg:x3; val_offset:84570*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84570*0 + 3*542*FLEN/8, x4, x1, x2)

inst_28191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000007ffffff; valaddr_reg:x3; val_offset:84573*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84573*0 + 3*543*FLEN/8, x4, x1, x2)

inst_28192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000000fffffff; valaddr_reg:x3; val_offset:84576*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84576*0 + 3*544*FLEN/8, x4, x1, x2)

inst_28193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000001fffffff; valaddr_reg:x3; val_offset:84579*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84579*0 + 3*545*FLEN/8, x4, x1, x2)

inst_28194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000003fffffff; valaddr_reg:x3; val_offset:84582*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84582*0 + 3*546*FLEN/8, x4, x1, x2)

inst_28195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000007fffffff; valaddr_reg:x3; val_offset:84585*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84585*0 + 3*547*FLEN/8, x4, x1, x2)

inst_28196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700000ffffffff; valaddr_reg:x3; val_offset:84588*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84588*0 + 3*548*FLEN/8, x4, x1, x2)

inst_28197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700001ffffffff; valaddr_reg:x3; val_offset:84591*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84591*0 + 3*549*FLEN/8, x4, x1, x2)

inst_28198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700003ffffffff; valaddr_reg:x3; val_offset:84594*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84594*0 + 3*550*FLEN/8, x4, x1, x2)

inst_28199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700007ffffffff; valaddr_reg:x3; val_offset:84597*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84597*0 + 3*551*FLEN/8, x4, x1, x2)

inst_28200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70000fffffffff; valaddr_reg:x3; val_offset:84600*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84600*0 + 3*552*FLEN/8, x4, x1, x2)

inst_28201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70001fffffffff; valaddr_reg:x3; val_offset:84603*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84603*0 + 3*553*FLEN/8, x4, x1, x2)

inst_28202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70003fffffffff; valaddr_reg:x3; val_offset:84606*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84606*0 + 3*554*FLEN/8, x4, x1, x2)

inst_28203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70007fffffffff; valaddr_reg:x3; val_offset:84609*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84609*0 + 3*555*FLEN/8, x4, x1, x2)

inst_28204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7000ffffffffff; valaddr_reg:x3; val_offset:84612*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84612*0 + 3*556*FLEN/8, x4, x1, x2)

inst_28205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7001ffffffffff; valaddr_reg:x3; val_offset:84615*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84615*0 + 3*557*FLEN/8, x4, x1, x2)

inst_28206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7003ffffffffff; valaddr_reg:x3; val_offset:84618*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84618*0 + 3*558*FLEN/8, x4, x1, x2)

inst_28207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7007ffffffffff; valaddr_reg:x3; val_offset:84621*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84621*0 + 3*559*FLEN/8, x4, x1, x2)

inst_28208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e700fffffffffff; valaddr_reg:x3; val_offset:84624*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84624*0 + 3*560*FLEN/8, x4, x1, x2)

inst_28209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e701fffffffffff; valaddr_reg:x3; val_offset:84627*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84627*0 + 3*561*FLEN/8, x4, x1, x2)

inst_28210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e703fffffffffff; valaddr_reg:x3; val_offset:84630*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84630*0 + 3*562*FLEN/8, x4, x1, x2)

inst_28211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e707fffffffffff; valaddr_reg:x3; val_offset:84633*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84633*0 + 3*563*FLEN/8, x4, x1, x2)

inst_28212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e70ffffffffffff; valaddr_reg:x3; val_offset:84636*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84636*0 + 3*564*FLEN/8, x4, x1, x2)

inst_28213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e71ffffffffffff; valaddr_reg:x3; val_offset:84639*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84639*0 + 3*565*FLEN/8, x4, x1, x2)

inst_28214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e73ffffffffffff; valaddr_reg:x3; val_offset:84642*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84642*0 + 3*566*FLEN/8, x4, x1, x2)

inst_28215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e77ffffffffffff; valaddr_reg:x3; val_offset:84645*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84645*0 + 3*567*FLEN/8, x4, x1, x2)

inst_28216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e78000000000000; valaddr_reg:x3; val_offset:84648*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84648*0 + 3*568*FLEN/8, x4, x1, x2)

inst_28217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7c000000000000; valaddr_reg:x3; val_offset:84651*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84651*0 + 3*569*FLEN/8, x4, x1, x2)

inst_28218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7e000000000000; valaddr_reg:x3; val_offset:84654*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84654*0 + 3*570*FLEN/8, x4, x1, x2)

inst_28219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7f000000000000; valaddr_reg:x3; val_offset:84657*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84657*0 + 3*571*FLEN/8, x4, x1, x2)

inst_28220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7f800000000000; valaddr_reg:x3; val_offset:84660*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84660*0 + 3*572*FLEN/8, x4, x1, x2)

inst_28221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fc00000000000; valaddr_reg:x3; val_offset:84663*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84663*0 + 3*573*FLEN/8, x4, x1, x2)

inst_28222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fe00000000000; valaddr_reg:x3; val_offset:84666*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84666*0 + 3*574*FLEN/8, x4, x1, x2)

inst_28223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ff00000000000; valaddr_reg:x3; val_offset:84669*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84669*0 + 3*575*FLEN/8, x4, x1, x2)

inst_28224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ff80000000000; valaddr_reg:x3; val_offset:84672*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84672*0 + 3*576*FLEN/8, x4, x1, x2)

inst_28225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffc0000000000; valaddr_reg:x3; val_offset:84675*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84675*0 + 3*577*FLEN/8, x4, x1, x2)

inst_28226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffe0000000000; valaddr_reg:x3; val_offset:84678*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84678*0 + 3*578*FLEN/8, x4, x1, x2)

inst_28227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fff0000000000; valaddr_reg:x3; val_offset:84681*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84681*0 + 3*579*FLEN/8, x4, x1, x2)

inst_28228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fff8000000000; valaddr_reg:x3; val_offset:84684*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84684*0 + 3*580*FLEN/8, x4, x1, x2)

inst_28229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffc000000000; valaddr_reg:x3; val_offset:84687*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84687*0 + 3*581*FLEN/8, x4, x1, x2)

inst_28230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffe000000000; valaddr_reg:x3; val_offset:84690*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84690*0 + 3*582*FLEN/8, x4, x1, x2)

inst_28231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffff000000000; valaddr_reg:x3; val_offset:84693*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84693*0 + 3*583*FLEN/8, x4, x1, x2)

inst_28232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffff800000000; valaddr_reg:x3; val_offset:84696*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84696*0 + 3*584*FLEN/8, x4, x1, x2)

inst_28233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffc00000000; valaddr_reg:x3; val_offset:84699*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84699*0 + 3*585*FLEN/8, x4, x1, x2)

inst_28234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffe00000000; valaddr_reg:x3; val_offset:84702*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84702*0 + 3*586*FLEN/8, x4, x1, x2)

inst_28235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffff00000000; valaddr_reg:x3; val_offset:84705*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84705*0 + 3*587*FLEN/8, x4, x1, x2)

inst_28236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffff80000000; valaddr_reg:x3; val_offset:84708*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84708*0 + 3*588*FLEN/8, x4, x1, x2)

inst_28237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffc0000000; valaddr_reg:x3; val_offset:84711*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84711*0 + 3*589*FLEN/8, x4, x1, x2)

inst_28238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffe0000000; valaddr_reg:x3; val_offset:84714*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84714*0 + 3*590*FLEN/8, x4, x1, x2)

inst_28239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffff0000000; valaddr_reg:x3; val_offset:84717*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84717*0 + 3*591*FLEN/8, x4, x1, x2)

inst_28240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffff8000000; valaddr_reg:x3; val_offset:84720*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84720*0 + 3*592*FLEN/8, x4, x1, x2)

inst_28241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffc000000; valaddr_reg:x3; val_offset:84723*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84723*0 + 3*593*FLEN/8, x4, x1, x2)

inst_28242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffe000000; valaddr_reg:x3; val_offset:84726*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84726*0 + 3*594*FLEN/8, x4, x1, x2)

inst_28243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffff000000; valaddr_reg:x3; val_offset:84729*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84729*0 + 3*595*FLEN/8, x4, x1, x2)

inst_28244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffff800000; valaddr_reg:x3; val_offset:84732*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84732*0 + 3*596*FLEN/8, x4, x1, x2)

inst_28245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffc00000; valaddr_reg:x3; val_offset:84735*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84735*0 + 3*597*FLEN/8, x4, x1, x2)

inst_28246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffe00000; valaddr_reg:x3; val_offset:84738*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84738*0 + 3*598*FLEN/8, x4, x1, x2)

inst_28247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffff00000; valaddr_reg:x3; val_offset:84741*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84741*0 + 3*599*FLEN/8, x4, x1, x2)

inst_28248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffff80000; valaddr_reg:x3; val_offset:84744*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84744*0 + 3*600*FLEN/8, x4, x1, x2)

inst_28249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffc0000; valaddr_reg:x3; val_offset:84747*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84747*0 + 3*601*FLEN/8, x4, x1, x2)

inst_28250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffe0000; valaddr_reg:x3; val_offset:84750*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84750*0 + 3*602*FLEN/8, x4, x1, x2)

inst_28251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffff0000; valaddr_reg:x3; val_offset:84753*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84753*0 + 3*603*FLEN/8, x4, x1, x2)

inst_28252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffff8000; valaddr_reg:x3; val_offset:84756*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84756*0 + 3*604*FLEN/8, x4, x1, x2)

inst_28253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffc000; valaddr_reg:x3; val_offset:84759*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84759*0 + 3*605*FLEN/8, x4, x1, x2)

inst_28254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffe000; valaddr_reg:x3; val_offset:84762*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84762*0 + 3*606*FLEN/8, x4, x1, x2)

inst_28255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffff000; valaddr_reg:x3; val_offset:84765*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84765*0 + 3*607*FLEN/8, x4, x1, x2)

inst_28256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffff800; valaddr_reg:x3; val_offset:84768*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84768*0 + 3*608*FLEN/8, x4, x1, x2)

inst_28257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffc00; valaddr_reg:x3; val_offset:84771*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84771*0 + 3*609*FLEN/8, x4, x1, x2)

inst_28258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffe00; valaddr_reg:x3; val_offset:84774*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84774*0 + 3*610*FLEN/8, x4, x1, x2)

inst_28259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffff00; valaddr_reg:x3; val_offset:84777*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84777*0 + 3*611*FLEN/8, x4, x1, x2)

inst_28260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffff80; valaddr_reg:x3; val_offset:84780*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84780*0 + 3*612*FLEN/8, x4, x1, x2)

inst_28261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffffc0; valaddr_reg:x3; val_offset:84783*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84783*0 + 3*613*FLEN/8, x4, x1, x2)

inst_28262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffffe0; valaddr_reg:x3; val_offset:84786*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84786*0 + 3*614*FLEN/8, x4, x1, x2)

inst_28263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffff0; valaddr_reg:x3; val_offset:84789*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84789*0 + 3*615*FLEN/8, x4, x1, x2)

inst_28264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffff8; valaddr_reg:x3; val_offset:84792*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84792*0 + 3*616*FLEN/8, x4, x1, x2)

inst_28265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffffc; valaddr_reg:x3; val_offset:84795*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84795*0 + 3*617*FLEN/8, x4, x1, x2)

inst_28266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7ffffffffffffe; valaddr_reg:x3; val_offset:84798*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84798*0 + 3*618*FLEN/8, x4, x1, x2)

inst_28267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3e7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3e7fffffffffffff; valaddr_reg:x3; val_offset:84801*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84801*0 + 3*619*FLEN/8, x4, x1, x2)

inst_28268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:84804*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84804*0 + 3*620*FLEN/8, x4, x1, x2)

inst_28269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:84807*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84807*0 + 3*621*FLEN/8, x4, x1, x2)

inst_28270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:84810*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84810*0 + 3*622*FLEN/8, x4, x1, x2)

inst_28271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:84813*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84813*0 + 3*623*FLEN/8, x4, x1, x2)

inst_28272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:84816*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84816*0 + 3*624*FLEN/8, x4, x1, x2)

inst_28273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:84819*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84819*0 + 3*625*FLEN/8, x4, x1, x2)

inst_28274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:84822*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84822*0 + 3*626*FLEN/8, x4, x1, x2)

inst_28275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:84825*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84825*0 + 3*627*FLEN/8, x4, x1, x2)

inst_28276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:84828*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84828*0 + 3*628*FLEN/8, x4, x1, x2)

inst_28277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:84831*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84831*0 + 3*629*FLEN/8, x4, x1, x2)

inst_28278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:84834*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84834*0 + 3*630*FLEN/8, x4, x1, x2)

inst_28279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:84837*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84837*0 + 3*631*FLEN/8, x4, x1, x2)

inst_28280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:84840*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84840*0 + 3*632*FLEN/8, x4, x1, x2)

inst_28281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:84843*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84843*0 + 3*633*FLEN/8, x4, x1, x2)

inst_28282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:84846*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84846*0 + 3*634*FLEN/8, x4, x1, x2)

inst_28283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:84849*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84849*0 + 3*635*FLEN/8, x4, x1, x2)

inst_28284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:84852*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84852*0 + 3*636*FLEN/8, x4, x1, x2)

inst_28285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:84855*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84855*0 + 3*637*FLEN/8, x4, x1, x2)

inst_28286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:84858*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84858*0 + 3*638*FLEN/8, x4, x1, x2)

inst_28287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:84861*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84861*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_28288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:84864*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84864*0 + 3*640*FLEN/8, x4, x1, x2)

inst_28289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdbf02c4fd122a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91365a93dfa50f; op2val:0x204dbf02c4fd122a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:84867*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84867*0 + 3*641*FLEN/8, x4, x1, x2)

inst_28290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:84870*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84870*0 + 3*642*FLEN/8, x4, x1, x2)

inst_28291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:84873*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84873*0 + 3*643*FLEN/8, x4, x1, x2)

inst_28292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:84876*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84876*0 + 3*644*FLEN/8, x4, x1, x2)

inst_28293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:84879*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84879*0 + 3*645*FLEN/8, x4, x1, x2)

inst_28294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:84882*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84882*0 + 3*646*FLEN/8, x4, x1, x2)

inst_28295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:84885*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84885*0 + 3*647*FLEN/8, x4, x1, x2)

inst_28296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:84888*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84888*0 + 3*648*FLEN/8, x4, x1, x2)

inst_28297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:84891*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84891*0 + 3*649*FLEN/8, x4, x1, x2)

inst_28298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:84894*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84894*0 + 3*650*FLEN/8, x4, x1, x2)

inst_28299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:84897*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84897*0 + 3*651*FLEN/8, x4, x1, x2)

inst_28300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:84900*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84900*0 + 3*652*FLEN/8, x4, x1, x2)

inst_28301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:84903*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84903*0 + 3*653*FLEN/8, x4, x1, x2)

inst_28302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:84906*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84906*0 + 3*654*FLEN/8, x4, x1, x2)

inst_28303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:84909*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84909*0 + 3*655*FLEN/8, x4, x1, x2)

inst_28304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:84912*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84912*0 + 3*656*FLEN/8, x4, x1, x2)

inst_28305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:84915*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84915*0 + 3*657*FLEN/8, x4, x1, x2)

inst_28306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:84918*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84918*0 + 3*658*FLEN/8, x4, x1, x2)

inst_28307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:84921*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84921*0 + 3*659*FLEN/8, x4, x1, x2)

inst_28308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:84924*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84924*0 + 3*660*FLEN/8, x4, x1, x2)

inst_28309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:84927*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84927*0 + 3*661*FLEN/8, x4, x1, x2)

inst_28310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:84930*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84930*0 + 3*662*FLEN/8, x4, x1, x2)

inst_28311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:84933*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84933*0 + 3*663*FLEN/8, x4, x1, x2)

inst_28312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:84936*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84936*0 + 3*664*FLEN/8, x4, x1, x2)

inst_28313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:84939*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84939*0 + 3*665*FLEN/8, x4, x1, x2)

inst_28314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:84942*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84942*0 + 3*666*FLEN/8, x4, x1, x2)

inst_28315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:84945*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84945*0 + 3*667*FLEN/8, x4, x1, x2)

inst_28316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:84948*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84948*0 + 3*668*FLEN/8, x4, x1, x2)

inst_28317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:84951*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84951*0 + 3*669*FLEN/8, x4, x1, x2)

inst_28318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:84954*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84954*0 + 3*670*FLEN/8, x4, x1, x2)

inst_28319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:84957*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84957*0 + 3*671*FLEN/8, x4, x1, x2)

inst_28320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000000000ff; valaddr_reg:x3; val_offset:84960*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84960*0 + 3*672*FLEN/8, x4, x1, x2)

inst_28321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000000001ff; valaddr_reg:x3; val_offset:84963*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84963*0 + 3*673*FLEN/8, x4, x1, x2)

inst_28322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000000003ff; valaddr_reg:x3; val_offset:84966*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84966*0 + 3*674*FLEN/8, x4, x1, x2)

inst_28323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000000007ff; valaddr_reg:x3; val_offset:84969*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84969*0 + 3*675*FLEN/8, x4, x1, x2)

inst_28324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000000fff; valaddr_reg:x3; val_offset:84972*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84972*0 + 3*676*FLEN/8, x4, x1, x2)

inst_28325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000001fff; valaddr_reg:x3; val_offset:84975*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84975*0 + 3*677*FLEN/8, x4, x1, x2)

inst_28326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000003fff; valaddr_reg:x3; val_offset:84978*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84978*0 + 3*678*FLEN/8, x4, x1, x2)

inst_28327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000007fff; valaddr_reg:x3; val_offset:84981*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84981*0 + 3*679*FLEN/8, x4, x1, x2)

inst_28328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000000ffff; valaddr_reg:x3; val_offset:84984*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84984*0 + 3*680*FLEN/8, x4, x1, x2)

inst_28329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000001ffff; valaddr_reg:x3; val_offset:84987*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84987*0 + 3*681*FLEN/8, x4, x1, x2)

inst_28330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000003ffff; valaddr_reg:x3; val_offset:84990*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84990*0 + 3*682*FLEN/8, x4, x1, x2)

inst_28331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000007ffff; valaddr_reg:x3; val_offset:84993*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84993*0 + 3*683*FLEN/8, x4, x1, x2)

inst_28332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000000fffff; valaddr_reg:x3; val_offset:84996*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84996*0 + 3*684*FLEN/8, x4, x1, x2)

inst_28333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000001fffff; valaddr_reg:x3; val_offset:84999*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 84999*0 + 3*685*FLEN/8, x4, x1, x2)

inst_28334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000003fffff; valaddr_reg:x3; val_offset:85002*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85002*0 + 3*686*FLEN/8, x4, x1, x2)

inst_28335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000007fffff; valaddr_reg:x3; val_offset:85005*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85005*0 + 3*687*FLEN/8, x4, x1, x2)

inst_28336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000000ffffff; valaddr_reg:x3; val_offset:85008*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85008*0 + 3*688*FLEN/8, x4, x1, x2)

inst_28337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000001ffffff; valaddr_reg:x3; val_offset:85011*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85011*0 + 3*689*FLEN/8, x4, x1, x2)

inst_28338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000003ffffff; valaddr_reg:x3; val_offset:85014*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85014*0 + 3*690*FLEN/8, x4, x1, x2)

inst_28339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000007ffffff; valaddr_reg:x3; val_offset:85017*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85017*0 + 3*691*FLEN/8, x4, x1, x2)

inst_28340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000000fffffff; valaddr_reg:x3; val_offset:85020*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85020*0 + 3*692*FLEN/8, x4, x1, x2)

inst_28341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000001fffffff; valaddr_reg:x3; val_offset:85023*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85023*0 + 3*693*FLEN/8, x4, x1, x2)

inst_28342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000003fffffff; valaddr_reg:x3; val_offset:85026*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85026*0 + 3*694*FLEN/8, x4, x1, x2)

inst_28343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000007fffffff; valaddr_reg:x3; val_offset:85029*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85029*0 + 3*695*FLEN/8, x4, x1, x2)

inst_28344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00000ffffffff; valaddr_reg:x3; val_offset:85032*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85032*0 + 3*696*FLEN/8, x4, x1, x2)

inst_28345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00001ffffffff; valaddr_reg:x3; val_offset:85035*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85035*0 + 3*697*FLEN/8, x4, x1, x2)

inst_28346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00003ffffffff; valaddr_reg:x3; val_offset:85038*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85038*0 + 3*698*FLEN/8, x4, x1, x2)

inst_28347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00007ffffffff; valaddr_reg:x3; val_offset:85041*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85041*0 + 3*699*FLEN/8, x4, x1, x2)

inst_28348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0000fffffffff; valaddr_reg:x3; val_offset:85044*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85044*0 + 3*700*FLEN/8, x4, x1, x2)

inst_28349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0001fffffffff; valaddr_reg:x3; val_offset:85047*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85047*0 + 3*701*FLEN/8, x4, x1, x2)

inst_28350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0003fffffffff; valaddr_reg:x3; val_offset:85050*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85050*0 + 3*702*FLEN/8, x4, x1, x2)

inst_28351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0007fffffffff; valaddr_reg:x3; val_offset:85053*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85053*0 + 3*703*FLEN/8, x4, x1, x2)

inst_28352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a000ffffffffff; valaddr_reg:x3; val_offset:85056*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85056*0 + 3*704*FLEN/8, x4, x1, x2)

inst_28353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a001ffffffffff; valaddr_reg:x3; val_offset:85059*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85059*0 + 3*705*FLEN/8, x4, x1, x2)

inst_28354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a003ffffffffff; valaddr_reg:x3; val_offset:85062*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85062*0 + 3*706*FLEN/8, x4, x1, x2)

inst_28355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a007ffffffffff; valaddr_reg:x3; val_offset:85065*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85065*0 + 3*707*FLEN/8, x4, x1, x2)

inst_28356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a00fffffffffff; valaddr_reg:x3; val_offset:85068*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85068*0 + 3*708*FLEN/8, x4, x1, x2)

inst_28357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a01fffffffffff; valaddr_reg:x3; val_offset:85071*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85071*0 + 3*709*FLEN/8, x4, x1, x2)

inst_28358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a03fffffffffff; valaddr_reg:x3; val_offset:85074*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85074*0 + 3*710*FLEN/8, x4, x1, x2)

inst_28359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a07fffffffffff; valaddr_reg:x3; val_offset:85077*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85077*0 + 3*711*FLEN/8, x4, x1, x2)

inst_28360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a0ffffffffffff; valaddr_reg:x3; val_offset:85080*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85080*0 + 3*712*FLEN/8, x4, x1, x2)

inst_28361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a1ffffffffffff; valaddr_reg:x3; val_offset:85083*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85083*0 + 3*713*FLEN/8, x4, x1, x2)

inst_28362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a3ffffffffffff; valaddr_reg:x3; val_offset:85086*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85086*0 + 3*714*FLEN/8, x4, x1, x2)

inst_28363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a7ffffffffffff; valaddr_reg:x3; val_offset:85089*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85089*0 + 3*715*FLEN/8, x4, x1, x2)

inst_28364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80a8000000000000; valaddr_reg:x3; val_offset:85092*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85092*0 + 3*716*FLEN/8, x4, x1, x2)

inst_28365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80ac000000000000; valaddr_reg:x3; val_offset:85095*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85095*0 + 3*717*FLEN/8, x4, x1, x2)

inst_28366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80ae000000000000; valaddr_reg:x3; val_offset:85098*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85098*0 + 3*718*FLEN/8, x4, x1, x2)

inst_28367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80af000000000000; valaddr_reg:x3; val_offset:85101*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85101*0 + 3*719*FLEN/8, x4, x1, x2)

inst_28368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80af800000000000; valaddr_reg:x3; val_offset:85104*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85104*0 + 3*720*FLEN/8, x4, x1, x2)

inst_28369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afc00000000000; valaddr_reg:x3; val_offset:85107*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85107*0 + 3*721*FLEN/8, x4, x1, x2)

inst_28370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afe00000000000; valaddr_reg:x3; val_offset:85110*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85110*0 + 3*722*FLEN/8, x4, x1, x2)

inst_28371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80aff00000000000; valaddr_reg:x3; val_offset:85113*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85113*0 + 3*723*FLEN/8, x4, x1, x2)

inst_28372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80aff80000000000; valaddr_reg:x3; val_offset:85116*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85116*0 + 3*724*FLEN/8, x4, x1, x2)

inst_28373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affc0000000000; valaddr_reg:x3; val_offset:85119*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85119*0 + 3*725*FLEN/8, x4, x1, x2)

inst_28374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affe0000000000; valaddr_reg:x3; val_offset:85122*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85122*0 + 3*726*FLEN/8, x4, x1, x2)

inst_28375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afff0000000000; valaddr_reg:x3; val_offset:85125*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85125*0 + 3*727*FLEN/8, x4, x1, x2)

inst_28376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afff8000000000; valaddr_reg:x3; val_offset:85128*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85128*0 + 3*728*FLEN/8, x4, x1, x2)

inst_28377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffc000000000; valaddr_reg:x3; val_offset:85131*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85131*0 + 3*729*FLEN/8, x4, x1, x2)

inst_28378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffe000000000; valaddr_reg:x3; val_offset:85134*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85134*0 + 3*730*FLEN/8, x4, x1, x2)

inst_28379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affff000000000; valaddr_reg:x3; val_offset:85137*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85137*0 + 3*731*FLEN/8, x4, x1, x2)

inst_28380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affff800000000; valaddr_reg:x3; val_offset:85140*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85140*0 + 3*732*FLEN/8, x4, x1, x2)

inst_28381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffc00000000; valaddr_reg:x3; val_offset:85143*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85143*0 + 3*733*FLEN/8, x4, x1, x2)

inst_28382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffe00000000; valaddr_reg:x3; val_offset:85146*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85146*0 + 3*734*FLEN/8, x4, x1, x2)

inst_28383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffff00000000; valaddr_reg:x3; val_offset:85149*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85149*0 + 3*735*FLEN/8, x4, x1, x2)

inst_28384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffff80000000; valaddr_reg:x3; val_offset:85152*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85152*0 + 3*736*FLEN/8, x4, x1, x2)

inst_28385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffc0000000; valaddr_reg:x3; val_offset:85155*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85155*0 + 3*737*FLEN/8, x4, x1, x2)

inst_28386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffe0000000; valaddr_reg:x3; val_offset:85158*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85158*0 + 3*738*FLEN/8, x4, x1, x2)

inst_28387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffff0000000; valaddr_reg:x3; val_offset:85161*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85161*0 + 3*739*FLEN/8, x4, x1, x2)

inst_28388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffff8000000; valaddr_reg:x3; val_offset:85164*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85164*0 + 3*740*FLEN/8, x4, x1, x2)

inst_28389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffc000000; valaddr_reg:x3; val_offset:85167*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85167*0 + 3*741*FLEN/8, x4, x1, x2)

inst_28390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffe000000; valaddr_reg:x3; val_offset:85170*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85170*0 + 3*742*FLEN/8, x4, x1, x2)

inst_28391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffff000000; valaddr_reg:x3; val_offset:85173*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85173*0 + 3*743*FLEN/8, x4, x1, x2)

inst_28392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffff800000; valaddr_reg:x3; val_offset:85176*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85176*0 + 3*744*FLEN/8, x4, x1, x2)

inst_28393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffc00000; valaddr_reg:x3; val_offset:85179*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85179*0 + 3*745*FLEN/8, x4, x1, x2)

inst_28394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffe00000; valaddr_reg:x3; val_offset:85182*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85182*0 + 3*746*FLEN/8, x4, x1, x2)

inst_28395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffff00000; valaddr_reg:x3; val_offset:85185*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85185*0 + 3*747*FLEN/8, x4, x1, x2)

inst_28396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffff80000; valaddr_reg:x3; val_offset:85188*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85188*0 + 3*748*FLEN/8, x4, x1, x2)

inst_28397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffc0000; valaddr_reg:x3; val_offset:85191*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85191*0 + 3*749*FLEN/8, x4, x1, x2)

inst_28398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffe0000; valaddr_reg:x3; val_offset:85194*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85194*0 + 3*750*FLEN/8, x4, x1, x2)

inst_28399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffff0000; valaddr_reg:x3; val_offset:85197*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85197*0 + 3*751*FLEN/8, x4, x1, x2)

inst_28400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffff8000; valaddr_reg:x3; val_offset:85200*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85200*0 + 3*752*FLEN/8, x4, x1, x2)

inst_28401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffc000; valaddr_reg:x3; val_offset:85203*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85203*0 + 3*753*FLEN/8, x4, x1, x2)

inst_28402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffe000; valaddr_reg:x3; val_offset:85206*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85206*0 + 3*754*FLEN/8, x4, x1, x2)

inst_28403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffff000; valaddr_reg:x3; val_offset:85209*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85209*0 + 3*755*FLEN/8, x4, x1, x2)

inst_28404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffff800; valaddr_reg:x3; val_offset:85212*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85212*0 + 3*756*FLEN/8, x4, x1, x2)

inst_28405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffc00; valaddr_reg:x3; val_offset:85215*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85215*0 + 3*757*FLEN/8, x4, x1, x2)

inst_28406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffe00; valaddr_reg:x3; val_offset:85218*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85218*0 + 3*758*FLEN/8, x4, x1, x2)

inst_28407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffff00; valaddr_reg:x3; val_offset:85221*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85221*0 + 3*759*FLEN/8, x4, x1, x2)

inst_28408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffff80; valaddr_reg:x3; val_offset:85224*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85224*0 + 3*760*FLEN/8, x4, x1, x2)

inst_28409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffffc0; valaddr_reg:x3; val_offset:85227*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85227*0 + 3*761*FLEN/8, x4, x1, x2)

inst_28410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffffe0; valaddr_reg:x3; val_offset:85230*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85230*0 + 3*762*FLEN/8, x4, x1, x2)

inst_28411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffff0; valaddr_reg:x3; val_offset:85233*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85233*0 + 3*763*FLEN/8, x4, x1, x2)

inst_28412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffff8; valaddr_reg:x3; val_offset:85236*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85236*0 + 3*764*FLEN/8, x4, x1, x2)

inst_28413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffffc; valaddr_reg:x3; val_offset:85239*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85239*0 + 3*765*FLEN/8, x4, x1, x2)

inst_28414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80affffffffffffe; valaddr_reg:x3; val_offset:85242*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85242*0 + 3*766*FLEN/8, x4, x1, x2)

inst_28415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x16c64bf8de34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f916c64bf8de34f; op2val:0x8000;
op3val:0x80afffffffffffff; valaddr_reg:x3; val_offset:85245*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85245*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6886309088993815089,64,FLEN)
NAN_BOXED(11519636084012273613,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711744,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711745,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711747,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711751,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711759,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711775,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711807,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711871,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711999,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712255,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712767,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151713791,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151715839,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151719935,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151728127,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151744511,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151777279,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151842815,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151973887,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152236031,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152760319,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376153808895,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376155906047,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376160100351,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376168488959,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376185266175,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376218820607,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376285929471,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376420147199,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376688582655,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230377225453567,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230378299195391,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230380446679039,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230384741646335,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230393331580927,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230410511450111,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230444871188479,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230513590665215,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230651029618687,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230925907525631,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288231475663339519,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288232575174967295,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288234774198222847,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288239172244733951,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288247968337756159,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288265560523800575,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288300744895889407,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288371113640067071,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288511851128422399,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288793326105133055,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(289356276058554367,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396991,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396992,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(291608075872239616,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292171025825660928,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292452500802371584,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292593238290726912,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292663607034904576,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292698791406993408,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292716383593037824,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292725179686060032,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292729577732571136,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292731776755826688,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292732876267454464,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733426023268352,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733700901175296,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733838340128768,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733907059605504,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733941419343872,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733958599213056,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733967189147648,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733971484114944,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733973631598592,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733974705340416,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975242211328,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975510646784,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975644864512,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975711973376,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975745527808,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975762305024,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975770693632,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975774887936,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975776985088,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778033664,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778557952,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778820096,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778951168,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779016704,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779049472,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779065856,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779074048,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779078144,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779080192,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081216,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081728,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081984,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082112,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082176,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082208,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082224,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082232,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082236,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082238,64,FLEN)
NAN_BOXED(6886330566634836545,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082239,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927936,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927937,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927939,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927943,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927951,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927967,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927999,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928063,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928191,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928447,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928959,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037929983,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037932031,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037936127,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037944319,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037960703,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037993471,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038059007,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038190079,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038452223,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038976511,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594040025087,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594042122239,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594046316543,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594054705151,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594071482367,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594105036799,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594172145663,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594306363391,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594574798847,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057595111669759,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057596185411583,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057598332895231,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057602627862527,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057611217797119,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057628397666303,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057662757404671,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057731476881407,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057868915834879,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058143793741823,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058693549555711,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72059793061183487,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72061992084439039,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72066390130950143,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72075186223972351,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72092778410016767,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72127962782105599,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72198331526283263,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72339069014638591,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72620543991349247,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(73183493944770559,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613183,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613184,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75435293758455808,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75998243711877120,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76279718688587776,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76420456176943104,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76490824921120768,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76526009293209600,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76543601479254016,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76552397572276224,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76556795618787328,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76558994642042880,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560094153670656,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560643909484544,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560918787391488,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561056226344960,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561124945821696,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561159305560064,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561176485429248,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561185075363840,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561189370331136,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561191517814784,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561192591556608,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193128427520,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193396862976,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193531080704,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193598189568,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193631744000,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193648521216,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193656909824,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193661104128,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193663201280,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664249856,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664774144,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665036288,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665167360,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665232896,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665265664,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665282048,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665290240,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665294336,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665296384,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297408,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297920,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298176,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298304,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298368,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298400,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298416,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298424,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298428,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298430,64,FLEN)
NAN_BOXED(6886332426238667885,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298431,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6886333629845808897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039424,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039425,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039427,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039431,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039439,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039455,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039487,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039551,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039679,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039935,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920040447,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920041471,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920043519,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920047615,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920055807,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920072191,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920104959,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920170495,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920301567,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920563711,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392921087999,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392922136575,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392924233727,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392928428031,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392936816639,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392953593855,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392987148287,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393054257151,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393188474879,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393456910335,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393993781247,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568395067523071,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568397215006719,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568401509974015,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568410099908607,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568427279777791,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568461639516159,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568530358992895,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568667797946367,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568942675853311,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85569492431667199,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85570591943294975,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85572790966550527,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85577189013061631,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85585985106083839,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85603577292128255,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85638761664217087,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85709130408394751,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85849867896750079,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86131342873460735,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86694292826882047,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724671,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724672,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(88946092640567296,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89509042593988608,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89790517570699264,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89931255059054592,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90001623803232256,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90036808175321088,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90054400361365504,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90063196454387712,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90067594500898816,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6886339539497378281,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125504,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125505,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125507,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125511,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125519,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125535,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125567,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125631,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743125759,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743126015,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743126527,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743127551,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743129599,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743133695,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743141887,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743158271,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743191039,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743256575,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743387647,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027743649791,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027744174079,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027745222655,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027747319807,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027751514111,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027759902719,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027776679935,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027810234367,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096027877343231,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096028011560959,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096028279996415,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096028816867327,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096029890609151,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096032038092799,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096036333060095,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096044922994687,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096062102863871,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096096462602239,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096165182078975,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096302621032447,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499096577498939391,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499097127254753279,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499098226766381055,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499100425789636607,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499104823836147711,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499113619929169919,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499131212115214335,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499166396487303167,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499236765231480831,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499377502719836159,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4499658977696546815,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4500221927649968127,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4501347827556810751,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4501347827556810752,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4502473727463653376,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503036677417074688,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503318152393785344,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503458889882140672,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503529258626318336,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503564442998407168,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503582035184451584,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503590831277473792,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503595229323984896,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503597428347240448,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503598527858868224,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599077614682112,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599352492589056,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599489931542528,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599558651019264,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599593010757632,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599610190626816,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599618780561408,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599623075528704,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599625223012352,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599626296754176,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599626833625088,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627102060544,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627236278272,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627303387136,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627336941568,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627353718784,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627362107392,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627366301696,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627368398848,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627369447424,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627369971712,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370233856,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370364928,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370430464,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370463232,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370479616,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370487808,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370491904,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370493952,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370494976,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495488,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495744,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495872,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495936,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495968,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495984,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495992,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495996,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495998,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4503599627370495999,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886345067882063119,64,FLEN)
NAN_BOXED(2327726601036173866,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481023,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481279,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481791,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128482815,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128484863,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128488959,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128497151,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128513535,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128546303,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128611839,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128742911,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129005055,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129529343,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033130577919,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033132675071,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033136869375,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033145257983,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033162035199,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033195589631,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033262698495,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033396916223,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033665351679,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408034202222591,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408035275964415,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408037423448063,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408041718415359,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408050308349951,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408067488219135,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408101847957503,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408170567434239,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408308006387711,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408582884294655,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268409132640108543,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268410232151736319,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268412431174991871,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268416829221502975,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268425625314525183,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268443217500569599,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268478401872658431,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268548770616836095,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268689508105191423,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268970983081902079,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9269533933035323391,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166015,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166016,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9271785732849008640,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272348682802429952,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272630157779140608,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272770895267495936,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272841264011673600,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272876448383762432,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272894040569806848,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272902836662829056,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272907234709340160,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272909433732595712,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272910533244223488,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911083000037376,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911357877944320,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911495316897792,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911564036374528,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911598396112896,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911615575982080,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911624165916672,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911628460883968,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911630608367616,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911631682109440,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632218980352,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632487415808,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632621633536,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632688742400,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632722296832,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632739074048,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632747462656,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632751656960,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632753754112,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632754802688,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755326976,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755589120,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755720192,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755785728,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755818496,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755834880,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755843072,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755847168,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755849216,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850240,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850752,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851008,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851136,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851200,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851232,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851248,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851256,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851260,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851262,64,FLEN)
NAN_BOXED(6886404485192475471,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851263,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
