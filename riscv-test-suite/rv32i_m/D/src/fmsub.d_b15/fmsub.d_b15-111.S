
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_84480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38af800000000000; valaddr_reg:x3; val_offset:253440*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253440*0 + 3*0*FLEN/8, x4, x1, x2)

inst_84481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afc00000000000; valaddr_reg:x3; val_offset:253443*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253443*0 + 3*1*FLEN/8, x4, x1, x2)

inst_84482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afe00000000000; valaddr_reg:x3; val_offset:253446*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253446*0 + 3*2*FLEN/8, x4, x1, x2)

inst_84483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38aff00000000000; valaddr_reg:x3; val_offset:253449*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253449*0 + 3*3*FLEN/8, x4, x1, x2)

inst_84484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38aff80000000000; valaddr_reg:x3; val_offset:253452*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253452*0 + 3*4*FLEN/8, x4, x1, x2)

inst_84485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affc0000000000; valaddr_reg:x3; val_offset:253455*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253455*0 + 3*5*FLEN/8, x4, x1, x2)

inst_84486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affe0000000000; valaddr_reg:x3; val_offset:253458*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253458*0 + 3*6*FLEN/8, x4, x1, x2)

inst_84487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afff0000000000; valaddr_reg:x3; val_offset:253461*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253461*0 + 3*7*FLEN/8, x4, x1, x2)

inst_84488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afff8000000000; valaddr_reg:x3; val_offset:253464*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253464*0 + 3*8*FLEN/8, x4, x1, x2)

inst_84489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffc000000000; valaddr_reg:x3; val_offset:253467*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253467*0 + 3*9*FLEN/8, x4, x1, x2)

inst_84490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffe000000000; valaddr_reg:x3; val_offset:253470*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253470*0 + 3*10*FLEN/8, x4, x1, x2)

inst_84491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affff000000000; valaddr_reg:x3; val_offset:253473*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253473*0 + 3*11*FLEN/8, x4, x1, x2)

inst_84492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affff800000000; valaddr_reg:x3; val_offset:253476*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253476*0 + 3*12*FLEN/8, x4, x1, x2)

inst_84493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffc00000000; valaddr_reg:x3; val_offset:253479*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253479*0 + 3*13*FLEN/8, x4, x1, x2)

inst_84494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffe00000000; valaddr_reg:x3; val_offset:253482*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253482*0 + 3*14*FLEN/8, x4, x1, x2)

inst_84495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffff00000000; valaddr_reg:x3; val_offset:253485*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253485*0 + 3*15*FLEN/8, x4, x1, x2)

inst_84496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffff80000000; valaddr_reg:x3; val_offset:253488*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253488*0 + 3*16*FLEN/8, x4, x1, x2)

inst_84497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffc0000000; valaddr_reg:x3; val_offset:253491*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253491*0 + 3*17*FLEN/8, x4, x1, x2)

inst_84498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffe0000000; valaddr_reg:x3; val_offset:253494*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253494*0 + 3*18*FLEN/8, x4, x1, x2)

inst_84499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffff0000000; valaddr_reg:x3; val_offset:253497*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253497*0 + 3*19*FLEN/8, x4, x1, x2)

inst_84500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffff8000000; valaddr_reg:x3; val_offset:253500*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253500*0 + 3*20*FLEN/8, x4, x1, x2)

inst_84501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffc000000; valaddr_reg:x3; val_offset:253503*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253503*0 + 3*21*FLEN/8, x4, x1, x2)

inst_84502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffe000000; valaddr_reg:x3; val_offset:253506*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253506*0 + 3*22*FLEN/8, x4, x1, x2)

inst_84503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffff000000; valaddr_reg:x3; val_offset:253509*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253509*0 + 3*23*FLEN/8, x4, x1, x2)

inst_84504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffff800000; valaddr_reg:x3; val_offset:253512*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253512*0 + 3*24*FLEN/8, x4, x1, x2)

inst_84505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffc00000; valaddr_reg:x3; val_offset:253515*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253515*0 + 3*25*FLEN/8, x4, x1, x2)

inst_84506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffe00000; valaddr_reg:x3; val_offset:253518*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253518*0 + 3*26*FLEN/8, x4, x1, x2)

inst_84507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffff00000; valaddr_reg:x3; val_offset:253521*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253521*0 + 3*27*FLEN/8, x4, x1, x2)

inst_84508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffff80000; valaddr_reg:x3; val_offset:253524*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253524*0 + 3*28*FLEN/8, x4, x1, x2)

inst_84509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffc0000; valaddr_reg:x3; val_offset:253527*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253527*0 + 3*29*FLEN/8, x4, x1, x2)

inst_84510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffe0000; valaddr_reg:x3; val_offset:253530*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253530*0 + 3*30*FLEN/8, x4, x1, x2)

inst_84511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffff0000; valaddr_reg:x3; val_offset:253533*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253533*0 + 3*31*FLEN/8, x4, x1, x2)

inst_84512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffff8000; valaddr_reg:x3; val_offset:253536*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253536*0 + 3*32*FLEN/8, x4, x1, x2)

inst_84513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffc000; valaddr_reg:x3; val_offset:253539*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253539*0 + 3*33*FLEN/8, x4, x1, x2)

inst_84514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffe000; valaddr_reg:x3; val_offset:253542*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253542*0 + 3*34*FLEN/8, x4, x1, x2)

inst_84515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffff000; valaddr_reg:x3; val_offset:253545*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253545*0 + 3*35*FLEN/8, x4, x1, x2)

inst_84516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffff800; valaddr_reg:x3; val_offset:253548*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253548*0 + 3*36*FLEN/8, x4, x1, x2)

inst_84517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffc00; valaddr_reg:x3; val_offset:253551*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253551*0 + 3*37*FLEN/8, x4, x1, x2)

inst_84518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffe00; valaddr_reg:x3; val_offset:253554*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253554*0 + 3*38*FLEN/8, x4, x1, x2)

inst_84519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffff00; valaddr_reg:x3; val_offset:253557*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253557*0 + 3*39*FLEN/8, x4, x1, x2)

inst_84520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffff80; valaddr_reg:x3; val_offset:253560*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253560*0 + 3*40*FLEN/8, x4, x1, x2)

inst_84521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffffc0; valaddr_reg:x3; val_offset:253563*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253563*0 + 3*41*FLEN/8, x4, x1, x2)

inst_84522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffffe0; valaddr_reg:x3; val_offset:253566*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253566*0 + 3*42*FLEN/8, x4, x1, x2)

inst_84523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffff0; valaddr_reg:x3; val_offset:253569*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253569*0 + 3*43*FLEN/8, x4, x1, x2)

inst_84524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffff8; valaddr_reg:x3; val_offset:253572*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253572*0 + 3*44*FLEN/8, x4, x1, x2)

inst_84525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffffc; valaddr_reg:x3; val_offset:253575*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253575*0 + 3*45*FLEN/8, x4, x1, x2)

inst_84526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38affffffffffffe; valaddr_reg:x3; val_offset:253578*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253578*0 + 3*46*FLEN/8, x4, x1, x2)

inst_84527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa0e4046176f23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa0e4046176f23; op2val:0x0;
op3val:0x38afffffffffffff; valaddr_reg:x3; val_offset:253581*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253581*0 + 3*47*FLEN/8, x4, x1, x2)

inst_84528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:253584*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253584*0 + 3*48*FLEN/8, x4, x1, x2)

inst_84529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:253587*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253587*0 + 3*49*FLEN/8, x4, x1, x2)

inst_84530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:253590*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253590*0 + 3*50*FLEN/8, x4, x1, x2)

inst_84531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:253593*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253593*0 + 3*51*FLEN/8, x4, x1, x2)

inst_84532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:253596*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253596*0 + 3*52*FLEN/8, x4, x1, x2)

inst_84533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:253599*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253599*0 + 3*53*FLEN/8, x4, x1, x2)

inst_84534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:253602*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253602*0 + 3*54*FLEN/8, x4, x1, x2)

inst_84535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:253605*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253605*0 + 3*55*FLEN/8, x4, x1, x2)

inst_84536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:253608*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253608*0 + 3*56*FLEN/8, x4, x1, x2)

inst_84537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:253611*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253611*0 + 3*57*FLEN/8, x4, x1, x2)

inst_84538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:253614*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253614*0 + 3*58*FLEN/8, x4, x1, x2)

inst_84539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:253617*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253617*0 + 3*59*FLEN/8, x4, x1, x2)

inst_84540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:253620*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253620*0 + 3*60*FLEN/8, x4, x1, x2)

inst_84541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:253623*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253623*0 + 3*61*FLEN/8, x4, x1, x2)

inst_84542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:253626*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253626*0 + 3*62*FLEN/8, x4, x1, x2)

inst_84543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:253629*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253629*0 + 3*63*FLEN/8, x4, x1, x2)

inst_84544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:253632*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253632*0 + 3*64*FLEN/8, x4, x1, x2)

inst_84545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:253635*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253635*0 + 3*65*FLEN/8, x4, x1, x2)

inst_84546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:253638*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253638*0 + 3*66*FLEN/8, x4, x1, x2)

inst_84547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:253641*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253641*0 + 3*67*FLEN/8, x4, x1, x2)

inst_84548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:253644*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253644*0 + 3*68*FLEN/8, x4, x1, x2)

inst_84549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:253647*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253647*0 + 3*69*FLEN/8, x4, x1, x2)

inst_84550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000000000; valaddr_reg:x3; val_offset:253650*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253650*0 + 3*70*FLEN/8, x4, x1, x2)

inst_84551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000000001; valaddr_reg:x3; val_offset:253653*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253653*0 + 3*71*FLEN/8, x4, x1, x2)

inst_84552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000000003; valaddr_reg:x3; val_offset:253656*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253656*0 + 3*72*FLEN/8, x4, x1, x2)

inst_84553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000000007; valaddr_reg:x3; val_offset:253659*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253659*0 + 3*73*FLEN/8, x4, x1, x2)

inst_84554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000000000f; valaddr_reg:x3; val_offset:253662*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253662*0 + 3*74*FLEN/8, x4, x1, x2)

inst_84555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000000001f; valaddr_reg:x3; val_offset:253665*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253665*0 + 3*75*FLEN/8, x4, x1, x2)

inst_84556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000000003f; valaddr_reg:x3; val_offset:253668*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253668*0 + 3*76*FLEN/8, x4, x1, x2)

inst_84557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000000007f; valaddr_reg:x3; val_offset:253671*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253671*0 + 3*77*FLEN/8, x4, x1, x2)

inst_84558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000000000ff; valaddr_reg:x3; val_offset:253674*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253674*0 + 3*78*FLEN/8, x4, x1, x2)

inst_84559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000000001ff; valaddr_reg:x3; val_offset:253677*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253677*0 + 3*79*FLEN/8, x4, x1, x2)

inst_84560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000000003ff; valaddr_reg:x3; val_offset:253680*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253680*0 + 3*80*FLEN/8, x4, x1, x2)

inst_84561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000000007ff; valaddr_reg:x3; val_offset:253683*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253683*0 + 3*81*FLEN/8, x4, x1, x2)

inst_84562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000000fff; valaddr_reg:x3; val_offset:253686*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253686*0 + 3*82*FLEN/8, x4, x1, x2)

inst_84563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000001fff; valaddr_reg:x3; val_offset:253689*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253689*0 + 3*83*FLEN/8, x4, x1, x2)

inst_84564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000003fff; valaddr_reg:x3; val_offset:253692*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253692*0 + 3*84*FLEN/8, x4, x1, x2)

inst_84565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000007fff; valaddr_reg:x3; val_offset:253695*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253695*0 + 3*85*FLEN/8, x4, x1, x2)

inst_84566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000000ffff; valaddr_reg:x3; val_offset:253698*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253698*0 + 3*86*FLEN/8, x4, x1, x2)

inst_84567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000001ffff; valaddr_reg:x3; val_offset:253701*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253701*0 + 3*87*FLEN/8, x4, x1, x2)

inst_84568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000003ffff; valaddr_reg:x3; val_offset:253704*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253704*0 + 3*88*FLEN/8, x4, x1, x2)

inst_84569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000007ffff; valaddr_reg:x3; val_offset:253707*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253707*0 + 3*89*FLEN/8, x4, x1, x2)

inst_84570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000000fffff; valaddr_reg:x3; val_offset:253710*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253710*0 + 3*90*FLEN/8, x4, x1, x2)

inst_84571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000001fffff; valaddr_reg:x3; val_offset:253713*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253713*0 + 3*91*FLEN/8, x4, x1, x2)

inst_84572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000003fffff; valaddr_reg:x3; val_offset:253716*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253716*0 + 3*92*FLEN/8, x4, x1, x2)

inst_84573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000007fffff; valaddr_reg:x3; val_offset:253719*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253719*0 + 3*93*FLEN/8, x4, x1, x2)

inst_84574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000000ffffff; valaddr_reg:x3; val_offset:253722*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253722*0 + 3*94*FLEN/8, x4, x1, x2)

inst_84575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000001ffffff; valaddr_reg:x3; val_offset:253725*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253725*0 + 3*95*FLEN/8, x4, x1, x2)

inst_84576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000003ffffff; valaddr_reg:x3; val_offset:253728*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253728*0 + 3*96*FLEN/8, x4, x1, x2)

inst_84577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000007ffffff; valaddr_reg:x3; val_offset:253731*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253731*0 + 3*97*FLEN/8, x4, x1, x2)

inst_84578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000000fffffff; valaddr_reg:x3; val_offset:253734*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253734*0 + 3*98*FLEN/8, x4, x1, x2)

inst_84579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000001fffffff; valaddr_reg:x3; val_offset:253737*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253737*0 + 3*99*FLEN/8, x4, x1, x2)

inst_84580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000003fffffff; valaddr_reg:x3; val_offset:253740*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253740*0 + 3*100*FLEN/8, x4, x1, x2)

inst_84581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000007fffffff; valaddr_reg:x3; val_offset:253743*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253743*0 + 3*101*FLEN/8, x4, x1, x2)

inst_84582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00000ffffffff; valaddr_reg:x3; val_offset:253746*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253746*0 + 3*102*FLEN/8, x4, x1, x2)

inst_84583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00001ffffffff; valaddr_reg:x3; val_offset:253749*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253749*0 + 3*103*FLEN/8, x4, x1, x2)

inst_84584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00003ffffffff; valaddr_reg:x3; val_offset:253752*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253752*0 + 3*104*FLEN/8, x4, x1, x2)

inst_84585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00007ffffffff; valaddr_reg:x3; val_offset:253755*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253755*0 + 3*105*FLEN/8, x4, x1, x2)

inst_84586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0000fffffffff; valaddr_reg:x3; val_offset:253758*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253758*0 + 3*106*FLEN/8, x4, x1, x2)

inst_84587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0001fffffffff; valaddr_reg:x3; val_offset:253761*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253761*0 + 3*107*FLEN/8, x4, x1, x2)

inst_84588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0003fffffffff; valaddr_reg:x3; val_offset:253764*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253764*0 + 3*108*FLEN/8, x4, x1, x2)

inst_84589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0007fffffffff; valaddr_reg:x3; val_offset:253767*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253767*0 + 3*109*FLEN/8, x4, x1, x2)

inst_84590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e000ffffffffff; valaddr_reg:x3; val_offset:253770*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253770*0 + 3*110*FLEN/8, x4, x1, x2)

inst_84591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e001ffffffffff; valaddr_reg:x3; val_offset:253773*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253773*0 + 3*111*FLEN/8, x4, x1, x2)

inst_84592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e003ffffffffff; valaddr_reg:x3; val_offset:253776*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253776*0 + 3*112*FLEN/8, x4, x1, x2)

inst_84593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e007ffffffffff; valaddr_reg:x3; val_offset:253779*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253779*0 + 3*113*FLEN/8, x4, x1, x2)

inst_84594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e00fffffffffff; valaddr_reg:x3; val_offset:253782*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253782*0 + 3*114*FLEN/8, x4, x1, x2)

inst_84595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e01fffffffffff; valaddr_reg:x3; val_offset:253785*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253785*0 + 3*115*FLEN/8, x4, x1, x2)

inst_84596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e03fffffffffff; valaddr_reg:x3; val_offset:253788*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253788*0 + 3*116*FLEN/8, x4, x1, x2)

inst_84597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e07fffffffffff; valaddr_reg:x3; val_offset:253791*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253791*0 + 3*117*FLEN/8, x4, x1, x2)

inst_84598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e0ffffffffffff; valaddr_reg:x3; val_offset:253794*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253794*0 + 3*118*FLEN/8, x4, x1, x2)

inst_84599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e1ffffffffffff; valaddr_reg:x3; val_offset:253797*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253797*0 + 3*119*FLEN/8, x4, x1, x2)

inst_84600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e3ffffffffffff; valaddr_reg:x3; val_offset:253800*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253800*0 + 3*120*FLEN/8, x4, x1, x2)

inst_84601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e7ffffffffffff; valaddr_reg:x3; val_offset:253803*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253803*0 + 3*121*FLEN/8, x4, x1, x2)

inst_84602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80e8000000000000; valaddr_reg:x3; val_offset:253806*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253806*0 + 3*122*FLEN/8, x4, x1, x2)

inst_84603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80ec000000000000; valaddr_reg:x3; val_offset:253809*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253809*0 + 3*123*FLEN/8, x4, x1, x2)

inst_84604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80ee000000000000; valaddr_reg:x3; val_offset:253812*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253812*0 + 3*124*FLEN/8, x4, x1, x2)

inst_84605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80ef000000000000; valaddr_reg:x3; val_offset:253815*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253815*0 + 3*125*FLEN/8, x4, x1, x2)

inst_84606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80ef800000000000; valaddr_reg:x3; val_offset:253818*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253818*0 + 3*126*FLEN/8, x4, x1, x2)

inst_84607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efc00000000000; valaddr_reg:x3; val_offset:253821*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253821*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_84608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efe00000000000; valaddr_reg:x3; val_offset:253824*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253824*0 + 3*128*FLEN/8, x4, x1, x2)

inst_84609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80eff00000000000; valaddr_reg:x3; val_offset:253827*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253827*0 + 3*129*FLEN/8, x4, x1, x2)

inst_84610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80eff80000000000; valaddr_reg:x3; val_offset:253830*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253830*0 + 3*130*FLEN/8, x4, x1, x2)

inst_84611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effc0000000000; valaddr_reg:x3; val_offset:253833*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253833*0 + 3*131*FLEN/8, x4, x1, x2)

inst_84612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effe0000000000; valaddr_reg:x3; val_offset:253836*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253836*0 + 3*132*FLEN/8, x4, x1, x2)

inst_84613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efff0000000000; valaddr_reg:x3; val_offset:253839*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253839*0 + 3*133*FLEN/8, x4, x1, x2)

inst_84614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efff8000000000; valaddr_reg:x3; val_offset:253842*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253842*0 + 3*134*FLEN/8, x4, x1, x2)

inst_84615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffc000000000; valaddr_reg:x3; val_offset:253845*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253845*0 + 3*135*FLEN/8, x4, x1, x2)

inst_84616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffe000000000; valaddr_reg:x3; val_offset:253848*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253848*0 + 3*136*FLEN/8, x4, x1, x2)

inst_84617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effff000000000; valaddr_reg:x3; val_offset:253851*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253851*0 + 3*137*FLEN/8, x4, x1, x2)

inst_84618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effff800000000; valaddr_reg:x3; val_offset:253854*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253854*0 + 3*138*FLEN/8, x4, x1, x2)

inst_84619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffc00000000; valaddr_reg:x3; val_offset:253857*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253857*0 + 3*139*FLEN/8, x4, x1, x2)

inst_84620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffe00000000; valaddr_reg:x3; val_offset:253860*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253860*0 + 3*140*FLEN/8, x4, x1, x2)

inst_84621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffff00000000; valaddr_reg:x3; val_offset:253863*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253863*0 + 3*141*FLEN/8, x4, x1, x2)

inst_84622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffff80000000; valaddr_reg:x3; val_offset:253866*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253866*0 + 3*142*FLEN/8, x4, x1, x2)

inst_84623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffc0000000; valaddr_reg:x3; val_offset:253869*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253869*0 + 3*143*FLEN/8, x4, x1, x2)

inst_84624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffe0000000; valaddr_reg:x3; val_offset:253872*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253872*0 + 3*144*FLEN/8, x4, x1, x2)

inst_84625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffff0000000; valaddr_reg:x3; val_offset:253875*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253875*0 + 3*145*FLEN/8, x4, x1, x2)

inst_84626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffff8000000; valaddr_reg:x3; val_offset:253878*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253878*0 + 3*146*FLEN/8, x4, x1, x2)

inst_84627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffc000000; valaddr_reg:x3; val_offset:253881*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253881*0 + 3*147*FLEN/8, x4, x1, x2)

inst_84628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffe000000; valaddr_reg:x3; val_offset:253884*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253884*0 + 3*148*FLEN/8, x4, x1, x2)

inst_84629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffff000000; valaddr_reg:x3; val_offset:253887*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253887*0 + 3*149*FLEN/8, x4, x1, x2)

inst_84630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:253890*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253890*0 + 3*150*FLEN/8, x4, x1, x2)

inst_84631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:253893*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253893*0 + 3*151*FLEN/8, x4, x1, x2)

inst_84632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:253896*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253896*0 + 3*152*FLEN/8, x4, x1, x2)

inst_84633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:253899*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253899*0 + 3*153*FLEN/8, x4, x1, x2)

inst_84634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:253902*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253902*0 + 3*154*FLEN/8, x4, x1, x2)

inst_84635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:253905*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253905*0 + 3*155*FLEN/8, x4, x1, x2)

inst_84636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:253908*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253908*0 + 3*156*FLEN/8, x4, x1, x2)

inst_84637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:253911*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253911*0 + 3*157*FLEN/8, x4, x1, x2)

inst_84638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:253914*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253914*0 + 3*158*FLEN/8, x4, x1, x2)

inst_84639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:253917*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253917*0 + 3*159*FLEN/8, x4, x1, x2)

inst_84640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:253920*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253920*0 + 3*160*FLEN/8, x4, x1, x2)

inst_84641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:253923*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253923*0 + 3*161*FLEN/8, x4, x1, x2)

inst_84642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:253926*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253926*0 + 3*162*FLEN/8, x4, x1, x2)

inst_84643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:253929*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253929*0 + 3*163*FLEN/8, x4, x1, x2)

inst_84644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:253932*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253932*0 + 3*164*FLEN/8, x4, x1, x2)

inst_84645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:253935*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253935*0 + 3*165*FLEN/8, x4, x1, x2)

inst_84646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:253938*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253938*0 + 3*166*FLEN/8, x4, x1, x2)

inst_84647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:253941*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253941*0 + 3*167*FLEN/8, x4, x1, x2)

inst_84648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:253944*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253944*0 + 3*168*FLEN/8, x4, x1, x2)

inst_84649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:253947*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253947*0 + 3*169*FLEN/8, x4, x1, x2)

inst_84650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:253950*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253950*0 + 3*170*FLEN/8, x4, x1, x2)

inst_84651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:253953*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253953*0 + 3*171*FLEN/8, x4, x1, x2)

inst_84652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:253956*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253956*0 + 3*172*FLEN/8, x4, x1, x2)

inst_84653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa14f7a0c3ff12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa14f7a0c3ff12; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:253959*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253959*0 + 3*173*FLEN/8, x4, x1, x2)

inst_84654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000000000; valaddr_reg:x3; val_offset:253962*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253962*0 + 3*174*FLEN/8, x4, x1, x2)

inst_84655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000000001; valaddr_reg:x3; val_offset:253965*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253965*0 + 3*175*FLEN/8, x4, x1, x2)

inst_84656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000000003; valaddr_reg:x3; val_offset:253968*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253968*0 + 3*176*FLEN/8, x4, x1, x2)

inst_84657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000000007; valaddr_reg:x3; val_offset:253971*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253971*0 + 3*177*FLEN/8, x4, x1, x2)

inst_84658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000000000f; valaddr_reg:x3; val_offset:253974*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253974*0 + 3*178*FLEN/8, x4, x1, x2)

inst_84659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000000001f; valaddr_reg:x3; val_offset:253977*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253977*0 + 3*179*FLEN/8, x4, x1, x2)

inst_84660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000000003f; valaddr_reg:x3; val_offset:253980*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253980*0 + 3*180*FLEN/8, x4, x1, x2)

inst_84661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000000007f; valaddr_reg:x3; val_offset:253983*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253983*0 + 3*181*FLEN/8, x4, x1, x2)

inst_84662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000000000ff; valaddr_reg:x3; val_offset:253986*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253986*0 + 3*182*FLEN/8, x4, x1, x2)

inst_84663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000000001ff; valaddr_reg:x3; val_offset:253989*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253989*0 + 3*183*FLEN/8, x4, x1, x2)

inst_84664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000000003ff; valaddr_reg:x3; val_offset:253992*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253992*0 + 3*184*FLEN/8, x4, x1, x2)

inst_84665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000000007ff; valaddr_reg:x3; val_offset:253995*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253995*0 + 3*185*FLEN/8, x4, x1, x2)

inst_84666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000000fff; valaddr_reg:x3; val_offset:253998*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253998*0 + 3*186*FLEN/8, x4, x1, x2)

inst_84667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000001fff; valaddr_reg:x3; val_offset:254001*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254001*0 + 3*187*FLEN/8, x4, x1, x2)

inst_84668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000003fff; valaddr_reg:x3; val_offset:254004*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254004*0 + 3*188*FLEN/8, x4, x1, x2)

inst_84669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000007fff; valaddr_reg:x3; val_offset:254007*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254007*0 + 3*189*FLEN/8, x4, x1, x2)

inst_84670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000000ffff; valaddr_reg:x3; val_offset:254010*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254010*0 + 3*190*FLEN/8, x4, x1, x2)

inst_84671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000001ffff; valaddr_reg:x3; val_offset:254013*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254013*0 + 3*191*FLEN/8, x4, x1, x2)

inst_84672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000003ffff; valaddr_reg:x3; val_offset:254016*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254016*0 + 3*192*FLEN/8, x4, x1, x2)

inst_84673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000007ffff; valaddr_reg:x3; val_offset:254019*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254019*0 + 3*193*FLEN/8, x4, x1, x2)

inst_84674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000000fffff; valaddr_reg:x3; val_offset:254022*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254022*0 + 3*194*FLEN/8, x4, x1, x2)

inst_84675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000001fffff; valaddr_reg:x3; val_offset:254025*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254025*0 + 3*195*FLEN/8, x4, x1, x2)

inst_84676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000003fffff; valaddr_reg:x3; val_offset:254028*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254028*0 + 3*196*FLEN/8, x4, x1, x2)

inst_84677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000007fffff; valaddr_reg:x3; val_offset:254031*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254031*0 + 3*197*FLEN/8, x4, x1, x2)

inst_84678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000000ffffff; valaddr_reg:x3; val_offset:254034*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254034*0 + 3*198*FLEN/8, x4, x1, x2)

inst_84679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000001ffffff; valaddr_reg:x3; val_offset:254037*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254037*0 + 3*199*FLEN/8, x4, x1, x2)

inst_84680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000003ffffff; valaddr_reg:x3; val_offset:254040*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254040*0 + 3*200*FLEN/8, x4, x1, x2)

inst_84681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000007ffffff; valaddr_reg:x3; val_offset:254043*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254043*0 + 3*201*FLEN/8, x4, x1, x2)

inst_84682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000000fffffff; valaddr_reg:x3; val_offset:254046*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254046*0 + 3*202*FLEN/8, x4, x1, x2)

inst_84683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000001fffffff; valaddr_reg:x3; val_offset:254049*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254049*0 + 3*203*FLEN/8, x4, x1, x2)

inst_84684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000003fffffff; valaddr_reg:x3; val_offset:254052*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254052*0 + 3*204*FLEN/8, x4, x1, x2)

inst_84685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000007fffffff; valaddr_reg:x3; val_offset:254055*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254055*0 + 3*205*FLEN/8, x4, x1, x2)

inst_84686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200000ffffffff; valaddr_reg:x3; val_offset:254058*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254058*0 + 3*206*FLEN/8, x4, x1, x2)

inst_84687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200001ffffffff; valaddr_reg:x3; val_offset:254061*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254061*0 + 3*207*FLEN/8, x4, x1, x2)

inst_84688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200003ffffffff; valaddr_reg:x3; val_offset:254064*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254064*0 + 3*208*FLEN/8, x4, x1, x2)

inst_84689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200007ffffffff; valaddr_reg:x3; val_offset:254067*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254067*0 + 3*209*FLEN/8, x4, x1, x2)

inst_84690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20000fffffffff; valaddr_reg:x3; val_offset:254070*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254070*0 + 3*210*FLEN/8, x4, x1, x2)

inst_84691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20001fffffffff; valaddr_reg:x3; val_offset:254073*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254073*0 + 3*211*FLEN/8, x4, x1, x2)

inst_84692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20003fffffffff; valaddr_reg:x3; val_offset:254076*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254076*0 + 3*212*FLEN/8, x4, x1, x2)

inst_84693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20007fffffffff; valaddr_reg:x3; val_offset:254079*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254079*0 + 3*213*FLEN/8, x4, x1, x2)

inst_84694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2000ffffffffff; valaddr_reg:x3; val_offset:254082*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254082*0 + 3*214*FLEN/8, x4, x1, x2)

inst_84695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2001ffffffffff; valaddr_reg:x3; val_offset:254085*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254085*0 + 3*215*FLEN/8, x4, x1, x2)

inst_84696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2003ffffffffff; valaddr_reg:x3; val_offset:254088*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254088*0 + 3*216*FLEN/8, x4, x1, x2)

inst_84697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2007ffffffffff; valaddr_reg:x3; val_offset:254091*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254091*0 + 3*217*FLEN/8, x4, x1, x2)

inst_84698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb200fffffffffff; valaddr_reg:x3; val_offset:254094*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254094*0 + 3*218*FLEN/8, x4, x1, x2)

inst_84699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb201fffffffffff; valaddr_reg:x3; val_offset:254097*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254097*0 + 3*219*FLEN/8, x4, x1, x2)

inst_84700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb203fffffffffff; valaddr_reg:x3; val_offset:254100*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254100*0 + 3*220*FLEN/8, x4, x1, x2)

inst_84701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb207fffffffffff; valaddr_reg:x3; val_offset:254103*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254103*0 + 3*221*FLEN/8, x4, x1, x2)

inst_84702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb20ffffffffffff; valaddr_reg:x3; val_offset:254106*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254106*0 + 3*222*FLEN/8, x4, x1, x2)

inst_84703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb21ffffffffffff; valaddr_reg:x3; val_offset:254109*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254109*0 + 3*223*FLEN/8, x4, x1, x2)

inst_84704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb23ffffffffffff; valaddr_reg:x3; val_offset:254112*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254112*0 + 3*224*FLEN/8, x4, x1, x2)

inst_84705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb27ffffffffffff; valaddr_reg:x3; val_offset:254115*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254115*0 + 3*225*FLEN/8, x4, x1, x2)

inst_84706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb28000000000000; valaddr_reg:x3; val_offset:254118*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254118*0 + 3*226*FLEN/8, x4, x1, x2)

inst_84707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2c000000000000; valaddr_reg:x3; val_offset:254121*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254121*0 + 3*227*FLEN/8, x4, x1, x2)

inst_84708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2e000000000000; valaddr_reg:x3; val_offset:254124*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254124*0 + 3*228*FLEN/8, x4, x1, x2)

inst_84709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2f000000000000; valaddr_reg:x3; val_offset:254127*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254127*0 + 3*229*FLEN/8, x4, x1, x2)

inst_84710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2f800000000000; valaddr_reg:x3; val_offset:254130*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254130*0 + 3*230*FLEN/8, x4, x1, x2)

inst_84711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fc00000000000; valaddr_reg:x3; val_offset:254133*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254133*0 + 3*231*FLEN/8, x4, x1, x2)

inst_84712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fe00000000000; valaddr_reg:x3; val_offset:254136*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254136*0 + 3*232*FLEN/8, x4, x1, x2)

inst_84713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ff00000000000; valaddr_reg:x3; val_offset:254139*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254139*0 + 3*233*FLEN/8, x4, x1, x2)

inst_84714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ff80000000000; valaddr_reg:x3; val_offset:254142*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254142*0 + 3*234*FLEN/8, x4, x1, x2)

inst_84715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffc0000000000; valaddr_reg:x3; val_offset:254145*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254145*0 + 3*235*FLEN/8, x4, x1, x2)

inst_84716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffe0000000000; valaddr_reg:x3; val_offset:254148*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254148*0 + 3*236*FLEN/8, x4, x1, x2)

inst_84717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fff0000000000; valaddr_reg:x3; val_offset:254151*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254151*0 + 3*237*FLEN/8, x4, x1, x2)

inst_84718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fff8000000000; valaddr_reg:x3; val_offset:254154*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254154*0 + 3*238*FLEN/8, x4, x1, x2)

inst_84719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffc000000000; valaddr_reg:x3; val_offset:254157*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254157*0 + 3*239*FLEN/8, x4, x1, x2)

inst_84720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffe000000000; valaddr_reg:x3; val_offset:254160*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254160*0 + 3*240*FLEN/8, x4, x1, x2)

inst_84721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffff000000000; valaddr_reg:x3; val_offset:254163*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254163*0 + 3*241*FLEN/8, x4, x1, x2)

inst_84722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffff800000000; valaddr_reg:x3; val_offset:254166*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254166*0 + 3*242*FLEN/8, x4, x1, x2)

inst_84723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffc00000000; valaddr_reg:x3; val_offset:254169*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254169*0 + 3*243*FLEN/8, x4, x1, x2)

inst_84724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffe00000000; valaddr_reg:x3; val_offset:254172*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254172*0 + 3*244*FLEN/8, x4, x1, x2)

inst_84725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffff00000000; valaddr_reg:x3; val_offset:254175*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254175*0 + 3*245*FLEN/8, x4, x1, x2)

inst_84726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffff80000000; valaddr_reg:x3; val_offset:254178*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254178*0 + 3*246*FLEN/8, x4, x1, x2)

inst_84727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffc0000000; valaddr_reg:x3; val_offset:254181*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254181*0 + 3*247*FLEN/8, x4, x1, x2)

inst_84728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffe0000000; valaddr_reg:x3; val_offset:254184*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254184*0 + 3*248*FLEN/8, x4, x1, x2)

inst_84729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffff0000000; valaddr_reg:x3; val_offset:254187*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254187*0 + 3*249*FLEN/8, x4, x1, x2)

inst_84730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffff8000000; valaddr_reg:x3; val_offset:254190*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254190*0 + 3*250*FLEN/8, x4, x1, x2)

inst_84731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffc000000; valaddr_reg:x3; val_offset:254193*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254193*0 + 3*251*FLEN/8, x4, x1, x2)

inst_84732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffe000000; valaddr_reg:x3; val_offset:254196*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254196*0 + 3*252*FLEN/8, x4, x1, x2)

inst_84733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffff000000; valaddr_reg:x3; val_offset:254199*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254199*0 + 3*253*FLEN/8, x4, x1, x2)

inst_84734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffff800000; valaddr_reg:x3; val_offset:254202*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254202*0 + 3*254*FLEN/8, x4, x1, x2)

inst_84735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffc00000; valaddr_reg:x3; val_offset:254205*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254205*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_84736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffe00000; valaddr_reg:x3; val_offset:254208*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254208*0 + 3*256*FLEN/8, x4, x1, x2)

inst_84737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffff00000; valaddr_reg:x3; val_offset:254211*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254211*0 + 3*257*FLEN/8, x4, x1, x2)

inst_84738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffff80000; valaddr_reg:x3; val_offset:254214*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254214*0 + 3*258*FLEN/8, x4, x1, x2)

inst_84739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffc0000; valaddr_reg:x3; val_offset:254217*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254217*0 + 3*259*FLEN/8, x4, x1, x2)

inst_84740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffe0000; valaddr_reg:x3; val_offset:254220*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254220*0 + 3*260*FLEN/8, x4, x1, x2)

inst_84741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffff0000; valaddr_reg:x3; val_offset:254223*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254223*0 + 3*261*FLEN/8, x4, x1, x2)

inst_84742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffff8000; valaddr_reg:x3; val_offset:254226*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254226*0 + 3*262*FLEN/8, x4, x1, x2)

inst_84743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffc000; valaddr_reg:x3; val_offset:254229*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254229*0 + 3*263*FLEN/8, x4, x1, x2)

inst_84744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffe000; valaddr_reg:x3; val_offset:254232*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254232*0 + 3*264*FLEN/8, x4, x1, x2)

inst_84745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffff000; valaddr_reg:x3; val_offset:254235*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254235*0 + 3*265*FLEN/8, x4, x1, x2)

inst_84746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffff800; valaddr_reg:x3; val_offset:254238*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254238*0 + 3*266*FLEN/8, x4, x1, x2)

inst_84747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffc00; valaddr_reg:x3; val_offset:254241*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254241*0 + 3*267*FLEN/8, x4, x1, x2)

inst_84748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffe00; valaddr_reg:x3; val_offset:254244*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254244*0 + 3*268*FLEN/8, x4, x1, x2)

inst_84749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffff00; valaddr_reg:x3; val_offset:254247*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254247*0 + 3*269*FLEN/8, x4, x1, x2)

inst_84750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffff80; valaddr_reg:x3; val_offset:254250*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254250*0 + 3*270*FLEN/8, x4, x1, x2)

inst_84751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffffc0; valaddr_reg:x3; val_offset:254253*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254253*0 + 3*271*FLEN/8, x4, x1, x2)

inst_84752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffffe0; valaddr_reg:x3; val_offset:254256*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254256*0 + 3*272*FLEN/8, x4, x1, x2)

inst_84753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffff0; valaddr_reg:x3; val_offset:254259*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254259*0 + 3*273*FLEN/8, x4, x1, x2)

inst_84754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffff8; valaddr_reg:x3; val_offset:254262*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254262*0 + 3*274*FLEN/8, x4, x1, x2)

inst_84755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffffc; valaddr_reg:x3; val_offset:254265*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254265*0 + 3*275*FLEN/8, x4, x1, x2)

inst_84756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2ffffffffffffe; valaddr_reg:x3; val_offset:254268*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254268*0 + 3*276*FLEN/8, x4, x1, x2)

inst_84757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3b2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbb2fffffffffffff; valaddr_reg:x3; val_offset:254271*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254271*0 + 3*277*FLEN/8, x4, x1, x2)

inst_84758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:254274*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254274*0 + 3*278*FLEN/8, x4, x1, x2)

inst_84759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:254277*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254277*0 + 3*279*FLEN/8, x4, x1, x2)

inst_84760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:254280*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254280*0 + 3*280*FLEN/8, x4, x1, x2)

inst_84761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:254283*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254283*0 + 3*281*FLEN/8, x4, x1, x2)

inst_84762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:254286*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254286*0 + 3*282*FLEN/8, x4, x1, x2)

inst_84763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:254289*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254289*0 + 3*283*FLEN/8, x4, x1, x2)

inst_84764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:254292*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254292*0 + 3*284*FLEN/8, x4, x1, x2)

inst_84765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:254295*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254295*0 + 3*285*FLEN/8, x4, x1, x2)

inst_84766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:254298*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254298*0 + 3*286*FLEN/8, x4, x1, x2)

inst_84767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:254301*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254301*0 + 3*287*FLEN/8, x4, x1, x2)

inst_84768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:254304*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254304*0 + 3*288*FLEN/8, x4, x1, x2)

inst_84769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:254307*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254307*0 + 3*289*FLEN/8, x4, x1, x2)

inst_84770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:254310*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254310*0 + 3*290*FLEN/8, x4, x1, x2)

inst_84771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:254313*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254313*0 + 3*291*FLEN/8, x4, x1, x2)

inst_84772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:254316*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254316*0 + 3*292*FLEN/8, x4, x1, x2)

inst_84773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:254319*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254319*0 + 3*293*FLEN/8, x4, x1, x2)

inst_84774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:254322*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254322*0 + 3*294*FLEN/8, x4, x1, x2)

inst_84775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:254325*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254325*0 + 3*295*FLEN/8, x4, x1, x2)

inst_84776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:254328*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254328*0 + 3*296*FLEN/8, x4, x1, x2)

inst_84777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:254331*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254331*0 + 3*297*FLEN/8, x4, x1, x2)

inst_84778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:254334*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254334*0 + 3*298*FLEN/8, x4, x1, x2)

inst_84779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1991aa3b1bd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39df062af3967 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1991aa3b1bd2; op2val:0x9fc39df062af3967;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:254337*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254337*0 + 3*299*FLEN/8, x4, x1, x2)

inst_84780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000000000; valaddr_reg:x3; val_offset:254340*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254340*0 + 3*300*FLEN/8, x4, x1, x2)

inst_84781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000000001; valaddr_reg:x3; val_offset:254343*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254343*0 + 3*301*FLEN/8, x4, x1, x2)

inst_84782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000000003; valaddr_reg:x3; val_offset:254346*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254346*0 + 3*302*FLEN/8, x4, x1, x2)

inst_84783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000000007; valaddr_reg:x3; val_offset:254349*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254349*0 + 3*303*FLEN/8, x4, x1, x2)

inst_84784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000000000f; valaddr_reg:x3; val_offset:254352*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254352*0 + 3*304*FLEN/8, x4, x1, x2)

inst_84785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000000001f; valaddr_reg:x3; val_offset:254355*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254355*0 + 3*305*FLEN/8, x4, x1, x2)

inst_84786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000000003f; valaddr_reg:x3; val_offset:254358*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254358*0 + 3*306*FLEN/8, x4, x1, x2)

inst_84787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000000007f; valaddr_reg:x3; val_offset:254361*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254361*0 + 3*307*FLEN/8, x4, x1, x2)

inst_84788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000000000ff; valaddr_reg:x3; val_offset:254364*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254364*0 + 3*308*FLEN/8, x4, x1, x2)

inst_84789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000000001ff; valaddr_reg:x3; val_offset:254367*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254367*0 + 3*309*FLEN/8, x4, x1, x2)

inst_84790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000000003ff; valaddr_reg:x3; val_offset:254370*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254370*0 + 3*310*FLEN/8, x4, x1, x2)

inst_84791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000000007ff; valaddr_reg:x3; val_offset:254373*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254373*0 + 3*311*FLEN/8, x4, x1, x2)

inst_84792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000000fff; valaddr_reg:x3; val_offset:254376*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254376*0 + 3*312*FLEN/8, x4, x1, x2)

inst_84793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000001fff; valaddr_reg:x3; val_offset:254379*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254379*0 + 3*313*FLEN/8, x4, x1, x2)

inst_84794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000003fff; valaddr_reg:x3; val_offset:254382*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254382*0 + 3*314*FLEN/8, x4, x1, x2)

inst_84795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000007fff; valaddr_reg:x3; val_offset:254385*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254385*0 + 3*315*FLEN/8, x4, x1, x2)

inst_84796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000000ffff; valaddr_reg:x3; val_offset:254388*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254388*0 + 3*316*FLEN/8, x4, x1, x2)

inst_84797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000001ffff; valaddr_reg:x3; val_offset:254391*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254391*0 + 3*317*FLEN/8, x4, x1, x2)

inst_84798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000003ffff; valaddr_reg:x3; val_offset:254394*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254394*0 + 3*318*FLEN/8, x4, x1, x2)

inst_84799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000007ffff; valaddr_reg:x3; val_offset:254397*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254397*0 + 3*319*FLEN/8, x4, x1, x2)

inst_84800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000000fffff; valaddr_reg:x3; val_offset:254400*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254400*0 + 3*320*FLEN/8, x4, x1, x2)

inst_84801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000001fffff; valaddr_reg:x3; val_offset:254403*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254403*0 + 3*321*FLEN/8, x4, x1, x2)

inst_84802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000003fffff; valaddr_reg:x3; val_offset:254406*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254406*0 + 3*322*FLEN/8, x4, x1, x2)

inst_84803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000007fffff; valaddr_reg:x3; val_offset:254409*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254409*0 + 3*323*FLEN/8, x4, x1, x2)

inst_84804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000000ffffff; valaddr_reg:x3; val_offset:254412*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254412*0 + 3*324*FLEN/8, x4, x1, x2)

inst_84805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000001ffffff; valaddr_reg:x3; val_offset:254415*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254415*0 + 3*325*FLEN/8, x4, x1, x2)

inst_84806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000003ffffff; valaddr_reg:x3; val_offset:254418*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254418*0 + 3*326*FLEN/8, x4, x1, x2)

inst_84807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000007ffffff; valaddr_reg:x3; val_offset:254421*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254421*0 + 3*327*FLEN/8, x4, x1, x2)

inst_84808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000000fffffff; valaddr_reg:x3; val_offset:254424*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254424*0 + 3*328*FLEN/8, x4, x1, x2)

inst_84809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000001fffffff; valaddr_reg:x3; val_offset:254427*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254427*0 + 3*329*FLEN/8, x4, x1, x2)

inst_84810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000003fffffff; valaddr_reg:x3; val_offset:254430*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254430*0 + 3*330*FLEN/8, x4, x1, x2)

inst_84811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000007fffffff; valaddr_reg:x3; val_offset:254433*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254433*0 + 3*331*FLEN/8, x4, x1, x2)

inst_84812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00000ffffffff; valaddr_reg:x3; val_offset:254436*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254436*0 + 3*332*FLEN/8, x4, x1, x2)

inst_84813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00001ffffffff; valaddr_reg:x3; val_offset:254439*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254439*0 + 3*333*FLEN/8, x4, x1, x2)

inst_84814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00003ffffffff; valaddr_reg:x3; val_offset:254442*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254442*0 + 3*334*FLEN/8, x4, x1, x2)

inst_84815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00007ffffffff; valaddr_reg:x3; val_offset:254445*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254445*0 + 3*335*FLEN/8, x4, x1, x2)

inst_84816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0000fffffffff; valaddr_reg:x3; val_offset:254448*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254448*0 + 3*336*FLEN/8, x4, x1, x2)

inst_84817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0001fffffffff; valaddr_reg:x3; val_offset:254451*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254451*0 + 3*337*FLEN/8, x4, x1, x2)

inst_84818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0003fffffffff; valaddr_reg:x3; val_offset:254454*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254454*0 + 3*338*FLEN/8, x4, x1, x2)

inst_84819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0007fffffffff; valaddr_reg:x3; val_offset:254457*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254457*0 + 3*339*FLEN/8, x4, x1, x2)

inst_84820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa000ffffffffff; valaddr_reg:x3; val_offset:254460*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254460*0 + 3*340*FLEN/8, x4, x1, x2)

inst_84821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa001ffffffffff; valaddr_reg:x3; val_offset:254463*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254463*0 + 3*341*FLEN/8, x4, x1, x2)

inst_84822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa003ffffffffff; valaddr_reg:x3; val_offset:254466*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254466*0 + 3*342*FLEN/8, x4, x1, x2)

inst_84823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa007ffffffffff; valaddr_reg:x3; val_offset:254469*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254469*0 + 3*343*FLEN/8, x4, x1, x2)

inst_84824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa00fffffffffff; valaddr_reg:x3; val_offset:254472*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254472*0 + 3*344*FLEN/8, x4, x1, x2)

inst_84825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa01fffffffffff; valaddr_reg:x3; val_offset:254475*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254475*0 + 3*345*FLEN/8, x4, x1, x2)

inst_84826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa03fffffffffff; valaddr_reg:x3; val_offset:254478*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254478*0 + 3*346*FLEN/8, x4, x1, x2)

inst_84827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa07fffffffffff; valaddr_reg:x3; val_offset:254481*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254481*0 + 3*347*FLEN/8, x4, x1, x2)

inst_84828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa0ffffffffffff; valaddr_reg:x3; val_offset:254484*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254484*0 + 3*348*FLEN/8, x4, x1, x2)

inst_84829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa1ffffffffffff; valaddr_reg:x3; val_offset:254487*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254487*0 + 3*349*FLEN/8, x4, x1, x2)

inst_84830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa3ffffffffffff; valaddr_reg:x3; val_offset:254490*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254490*0 + 3*350*FLEN/8, x4, x1, x2)

inst_84831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa7ffffffffffff; valaddr_reg:x3; val_offset:254493*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254493*0 + 3*351*FLEN/8, x4, x1, x2)

inst_84832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaa8000000000000; valaddr_reg:x3; val_offset:254496*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254496*0 + 3*352*FLEN/8, x4, x1, x2)

inst_84833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaac000000000000; valaddr_reg:x3; val_offset:254499*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254499*0 + 3*353*FLEN/8, x4, x1, x2)

inst_84834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaae000000000000; valaddr_reg:x3; val_offset:254502*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254502*0 + 3*354*FLEN/8, x4, x1, x2)

inst_84835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaf000000000000; valaddr_reg:x3; val_offset:254505*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254505*0 + 3*355*FLEN/8, x4, x1, x2)

inst_84836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaf800000000000; valaddr_reg:x3; val_offset:254508*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254508*0 + 3*356*FLEN/8, x4, x1, x2)

inst_84837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafc00000000000; valaddr_reg:x3; val_offset:254511*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254511*0 + 3*357*FLEN/8, x4, x1, x2)

inst_84838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafe00000000000; valaddr_reg:x3; val_offset:254514*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254514*0 + 3*358*FLEN/8, x4, x1, x2)

inst_84839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaff00000000000; valaddr_reg:x3; val_offset:254517*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254517*0 + 3*359*FLEN/8, x4, x1, x2)

inst_84840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaff80000000000; valaddr_reg:x3; val_offset:254520*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254520*0 + 3*360*FLEN/8, x4, x1, x2)

inst_84841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffc0000000000; valaddr_reg:x3; val_offset:254523*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254523*0 + 3*361*FLEN/8, x4, x1, x2)

inst_84842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffe0000000000; valaddr_reg:x3; val_offset:254526*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254526*0 + 3*362*FLEN/8, x4, x1, x2)

inst_84843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafff0000000000; valaddr_reg:x3; val_offset:254529*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254529*0 + 3*363*FLEN/8, x4, x1, x2)

inst_84844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafff8000000000; valaddr_reg:x3; val_offset:254532*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254532*0 + 3*364*FLEN/8, x4, x1, x2)

inst_84845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffc000000000; valaddr_reg:x3; val_offset:254535*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254535*0 + 3*365*FLEN/8, x4, x1, x2)

inst_84846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffe000000000; valaddr_reg:x3; val_offset:254538*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254538*0 + 3*366*FLEN/8, x4, x1, x2)

inst_84847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffff000000000; valaddr_reg:x3; val_offset:254541*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254541*0 + 3*367*FLEN/8, x4, x1, x2)

inst_84848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffff800000000; valaddr_reg:x3; val_offset:254544*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254544*0 + 3*368*FLEN/8, x4, x1, x2)

inst_84849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffc00000000; valaddr_reg:x3; val_offset:254547*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254547*0 + 3*369*FLEN/8, x4, x1, x2)

inst_84850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffe00000000; valaddr_reg:x3; val_offset:254550*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254550*0 + 3*370*FLEN/8, x4, x1, x2)

inst_84851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffff00000000; valaddr_reg:x3; val_offset:254553*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254553*0 + 3*371*FLEN/8, x4, x1, x2)

inst_84852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffff80000000; valaddr_reg:x3; val_offset:254556*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254556*0 + 3*372*FLEN/8, x4, x1, x2)

inst_84853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffc0000000; valaddr_reg:x3; val_offset:254559*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254559*0 + 3*373*FLEN/8, x4, x1, x2)

inst_84854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffe0000000; valaddr_reg:x3; val_offset:254562*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254562*0 + 3*374*FLEN/8, x4, x1, x2)

inst_84855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffff0000000; valaddr_reg:x3; val_offset:254565*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254565*0 + 3*375*FLEN/8, x4, x1, x2)

inst_84856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffff8000000; valaddr_reg:x3; val_offset:254568*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254568*0 + 3*376*FLEN/8, x4, x1, x2)

inst_84857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffc000000; valaddr_reg:x3; val_offset:254571*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254571*0 + 3*377*FLEN/8, x4, x1, x2)

inst_84858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffe000000; valaddr_reg:x3; val_offset:254574*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254574*0 + 3*378*FLEN/8, x4, x1, x2)

inst_84859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffff000000; valaddr_reg:x3; val_offset:254577*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254577*0 + 3*379*FLEN/8, x4, x1, x2)

inst_84860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffff800000; valaddr_reg:x3; val_offset:254580*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254580*0 + 3*380*FLEN/8, x4, x1, x2)

inst_84861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffc00000; valaddr_reg:x3; val_offset:254583*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254583*0 + 3*381*FLEN/8, x4, x1, x2)

inst_84862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffe00000; valaddr_reg:x3; val_offset:254586*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254586*0 + 3*382*FLEN/8, x4, x1, x2)

inst_84863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffff00000; valaddr_reg:x3; val_offset:254589*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254589*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_84864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffff80000; valaddr_reg:x3; val_offset:254592*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254592*0 + 3*384*FLEN/8, x4, x1, x2)

inst_84865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffc0000; valaddr_reg:x3; val_offset:254595*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254595*0 + 3*385*FLEN/8, x4, x1, x2)

inst_84866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffe0000; valaddr_reg:x3; val_offset:254598*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254598*0 + 3*386*FLEN/8, x4, x1, x2)

inst_84867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffff0000; valaddr_reg:x3; val_offset:254601*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254601*0 + 3*387*FLEN/8, x4, x1, x2)

inst_84868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffff8000; valaddr_reg:x3; val_offset:254604*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254604*0 + 3*388*FLEN/8, x4, x1, x2)

inst_84869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffc000; valaddr_reg:x3; val_offset:254607*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254607*0 + 3*389*FLEN/8, x4, x1, x2)

inst_84870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffe000; valaddr_reg:x3; val_offset:254610*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254610*0 + 3*390*FLEN/8, x4, x1, x2)

inst_84871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffff000; valaddr_reg:x3; val_offset:254613*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254613*0 + 3*391*FLEN/8, x4, x1, x2)

inst_84872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffff800; valaddr_reg:x3; val_offset:254616*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254616*0 + 3*392*FLEN/8, x4, x1, x2)

inst_84873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffc00; valaddr_reg:x3; val_offset:254619*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254619*0 + 3*393*FLEN/8, x4, x1, x2)

inst_84874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffe00; valaddr_reg:x3; val_offset:254622*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254622*0 + 3*394*FLEN/8, x4, x1, x2)

inst_84875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffff00; valaddr_reg:x3; val_offset:254625*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254625*0 + 3*395*FLEN/8, x4, x1, x2)

inst_84876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffff80; valaddr_reg:x3; val_offset:254628*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254628*0 + 3*396*FLEN/8, x4, x1, x2)

inst_84877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffffc0; valaddr_reg:x3; val_offset:254631*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254631*0 + 3*397*FLEN/8, x4, x1, x2)

inst_84878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffffe0; valaddr_reg:x3; val_offset:254634*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254634*0 + 3*398*FLEN/8, x4, x1, x2)

inst_84879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffff0; valaddr_reg:x3; val_offset:254637*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254637*0 + 3*399*FLEN/8, x4, x1, x2)

inst_84880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffff8; valaddr_reg:x3; val_offset:254640*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254640*0 + 3*400*FLEN/8, x4, x1, x2)

inst_84881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffffc; valaddr_reg:x3; val_offset:254643*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254643*0 + 3*401*FLEN/8, x4, x1, x2)

inst_84882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaaffffffffffffe; valaddr_reg:x3; val_offset:254646*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254646*0 + 3*402*FLEN/8, x4, x1, x2)

inst_84883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbaafffffffffffff; valaddr_reg:x3; val_offset:254649*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254649*0 + 3*403*FLEN/8, x4, x1, x2)

inst_84884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:254652*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254652*0 + 3*404*FLEN/8, x4, x1, x2)

inst_84885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:254655*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254655*0 + 3*405*FLEN/8, x4, x1, x2)

inst_84886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:254658*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254658*0 + 3*406*FLEN/8, x4, x1, x2)

inst_84887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:254661*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254661*0 + 3*407*FLEN/8, x4, x1, x2)

inst_84888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:254664*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254664*0 + 3*408*FLEN/8, x4, x1, x2)

inst_84889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:254667*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254667*0 + 3*409*FLEN/8, x4, x1, x2)

inst_84890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:254670*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254670*0 + 3*410*FLEN/8, x4, x1, x2)

inst_84891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:254673*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254673*0 + 3*411*FLEN/8, x4, x1, x2)

inst_84892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:254676*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254676*0 + 3*412*FLEN/8, x4, x1, x2)

inst_84893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:254679*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254679*0 + 3*413*FLEN/8, x4, x1, x2)

inst_84894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:254682*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254682*0 + 3*414*FLEN/8, x4, x1, x2)

inst_84895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:254685*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254685*0 + 3*415*FLEN/8, x4, x1, x2)

inst_84896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:254688*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254688*0 + 3*416*FLEN/8, x4, x1, x2)

inst_84897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:254691*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254691*0 + 3*417*FLEN/8, x4, x1, x2)

inst_84898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:254694*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254694*0 + 3*418*FLEN/8, x4, x1, x2)

inst_84899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:254697*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254697*0 + 3*419*FLEN/8, x4, x1, x2)

inst_84900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:254700*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254700*0 + 3*420*FLEN/8, x4, x1, x2)

inst_84901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:254703*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254703*0 + 3*421*FLEN/8, x4, x1, x2)

inst_84902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:254706*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254706*0 + 3*422*FLEN/8, x4, x1, x2)

inst_84903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:254709*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254709*0 + 3*423*FLEN/8, x4, x1, x2)

inst_84904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:254712*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254712*0 + 3*424*FLEN/8, x4, x1, x2)

inst_84905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x39b2d899d7190 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa1d3ea060b239; op2val:0x9fc39b2d899d7190;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:254715*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254715*0 + 3*425*FLEN/8, x4, x1, x2)

inst_84906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000000000; valaddr_reg:x3; val_offset:254718*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254718*0 + 3*426*FLEN/8, x4, x1, x2)

inst_84907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000000001; valaddr_reg:x3; val_offset:254721*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254721*0 + 3*427*FLEN/8, x4, x1, x2)

inst_84908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000000003; valaddr_reg:x3; val_offset:254724*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254724*0 + 3*428*FLEN/8, x4, x1, x2)

inst_84909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000000007; valaddr_reg:x3; val_offset:254727*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254727*0 + 3*429*FLEN/8, x4, x1, x2)

inst_84910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000000000f; valaddr_reg:x3; val_offset:254730*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254730*0 + 3*430*FLEN/8, x4, x1, x2)

inst_84911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000000001f; valaddr_reg:x3; val_offset:254733*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254733*0 + 3*431*FLEN/8, x4, x1, x2)

inst_84912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000000003f; valaddr_reg:x3; val_offset:254736*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254736*0 + 3*432*FLEN/8, x4, x1, x2)

inst_84913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000000007f; valaddr_reg:x3; val_offset:254739*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254739*0 + 3*433*FLEN/8, x4, x1, x2)

inst_84914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000000000ff; valaddr_reg:x3; val_offset:254742*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254742*0 + 3*434*FLEN/8, x4, x1, x2)

inst_84915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000000001ff; valaddr_reg:x3; val_offset:254745*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254745*0 + 3*435*FLEN/8, x4, x1, x2)

inst_84916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000000003ff; valaddr_reg:x3; val_offset:254748*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254748*0 + 3*436*FLEN/8, x4, x1, x2)

inst_84917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000000007ff; valaddr_reg:x3; val_offset:254751*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254751*0 + 3*437*FLEN/8, x4, x1, x2)

inst_84918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000000fff; valaddr_reg:x3; val_offset:254754*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254754*0 + 3*438*FLEN/8, x4, x1, x2)

inst_84919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000001fff; valaddr_reg:x3; val_offset:254757*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254757*0 + 3*439*FLEN/8, x4, x1, x2)

inst_84920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000003fff; valaddr_reg:x3; val_offset:254760*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254760*0 + 3*440*FLEN/8, x4, x1, x2)

inst_84921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000007fff; valaddr_reg:x3; val_offset:254763*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254763*0 + 3*441*FLEN/8, x4, x1, x2)

inst_84922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000000ffff; valaddr_reg:x3; val_offset:254766*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254766*0 + 3*442*FLEN/8, x4, x1, x2)

inst_84923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000001ffff; valaddr_reg:x3; val_offset:254769*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254769*0 + 3*443*FLEN/8, x4, x1, x2)

inst_84924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000003ffff; valaddr_reg:x3; val_offset:254772*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254772*0 + 3*444*FLEN/8, x4, x1, x2)

inst_84925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000007ffff; valaddr_reg:x3; val_offset:254775*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254775*0 + 3*445*FLEN/8, x4, x1, x2)

inst_84926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000000fffff; valaddr_reg:x3; val_offset:254778*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254778*0 + 3*446*FLEN/8, x4, x1, x2)

inst_84927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000001fffff; valaddr_reg:x3; val_offset:254781*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254781*0 + 3*447*FLEN/8, x4, x1, x2)

inst_84928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000003fffff; valaddr_reg:x3; val_offset:254784*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254784*0 + 3*448*FLEN/8, x4, x1, x2)

inst_84929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000007fffff; valaddr_reg:x3; val_offset:254787*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254787*0 + 3*449*FLEN/8, x4, x1, x2)

inst_84930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000000ffffff; valaddr_reg:x3; val_offset:254790*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254790*0 + 3*450*FLEN/8, x4, x1, x2)

inst_84931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000001ffffff; valaddr_reg:x3; val_offset:254793*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254793*0 + 3*451*FLEN/8, x4, x1, x2)

inst_84932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000003ffffff; valaddr_reg:x3; val_offset:254796*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254796*0 + 3*452*FLEN/8, x4, x1, x2)

inst_84933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000007ffffff; valaddr_reg:x3; val_offset:254799*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254799*0 + 3*453*FLEN/8, x4, x1, x2)

inst_84934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000000fffffff; valaddr_reg:x3; val_offset:254802*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254802*0 + 3*454*FLEN/8, x4, x1, x2)

inst_84935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000001fffffff; valaddr_reg:x3; val_offset:254805*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254805*0 + 3*455*FLEN/8, x4, x1, x2)

inst_84936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000003fffffff; valaddr_reg:x3; val_offset:254808*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254808*0 + 3*456*FLEN/8, x4, x1, x2)

inst_84937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000007fffffff; valaddr_reg:x3; val_offset:254811*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254811*0 + 3*457*FLEN/8, x4, x1, x2)

inst_84938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600000ffffffff; valaddr_reg:x3; val_offset:254814*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254814*0 + 3*458*FLEN/8, x4, x1, x2)

inst_84939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600001ffffffff; valaddr_reg:x3; val_offset:254817*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254817*0 + 3*459*FLEN/8, x4, x1, x2)

inst_84940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600003ffffffff; valaddr_reg:x3; val_offset:254820*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254820*0 + 3*460*FLEN/8, x4, x1, x2)

inst_84941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600007ffffffff; valaddr_reg:x3; val_offset:254823*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254823*0 + 3*461*FLEN/8, x4, x1, x2)

inst_84942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60000fffffffff; valaddr_reg:x3; val_offset:254826*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254826*0 + 3*462*FLEN/8, x4, x1, x2)

inst_84943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60001fffffffff; valaddr_reg:x3; val_offset:254829*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254829*0 + 3*463*FLEN/8, x4, x1, x2)

inst_84944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60003fffffffff; valaddr_reg:x3; val_offset:254832*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254832*0 + 3*464*FLEN/8, x4, x1, x2)

inst_84945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60007fffffffff; valaddr_reg:x3; val_offset:254835*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254835*0 + 3*465*FLEN/8, x4, x1, x2)

inst_84946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6000ffffffffff; valaddr_reg:x3; val_offset:254838*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254838*0 + 3*466*FLEN/8, x4, x1, x2)

inst_84947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6001ffffffffff; valaddr_reg:x3; val_offset:254841*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254841*0 + 3*467*FLEN/8, x4, x1, x2)

inst_84948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6003ffffffffff; valaddr_reg:x3; val_offset:254844*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254844*0 + 3*468*FLEN/8, x4, x1, x2)

inst_84949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6007ffffffffff; valaddr_reg:x3; val_offset:254847*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254847*0 + 3*469*FLEN/8, x4, x1, x2)

inst_84950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f600fffffffffff; valaddr_reg:x3; val_offset:254850*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254850*0 + 3*470*FLEN/8, x4, x1, x2)

inst_84951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f601fffffffffff; valaddr_reg:x3; val_offset:254853*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254853*0 + 3*471*FLEN/8, x4, x1, x2)

inst_84952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f603fffffffffff; valaddr_reg:x3; val_offset:254856*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254856*0 + 3*472*FLEN/8, x4, x1, x2)

inst_84953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f607fffffffffff; valaddr_reg:x3; val_offset:254859*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254859*0 + 3*473*FLEN/8, x4, x1, x2)

inst_84954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f60ffffffffffff; valaddr_reg:x3; val_offset:254862*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254862*0 + 3*474*FLEN/8, x4, x1, x2)

inst_84955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f61ffffffffffff; valaddr_reg:x3; val_offset:254865*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254865*0 + 3*475*FLEN/8, x4, x1, x2)

inst_84956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f63ffffffffffff; valaddr_reg:x3; val_offset:254868*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254868*0 + 3*476*FLEN/8, x4, x1, x2)

inst_84957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f67ffffffffffff; valaddr_reg:x3; val_offset:254871*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254871*0 + 3*477*FLEN/8, x4, x1, x2)

inst_84958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f68000000000000; valaddr_reg:x3; val_offset:254874*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254874*0 + 3*478*FLEN/8, x4, x1, x2)

inst_84959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6c000000000000; valaddr_reg:x3; val_offset:254877*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254877*0 + 3*479*FLEN/8, x4, x1, x2)

inst_84960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6e000000000000; valaddr_reg:x3; val_offset:254880*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254880*0 + 3*480*FLEN/8, x4, x1, x2)

inst_84961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6f000000000000; valaddr_reg:x3; val_offset:254883*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254883*0 + 3*481*FLEN/8, x4, x1, x2)

inst_84962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6f800000000000; valaddr_reg:x3; val_offset:254886*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254886*0 + 3*482*FLEN/8, x4, x1, x2)

inst_84963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fc00000000000; valaddr_reg:x3; val_offset:254889*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254889*0 + 3*483*FLEN/8, x4, x1, x2)

inst_84964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fe00000000000; valaddr_reg:x3; val_offset:254892*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254892*0 + 3*484*FLEN/8, x4, x1, x2)

inst_84965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ff00000000000; valaddr_reg:x3; val_offset:254895*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254895*0 + 3*485*FLEN/8, x4, x1, x2)

inst_84966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ff80000000000; valaddr_reg:x3; val_offset:254898*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254898*0 + 3*486*FLEN/8, x4, x1, x2)

inst_84967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffc0000000000; valaddr_reg:x3; val_offset:254901*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254901*0 + 3*487*FLEN/8, x4, x1, x2)

inst_84968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffe0000000000; valaddr_reg:x3; val_offset:254904*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254904*0 + 3*488*FLEN/8, x4, x1, x2)

inst_84969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fff0000000000; valaddr_reg:x3; val_offset:254907*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254907*0 + 3*489*FLEN/8, x4, x1, x2)

inst_84970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fff8000000000; valaddr_reg:x3; val_offset:254910*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254910*0 + 3*490*FLEN/8, x4, x1, x2)

inst_84971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffc000000000; valaddr_reg:x3; val_offset:254913*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254913*0 + 3*491*FLEN/8, x4, x1, x2)

inst_84972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffe000000000; valaddr_reg:x3; val_offset:254916*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254916*0 + 3*492*FLEN/8, x4, x1, x2)

inst_84973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffff000000000; valaddr_reg:x3; val_offset:254919*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254919*0 + 3*493*FLEN/8, x4, x1, x2)

inst_84974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffff800000000; valaddr_reg:x3; val_offset:254922*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254922*0 + 3*494*FLEN/8, x4, x1, x2)

inst_84975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffc00000000; valaddr_reg:x3; val_offset:254925*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254925*0 + 3*495*FLEN/8, x4, x1, x2)

inst_84976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffe00000000; valaddr_reg:x3; val_offset:254928*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254928*0 + 3*496*FLEN/8, x4, x1, x2)

inst_84977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffff00000000; valaddr_reg:x3; val_offset:254931*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254931*0 + 3*497*FLEN/8, x4, x1, x2)

inst_84978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffff80000000; valaddr_reg:x3; val_offset:254934*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254934*0 + 3*498*FLEN/8, x4, x1, x2)

inst_84979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffc0000000; valaddr_reg:x3; val_offset:254937*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254937*0 + 3*499*FLEN/8, x4, x1, x2)

inst_84980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffe0000000; valaddr_reg:x3; val_offset:254940*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254940*0 + 3*500*FLEN/8, x4, x1, x2)

inst_84981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffff0000000; valaddr_reg:x3; val_offset:254943*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254943*0 + 3*501*FLEN/8, x4, x1, x2)

inst_84982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffff8000000; valaddr_reg:x3; val_offset:254946*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254946*0 + 3*502*FLEN/8, x4, x1, x2)

inst_84983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffc000000; valaddr_reg:x3; val_offset:254949*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254949*0 + 3*503*FLEN/8, x4, x1, x2)

inst_84984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffe000000; valaddr_reg:x3; val_offset:254952*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254952*0 + 3*504*FLEN/8, x4, x1, x2)

inst_84985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffff000000; valaddr_reg:x3; val_offset:254955*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254955*0 + 3*505*FLEN/8, x4, x1, x2)

inst_84986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffff800000; valaddr_reg:x3; val_offset:254958*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254958*0 + 3*506*FLEN/8, x4, x1, x2)

inst_84987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffc00000; valaddr_reg:x3; val_offset:254961*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254961*0 + 3*507*FLEN/8, x4, x1, x2)

inst_84988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffe00000; valaddr_reg:x3; val_offset:254964*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254964*0 + 3*508*FLEN/8, x4, x1, x2)

inst_84989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffff00000; valaddr_reg:x3; val_offset:254967*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254967*0 + 3*509*FLEN/8, x4, x1, x2)

inst_84990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffff80000; valaddr_reg:x3; val_offset:254970*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254970*0 + 3*510*FLEN/8, x4, x1, x2)

inst_84991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffc0000; valaddr_reg:x3; val_offset:254973*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254973*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_84992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffe0000; valaddr_reg:x3; val_offset:254976*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254976*0 + 3*512*FLEN/8, x4, x1, x2)

inst_84993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffff0000; valaddr_reg:x3; val_offset:254979*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254979*0 + 3*513*FLEN/8, x4, x1, x2)

inst_84994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffff8000; valaddr_reg:x3; val_offset:254982*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254982*0 + 3*514*FLEN/8, x4, x1, x2)

inst_84995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffc000; valaddr_reg:x3; val_offset:254985*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254985*0 + 3*515*FLEN/8, x4, x1, x2)

inst_84996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffe000; valaddr_reg:x3; val_offset:254988*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254988*0 + 3*516*FLEN/8, x4, x1, x2)

inst_84997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffff000; valaddr_reg:x3; val_offset:254991*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254991*0 + 3*517*FLEN/8, x4, x1, x2)

inst_84998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffff800; valaddr_reg:x3; val_offset:254994*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254994*0 + 3*518*FLEN/8, x4, x1, x2)

inst_84999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffc00; valaddr_reg:x3; val_offset:254997*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 254997*0 + 3*519*FLEN/8, x4, x1, x2)

inst_85000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffe00; valaddr_reg:x3; val_offset:255000*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255000*0 + 3*520*FLEN/8, x4, x1, x2)

inst_85001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffff00; valaddr_reg:x3; val_offset:255003*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255003*0 + 3*521*FLEN/8, x4, x1, x2)

inst_85002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffff80; valaddr_reg:x3; val_offset:255006*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255006*0 + 3*522*FLEN/8, x4, x1, x2)

inst_85003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffffc0; valaddr_reg:x3; val_offset:255009*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255009*0 + 3*523*FLEN/8, x4, x1, x2)

inst_85004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffffe0; valaddr_reg:x3; val_offset:255012*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255012*0 + 3*524*FLEN/8, x4, x1, x2)

inst_85005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffff0; valaddr_reg:x3; val_offset:255015*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255015*0 + 3*525*FLEN/8, x4, x1, x2)

inst_85006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffff8; valaddr_reg:x3; val_offset:255018*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255018*0 + 3*526*FLEN/8, x4, x1, x2)

inst_85007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffffc; valaddr_reg:x3; val_offset:255021*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255021*0 + 3*527*FLEN/8, x4, x1, x2)

inst_85008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6ffffffffffffe; valaddr_reg:x3; val_offset:255024*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255024*0 + 3*528*FLEN/8, x4, x1, x2)

inst_85009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3f6fffffffffffff; valaddr_reg:x3; val_offset:255027*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255027*0 + 3*529*FLEN/8, x4, x1, x2)

inst_85010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:255030*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255030*0 + 3*530*FLEN/8, x4, x1, x2)

inst_85011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:255033*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255033*0 + 3*531*FLEN/8, x4, x1, x2)

inst_85012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:255036*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255036*0 + 3*532*FLEN/8, x4, x1, x2)

inst_85013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:255039*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255039*0 + 3*533*FLEN/8, x4, x1, x2)

inst_85014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:255042*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255042*0 + 3*534*FLEN/8, x4, x1, x2)

inst_85015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:255045*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255045*0 + 3*535*FLEN/8, x4, x1, x2)

inst_85016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:255048*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255048*0 + 3*536*FLEN/8, x4, x1, x2)

inst_85017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:255051*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255051*0 + 3*537*FLEN/8, x4, x1, x2)

inst_85018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:255054*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255054*0 + 3*538*FLEN/8, x4, x1, x2)

inst_85019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:255057*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255057*0 + 3*539*FLEN/8, x4, x1, x2)

inst_85020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:255060*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255060*0 + 3*540*FLEN/8, x4, x1, x2)

inst_85021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:255063*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255063*0 + 3*541*FLEN/8, x4, x1, x2)

inst_85022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:255066*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255066*0 + 3*542*FLEN/8, x4, x1, x2)

inst_85023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:255069*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255069*0 + 3*543*FLEN/8, x4, x1, x2)

inst_85024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:255072*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255072*0 + 3*544*FLEN/8, x4, x1, x2)

inst_85025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:255075*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255075*0 + 3*545*FLEN/8, x4, x1, x2)

inst_85026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:255078*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255078*0 + 3*546*FLEN/8, x4, x1, x2)

inst_85027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:255081*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255081*0 + 3*547*FLEN/8, x4, x1, x2)

inst_85028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:255084*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255084*0 + 3*548*FLEN/8, x4, x1, x2)

inst_85029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:255087*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255087*0 + 3*549*FLEN/8, x4, x1, x2)

inst_85030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:255090*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255090*0 + 3*550*FLEN/8, x4, x1, x2)

inst_85031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3903bc181b04b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa2bda964d91ae; op2val:0x2033903bc181b04b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:255093*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255093*0 + 3*551*FLEN/8, x4, x1, x2)

inst_85032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:255096*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255096*0 + 3*552*FLEN/8, x4, x1, x2)

inst_85033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:255099*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255099*0 + 3*553*FLEN/8, x4, x1, x2)

inst_85034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:255102*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255102*0 + 3*554*FLEN/8, x4, x1, x2)

inst_85035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:255105*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255105*0 + 3*555*FLEN/8, x4, x1, x2)

inst_85036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:255108*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255108*0 + 3*556*FLEN/8, x4, x1, x2)

inst_85037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:255111*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255111*0 + 3*557*FLEN/8, x4, x1, x2)

inst_85038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:255114*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255114*0 + 3*558*FLEN/8, x4, x1, x2)

inst_85039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:255117*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255117*0 + 3*559*FLEN/8, x4, x1, x2)

inst_85040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:255120*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255120*0 + 3*560*FLEN/8, x4, x1, x2)

inst_85041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:255123*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255123*0 + 3*561*FLEN/8, x4, x1, x2)

inst_85042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:255126*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255126*0 + 3*562*FLEN/8, x4, x1, x2)

inst_85043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:255129*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255129*0 + 3*563*FLEN/8, x4, x1, x2)

inst_85044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:255132*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255132*0 + 3*564*FLEN/8, x4, x1, x2)

inst_85045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:255135*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255135*0 + 3*565*FLEN/8, x4, x1, x2)

inst_85046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:255138*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255138*0 + 3*566*FLEN/8, x4, x1, x2)

inst_85047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:255141*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255141*0 + 3*567*FLEN/8, x4, x1, x2)

inst_85048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:255144*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255144*0 + 3*568*FLEN/8, x4, x1, x2)

inst_85049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:255147*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255147*0 + 3*569*FLEN/8, x4, x1, x2)

inst_85050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:255150*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255150*0 + 3*570*FLEN/8, x4, x1, x2)

inst_85051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:255153*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255153*0 + 3*571*FLEN/8, x4, x1, x2)

inst_85052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:255156*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255156*0 + 3*572*FLEN/8, x4, x1, x2)

inst_85053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:255159*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255159*0 + 3*573*FLEN/8, x4, x1, x2)

inst_85054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000000000; valaddr_reg:x3; val_offset:255162*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255162*0 + 3*574*FLEN/8, x4, x1, x2)

inst_85055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000000001; valaddr_reg:x3; val_offset:255165*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255165*0 + 3*575*FLEN/8, x4, x1, x2)

inst_85056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000000003; valaddr_reg:x3; val_offset:255168*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255168*0 + 3*576*FLEN/8, x4, x1, x2)

inst_85057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000000007; valaddr_reg:x3; val_offset:255171*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255171*0 + 3*577*FLEN/8, x4, x1, x2)

inst_85058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000000000f; valaddr_reg:x3; val_offset:255174*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255174*0 + 3*578*FLEN/8, x4, x1, x2)

inst_85059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000000001f; valaddr_reg:x3; val_offset:255177*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255177*0 + 3*579*FLEN/8, x4, x1, x2)

inst_85060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000000003f; valaddr_reg:x3; val_offset:255180*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255180*0 + 3*580*FLEN/8, x4, x1, x2)

inst_85061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000000007f; valaddr_reg:x3; val_offset:255183*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255183*0 + 3*581*FLEN/8, x4, x1, x2)

inst_85062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000000000ff; valaddr_reg:x3; val_offset:255186*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255186*0 + 3*582*FLEN/8, x4, x1, x2)

inst_85063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000000001ff; valaddr_reg:x3; val_offset:255189*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255189*0 + 3*583*FLEN/8, x4, x1, x2)

inst_85064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000000003ff; valaddr_reg:x3; val_offset:255192*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255192*0 + 3*584*FLEN/8, x4, x1, x2)

inst_85065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000000007ff; valaddr_reg:x3; val_offset:255195*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255195*0 + 3*585*FLEN/8, x4, x1, x2)

inst_85066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000000fff; valaddr_reg:x3; val_offset:255198*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255198*0 + 3*586*FLEN/8, x4, x1, x2)

inst_85067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000001fff; valaddr_reg:x3; val_offset:255201*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255201*0 + 3*587*FLEN/8, x4, x1, x2)

inst_85068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000003fff; valaddr_reg:x3; val_offset:255204*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255204*0 + 3*588*FLEN/8, x4, x1, x2)

inst_85069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000007fff; valaddr_reg:x3; val_offset:255207*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255207*0 + 3*589*FLEN/8, x4, x1, x2)

inst_85070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000000ffff; valaddr_reg:x3; val_offset:255210*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255210*0 + 3*590*FLEN/8, x4, x1, x2)

inst_85071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000001ffff; valaddr_reg:x3; val_offset:255213*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255213*0 + 3*591*FLEN/8, x4, x1, x2)

inst_85072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000003ffff; valaddr_reg:x3; val_offset:255216*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255216*0 + 3*592*FLEN/8, x4, x1, x2)

inst_85073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000007ffff; valaddr_reg:x3; val_offset:255219*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255219*0 + 3*593*FLEN/8, x4, x1, x2)

inst_85074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000000fffff; valaddr_reg:x3; val_offset:255222*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255222*0 + 3*594*FLEN/8, x4, x1, x2)

inst_85075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000001fffff; valaddr_reg:x3; val_offset:255225*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255225*0 + 3*595*FLEN/8, x4, x1, x2)

inst_85076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000003fffff; valaddr_reg:x3; val_offset:255228*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255228*0 + 3*596*FLEN/8, x4, x1, x2)

inst_85077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000007fffff; valaddr_reg:x3; val_offset:255231*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255231*0 + 3*597*FLEN/8, x4, x1, x2)

inst_85078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000000ffffff; valaddr_reg:x3; val_offset:255234*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255234*0 + 3*598*FLEN/8, x4, x1, x2)

inst_85079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000001ffffff; valaddr_reg:x3; val_offset:255237*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255237*0 + 3*599*FLEN/8, x4, x1, x2)

inst_85080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000003ffffff; valaddr_reg:x3; val_offset:255240*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255240*0 + 3*600*FLEN/8, x4, x1, x2)

inst_85081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000007ffffff; valaddr_reg:x3; val_offset:255243*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255243*0 + 3*601*FLEN/8, x4, x1, x2)

inst_85082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000000fffffff; valaddr_reg:x3; val_offset:255246*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255246*0 + 3*602*FLEN/8, x4, x1, x2)

inst_85083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000001fffffff; valaddr_reg:x3; val_offset:255249*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255249*0 + 3*603*FLEN/8, x4, x1, x2)

inst_85084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000003fffffff; valaddr_reg:x3; val_offset:255252*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255252*0 + 3*604*FLEN/8, x4, x1, x2)

inst_85085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000007fffffff; valaddr_reg:x3; val_offset:255255*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255255*0 + 3*605*FLEN/8, x4, x1, x2)

inst_85086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00000ffffffff; valaddr_reg:x3; val_offset:255258*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255258*0 + 3*606*FLEN/8, x4, x1, x2)

inst_85087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00001ffffffff; valaddr_reg:x3; val_offset:255261*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255261*0 + 3*607*FLEN/8, x4, x1, x2)

inst_85088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00003ffffffff; valaddr_reg:x3; val_offset:255264*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255264*0 + 3*608*FLEN/8, x4, x1, x2)

inst_85089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00007ffffffff; valaddr_reg:x3; val_offset:255267*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255267*0 + 3*609*FLEN/8, x4, x1, x2)

inst_85090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0000fffffffff; valaddr_reg:x3; val_offset:255270*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255270*0 + 3*610*FLEN/8, x4, x1, x2)

inst_85091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0001fffffffff; valaddr_reg:x3; val_offset:255273*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255273*0 + 3*611*FLEN/8, x4, x1, x2)

inst_85092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0003fffffffff; valaddr_reg:x3; val_offset:255276*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255276*0 + 3*612*FLEN/8, x4, x1, x2)

inst_85093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0007fffffffff; valaddr_reg:x3; val_offset:255279*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255279*0 + 3*613*FLEN/8, x4, x1, x2)

inst_85094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe000ffffffffff; valaddr_reg:x3; val_offset:255282*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255282*0 + 3*614*FLEN/8, x4, x1, x2)

inst_85095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe001ffffffffff; valaddr_reg:x3; val_offset:255285*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255285*0 + 3*615*FLEN/8, x4, x1, x2)

inst_85096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe003ffffffffff; valaddr_reg:x3; val_offset:255288*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255288*0 + 3*616*FLEN/8, x4, x1, x2)

inst_85097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe007ffffffffff; valaddr_reg:x3; val_offset:255291*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255291*0 + 3*617*FLEN/8, x4, x1, x2)

inst_85098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe00fffffffffff; valaddr_reg:x3; val_offset:255294*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255294*0 + 3*618*FLEN/8, x4, x1, x2)

inst_85099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe01fffffffffff; valaddr_reg:x3; val_offset:255297*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255297*0 + 3*619*FLEN/8, x4, x1, x2)

inst_85100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe03fffffffffff; valaddr_reg:x3; val_offset:255300*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255300*0 + 3*620*FLEN/8, x4, x1, x2)

inst_85101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe07fffffffffff; valaddr_reg:x3; val_offset:255303*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255303*0 + 3*621*FLEN/8, x4, x1, x2)

inst_85102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe0ffffffffffff; valaddr_reg:x3; val_offset:255306*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255306*0 + 3*622*FLEN/8, x4, x1, x2)

inst_85103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe1ffffffffffff; valaddr_reg:x3; val_offset:255309*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255309*0 + 3*623*FLEN/8, x4, x1, x2)

inst_85104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe3ffffffffffff; valaddr_reg:x3; val_offset:255312*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255312*0 + 3*624*FLEN/8, x4, x1, x2)

inst_85105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe7ffffffffffff; valaddr_reg:x3; val_offset:255315*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255315*0 + 3*625*FLEN/8, x4, x1, x2)

inst_85106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfe8000000000000; valaddr_reg:x3; val_offset:255318*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255318*0 + 3*626*FLEN/8, x4, x1, x2)

inst_85107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfec000000000000; valaddr_reg:x3; val_offset:255321*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255321*0 + 3*627*FLEN/8, x4, x1, x2)

inst_85108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfee000000000000; valaddr_reg:x3; val_offset:255324*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255324*0 + 3*628*FLEN/8, x4, x1, x2)

inst_85109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfef000000000000; valaddr_reg:x3; val_offset:255327*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255327*0 + 3*629*FLEN/8, x4, x1, x2)

inst_85110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfef800000000000; valaddr_reg:x3; val_offset:255330*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255330*0 + 3*630*FLEN/8, x4, x1, x2)

inst_85111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefc00000000000; valaddr_reg:x3; val_offset:255333*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255333*0 + 3*631*FLEN/8, x4, x1, x2)

inst_85112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefe00000000000; valaddr_reg:x3; val_offset:255336*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255336*0 + 3*632*FLEN/8, x4, x1, x2)

inst_85113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeff00000000000; valaddr_reg:x3; val_offset:255339*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255339*0 + 3*633*FLEN/8, x4, x1, x2)

inst_85114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeff80000000000; valaddr_reg:x3; val_offset:255342*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255342*0 + 3*634*FLEN/8, x4, x1, x2)

inst_85115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffc0000000000; valaddr_reg:x3; val_offset:255345*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255345*0 + 3*635*FLEN/8, x4, x1, x2)

inst_85116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffe0000000000; valaddr_reg:x3; val_offset:255348*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255348*0 + 3*636*FLEN/8, x4, x1, x2)

inst_85117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefff0000000000; valaddr_reg:x3; val_offset:255351*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255351*0 + 3*637*FLEN/8, x4, x1, x2)

inst_85118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefff8000000000; valaddr_reg:x3; val_offset:255354*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255354*0 + 3*638*FLEN/8, x4, x1, x2)

inst_85119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffc000000000; valaddr_reg:x3; val_offset:255357*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255357*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_85120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffe000000000; valaddr_reg:x3; val_offset:255360*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255360*0 + 3*640*FLEN/8, x4, x1, x2)

inst_85121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffff000000000; valaddr_reg:x3; val_offset:255363*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255363*0 + 3*641*FLEN/8, x4, x1, x2)

inst_85122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffff800000000; valaddr_reg:x3; val_offset:255366*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255366*0 + 3*642*FLEN/8, x4, x1, x2)

inst_85123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffc00000000; valaddr_reg:x3; val_offset:255369*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255369*0 + 3*643*FLEN/8, x4, x1, x2)

inst_85124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffe00000000; valaddr_reg:x3; val_offset:255372*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255372*0 + 3*644*FLEN/8, x4, x1, x2)

inst_85125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffff00000000; valaddr_reg:x3; val_offset:255375*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255375*0 + 3*645*FLEN/8, x4, x1, x2)

inst_85126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffff80000000; valaddr_reg:x3; val_offset:255378*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255378*0 + 3*646*FLEN/8, x4, x1, x2)

inst_85127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffc0000000; valaddr_reg:x3; val_offset:255381*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255381*0 + 3*647*FLEN/8, x4, x1, x2)

inst_85128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffe0000000; valaddr_reg:x3; val_offset:255384*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255384*0 + 3*648*FLEN/8, x4, x1, x2)

inst_85129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffff0000000; valaddr_reg:x3; val_offset:255387*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255387*0 + 3*649*FLEN/8, x4, x1, x2)

inst_85130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffff8000000; valaddr_reg:x3; val_offset:255390*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255390*0 + 3*650*FLEN/8, x4, x1, x2)

inst_85131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffc000000; valaddr_reg:x3; val_offset:255393*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255393*0 + 3*651*FLEN/8, x4, x1, x2)

inst_85132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffe000000; valaddr_reg:x3; val_offset:255396*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255396*0 + 3*652*FLEN/8, x4, x1, x2)

inst_85133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffff000000; valaddr_reg:x3; val_offset:255399*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255399*0 + 3*653*FLEN/8, x4, x1, x2)

inst_85134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffff800000; valaddr_reg:x3; val_offset:255402*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255402*0 + 3*654*FLEN/8, x4, x1, x2)

inst_85135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffc00000; valaddr_reg:x3; val_offset:255405*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255405*0 + 3*655*FLEN/8, x4, x1, x2)

inst_85136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffe00000; valaddr_reg:x3; val_offset:255408*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255408*0 + 3*656*FLEN/8, x4, x1, x2)

inst_85137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffff00000; valaddr_reg:x3; val_offset:255411*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255411*0 + 3*657*FLEN/8, x4, x1, x2)

inst_85138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffff80000; valaddr_reg:x3; val_offset:255414*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255414*0 + 3*658*FLEN/8, x4, x1, x2)

inst_85139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffc0000; valaddr_reg:x3; val_offset:255417*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255417*0 + 3*659*FLEN/8, x4, x1, x2)

inst_85140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffe0000; valaddr_reg:x3; val_offset:255420*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255420*0 + 3*660*FLEN/8, x4, x1, x2)

inst_85141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffff0000; valaddr_reg:x3; val_offset:255423*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255423*0 + 3*661*FLEN/8, x4, x1, x2)

inst_85142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffff8000; valaddr_reg:x3; val_offset:255426*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255426*0 + 3*662*FLEN/8, x4, x1, x2)

inst_85143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffc000; valaddr_reg:x3; val_offset:255429*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255429*0 + 3*663*FLEN/8, x4, x1, x2)

inst_85144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffe000; valaddr_reg:x3; val_offset:255432*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255432*0 + 3*664*FLEN/8, x4, x1, x2)

inst_85145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffff000; valaddr_reg:x3; val_offset:255435*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255435*0 + 3*665*FLEN/8, x4, x1, x2)

inst_85146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffff800; valaddr_reg:x3; val_offset:255438*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255438*0 + 3*666*FLEN/8, x4, x1, x2)

inst_85147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffc00; valaddr_reg:x3; val_offset:255441*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255441*0 + 3*667*FLEN/8, x4, x1, x2)

inst_85148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffe00; valaddr_reg:x3; val_offset:255444*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255444*0 + 3*668*FLEN/8, x4, x1, x2)

inst_85149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffff00; valaddr_reg:x3; val_offset:255447*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255447*0 + 3*669*FLEN/8, x4, x1, x2)

inst_85150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffff80; valaddr_reg:x3; val_offset:255450*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255450*0 + 3*670*FLEN/8, x4, x1, x2)

inst_85151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffffc0; valaddr_reg:x3; val_offset:255453*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255453*0 + 3*671*FLEN/8, x4, x1, x2)

inst_85152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffffe0; valaddr_reg:x3; val_offset:255456*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255456*0 + 3*672*FLEN/8, x4, x1, x2)

inst_85153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffff0; valaddr_reg:x3; val_offset:255459*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255459*0 + 3*673*FLEN/8, x4, x1, x2)

inst_85154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffff8; valaddr_reg:x3; val_offset:255462*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255462*0 + 3*674*FLEN/8, x4, x1, x2)

inst_85155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffffc; valaddr_reg:x3; val_offset:255465*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255465*0 + 3*675*FLEN/8, x4, x1, x2)

inst_85156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfeffffffffffffe; valaddr_reg:x3; val_offset:255468*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255468*0 + 3*676*FLEN/8, x4, x1, x2)

inst_85157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x38b9090f08514 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa321af726492d; op2val:0x9fc38b9090f08514;
op3val:0xbfefffffffffffff; valaddr_reg:x3; val_offset:255471*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255471*0 + 3*677*FLEN/8, x4, x1, x2)

inst_85158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000000000; valaddr_reg:x3; val_offset:255474*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255474*0 + 3*678*FLEN/8, x4, x1, x2)

inst_85159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000000001; valaddr_reg:x3; val_offset:255477*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255477*0 + 3*679*FLEN/8, x4, x1, x2)

inst_85160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000000003; valaddr_reg:x3; val_offset:255480*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255480*0 + 3*680*FLEN/8, x4, x1, x2)

inst_85161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000000007; valaddr_reg:x3; val_offset:255483*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255483*0 + 3*681*FLEN/8, x4, x1, x2)

inst_85162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000000000f; valaddr_reg:x3; val_offset:255486*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255486*0 + 3*682*FLEN/8, x4, x1, x2)

inst_85163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000000001f; valaddr_reg:x3; val_offset:255489*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255489*0 + 3*683*FLEN/8, x4, x1, x2)

inst_85164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000000003f; valaddr_reg:x3; val_offset:255492*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255492*0 + 3*684*FLEN/8, x4, x1, x2)

inst_85165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000000007f; valaddr_reg:x3; val_offset:255495*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255495*0 + 3*685*FLEN/8, x4, x1, x2)

inst_85166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000000000ff; valaddr_reg:x3; val_offset:255498*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255498*0 + 3*686*FLEN/8, x4, x1, x2)

inst_85167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000000001ff; valaddr_reg:x3; val_offset:255501*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255501*0 + 3*687*FLEN/8, x4, x1, x2)

inst_85168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000000003ff; valaddr_reg:x3; val_offset:255504*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255504*0 + 3*688*FLEN/8, x4, x1, x2)

inst_85169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000000007ff; valaddr_reg:x3; val_offset:255507*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255507*0 + 3*689*FLEN/8, x4, x1, x2)

inst_85170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000000fff; valaddr_reg:x3; val_offset:255510*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255510*0 + 3*690*FLEN/8, x4, x1, x2)

inst_85171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000001fff; valaddr_reg:x3; val_offset:255513*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255513*0 + 3*691*FLEN/8, x4, x1, x2)

inst_85172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000003fff; valaddr_reg:x3; val_offset:255516*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255516*0 + 3*692*FLEN/8, x4, x1, x2)

inst_85173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000007fff; valaddr_reg:x3; val_offset:255519*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255519*0 + 3*693*FLEN/8, x4, x1, x2)

inst_85174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000000ffff; valaddr_reg:x3; val_offset:255522*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255522*0 + 3*694*FLEN/8, x4, x1, x2)

inst_85175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000001ffff; valaddr_reg:x3; val_offset:255525*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255525*0 + 3*695*FLEN/8, x4, x1, x2)

inst_85176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000003ffff; valaddr_reg:x3; val_offset:255528*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255528*0 + 3*696*FLEN/8, x4, x1, x2)

inst_85177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000007ffff; valaddr_reg:x3; val_offset:255531*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255531*0 + 3*697*FLEN/8, x4, x1, x2)

inst_85178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000000fffff; valaddr_reg:x3; val_offset:255534*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255534*0 + 3*698*FLEN/8, x4, x1, x2)

inst_85179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000001fffff; valaddr_reg:x3; val_offset:255537*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255537*0 + 3*699*FLEN/8, x4, x1, x2)

inst_85180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000003fffff; valaddr_reg:x3; val_offset:255540*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255540*0 + 3*700*FLEN/8, x4, x1, x2)

inst_85181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000007fffff; valaddr_reg:x3; val_offset:255543*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255543*0 + 3*701*FLEN/8, x4, x1, x2)

inst_85182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000000ffffff; valaddr_reg:x3; val_offset:255546*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255546*0 + 3*702*FLEN/8, x4, x1, x2)

inst_85183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000001ffffff; valaddr_reg:x3; val_offset:255549*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255549*0 + 3*703*FLEN/8, x4, x1, x2)

inst_85184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000003ffffff; valaddr_reg:x3; val_offset:255552*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255552*0 + 3*704*FLEN/8, x4, x1, x2)

inst_85185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000007ffffff; valaddr_reg:x3; val_offset:255555*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255555*0 + 3*705*FLEN/8, x4, x1, x2)

inst_85186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000000fffffff; valaddr_reg:x3; val_offset:255558*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255558*0 + 3*706*FLEN/8, x4, x1, x2)

inst_85187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000001fffffff; valaddr_reg:x3; val_offset:255561*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255561*0 + 3*707*FLEN/8, x4, x1, x2)

inst_85188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000003fffffff; valaddr_reg:x3; val_offset:255564*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255564*0 + 3*708*FLEN/8, x4, x1, x2)

inst_85189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000007fffffff; valaddr_reg:x3; val_offset:255567*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255567*0 + 3*709*FLEN/8, x4, x1, x2)

inst_85190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900000ffffffff; valaddr_reg:x3; val_offset:255570*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255570*0 + 3*710*FLEN/8, x4, x1, x2)

inst_85191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900001ffffffff; valaddr_reg:x3; val_offset:255573*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255573*0 + 3*711*FLEN/8, x4, x1, x2)

inst_85192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900003ffffffff; valaddr_reg:x3; val_offset:255576*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255576*0 + 3*712*FLEN/8, x4, x1, x2)

inst_85193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900007ffffffff; valaddr_reg:x3; val_offset:255579*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255579*0 + 3*713*FLEN/8, x4, x1, x2)

inst_85194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90000fffffffff; valaddr_reg:x3; val_offset:255582*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255582*0 + 3*714*FLEN/8, x4, x1, x2)

inst_85195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90001fffffffff; valaddr_reg:x3; val_offset:255585*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255585*0 + 3*715*FLEN/8, x4, x1, x2)

inst_85196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90003fffffffff; valaddr_reg:x3; val_offset:255588*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255588*0 + 3*716*FLEN/8, x4, x1, x2)

inst_85197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90007fffffffff; valaddr_reg:x3; val_offset:255591*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255591*0 + 3*717*FLEN/8, x4, x1, x2)

inst_85198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9000ffffffffff; valaddr_reg:x3; val_offset:255594*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255594*0 + 3*718*FLEN/8, x4, x1, x2)

inst_85199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9001ffffffffff; valaddr_reg:x3; val_offset:255597*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255597*0 + 3*719*FLEN/8, x4, x1, x2)

inst_85200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9003ffffffffff; valaddr_reg:x3; val_offset:255600*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255600*0 + 3*720*FLEN/8, x4, x1, x2)

inst_85201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9007ffffffffff; valaddr_reg:x3; val_offset:255603*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255603*0 + 3*721*FLEN/8, x4, x1, x2)

inst_85202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe900fffffffffff; valaddr_reg:x3; val_offset:255606*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255606*0 + 3*722*FLEN/8, x4, x1, x2)

inst_85203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe901fffffffffff; valaddr_reg:x3; val_offset:255609*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255609*0 + 3*723*FLEN/8, x4, x1, x2)

inst_85204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe903fffffffffff; valaddr_reg:x3; val_offset:255612*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255612*0 + 3*724*FLEN/8, x4, x1, x2)

inst_85205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe907fffffffffff; valaddr_reg:x3; val_offset:255615*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255615*0 + 3*725*FLEN/8, x4, x1, x2)

inst_85206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe90ffffffffffff; valaddr_reg:x3; val_offset:255618*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255618*0 + 3*726*FLEN/8, x4, x1, x2)

inst_85207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe91ffffffffffff; valaddr_reg:x3; val_offset:255621*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255621*0 + 3*727*FLEN/8, x4, x1, x2)

inst_85208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe93ffffffffffff; valaddr_reg:x3; val_offset:255624*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255624*0 + 3*728*FLEN/8, x4, x1, x2)

inst_85209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe97ffffffffffff; valaddr_reg:x3; val_offset:255627*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255627*0 + 3*729*FLEN/8, x4, x1, x2)

inst_85210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe98000000000000; valaddr_reg:x3; val_offset:255630*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255630*0 + 3*730*FLEN/8, x4, x1, x2)

inst_85211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9c000000000000; valaddr_reg:x3; val_offset:255633*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255633*0 + 3*731*FLEN/8, x4, x1, x2)

inst_85212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9e000000000000; valaddr_reg:x3; val_offset:255636*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255636*0 + 3*732*FLEN/8, x4, x1, x2)

inst_85213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9f000000000000; valaddr_reg:x3; val_offset:255639*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255639*0 + 3*733*FLEN/8, x4, x1, x2)

inst_85214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9f800000000000; valaddr_reg:x3; val_offset:255642*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255642*0 + 3*734*FLEN/8, x4, x1, x2)

inst_85215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fc00000000000; valaddr_reg:x3; val_offset:255645*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255645*0 + 3*735*FLEN/8, x4, x1, x2)

inst_85216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fe00000000000; valaddr_reg:x3; val_offset:255648*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255648*0 + 3*736*FLEN/8, x4, x1, x2)

inst_85217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ff00000000000; valaddr_reg:x3; val_offset:255651*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255651*0 + 3*737*FLEN/8, x4, x1, x2)

inst_85218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ff80000000000; valaddr_reg:x3; val_offset:255654*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255654*0 + 3*738*FLEN/8, x4, x1, x2)

inst_85219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffc0000000000; valaddr_reg:x3; val_offset:255657*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255657*0 + 3*739*FLEN/8, x4, x1, x2)

inst_85220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffe0000000000; valaddr_reg:x3; val_offset:255660*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255660*0 + 3*740*FLEN/8, x4, x1, x2)

inst_85221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fff0000000000; valaddr_reg:x3; val_offset:255663*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255663*0 + 3*741*FLEN/8, x4, x1, x2)

inst_85222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fff8000000000; valaddr_reg:x3; val_offset:255666*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255666*0 + 3*742*FLEN/8, x4, x1, x2)

inst_85223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffc000000000; valaddr_reg:x3; val_offset:255669*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255669*0 + 3*743*FLEN/8, x4, x1, x2)

inst_85224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffe000000000; valaddr_reg:x3; val_offset:255672*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255672*0 + 3*744*FLEN/8, x4, x1, x2)

inst_85225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffff000000000; valaddr_reg:x3; val_offset:255675*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255675*0 + 3*745*FLEN/8, x4, x1, x2)

inst_85226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffff800000000; valaddr_reg:x3; val_offset:255678*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255678*0 + 3*746*FLEN/8, x4, x1, x2)

inst_85227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffc00000000; valaddr_reg:x3; val_offset:255681*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255681*0 + 3*747*FLEN/8, x4, x1, x2)

inst_85228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffe00000000; valaddr_reg:x3; val_offset:255684*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255684*0 + 3*748*FLEN/8, x4, x1, x2)

inst_85229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffff00000000; valaddr_reg:x3; val_offset:255687*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255687*0 + 3*749*FLEN/8, x4, x1, x2)

inst_85230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffff80000000; valaddr_reg:x3; val_offset:255690*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255690*0 + 3*750*FLEN/8, x4, x1, x2)

inst_85231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffc0000000; valaddr_reg:x3; val_offset:255693*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255693*0 + 3*751*FLEN/8, x4, x1, x2)

inst_85232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffe0000000; valaddr_reg:x3; val_offset:255696*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255696*0 + 3*752*FLEN/8, x4, x1, x2)

inst_85233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffff0000000; valaddr_reg:x3; val_offset:255699*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255699*0 + 3*753*FLEN/8, x4, x1, x2)

inst_85234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffff8000000; valaddr_reg:x3; val_offset:255702*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255702*0 + 3*754*FLEN/8, x4, x1, x2)

inst_85235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffc000000; valaddr_reg:x3; val_offset:255705*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255705*0 + 3*755*FLEN/8, x4, x1, x2)

inst_85236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffe000000; valaddr_reg:x3; val_offset:255708*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255708*0 + 3*756*FLEN/8, x4, x1, x2)

inst_85237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffff000000; valaddr_reg:x3; val_offset:255711*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255711*0 + 3*757*FLEN/8, x4, x1, x2)

inst_85238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffff800000; valaddr_reg:x3; val_offset:255714*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255714*0 + 3*758*FLEN/8, x4, x1, x2)

inst_85239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffffc00000; valaddr_reg:x3; val_offset:255717*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255717*0 + 3*759*FLEN/8, x4, x1, x2)

inst_85240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffffe00000; valaddr_reg:x3; val_offset:255720*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255720*0 + 3*760*FLEN/8, x4, x1, x2)

inst_85241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffff00000; valaddr_reg:x3; val_offset:255723*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255723*0 + 3*761*FLEN/8, x4, x1, x2)

inst_85242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffff80000; valaddr_reg:x3; val_offset:255726*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255726*0 + 3*762*FLEN/8, x4, x1, x2)

inst_85243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffffc0000; valaddr_reg:x3; val_offset:255729*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255729*0 + 3*763*FLEN/8, x4, x1, x2)

inst_85244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9ffffffffe0000; valaddr_reg:x3; val_offset:255732*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255732*0 + 3*764*FLEN/8, x4, x1, x2)

inst_85245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffffff0000; valaddr_reg:x3; val_offset:255735*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255735*0 + 3*765*FLEN/8, x4, x1, x2)

inst_85246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffffff8000; valaddr_reg:x3; val_offset:255738*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255738*0 + 3*766*FLEN/8, x4, x1, x2)

inst_85247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x368a3df06cc40 and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa613e194097b8; op2val:0x9fc368a3df06cc40;
op3val:0xbe9fffffffffc000; valaddr_reg:x3; val_offset:255741*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255741*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084624124536684544,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084694493280862208,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084729677652951040,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084747269838995456,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084756065932017664,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084760463978528768,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084762663001784320,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084763762513412096,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764312269225984,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764587147132928,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764724586086400,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764793305563136,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764827665301504,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764844845170688,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764853435105280,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764857730072576,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764859877556224,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764860951298048,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764861488168960,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764861756604416,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764861890822144,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764861957931008,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764861991485440,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862008262656,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862016651264,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862020845568,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862022942720,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862023991296,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862024515584,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862024777728,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862024908800,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862024974336,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025007104,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025023488,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025031680,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025035776,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025037824,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025038848,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039360,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039616,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039744,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039808,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039840,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039856,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039864,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039868,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039870,64,FLEN)
NAN_BOXED(6893337848860602147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4084764862025039871,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962752,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962753,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962755,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962759,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962767,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962783,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962815,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962879,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963007,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963263,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963775,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637964799,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637966847,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637970943,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637979135,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637995519,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638028287,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638093823,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638224895,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638487039,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431639011327,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431640059903,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431642157055,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431646351359,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431654739967,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431671517183,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431705071615,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431772180479,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431906398207,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432174833663,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432711704575,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422433785446399,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422435932930047,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422440227897343,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422448817831935,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422465997701119,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422500357439487,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422569076916223,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422706515869695,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422981393776639,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286423531149590527,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286424630661218303,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286426829684473855,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286431227730984959,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286440023824007167,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286457616010051583,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286492800382140415,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286563169126318079,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286703906614673407,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286985381591384063,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9287548331544805375,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451647999,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451648000,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9289800131358490624,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290363081311911936,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290644556288622592,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290785293776977920,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290855662521155584,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290890846893244416,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290908439079288832,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290917235172311040,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290921633218822144,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290923832242077696,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290924931753705472,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925481509519360,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925756387426304,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925893826379776,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925962545856512,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925996905594880,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926014085464064,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926022675398656,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926026970365952,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926029117849600,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030191591424,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030728462336,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030996897792,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031131115520,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031198224384,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031231778816,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031248556032,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6893345233430642450,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265024,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265025,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265027,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265031,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265039,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265055,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265087,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265151,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265279,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347265535,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347266047,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347267071,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347269119,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347273215,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347281407,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347297791,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347330559,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347396095,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347527167,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284347789311,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284348313599,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284349362175,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284351459327,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284355653631,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284364042239,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284380819455,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284414373887,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284481482751,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284615700479,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777284884135935,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777285421006847,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777286494748671,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777288642232319,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777292937199615,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777301527134207,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777318707003391,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777353066741759,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777421786218495,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777559225171967,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483777834103078911,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483778383858892799,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483779483370520575,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483781682393776127,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483786080440287231,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483794876533309439,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483812468719353855,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483847653091442687,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13483918021835620351,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13484058759323975679,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13484340234300686335,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13484903184254107647,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13486029084160950271,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13486029084160950272,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13487154984067792896,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13487717934021214208,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13487999408997924864,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488140146486280192,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488210515230457856,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488245699602546688,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488263291788591104,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488272087881613312,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488276485928124416,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488278684951379968,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488279784463007744,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280334218821632,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280609096728576,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280746535682048,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280815255158784,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280849614897152,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280866794766336,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280875384700928,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280879679668224,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280881827151872,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280882900893696,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883437764608,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883706200064,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883840417792,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883907526656,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883941081088,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883957858304,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883966246912,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883970441216,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883972538368,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883973586944,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974111232,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974373376,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974504448,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974569984,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974602752,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974619136,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974627328,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974631424,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974633472,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974634496,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635008,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635264,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635392,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635456,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635488,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635504,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635512,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635516,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635518,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13488280883974635519,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893350293060918226,64,FLEN)
NAN_BOXED(11512218728262482279,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301056,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301057,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301059,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301063,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301071,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301087,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301119,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301183,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301311,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328301567,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328302079,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328303103,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328305151,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328309247,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328317439,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328333823,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328366591,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328432127,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328563199,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487328825343,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487329349631,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487330398207,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487332495359,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487336689663,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487345078271,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487361855487,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487395409919,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487462518783,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487596736511,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748487865171967,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748488402042879,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748489475784703,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748491623268351,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748495918235647,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748504508170239,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748521688039423,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748556047777791,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748624767254527,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447748762206207999,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447749037084114943,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447749586839928831,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447750686351556607,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447752885374812159,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447757283421323263,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447766079514345471,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447783671700389887,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447818856072478719,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13447889224816656383,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13448029962305011711,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13448311437281722367,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13448874387235143679,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13450000287141986303,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13450000287141986304,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13451126187048828928,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13451689137002250240,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13451970611978960896,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452111349467316224,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452181718211493888,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452216902583582720,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452234494769627136,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452243290862649344,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452247688909160448,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452249887932416000,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452250987444043776,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452251537199857664,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452251812077764608,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452251949516718080,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252018236194816,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252052595933184,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252069775802368,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252078365736960,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252082660704256,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252084808187904,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252085881929728,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086418800640,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086687236096,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086821453824,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086888562688,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086922117120,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086938894336,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086947282944,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086951477248,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086953574400,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086954622976,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955147264,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955409408,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955540480,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955606016,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955638784,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955655168,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955663360,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955667456,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955669504,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955670528,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671040,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671296,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671424,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671488,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671520,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671536,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671544,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671548,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671550,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13452252086955671551,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893354334459834937,64,FLEN)
NAN_BOXED(11512215692373750160,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682944,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682945,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682947,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682951,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682959,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153682975,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153683007,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153683071,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153683199,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153683455,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153683967,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153684991,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153687039,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153691135,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153699327,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153715711,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153748479,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153814015,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022153945087,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022154207231,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022154731519,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022155780095,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022157877247,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022162071551,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022170460159,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022187237375,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022220791807,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022287900671,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022422118399,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650022690553855,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650023227424767,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650024301166591,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650026448650239,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650030743617535,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650039333552127,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650056513421311,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650090873159679,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650159592636415,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650297031589887,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566650571909496831,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566651121665310719,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566652221176938495,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566654420200194047,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566658818246705151,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566667614339727359,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566685206525771775,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566720390897860607,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566790759642038271,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4566931497130393599,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4567212972107104255,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4567775922060525567,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4568901821967368191,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4568901821967368192,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4570027721874210816,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4570590671827632128,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4570872146804342784,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571012884292698112,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571083253036875776,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571118437408964608,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571136029595009024,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571144825688031232,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571149223734542336,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571151422757797888,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571152522269425664,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153072025239552,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153346903146496,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153484342099968,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153553061576704,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153587421315072,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153604601184256,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153613191118848,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153617486086144,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153619633569792,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153620707311616,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621244182528,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621512617984,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621646835712,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621713944576,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621747499008,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621764276224,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621772664832,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621776859136,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621778956288,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621780004864,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621780529152,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621780791296,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621780922368,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621780987904,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781020672,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781037056,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781045248,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781049344,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781051392,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781052416,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781052928,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053184,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053312,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053376,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053408,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053424,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053432,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053436,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053438,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4571153621781053439,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893370397468496302,64,FLEN)
NAN_BOXED(2320356819349909579,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422720,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422721,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422723,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422727,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422735,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422751,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422783,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422847,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027422975,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027423231,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027423743,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027424767,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027426815,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027430911,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027439103,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027455487,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027488255,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027553791,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027684863,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856027947007,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856028471295,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856029519871,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856031617023,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856035811327,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856044199935,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856060977151,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856094531583,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856161640447,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856295858175,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050856564293631,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050857101164543,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050858174906367,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050860322390015,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050864617357311,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050873207291903,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050890387161087,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050924746899455,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826050993466376191,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826051130905329663,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826051405783236607,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826051955539050495,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826053055050678271,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826055254073933823,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826059652120444927,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826068448213467135,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826086040399511551,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826121224771600383,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826191593515778047,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826332331004133375,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13826613805980844031,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13827176755934265343,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13828302655841107967,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13828302655841107968,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13829428555747950592,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13829991505701371904,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830272980678082560,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830413718166437888,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830484086910615552,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830519271282704384,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830536863468748800,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830545659561771008,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830550057608282112,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830552256631537664,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830553356143165440,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830553905898979328,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554180776886272,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554318215839744,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554386935316480,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554421295054848,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554438474924032,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554447064858624,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554451359825920,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554453507309568,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554454581051392,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455117922304,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455386357760,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455520575488,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455587684352,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455621238784,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455638016000,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455646404608,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455650598912,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455652696064,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455653744640,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654268928,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654531072,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654662144,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654727680,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654760448,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654776832,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654785024,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654789120,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654791168,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654792192,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654792704,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654792960,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793088,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793152,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793184,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793200,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793208,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793212,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793214,64,FLEN)
NAN_BOXED(6893377271040985389,64,FLEN)
NAN_BOXED(11512198525512353044,64,FLEN)
NAN_BOXED(13830554455654793215,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642304,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642305,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642307,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642311,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642319,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642335,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642367,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642431,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642559,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852642815,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852643327,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852644351,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852646399,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852650495,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852658687,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852675071,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852707839,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852773375,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263852904447,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263853166591,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263853690879,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263854739455,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263856836607,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263861030911,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263869419519,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263886196735,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263919751167,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475263986860031,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475264121077759,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475264389513215,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475264926384127,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475266000125951,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475268147609599,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475272442576895,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475281032511487,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475298212380671,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475332572119039,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475401291595775,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475538730549247,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731475813608456191,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731476363364270079,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731477462875897855,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731479661899153407,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731484059945664511,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731492856038686719,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731510448224731135,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731545632596819967,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731616001340997631,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13731756738829352959,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13732038213806063615,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13732601163759484927,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13733727063666327551,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13733727063666327552,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13734852963573170176,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735415913526591488,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735697388503302144,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735838125991657472,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735908494735835136,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735943679107923968,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735961271293968384,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735970067386990592,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735974465433501696,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735976664456757248,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735977763968385024,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978313724198912,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978588602105856,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978726041059328,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978794760536064,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978829120274432,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978846300143616,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978854890078208,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978859185045504,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978861332529152,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978862406270976,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978862943141888,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863211577344,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863345795072,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863412903936,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863446458368,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863463235584,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863471624192,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863475818496,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863477915648,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863478964224,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479488512,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479750656,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479881728,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479947264,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479980032,64,FLEN)
NAN_BOXED(6893429098983495608,64,FLEN)
NAN_BOXED(11512160125519842368,64,FLEN)
NAN_BOXED(13735978863479996416,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
