
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_96000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:288000*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288000*0 + 3*0*FLEN/8, x4, x1, x2)

inst_96001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:288003*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288003*0 + 3*1*FLEN/8, x4, x1, x2)

inst_96002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:288006*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288006*0 + 3*2*FLEN/8, x4, x1, x2)

inst_96003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:288009*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288009*0 + 3*3*FLEN/8, x4, x1, x2)

inst_96004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:288012*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288012*0 + 3*4*FLEN/8, x4, x1, x2)

inst_96005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:288015*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288015*0 + 3*5*FLEN/8, x4, x1, x2)

inst_96006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:288018*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288018*0 + 3*6*FLEN/8, x4, x1, x2)

inst_96007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:288021*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288021*0 + 3*7*FLEN/8, x4, x1, x2)

inst_96008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:288024*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288024*0 + 3*8*FLEN/8, x4, x1, x2)

inst_96009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:288027*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288027*0 + 3*9*FLEN/8, x4, x1, x2)

inst_96010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:288030*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288030*0 + 3*10*FLEN/8, x4, x1, x2)

inst_96011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:288033*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288033*0 + 3*11*FLEN/8, x4, x1, x2)

inst_96012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:288036*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288036*0 + 3*12*FLEN/8, x4, x1, x2)

inst_96013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:288039*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288039*0 + 3*13*FLEN/8, x4, x1, x2)

inst_96014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:288042*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288042*0 + 3*14*FLEN/8, x4, x1, x2)

inst_96015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:288045*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288045*0 + 3*15*FLEN/8, x4, x1, x2)

inst_96016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:288048*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288048*0 + 3*16*FLEN/8, x4, x1, x2)

inst_96017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:288051*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288051*0 + 3*17*FLEN/8, x4, x1, x2)

inst_96018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:288054*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288054*0 + 3*18*FLEN/8, x4, x1, x2)

inst_96019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:288057*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288057*0 + 3*19*FLEN/8, x4, x1, x2)

inst_96020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:288060*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288060*0 + 3*20*FLEN/8, x4, x1, x2)

inst_96021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:288063*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288063*0 + 3*21*FLEN/8, x4, x1, x2)

inst_96022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:288066*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288066*0 + 3*22*FLEN/8, x4, x1, x2)

inst_96023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:288069*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288069*0 + 3*23*FLEN/8, x4, x1, x2)

inst_96024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:288072*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288072*0 + 3*24*FLEN/8, x4, x1, x2)

inst_96025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:288075*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288075*0 + 3*25*FLEN/8, x4, x1, x2)

inst_96026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:288078*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288078*0 + 3*26*FLEN/8, x4, x1, x2)

inst_96027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:288081*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288081*0 + 3*27*FLEN/8, x4, x1, x2)

inst_96028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:288084*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288084*0 + 3*28*FLEN/8, x4, x1, x2)

inst_96029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:288087*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288087*0 + 3*29*FLEN/8, x4, x1, x2)

inst_96030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:288090*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288090*0 + 3*30*FLEN/8, x4, x1, x2)

inst_96031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:288093*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288093*0 + 3*31*FLEN/8, x4, x1, x2)

inst_96032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:288096*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288096*0 + 3*32*FLEN/8, x4, x1, x2)

inst_96033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:288099*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288099*0 + 3*33*FLEN/8, x4, x1, x2)

inst_96034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:288102*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288102*0 + 3*34*FLEN/8, x4, x1, x2)

inst_96035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:288105*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288105*0 + 3*35*FLEN/8, x4, x1, x2)

inst_96036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:288108*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288108*0 + 3*36*FLEN/8, x4, x1, x2)

inst_96037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:288111*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288111*0 + 3*37*FLEN/8, x4, x1, x2)

inst_96038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:288114*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288114*0 + 3*38*FLEN/8, x4, x1, x2)

inst_96039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:288117*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288117*0 + 3*39*FLEN/8, x4, x1, x2)

inst_96040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:288120*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288120*0 + 3*40*FLEN/8, x4, x1, x2)

inst_96041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:288123*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288123*0 + 3*41*FLEN/8, x4, x1, x2)

inst_96042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:288126*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288126*0 + 3*42*FLEN/8, x4, x1, x2)

inst_96043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:288129*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288129*0 + 3*43*FLEN/8, x4, x1, x2)

inst_96044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:288132*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288132*0 + 3*44*FLEN/8, x4, x1, x2)

inst_96045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:288135*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288135*0 + 3*45*FLEN/8, x4, x1, x2)

inst_96046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:288138*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288138*0 + 3*46*FLEN/8, x4, x1, x2)

inst_96047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:288141*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288141*0 + 3*47*FLEN/8, x4, x1, x2)

inst_96048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:288144*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288144*0 + 3*48*FLEN/8, x4, x1, x2)

inst_96049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:288147*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288147*0 + 3*49*FLEN/8, x4, x1, x2)

inst_96050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:288150*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288150*0 + 3*50*FLEN/8, x4, x1, x2)

inst_96051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:288153*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288153*0 + 3*51*FLEN/8, x4, x1, x2)

inst_96052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:288156*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288156*0 + 3*52*FLEN/8, x4, x1, x2)

inst_96053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:288159*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288159*0 + 3*53*FLEN/8, x4, x1, x2)

inst_96054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:288162*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288162*0 + 3*54*FLEN/8, x4, x1, x2)

inst_96055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:288165*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288165*0 + 3*55*FLEN/8, x4, x1, x2)

inst_96056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:288168*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288168*0 + 3*56*FLEN/8, x4, x1, x2)

inst_96057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:288171*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288171*0 + 3*57*FLEN/8, x4, x1, x2)

inst_96058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:288174*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288174*0 + 3*58*FLEN/8, x4, x1, x2)

inst_96059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:288177*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288177*0 + 3*59*FLEN/8, x4, x1, x2)

inst_96060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:288180*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288180*0 + 3*60*FLEN/8, x4, x1, x2)

inst_96061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:288183*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288183*0 + 3*61*FLEN/8, x4, x1, x2)

inst_96062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:288186*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288186*0 + 3*62*FLEN/8, x4, x1, x2)

inst_96063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:288189*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288189*0 + 3*63*FLEN/8, x4, x1, x2)

inst_96064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:288192*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288192*0 + 3*64*FLEN/8, x4, x1, x2)

inst_96065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:288195*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288195*0 + 3*65*FLEN/8, x4, x1, x2)

inst_96066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:288198*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288198*0 + 3*66*FLEN/8, x4, x1, x2)

inst_96067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:288201*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288201*0 + 3*67*FLEN/8, x4, x1, x2)

inst_96068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:288204*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288204*0 + 3*68*FLEN/8, x4, x1, x2)

inst_96069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:288207*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288207*0 + 3*69*FLEN/8, x4, x1, x2)

inst_96070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:288210*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288210*0 + 3*70*FLEN/8, x4, x1, x2)

inst_96071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:288213*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288213*0 + 3*71*FLEN/8, x4, x1, x2)

inst_96072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:288216*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288216*0 + 3*72*FLEN/8, x4, x1, x2)

inst_96073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:288219*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288219*0 + 3*73*FLEN/8, x4, x1, x2)

inst_96074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:288222*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288222*0 + 3*74*FLEN/8, x4, x1, x2)

inst_96075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:288225*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288225*0 + 3*75*FLEN/8, x4, x1, x2)

inst_96076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:288228*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288228*0 + 3*76*FLEN/8, x4, x1, x2)

inst_96077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:288231*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288231*0 + 3*77*FLEN/8, x4, x1, x2)

inst_96078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:288234*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288234*0 + 3*78*FLEN/8, x4, x1, x2)

inst_96079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:288237*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288237*0 + 3*79*FLEN/8, x4, x1, x2)

inst_96080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:288240*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288240*0 + 3*80*FLEN/8, x4, x1, x2)

inst_96081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:288243*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288243*0 + 3*81*FLEN/8, x4, x1, x2)

inst_96082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:288246*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288246*0 + 3*82*FLEN/8, x4, x1, x2)

inst_96083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:288249*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288249*0 + 3*83*FLEN/8, x4, x1, x2)

inst_96084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:288252*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288252*0 + 3*84*FLEN/8, x4, x1, x2)

inst_96085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:288255*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288255*0 + 3*85*FLEN/8, x4, x1, x2)

inst_96086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:288258*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288258*0 + 3*86*FLEN/8, x4, x1, x2)

inst_96087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:288261*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288261*0 + 3*87*FLEN/8, x4, x1, x2)

inst_96088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:288264*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288264*0 + 3*88*FLEN/8, x4, x1, x2)

inst_96089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:288267*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288267*0 + 3*89*FLEN/8, x4, x1, x2)

inst_96090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:288270*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288270*0 + 3*90*FLEN/8, x4, x1, x2)

inst_96091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:288273*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288273*0 + 3*91*FLEN/8, x4, x1, x2)

inst_96092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:288276*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288276*0 + 3*92*FLEN/8, x4, x1, x2)

inst_96093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:288279*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288279*0 + 3*93*FLEN/8, x4, x1, x2)

inst_96094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:288282*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288282*0 + 3*94*FLEN/8, x4, x1, x2)

inst_96095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe07e5ae760155 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae07e5ae760155; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:288285*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288285*0 + 3*95*FLEN/8, x4, x1, x2)

inst_96096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:288288*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288288*0 + 3*96*FLEN/8, x4, x1, x2)

inst_96097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:288291*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288291*0 + 3*97*FLEN/8, x4, x1, x2)

inst_96098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:288294*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288294*0 + 3*98*FLEN/8, x4, x1, x2)

inst_96099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:288297*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288297*0 + 3*99*FLEN/8, x4, x1, x2)

inst_96100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:288300*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288300*0 + 3*100*FLEN/8, x4, x1, x2)

inst_96101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:288303*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288303*0 + 3*101*FLEN/8, x4, x1, x2)

inst_96102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:288306*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288306*0 + 3*102*FLEN/8, x4, x1, x2)

inst_96103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:288309*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288309*0 + 3*103*FLEN/8, x4, x1, x2)

inst_96104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:288312*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288312*0 + 3*104*FLEN/8, x4, x1, x2)

inst_96105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:288315*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288315*0 + 3*105*FLEN/8, x4, x1, x2)

inst_96106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:288318*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288318*0 + 3*106*FLEN/8, x4, x1, x2)

inst_96107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:288321*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288321*0 + 3*107*FLEN/8, x4, x1, x2)

inst_96108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:288324*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288324*0 + 3*108*FLEN/8, x4, x1, x2)

inst_96109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:288327*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288327*0 + 3*109*FLEN/8, x4, x1, x2)

inst_96110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:288330*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288330*0 + 3*110*FLEN/8, x4, x1, x2)

inst_96111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:288333*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288333*0 + 3*111*FLEN/8, x4, x1, x2)

inst_96112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:288336*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288336*0 + 3*112*FLEN/8, x4, x1, x2)

inst_96113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:288339*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288339*0 + 3*113*FLEN/8, x4, x1, x2)

inst_96114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:288342*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288342*0 + 3*114*FLEN/8, x4, x1, x2)

inst_96115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:288345*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288345*0 + 3*115*FLEN/8, x4, x1, x2)

inst_96116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:288348*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288348*0 + 3*116*FLEN/8, x4, x1, x2)

inst_96117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:288351*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288351*0 + 3*117*FLEN/8, x4, x1, x2)

inst_96118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000000000; valaddr_reg:x3; val_offset:288354*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288354*0 + 3*118*FLEN/8, x4, x1, x2)

inst_96119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000000001; valaddr_reg:x3; val_offset:288357*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288357*0 + 3*119*FLEN/8, x4, x1, x2)

inst_96120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000000003; valaddr_reg:x3; val_offset:288360*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288360*0 + 3*120*FLEN/8, x4, x1, x2)

inst_96121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000000007; valaddr_reg:x3; val_offset:288363*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288363*0 + 3*121*FLEN/8, x4, x1, x2)

inst_96122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000000000f; valaddr_reg:x3; val_offset:288366*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288366*0 + 3*122*FLEN/8, x4, x1, x2)

inst_96123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000000001f; valaddr_reg:x3; val_offset:288369*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288369*0 + 3*123*FLEN/8, x4, x1, x2)

inst_96124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000000003f; valaddr_reg:x3; val_offset:288372*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288372*0 + 3*124*FLEN/8, x4, x1, x2)

inst_96125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000000007f; valaddr_reg:x3; val_offset:288375*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288375*0 + 3*125*FLEN/8, x4, x1, x2)

inst_96126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000000000ff; valaddr_reg:x3; val_offset:288378*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288378*0 + 3*126*FLEN/8, x4, x1, x2)

inst_96127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000000001ff; valaddr_reg:x3; val_offset:288381*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288381*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_96128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000000003ff; valaddr_reg:x3; val_offset:288384*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288384*0 + 3*128*FLEN/8, x4, x1, x2)

inst_96129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000000007ff; valaddr_reg:x3; val_offset:288387*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288387*0 + 3*129*FLEN/8, x4, x1, x2)

inst_96130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000000fff; valaddr_reg:x3; val_offset:288390*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288390*0 + 3*130*FLEN/8, x4, x1, x2)

inst_96131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000001fff; valaddr_reg:x3; val_offset:288393*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288393*0 + 3*131*FLEN/8, x4, x1, x2)

inst_96132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000003fff; valaddr_reg:x3; val_offset:288396*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288396*0 + 3*132*FLEN/8, x4, x1, x2)

inst_96133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000007fff; valaddr_reg:x3; val_offset:288399*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288399*0 + 3*133*FLEN/8, x4, x1, x2)

inst_96134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000000ffff; valaddr_reg:x3; val_offset:288402*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288402*0 + 3*134*FLEN/8, x4, x1, x2)

inst_96135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000001ffff; valaddr_reg:x3; val_offset:288405*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288405*0 + 3*135*FLEN/8, x4, x1, x2)

inst_96136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000003ffff; valaddr_reg:x3; val_offset:288408*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288408*0 + 3*136*FLEN/8, x4, x1, x2)

inst_96137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000007ffff; valaddr_reg:x3; val_offset:288411*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288411*0 + 3*137*FLEN/8, x4, x1, x2)

inst_96138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000000fffff; valaddr_reg:x3; val_offset:288414*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288414*0 + 3*138*FLEN/8, x4, x1, x2)

inst_96139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000001fffff; valaddr_reg:x3; val_offset:288417*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288417*0 + 3*139*FLEN/8, x4, x1, x2)

inst_96140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000003fffff; valaddr_reg:x3; val_offset:288420*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288420*0 + 3*140*FLEN/8, x4, x1, x2)

inst_96141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000007fffff; valaddr_reg:x3; val_offset:288423*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288423*0 + 3*141*FLEN/8, x4, x1, x2)

inst_96142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000000ffffff; valaddr_reg:x3; val_offset:288426*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288426*0 + 3*142*FLEN/8, x4, x1, x2)

inst_96143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000001ffffff; valaddr_reg:x3; val_offset:288429*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288429*0 + 3*143*FLEN/8, x4, x1, x2)

inst_96144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000003ffffff; valaddr_reg:x3; val_offset:288432*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288432*0 + 3*144*FLEN/8, x4, x1, x2)

inst_96145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000007ffffff; valaddr_reg:x3; val_offset:288435*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288435*0 + 3*145*FLEN/8, x4, x1, x2)

inst_96146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000000fffffff; valaddr_reg:x3; val_offset:288438*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288438*0 + 3*146*FLEN/8, x4, x1, x2)

inst_96147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000001fffffff; valaddr_reg:x3; val_offset:288441*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288441*0 + 3*147*FLEN/8, x4, x1, x2)

inst_96148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000003fffffff; valaddr_reg:x3; val_offset:288444*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288444*0 + 3*148*FLEN/8, x4, x1, x2)

inst_96149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000007fffffff; valaddr_reg:x3; val_offset:288447*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288447*0 + 3*149*FLEN/8, x4, x1, x2)

inst_96150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500000ffffffff; valaddr_reg:x3; val_offset:288450*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288450*0 + 3*150*FLEN/8, x4, x1, x2)

inst_96151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500001ffffffff; valaddr_reg:x3; val_offset:288453*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288453*0 + 3*151*FLEN/8, x4, x1, x2)

inst_96152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500003ffffffff; valaddr_reg:x3; val_offset:288456*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288456*0 + 3*152*FLEN/8, x4, x1, x2)

inst_96153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500007ffffffff; valaddr_reg:x3; val_offset:288459*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288459*0 + 3*153*FLEN/8, x4, x1, x2)

inst_96154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250000fffffffff; valaddr_reg:x3; val_offset:288462*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288462*0 + 3*154*FLEN/8, x4, x1, x2)

inst_96155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250001fffffffff; valaddr_reg:x3; val_offset:288465*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288465*0 + 3*155*FLEN/8, x4, x1, x2)

inst_96156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250003fffffffff; valaddr_reg:x3; val_offset:288468*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288468*0 + 3*156*FLEN/8, x4, x1, x2)

inst_96157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250007fffffffff; valaddr_reg:x3; val_offset:288471*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288471*0 + 3*157*FLEN/8, x4, x1, x2)

inst_96158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25000ffffffffff; valaddr_reg:x3; val_offset:288474*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288474*0 + 3*158*FLEN/8, x4, x1, x2)

inst_96159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25001ffffffffff; valaddr_reg:x3; val_offset:288477*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288477*0 + 3*159*FLEN/8, x4, x1, x2)

inst_96160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25003ffffffffff; valaddr_reg:x3; val_offset:288480*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288480*0 + 3*160*FLEN/8, x4, x1, x2)

inst_96161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25007ffffffffff; valaddr_reg:x3; val_offset:288483*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288483*0 + 3*161*FLEN/8, x4, x1, x2)

inst_96162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2500fffffffffff; valaddr_reg:x3; val_offset:288486*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288486*0 + 3*162*FLEN/8, x4, x1, x2)

inst_96163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2501fffffffffff; valaddr_reg:x3; val_offset:288489*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288489*0 + 3*163*FLEN/8, x4, x1, x2)

inst_96164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2503fffffffffff; valaddr_reg:x3; val_offset:288492*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288492*0 + 3*164*FLEN/8, x4, x1, x2)

inst_96165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x2507fffffffffff; valaddr_reg:x3; val_offset:288495*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288495*0 + 3*165*FLEN/8, x4, x1, x2)

inst_96166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x250ffffffffffff; valaddr_reg:x3; val_offset:288498*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288498*0 + 3*166*FLEN/8, x4, x1, x2)

inst_96167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x251ffffffffffff; valaddr_reg:x3; val_offset:288501*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288501*0 + 3*167*FLEN/8, x4, x1, x2)

inst_96168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x253ffffffffffff; valaddr_reg:x3; val_offset:288504*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288504*0 + 3*168*FLEN/8, x4, x1, x2)

inst_96169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x257ffffffffffff; valaddr_reg:x3; val_offset:288507*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288507*0 + 3*169*FLEN/8, x4, x1, x2)

inst_96170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x258000000000000; valaddr_reg:x3; val_offset:288510*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288510*0 + 3*170*FLEN/8, x4, x1, x2)

inst_96171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25c000000000000; valaddr_reg:x3; val_offset:288513*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288513*0 + 3*171*FLEN/8, x4, x1, x2)

inst_96172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25e000000000000; valaddr_reg:x3; val_offset:288516*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288516*0 + 3*172*FLEN/8, x4, x1, x2)

inst_96173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25f000000000000; valaddr_reg:x3; val_offset:288519*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288519*0 + 3*173*FLEN/8, x4, x1, x2)

inst_96174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:288522*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288522*0 + 3*174*FLEN/8, x4, x1, x2)

inst_96175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:288525*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288525*0 + 3*175*FLEN/8, x4, x1, x2)

inst_96176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:288528*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288528*0 + 3*176*FLEN/8, x4, x1, x2)

inst_96177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:288531*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288531*0 + 3*177*FLEN/8, x4, x1, x2)

inst_96178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:288534*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288534*0 + 3*178*FLEN/8, x4, x1, x2)

inst_96179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:288537*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288537*0 + 3*179*FLEN/8, x4, x1, x2)

inst_96180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:288540*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288540*0 + 3*180*FLEN/8, x4, x1, x2)

inst_96181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:288543*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288543*0 + 3*181*FLEN/8, x4, x1, x2)

inst_96182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:288546*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288546*0 + 3*182*FLEN/8, x4, x1, x2)

inst_96183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:288549*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288549*0 + 3*183*FLEN/8, x4, x1, x2)

inst_96184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:288552*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288552*0 + 3*184*FLEN/8, x4, x1, x2)

inst_96185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:288555*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288555*0 + 3*185*FLEN/8, x4, x1, x2)

inst_96186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:288558*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288558*0 + 3*186*FLEN/8, x4, x1, x2)

inst_96187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:288561*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288561*0 + 3*187*FLEN/8, x4, x1, x2)

inst_96188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:288564*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288564*0 + 3*188*FLEN/8, x4, x1, x2)

inst_96189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:288567*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288567*0 + 3*189*FLEN/8, x4, x1, x2)

inst_96190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:288570*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288570*0 + 3*190*FLEN/8, x4, x1, x2)

inst_96191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:288573*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288573*0 + 3*191*FLEN/8, x4, x1, x2)

inst_96192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:288576*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288576*0 + 3*192*FLEN/8, x4, x1, x2)

inst_96193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:288579*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288579*0 + 3*193*FLEN/8, x4, x1, x2)

inst_96194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:288582*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288582*0 + 3*194*FLEN/8, x4, x1, x2)

inst_96195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:288585*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288585*0 + 3*195*FLEN/8, x4, x1, x2)

inst_96196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:288588*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288588*0 + 3*196*FLEN/8, x4, x1, x2)

inst_96197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:288591*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288591*0 + 3*197*FLEN/8, x4, x1, x2)

inst_96198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:288594*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288594*0 + 3*198*FLEN/8, x4, x1, x2)

inst_96199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:288597*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288597*0 + 3*199*FLEN/8, x4, x1, x2)

inst_96200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:288600*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288600*0 + 3*200*FLEN/8, x4, x1, x2)

inst_96201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:288603*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288603*0 + 3*201*FLEN/8, x4, x1, x2)

inst_96202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:288606*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288606*0 + 3*202*FLEN/8, x4, x1, x2)

inst_96203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:288609*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288609*0 + 3*203*FLEN/8, x4, x1, x2)

inst_96204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:288612*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288612*0 + 3*204*FLEN/8, x4, x1, x2)

inst_96205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:288615*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288615*0 + 3*205*FLEN/8, x4, x1, x2)

inst_96206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:288618*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288618*0 + 3*206*FLEN/8, x4, x1, x2)

inst_96207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:288621*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288621*0 + 3*207*FLEN/8, x4, x1, x2)

inst_96208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:288624*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288624*0 + 3*208*FLEN/8, x4, x1, x2)

inst_96209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:288627*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288627*0 + 3*209*FLEN/8, x4, x1, x2)

inst_96210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:288630*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288630*0 + 3*210*FLEN/8, x4, x1, x2)

inst_96211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:288633*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288633*0 + 3*211*FLEN/8, x4, x1, x2)

inst_96212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:288636*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288636*0 + 3*212*FLEN/8, x4, x1, x2)

inst_96213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:288639*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288639*0 + 3*213*FLEN/8, x4, x1, x2)

inst_96214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:288642*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288642*0 + 3*214*FLEN/8, x4, x1, x2)

inst_96215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:288645*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288645*0 + 3*215*FLEN/8, x4, x1, x2)

inst_96216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:288648*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288648*0 + 3*216*FLEN/8, x4, x1, x2)

inst_96217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:288651*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288651*0 + 3*217*FLEN/8, x4, x1, x2)

inst_96218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:288654*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288654*0 + 3*218*FLEN/8, x4, x1, x2)

inst_96219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:288657*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288657*0 + 3*219*FLEN/8, x4, x1, x2)

inst_96220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:288660*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288660*0 + 3*220*FLEN/8, x4, x1, x2)

inst_96221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2536cf213b8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2536cf213b8e; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:288663*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288663*0 + 3*221*FLEN/8, x4, x1, x2)

inst_96222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:288666*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288666*0 + 3*222*FLEN/8, x4, x1, x2)

inst_96223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:288669*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288669*0 + 3*223*FLEN/8, x4, x1, x2)

inst_96224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:288672*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288672*0 + 3*224*FLEN/8, x4, x1, x2)

inst_96225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:288675*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288675*0 + 3*225*FLEN/8, x4, x1, x2)

inst_96226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:288678*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288678*0 + 3*226*FLEN/8, x4, x1, x2)

inst_96227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:288681*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288681*0 + 3*227*FLEN/8, x4, x1, x2)

inst_96228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:288684*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288684*0 + 3*228*FLEN/8, x4, x1, x2)

inst_96229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:288687*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288687*0 + 3*229*FLEN/8, x4, x1, x2)

inst_96230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:288690*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288690*0 + 3*230*FLEN/8, x4, x1, x2)

inst_96231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:288693*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288693*0 + 3*231*FLEN/8, x4, x1, x2)

inst_96232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:288696*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288696*0 + 3*232*FLEN/8, x4, x1, x2)

inst_96233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:288699*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288699*0 + 3*233*FLEN/8, x4, x1, x2)

inst_96234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:288702*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288702*0 + 3*234*FLEN/8, x4, x1, x2)

inst_96235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:288705*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288705*0 + 3*235*FLEN/8, x4, x1, x2)

inst_96236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:288708*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288708*0 + 3*236*FLEN/8, x4, x1, x2)

inst_96237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:288711*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288711*0 + 3*237*FLEN/8, x4, x1, x2)

inst_96238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:288714*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288714*0 + 3*238*FLEN/8, x4, x1, x2)

inst_96239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:288717*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288717*0 + 3*239*FLEN/8, x4, x1, x2)

inst_96240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:288720*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288720*0 + 3*240*FLEN/8, x4, x1, x2)

inst_96241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:288723*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288723*0 + 3*241*FLEN/8, x4, x1, x2)

inst_96242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:288726*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288726*0 + 3*242*FLEN/8, x4, x1, x2)

inst_96243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:288729*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288729*0 + 3*243*FLEN/8, x4, x1, x2)

inst_96244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000000000; valaddr_reg:x3; val_offset:288732*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288732*0 + 3*244*FLEN/8, x4, x1, x2)

inst_96245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000000001; valaddr_reg:x3; val_offset:288735*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288735*0 + 3*245*FLEN/8, x4, x1, x2)

inst_96246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000000003; valaddr_reg:x3; val_offset:288738*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288738*0 + 3*246*FLEN/8, x4, x1, x2)

inst_96247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000000007; valaddr_reg:x3; val_offset:288741*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288741*0 + 3*247*FLEN/8, x4, x1, x2)

inst_96248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000000f; valaddr_reg:x3; val_offset:288744*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288744*0 + 3*248*FLEN/8, x4, x1, x2)

inst_96249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000001f; valaddr_reg:x3; val_offset:288747*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288747*0 + 3*249*FLEN/8, x4, x1, x2)

inst_96250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000003f; valaddr_reg:x3; val_offset:288750*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288750*0 + 3*250*FLEN/8, x4, x1, x2)

inst_96251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000007f; valaddr_reg:x3; val_offset:288753*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288753*0 + 3*251*FLEN/8, x4, x1, x2)

inst_96252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000000ff; valaddr_reg:x3; val_offset:288756*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288756*0 + 3*252*FLEN/8, x4, x1, x2)

inst_96253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000001ff; valaddr_reg:x3; val_offset:288759*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288759*0 + 3*253*FLEN/8, x4, x1, x2)

inst_96254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000003ff; valaddr_reg:x3; val_offset:288762*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288762*0 + 3*254*FLEN/8, x4, x1, x2)

inst_96255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000007ff; valaddr_reg:x3; val_offset:288765*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288765*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_96256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000000fff; valaddr_reg:x3; val_offset:288768*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288768*0 + 3*256*FLEN/8, x4, x1, x2)

inst_96257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000001fff; valaddr_reg:x3; val_offset:288771*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288771*0 + 3*257*FLEN/8, x4, x1, x2)

inst_96258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000003fff; valaddr_reg:x3; val_offset:288774*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288774*0 + 3*258*FLEN/8, x4, x1, x2)

inst_96259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000007fff; valaddr_reg:x3; val_offset:288777*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288777*0 + 3*259*FLEN/8, x4, x1, x2)

inst_96260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000000ffff; valaddr_reg:x3; val_offset:288780*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288780*0 + 3*260*FLEN/8, x4, x1, x2)

inst_96261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000001ffff; valaddr_reg:x3; val_offset:288783*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288783*0 + 3*261*FLEN/8, x4, x1, x2)

inst_96262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000003ffff; valaddr_reg:x3; val_offset:288786*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288786*0 + 3*262*FLEN/8, x4, x1, x2)

inst_96263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000007ffff; valaddr_reg:x3; val_offset:288789*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288789*0 + 3*263*FLEN/8, x4, x1, x2)

inst_96264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000000fffff; valaddr_reg:x3; val_offset:288792*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288792*0 + 3*264*FLEN/8, x4, x1, x2)

inst_96265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000001fffff; valaddr_reg:x3; val_offset:288795*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288795*0 + 3*265*FLEN/8, x4, x1, x2)

inst_96266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000003fffff; valaddr_reg:x3; val_offset:288798*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288798*0 + 3*266*FLEN/8, x4, x1, x2)

inst_96267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000007fffff; valaddr_reg:x3; val_offset:288801*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288801*0 + 3*267*FLEN/8, x4, x1, x2)

inst_96268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000000ffffff; valaddr_reg:x3; val_offset:288804*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288804*0 + 3*268*FLEN/8, x4, x1, x2)

inst_96269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000001ffffff; valaddr_reg:x3; val_offset:288807*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288807*0 + 3*269*FLEN/8, x4, x1, x2)

inst_96270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000003ffffff; valaddr_reg:x3; val_offset:288810*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288810*0 + 3*270*FLEN/8, x4, x1, x2)

inst_96271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000007ffffff; valaddr_reg:x3; val_offset:288813*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288813*0 + 3*271*FLEN/8, x4, x1, x2)

inst_96272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000000fffffff; valaddr_reg:x3; val_offset:288816*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288816*0 + 3*272*FLEN/8, x4, x1, x2)

inst_96273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000001fffffff; valaddr_reg:x3; val_offset:288819*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288819*0 + 3*273*FLEN/8, x4, x1, x2)

inst_96274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000003fffffff; valaddr_reg:x3; val_offset:288822*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288822*0 + 3*274*FLEN/8, x4, x1, x2)

inst_96275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000007fffffff; valaddr_reg:x3; val_offset:288825*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288825*0 + 3*275*FLEN/8, x4, x1, x2)

inst_96276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000000ffffffff; valaddr_reg:x3; val_offset:288828*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288828*0 + 3*276*FLEN/8, x4, x1, x2)

inst_96277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000001ffffffff; valaddr_reg:x3; val_offset:288831*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288831*0 + 3*277*FLEN/8, x4, x1, x2)

inst_96278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000003ffffffff; valaddr_reg:x3; val_offset:288834*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288834*0 + 3*278*FLEN/8, x4, x1, x2)

inst_96279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000007ffffffff; valaddr_reg:x3; val_offset:288837*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288837*0 + 3*279*FLEN/8, x4, x1, x2)

inst_96280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100000fffffffff; valaddr_reg:x3; val_offset:288840*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288840*0 + 3*280*FLEN/8, x4, x1, x2)

inst_96281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100001fffffffff; valaddr_reg:x3; val_offset:288843*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288843*0 + 3*281*FLEN/8, x4, x1, x2)

inst_96282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100003fffffffff; valaddr_reg:x3; val_offset:288846*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288846*0 + 3*282*FLEN/8, x4, x1, x2)

inst_96283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100007fffffffff; valaddr_reg:x3; val_offset:288849*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288849*0 + 3*283*FLEN/8, x4, x1, x2)

inst_96284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10000ffffffffff; valaddr_reg:x3; val_offset:288852*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288852*0 + 3*284*FLEN/8, x4, x1, x2)

inst_96285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10001ffffffffff; valaddr_reg:x3; val_offset:288855*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288855*0 + 3*285*FLEN/8, x4, x1, x2)

inst_96286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10003ffffffffff; valaddr_reg:x3; val_offset:288858*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288858*0 + 3*286*FLEN/8, x4, x1, x2)

inst_96287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10007ffffffffff; valaddr_reg:x3; val_offset:288861*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288861*0 + 3*287*FLEN/8, x4, x1, x2)

inst_96288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1000fffffffffff; valaddr_reg:x3; val_offset:288864*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288864*0 + 3*288*FLEN/8, x4, x1, x2)

inst_96289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1001fffffffffff; valaddr_reg:x3; val_offset:288867*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288867*0 + 3*289*FLEN/8, x4, x1, x2)

inst_96290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1003fffffffffff; valaddr_reg:x3; val_offset:288870*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288870*0 + 3*290*FLEN/8, x4, x1, x2)

inst_96291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x1007fffffffffff; valaddr_reg:x3; val_offset:288873*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288873*0 + 3*291*FLEN/8, x4, x1, x2)

inst_96292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x100ffffffffffff; valaddr_reg:x3; val_offset:288876*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288876*0 + 3*292*FLEN/8, x4, x1, x2)

inst_96293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x101ffffffffffff; valaddr_reg:x3; val_offset:288879*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288879*0 + 3*293*FLEN/8, x4, x1, x2)

inst_96294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x103ffffffffffff; valaddr_reg:x3; val_offset:288882*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288882*0 + 3*294*FLEN/8, x4, x1, x2)

inst_96295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x107ffffffffffff; valaddr_reg:x3; val_offset:288885*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288885*0 + 3*295*FLEN/8, x4, x1, x2)

inst_96296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x108000000000000; valaddr_reg:x3; val_offset:288888*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288888*0 + 3*296*FLEN/8, x4, x1, x2)

inst_96297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10c000000000000; valaddr_reg:x3; val_offset:288891*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288891*0 + 3*297*FLEN/8, x4, x1, x2)

inst_96298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10e000000000000; valaddr_reg:x3; val_offset:288894*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288894*0 + 3*298*FLEN/8, x4, x1, x2)

inst_96299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10f000000000000; valaddr_reg:x3; val_offset:288897*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288897*0 + 3*299*FLEN/8, x4, x1, x2)

inst_96300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10f800000000000; valaddr_reg:x3; val_offset:288900*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288900*0 + 3*300*FLEN/8, x4, x1, x2)

inst_96301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fc00000000000; valaddr_reg:x3; val_offset:288903*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288903*0 + 3*301*FLEN/8, x4, x1, x2)

inst_96302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fe00000000000; valaddr_reg:x3; val_offset:288906*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288906*0 + 3*302*FLEN/8, x4, x1, x2)

inst_96303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ff00000000000; valaddr_reg:x3; val_offset:288909*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288909*0 + 3*303*FLEN/8, x4, x1, x2)

inst_96304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ff80000000000; valaddr_reg:x3; val_offset:288912*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288912*0 + 3*304*FLEN/8, x4, x1, x2)

inst_96305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffc0000000000; valaddr_reg:x3; val_offset:288915*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288915*0 + 3*305*FLEN/8, x4, x1, x2)

inst_96306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffe0000000000; valaddr_reg:x3; val_offset:288918*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288918*0 + 3*306*FLEN/8, x4, x1, x2)

inst_96307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fff0000000000; valaddr_reg:x3; val_offset:288921*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288921*0 + 3*307*FLEN/8, x4, x1, x2)

inst_96308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fff8000000000; valaddr_reg:x3; val_offset:288924*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288924*0 + 3*308*FLEN/8, x4, x1, x2)

inst_96309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffc000000000; valaddr_reg:x3; val_offset:288927*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288927*0 + 3*309*FLEN/8, x4, x1, x2)

inst_96310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffe000000000; valaddr_reg:x3; val_offset:288930*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288930*0 + 3*310*FLEN/8, x4, x1, x2)

inst_96311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffff000000000; valaddr_reg:x3; val_offset:288933*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288933*0 + 3*311*FLEN/8, x4, x1, x2)

inst_96312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffff800000000; valaddr_reg:x3; val_offset:288936*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288936*0 + 3*312*FLEN/8, x4, x1, x2)

inst_96313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffc00000000; valaddr_reg:x3; val_offset:288939*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288939*0 + 3*313*FLEN/8, x4, x1, x2)

inst_96314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffe00000000; valaddr_reg:x3; val_offset:288942*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288942*0 + 3*314*FLEN/8, x4, x1, x2)

inst_96315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffff00000000; valaddr_reg:x3; val_offset:288945*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288945*0 + 3*315*FLEN/8, x4, x1, x2)

inst_96316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffff80000000; valaddr_reg:x3; val_offset:288948*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288948*0 + 3*316*FLEN/8, x4, x1, x2)

inst_96317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffc0000000; valaddr_reg:x3; val_offset:288951*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288951*0 + 3*317*FLEN/8, x4, x1, x2)

inst_96318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffe0000000; valaddr_reg:x3; val_offset:288954*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288954*0 + 3*318*FLEN/8, x4, x1, x2)

inst_96319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffff0000000; valaddr_reg:x3; val_offset:288957*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288957*0 + 3*319*FLEN/8, x4, x1, x2)

inst_96320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffff8000000; valaddr_reg:x3; val_offset:288960*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288960*0 + 3*320*FLEN/8, x4, x1, x2)

inst_96321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffc000000; valaddr_reg:x3; val_offset:288963*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288963*0 + 3*321*FLEN/8, x4, x1, x2)

inst_96322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffe000000; valaddr_reg:x3; val_offset:288966*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288966*0 + 3*322*FLEN/8, x4, x1, x2)

inst_96323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffff000000; valaddr_reg:x3; val_offset:288969*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288969*0 + 3*323*FLEN/8, x4, x1, x2)

inst_96324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffff800000; valaddr_reg:x3; val_offset:288972*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288972*0 + 3*324*FLEN/8, x4, x1, x2)

inst_96325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffc00000; valaddr_reg:x3; val_offset:288975*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288975*0 + 3*325*FLEN/8, x4, x1, x2)

inst_96326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffe00000; valaddr_reg:x3; val_offset:288978*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288978*0 + 3*326*FLEN/8, x4, x1, x2)

inst_96327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffff00000; valaddr_reg:x3; val_offset:288981*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288981*0 + 3*327*FLEN/8, x4, x1, x2)

inst_96328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffff80000; valaddr_reg:x3; val_offset:288984*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288984*0 + 3*328*FLEN/8, x4, x1, x2)

inst_96329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffc0000; valaddr_reg:x3; val_offset:288987*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288987*0 + 3*329*FLEN/8, x4, x1, x2)

inst_96330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffe0000; valaddr_reg:x3; val_offset:288990*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288990*0 + 3*330*FLEN/8, x4, x1, x2)

inst_96331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffff0000; valaddr_reg:x3; val_offset:288993*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288993*0 + 3*331*FLEN/8, x4, x1, x2)

inst_96332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffff8000; valaddr_reg:x3; val_offset:288996*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288996*0 + 3*332*FLEN/8, x4, x1, x2)

inst_96333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffc000; valaddr_reg:x3; val_offset:288999*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288999*0 + 3*333*FLEN/8, x4, x1, x2)

inst_96334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffe000; valaddr_reg:x3; val_offset:289002*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289002*0 + 3*334*FLEN/8, x4, x1, x2)

inst_96335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffff000; valaddr_reg:x3; val_offset:289005*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289005*0 + 3*335*FLEN/8, x4, x1, x2)

inst_96336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffff800; valaddr_reg:x3; val_offset:289008*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289008*0 + 3*336*FLEN/8, x4, x1, x2)

inst_96337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffc00; valaddr_reg:x3; val_offset:289011*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289011*0 + 3*337*FLEN/8, x4, x1, x2)

inst_96338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffe00; valaddr_reg:x3; val_offset:289014*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289014*0 + 3*338*FLEN/8, x4, x1, x2)

inst_96339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffff00; valaddr_reg:x3; val_offset:289017*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289017*0 + 3*339*FLEN/8, x4, x1, x2)

inst_96340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffff80; valaddr_reg:x3; val_offset:289020*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289020*0 + 3*340*FLEN/8, x4, x1, x2)

inst_96341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffffc0; valaddr_reg:x3; val_offset:289023*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289023*0 + 3*341*FLEN/8, x4, x1, x2)

inst_96342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffffe0; valaddr_reg:x3; val_offset:289026*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289026*0 + 3*342*FLEN/8, x4, x1, x2)

inst_96343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffff0; valaddr_reg:x3; val_offset:289029*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289029*0 + 3*343*FLEN/8, x4, x1, x2)

inst_96344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffff8; valaddr_reg:x3; val_offset:289032*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289032*0 + 3*344*FLEN/8, x4, x1, x2)

inst_96345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffffc; valaddr_reg:x3; val_offset:289035*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289035*0 + 3*345*FLEN/8, x4, x1, x2)

inst_96346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10ffffffffffffe; valaddr_reg:x3; val_offset:289038*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289038*0 + 3*346*FLEN/8, x4, x1, x2)

inst_96347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2ed80e7c5dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2ed80e7c5dc5; op2val:0x0;
op3val:0x10fffffffffffff; valaddr_reg:x3; val_offset:289041*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289041*0 + 3*347*FLEN/8, x4, x1, x2)

inst_96348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000000000; valaddr_reg:x3; val_offset:289044*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289044*0 + 3*348*FLEN/8, x4, x1, x2)

inst_96349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000000001; valaddr_reg:x3; val_offset:289047*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289047*0 + 3*349*FLEN/8, x4, x1, x2)

inst_96350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000000003; valaddr_reg:x3; val_offset:289050*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289050*0 + 3*350*FLEN/8, x4, x1, x2)

inst_96351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000000007; valaddr_reg:x3; val_offset:289053*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289053*0 + 3*351*FLEN/8, x4, x1, x2)

inst_96352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000000000f; valaddr_reg:x3; val_offset:289056*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289056*0 + 3*352*FLEN/8, x4, x1, x2)

inst_96353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000000001f; valaddr_reg:x3; val_offset:289059*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289059*0 + 3*353*FLEN/8, x4, x1, x2)

inst_96354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000000003f; valaddr_reg:x3; val_offset:289062*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289062*0 + 3*354*FLEN/8, x4, x1, x2)

inst_96355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000000007f; valaddr_reg:x3; val_offset:289065*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289065*0 + 3*355*FLEN/8, x4, x1, x2)

inst_96356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000000000ff; valaddr_reg:x3; val_offset:289068*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289068*0 + 3*356*FLEN/8, x4, x1, x2)

inst_96357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000000001ff; valaddr_reg:x3; val_offset:289071*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289071*0 + 3*357*FLEN/8, x4, x1, x2)

inst_96358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000000003ff; valaddr_reg:x3; val_offset:289074*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289074*0 + 3*358*FLEN/8, x4, x1, x2)

inst_96359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000000007ff; valaddr_reg:x3; val_offset:289077*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289077*0 + 3*359*FLEN/8, x4, x1, x2)

inst_96360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000000fff; valaddr_reg:x3; val_offset:289080*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289080*0 + 3*360*FLEN/8, x4, x1, x2)

inst_96361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000001fff; valaddr_reg:x3; val_offset:289083*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289083*0 + 3*361*FLEN/8, x4, x1, x2)

inst_96362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000003fff; valaddr_reg:x3; val_offset:289086*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289086*0 + 3*362*FLEN/8, x4, x1, x2)

inst_96363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000007fff; valaddr_reg:x3; val_offset:289089*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289089*0 + 3*363*FLEN/8, x4, x1, x2)

inst_96364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000000ffff; valaddr_reg:x3; val_offset:289092*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289092*0 + 3*364*FLEN/8, x4, x1, x2)

inst_96365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000001ffff; valaddr_reg:x3; val_offset:289095*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289095*0 + 3*365*FLEN/8, x4, x1, x2)

inst_96366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000003ffff; valaddr_reg:x3; val_offset:289098*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289098*0 + 3*366*FLEN/8, x4, x1, x2)

inst_96367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000007ffff; valaddr_reg:x3; val_offset:289101*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289101*0 + 3*367*FLEN/8, x4, x1, x2)

inst_96368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000000fffff; valaddr_reg:x3; val_offset:289104*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289104*0 + 3*368*FLEN/8, x4, x1, x2)

inst_96369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000001fffff; valaddr_reg:x3; val_offset:289107*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289107*0 + 3*369*FLEN/8, x4, x1, x2)

inst_96370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000003fffff; valaddr_reg:x3; val_offset:289110*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289110*0 + 3*370*FLEN/8, x4, x1, x2)

inst_96371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000007fffff; valaddr_reg:x3; val_offset:289113*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289113*0 + 3*371*FLEN/8, x4, x1, x2)

inst_96372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000000ffffff; valaddr_reg:x3; val_offset:289116*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289116*0 + 3*372*FLEN/8, x4, x1, x2)

inst_96373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000001ffffff; valaddr_reg:x3; val_offset:289119*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289119*0 + 3*373*FLEN/8, x4, x1, x2)

inst_96374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000003ffffff; valaddr_reg:x3; val_offset:289122*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289122*0 + 3*374*FLEN/8, x4, x1, x2)

inst_96375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000007ffffff; valaddr_reg:x3; val_offset:289125*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289125*0 + 3*375*FLEN/8, x4, x1, x2)

inst_96376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000000fffffff; valaddr_reg:x3; val_offset:289128*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289128*0 + 3*376*FLEN/8, x4, x1, x2)

inst_96377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000001fffffff; valaddr_reg:x3; val_offset:289131*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289131*0 + 3*377*FLEN/8, x4, x1, x2)

inst_96378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000003fffffff; valaddr_reg:x3; val_offset:289134*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289134*0 + 3*378*FLEN/8, x4, x1, x2)

inst_96379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000007fffffff; valaddr_reg:x3; val_offset:289137*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289137*0 + 3*379*FLEN/8, x4, x1, x2)

inst_96380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00000ffffffff; valaddr_reg:x3; val_offset:289140*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289140*0 + 3*380*FLEN/8, x4, x1, x2)

inst_96381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00001ffffffff; valaddr_reg:x3; val_offset:289143*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289143*0 + 3*381*FLEN/8, x4, x1, x2)

inst_96382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00003ffffffff; valaddr_reg:x3; val_offset:289146*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289146*0 + 3*382*FLEN/8, x4, x1, x2)

inst_96383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00007ffffffff; valaddr_reg:x3; val_offset:289149*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289149*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_96384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0000fffffffff; valaddr_reg:x3; val_offset:289152*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289152*0 + 3*384*FLEN/8, x4, x1, x2)

inst_96385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0001fffffffff; valaddr_reg:x3; val_offset:289155*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289155*0 + 3*385*FLEN/8, x4, x1, x2)

inst_96386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0003fffffffff; valaddr_reg:x3; val_offset:289158*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289158*0 + 3*386*FLEN/8, x4, x1, x2)

inst_96387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0007fffffffff; valaddr_reg:x3; val_offset:289161*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289161*0 + 3*387*FLEN/8, x4, x1, x2)

inst_96388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac000ffffffffff; valaddr_reg:x3; val_offset:289164*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289164*0 + 3*388*FLEN/8, x4, x1, x2)

inst_96389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac001ffffffffff; valaddr_reg:x3; val_offset:289167*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289167*0 + 3*389*FLEN/8, x4, x1, x2)

inst_96390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac003ffffffffff; valaddr_reg:x3; val_offset:289170*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289170*0 + 3*390*FLEN/8, x4, x1, x2)

inst_96391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac007ffffffffff; valaddr_reg:x3; val_offset:289173*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289173*0 + 3*391*FLEN/8, x4, x1, x2)

inst_96392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac00fffffffffff; valaddr_reg:x3; val_offset:289176*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289176*0 + 3*392*FLEN/8, x4, x1, x2)

inst_96393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac01fffffffffff; valaddr_reg:x3; val_offset:289179*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289179*0 + 3*393*FLEN/8, x4, x1, x2)

inst_96394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac03fffffffffff; valaddr_reg:x3; val_offset:289182*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289182*0 + 3*394*FLEN/8, x4, x1, x2)

inst_96395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac07fffffffffff; valaddr_reg:x3; val_offset:289185*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289185*0 + 3*395*FLEN/8, x4, x1, x2)

inst_96396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac0ffffffffffff; valaddr_reg:x3; val_offset:289188*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289188*0 + 3*396*FLEN/8, x4, x1, x2)

inst_96397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac1ffffffffffff; valaddr_reg:x3; val_offset:289191*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289191*0 + 3*397*FLEN/8, x4, x1, x2)

inst_96398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac3ffffffffffff; valaddr_reg:x3; val_offset:289194*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289194*0 + 3*398*FLEN/8, x4, x1, x2)

inst_96399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac7ffffffffffff; valaddr_reg:x3; val_offset:289197*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289197*0 + 3*399*FLEN/8, x4, x1, x2)

inst_96400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbac8000000000000; valaddr_reg:x3; val_offset:289200*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289200*0 + 3*400*FLEN/8, x4, x1, x2)

inst_96401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacc000000000000; valaddr_reg:x3; val_offset:289203*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289203*0 + 3*401*FLEN/8, x4, x1, x2)

inst_96402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbace000000000000; valaddr_reg:x3; val_offset:289206*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289206*0 + 3*402*FLEN/8, x4, x1, x2)

inst_96403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacf000000000000; valaddr_reg:x3; val_offset:289209*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289209*0 + 3*403*FLEN/8, x4, x1, x2)

inst_96404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacf800000000000; valaddr_reg:x3; val_offset:289212*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289212*0 + 3*404*FLEN/8, x4, x1, x2)

inst_96405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfc00000000000; valaddr_reg:x3; val_offset:289215*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289215*0 + 3*405*FLEN/8, x4, x1, x2)

inst_96406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfe00000000000; valaddr_reg:x3; val_offset:289218*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289218*0 + 3*406*FLEN/8, x4, x1, x2)

inst_96407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacff00000000000; valaddr_reg:x3; val_offset:289221*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289221*0 + 3*407*FLEN/8, x4, x1, x2)

inst_96408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacff80000000000; valaddr_reg:x3; val_offset:289224*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289224*0 + 3*408*FLEN/8, x4, x1, x2)

inst_96409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffc0000000000; valaddr_reg:x3; val_offset:289227*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289227*0 + 3*409*FLEN/8, x4, x1, x2)

inst_96410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffe0000000000; valaddr_reg:x3; val_offset:289230*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289230*0 + 3*410*FLEN/8, x4, x1, x2)

inst_96411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfff0000000000; valaddr_reg:x3; val_offset:289233*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289233*0 + 3*411*FLEN/8, x4, x1, x2)

inst_96412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfff8000000000; valaddr_reg:x3; val_offset:289236*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289236*0 + 3*412*FLEN/8, x4, x1, x2)

inst_96413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffc000000000; valaddr_reg:x3; val_offset:289239*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289239*0 + 3*413*FLEN/8, x4, x1, x2)

inst_96414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffe000000000; valaddr_reg:x3; val_offset:289242*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289242*0 + 3*414*FLEN/8, x4, x1, x2)

inst_96415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffff000000000; valaddr_reg:x3; val_offset:289245*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289245*0 + 3*415*FLEN/8, x4, x1, x2)

inst_96416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffff800000000; valaddr_reg:x3; val_offset:289248*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289248*0 + 3*416*FLEN/8, x4, x1, x2)

inst_96417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffc00000000; valaddr_reg:x3; val_offset:289251*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289251*0 + 3*417*FLEN/8, x4, x1, x2)

inst_96418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffe00000000; valaddr_reg:x3; val_offset:289254*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289254*0 + 3*418*FLEN/8, x4, x1, x2)

inst_96419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffff00000000; valaddr_reg:x3; val_offset:289257*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289257*0 + 3*419*FLEN/8, x4, x1, x2)

inst_96420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffff80000000; valaddr_reg:x3; val_offset:289260*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289260*0 + 3*420*FLEN/8, x4, x1, x2)

inst_96421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffc0000000; valaddr_reg:x3; val_offset:289263*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289263*0 + 3*421*FLEN/8, x4, x1, x2)

inst_96422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffe0000000; valaddr_reg:x3; val_offset:289266*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289266*0 + 3*422*FLEN/8, x4, x1, x2)

inst_96423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffff0000000; valaddr_reg:x3; val_offset:289269*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289269*0 + 3*423*FLEN/8, x4, x1, x2)

inst_96424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffff8000000; valaddr_reg:x3; val_offset:289272*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289272*0 + 3*424*FLEN/8, x4, x1, x2)

inst_96425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffc000000; valaddr_reg:x3; val_offset:289275*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289275*0 + 3*425*FLEN/8, x4, x1, x2)

inst_96426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffe000000; valaddr_reg:x3; val_offset:289278*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289278*0 + 3*426*FLEN/8, x4, x1, x2)

inst_96427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffff000000; valaddr_reg:x3; val_offset:289281*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289281*0 + 3*427*FLEN/8, x4, x1, x2)

inst_96428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffff800000; valaddr_reg:x3; val_offset:289284*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289284*0 + 3*428*FLEN/8, x4, x1, x2)

inst_96429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffc00000; valaddr_reg:x3; val_offset:289287*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289287*0 + 3*429*FLEN/8, x4, x1, x2)

inst_96430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffe00000; valaddr_reg:x3; val_offset:289290*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289290*0 + 3*430*FLEN/8, x4, x1, x2)

inst_96431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffff00000; valaddr_reg:x3; val_offset:289293*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289293*0 + 3*431*FLEN/8, x4, x1, x2)

inst_96432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffff80000; valaddr_reg:x3; val_offset:289296*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289296*0 + 3*432*FLEN/8, x4, x1, x2)

inst_96433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffc0000; valaddr_reg:x3; val_offset:289299*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289299*0 + 3*433*FLEN/8, x4, x1, x2)

inst_96434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffe0000; valaddr_reg:x3; val_offset:289302*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289302*0 + 3*434*FLEN/8, x4, x1, x2)

inst_96435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffff0000; valaddr_reg:x3; val_offset:289305*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289305*0 + 3*435*FLEN/8, x4, x1, x2)

inst_96436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffff8000; valaddr_reg:x3; val_offset:289308*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289308*0 + 3*436*FLEN/8, x4, x1, x2)

inst_96437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffc000; valaddr_reg:x3; val_offset:289311*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289311*0 + 3*437*FLEN/8, x4, x1, x2)

inst_96438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffe000; valaddr_reg:x3; val_offset:289314*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289314*0 + 3*438*FLEN/8, x4, x1, x2)

inst_96439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffff000; valaddr_reg:x3; val_offset:289317*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289317*0 + 3*439*FLEN/8, x4, x1, x2)

inst_96440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffff800; valaddr_reg:x3; val_offset:289320*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289320*0 + 3*440*FLEN/8, x4, x1, x2)

inst_96441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffc00; valaddr_reg:x3; val_offset:289323*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289323*0 + 3*441*FLEN/8, x4, x1, x2)

inst_96442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffe00; valaddr_reg:x3; val_offset:289326*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289326*0 + 3*442*FLEN/8, x4, x1, x2)

inst_96443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffff00; valaddr_reg:x3; val_offset:289329*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289329*0 + 3*443*FLEN/8, x4, x1, x2)

inst_96444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffff80; valaddr_reg:x3; val_offset:289332*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289332*0 + 3*444*FLEN/8, x4, x1, x2)

inst_96445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffffc0; valaddr_reg:x3; val_offset:289335*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289335*0 + 3*445*FLEN/8, x4, x1, x2)

inst_96446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffffe0; valaddr_reg:x3; val_offset:289338*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289338*0 + 3*446*FLEN/8, x4, x1, x2)

inst_96447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffff0; valaddr_reg:x3; val_offset:289341*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289341*0 + 3*447*FLEN/8, x4, x1, x2)

inst_96448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffff8; valaddr_reg:x3; val_offset:289344*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289344*0 + 3*448*FLEN/8, x4, x1, x2)

inst_96449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffffc; valaddr_reg:x3; val_offset:289347*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289347*0 + 3*449*FLEN/8, x4, x1, x2)

inst_96450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacffffffffffffe; valaddr_reg:x3; val_offset:289350*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289350*0 + 3*450*FLEN/8, x4, x1, x2)

inst_96451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbacfffffffffffff; valaddr_reg:x3; val_offset:289353*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289353*0 + 3*451*FLEN/8, x4, x1, x2)

inst_96452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:289356*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289356*0 + 3*452*FLEN/8, x4, x1, x2)

inst_96453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:289359*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289359*0 + 3*453*FLEN/8, x4, x1, x2)

inst_96454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:289362*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289362*0 + 3*454*FLEN/8, x4, x1, x2)

inst_96455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:289365*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289365*0 + 3*455*FLEN/8, x4, x1, x2)

inst_96456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:289368*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289368*0 + 3*456*FLEN/8, x4, x1, x2)

inst_96457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:289371*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289371*0 + 3*457*FLEN/8, x4, x1, x2)

inst_96458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:289374*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289374*0 + 3*458*FLEN/8, x4, x1, x2)

inst_96459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:289377*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289377*0 + 3*459*FLEN/8, x4, x1, x2)

inst_96460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:289380*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289380*0 + 3*460*FLEN/8, x4, x1, x2)

inst_96461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:289383*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289383*0 + 3*461*FLEN/8, x4, x1, x2)

inst_96462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:289386*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289386*0 + 3*462*FLEN/8, x4, x1, x2)

inst_96463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:289389*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289389*0 + 3*463*FLEN/8, x4, x1, x2)

inst_96464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:289392*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289392*0 + 3*464*FLEN/8, x4, x1, x2)

inst_96465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:289395*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289395*0 + 3*465*FLEN/8, x4, x1, x2)

inst_96466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:289398*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289398*0 + 3*466*FLEN/8, x4, x1, x2)

inst_96467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:289401*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289401*0 + 3*467*FLEN/8, x4, x1, x2)

inst_96468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:289404*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289404*0 + 3*468*FLEN/8, x4, x1, x2)

inst_96469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:289407*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289407*0 + 3*469*FLEN/8, x4, x1, x2)

inst_96470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:289410*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289410*0 + 3*470*FLEN/8, x4, x1, x2)

inst_96471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:289413*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289413*0 + 3*471*FLEN/8, x4, x1, x2)

inst_96472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:289416*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289416*0 + 3*472*FLEN/8, x4, x1, x2)

inst_96473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2eefc4ddb94d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0f686f3a06086 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae2eefc4ddb94d; op2val:0x9fc0f686f3a06086;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:289419*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289419*0 + 3*473*FLEN/8, x4, x1, x2)

inst_96474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:289422*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289422*0 + 3*474*FLEN/8, x4, x1, x2)

inst_96475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:289425*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289425*0 + 3*475*FLEN/8, x4, x1, x2)

inst_96476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:289428*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289428*0 + 3*476*FLEN/8, x4, x1, x2)

inst_96477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:289431*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289431*0 + 3*477*FLEN/8, x4, x1, x2)

inst_96478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:289434*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289434*0 + 3*478*FLEN/8, x4, x1, x2)

inst_96479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:289437*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289437*0 + 3*479*FLEN/8, x4, x1, x2)

inst_96480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:289440*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289440*0 + 3*480*FLEN/8, x4, x1, x2)

inst_96481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:289443*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289443*0 + 3*481*FLEN/8, x4, x1, x2)

inst_96482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:289446*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289446*0 + 3*482*FLEN/8, x4, x1, x2)

inst_96483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:289449*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289449*0 + 3*483*FLEN/8, x4, x1, x2)

inst_96484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:289452*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289452*0 + 3*484*FLEN/8, x4, x1, x2)

inst_96485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:289455*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289455*0 + 3*485*FLEN/8, x4, x1, x2)

inst_96486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:289458*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289458*0 + 3*486*FLEN/8, x4, x1, x2)

inst_96487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:289461*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289461*0 + 3*487*FLEN/8, x4, x1, x2)

inst_96488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:289464*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289464*0 + 3*488*FLEN/8, x4, x1, x2)

inst_96489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:289467*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289467*0 + 3*489*FLEN/8, x4, x1, x2)

inst_96490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:289470*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289470*0 + 3*490*FLEN/8, x4, x1, x2)

inst_96491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:289473*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289473*0 + 3*491*FLEN/8, x4, x1, x2)

inst_96492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:289476*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289476*0 + 3*492*FLEN/8, x4, x1, x2)

inst_96493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:289479*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289479*0 + 3*493*FLEN/8, x4, x1, x2)

inst_96494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:289482*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289482*0 + 3*494*FLEN/8, x4, x1, x2)

inst_96495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:289485*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289485*0 + 3*495*FLEN/8, x4, x1, x2)

inst_96496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:289488*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289488*0 + 3*496*FLEN/8, x4, x1, x2)

inst_96497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:289491*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289491*0 + 3*497*FLEN/8, x4, x1, x2)

inst_96498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:289494*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289494*0 + 3*498*FLEN/8, x4, x1, x2)

inst_96499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:289497*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289497*0 + 3*499*FLEN/8, x4, x1, x2)

inst_96500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:289500*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289500*0 + 3*500*FLEN/8, x4, x1, x2)

inst_96501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:289503*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289503*0 + 3*501*FLEN/8, x4, x1, x2)

inst_96502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:289506*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289506*0 + 3*502*FLEN/8, x4, x1, x2)

inst_96503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:289509*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289509*0 + 3*503*FLEN/8, x4, x1, x2)

inst_96504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:289512*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289512*0 + 3*504*FLEN/8, x4, x1, x2)

inst_96505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:289515*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289515*0 + 3*505*FLEN/8, x4, x1, x2)

inst_96506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:289518*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289518*0 + 3*506*FLEN/8, x4, x1, x2)

inst_96507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:289521*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289521*0 + 3*507*FLEN/8, x4, x1, x2)

inst_96508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:289524*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289524*0 + 3*508*FLEN/8, x4, x1, x2)

inst_96509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:289527*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289527*0 + 3*509*FLEN/8, x4, x1, x2)

inst_96510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:289530*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289530*0 + 3*510*FLEN/8, x4, x1, x2)

inst_96511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:289533*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289533*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_96512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:289536*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289536*0 + 3*512*FLEN/8, x4, x1, x2)

inst_96513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:289539*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289539*0 + 3*513*FLEN/8, x4, x1, x2)

inst_96514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:289542*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289542*0 + 3*514*FLEN/8, x4, x1, x2)

inst_96515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:289545*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289545*0 + 3*515*FLEN/8, x4, x1, x2)

inst_96516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000000fffff; valaddr_reg:x3; val_offset:289548*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289548*0 + 3*516*FLEN/8, x4, x1, x2)

inst_96517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000001fffff; valaddr_reg:x3; val_offset:289551*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289551*0 + 3*517*FLEN/8, x4, x1, x2)

inst_96518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000003fffff; valaddr_reg:x3; val_offset:289554*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289554*0 + 3*518*FLEN/8, x4, x1, x2)

inst_96519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000007fffff; valaddr_reg:x3; val_offset:289557*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289557*0 + 3*519*FLEN/8, x4, x1, x2)

inst_96520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000000ffffff; valaddr_reg:x3; val_offset:289560*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289560*0 + 3*520*FLEN/8, x4, x1, x2)

inst_96521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000001ffffff; valaddr_reg:x3; val_offset:289563*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289563*0 + 3*521*FLEN/8, x4, x1, x2)

inst_96522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000003ffffff; valaddr_reg:x3; val_offset:289566*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289566*0 + 3*522*FLEN/8, x4, x1, x2)

inst_96523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000007ffffff; valaddr_reg:x3; val_offset:289569*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289569*0 + 3*523*FLEN/8, x4, x1, x2)

inst_96524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000000fffffff; valaddr_reg:x3; val_offset:289572*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289572*0 + 3*524*FLEN/8, x4, x1, x2)

inst_96525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000001fffffff; valaddr_reg:x3; val_offset:289575*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289575*0 + 3*525*FLEN/8, x4, x1, x2)

inst_96526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000003fffffff; valaddr_reg:x3; val_offset:289578*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289578*0 + 3*526*FLEN/8, x4, x1, x2)

inst_96527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000007fffffff; valaddr_reg:x3; val_offset:289581*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289581*0 + 3*527*FLEN/8, x4, x1, x2)

inst_96528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00000ffffffff; valaddr_reg:x3; val_offset:289584*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289584*0 + 3*528*FLEN/8, x4, x1, x2)

inst_96529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00001ffffffff; valaddr_reg:x3; val_offset:289587*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289587*0 + 3*529*FLEN/8, x4, x1, x2)

inst_96530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00003ffffffff; valaddr_reg:x3; val_offset:289590*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289590*0 + 3*530*FLEN/8, x4, x1, x2)

inst_96531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00007ffffffff; valaddr_reg:x3; val_offset:289593*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289593*0 + 3*531*FLEN/8, x4, x1, x2)

inst_96532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0000fffffffff; valaddr_reg:x3; val_offset:289596*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289596*0 + 3*532*FLEN/8, x4, x1, x2)

inst_96533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0001fffffffff; valaddr_reg:x3; val_offset:289599*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289599*0 + 3*533*FLEN/8, x4, x1, x2)

inst_96534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0003fffffffff; valaddr_reg:x3; val_offset:289602*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289602*0 + 3*534*FLEN/8, x4, x1, x2)

inst_96535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0007fffffffff; valaddr_reg:x3; val_offset:289605*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289605*0 + 3*535*FLEN/8, x4, x1, x2)

inst_96536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a000ffffffffff; valaddr_reg:x3; val_offset:289608*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289608*0 + 3*536*FLEN/8, x4, x1, x2)

inst_96537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a001ffffffffff; valaddr_reg:x3; val_offset:289611*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289611*0 + 3*537*FLEN/8, x4, x1, x2)

inst_96538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a003ffffffffff; valaddr_reg:x3; val_offset:289614*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289614*0 + 3*538*FLEN/8, x4, x1, x2)

inst_96539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a007ffffffffff; valaddr_reg:x3; val_offset:289617*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289617*0 + 3*539*FLEN/8, x4, x1, x2)

inst_96540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a00fffffffffff; valaddr_reg:x3; val_offset:289620*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289620*0 + 3*540*FLEN/8, x4, x1, x2)

inst_96541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a01fffffffffff; valaddr_reg:x3; val_offset:289623*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289623*0 + 3*541*FLEN/8, x4, x1, x2)

inst_96542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a03fffffffffff; valaddr_reg:x3; val_offset:289626*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289626*0 + 3*542*FLEN/8, x4, x1, x2)

inst_96543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a07fffffffffff; valaddr_reg:x3; val_offset:289629*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289629*0 + 3*543*FLEN/8, x4, x1, x2)

inst_96544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a0ffffffffffff; valaddr_reg:x3; val_offset:289632*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289632*0 + 3*544*FLEN/8, x4, x1, x2)

inst_96545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a1ffffffffffff; valaddr_reg:x3; val_offset:289635*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289635*0 + 3*545*FLEN/8, x4, x1, x2)

inst_96546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a3ffffffffffff; valaddr_reg:x3; val_offset:289638*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289638*0 + 3*546*FLEN/8, x4, x1, x2)

inst_96547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a7ffffffffffff; valaddr_reg:x3; val_offset:289641*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289641*0 + 3*547*FLEN/8, x4, x1, x2)

inst_96548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81a8000000000000; valaddr_reg:x3; val_offset:289644*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289644*0 + 3*548*FLEN/8, x4, x1, x2)

inst_96549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81ac000000000000; valaddr_reg:x3; val_offset:289647*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289647*0 + 3*549*FLEN/8, x4, x1, x2)

inst_96550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81ae000000000000; valaddr_reg:x3; val_offset:289650*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289650*0 + 3*550*FLEN/8, x4, x1, x2)

inst_96551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81af000000000000; valaddr_reg:x3; val_offset:289653*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289653*0 + 3*551*FLEN/8, x4, x1, x2)

inst_96552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81af800000000000; valaddr_reg:x3; val_offset:289656*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289656*0 + 3*552*FLEN/8, x4, x1, x2)

inst_96553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afc00000000000; valaddr_reg:x3; val_offset:289659*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289659*0 + 3*553*FLEN/8, x4, x1, x2)

inst_96554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afe00000000000; valaddr_reg:x3; val_offset:289662*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289662*0 + 3*554*FLEN/8, x4, x1, x2)

inst_96555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81aff00000000000; valaddr_reg:x3; val_offset:289665*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289665*0 + 3*555*FLEN/8, x4, x1, x2)

inst_96556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81aff80000000000; valaddr_reg:x3; val_offset:289668*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289668*0 + 3*556*FLEN/8, x4, x1, x2)

inst_96557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affc0000000000; valaddr_reg:x3; val_offset:289671*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289671*0 + 3*557*FLEN/8, x4, x1, x2)

inst_96558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affe0000000000; valaddr_reg:x3; val_offset:289674*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289674*0 + 3*558*FLEN/8, x4, x1, x2)

inst_96559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afff0000000000; valaddr_reg:x3; val_offset:289677*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289677*0 + 3*559*FLEN/8, x4, x1, x2)

inst_96560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afff8000000000; valaddr_reg:x3; val_offset:289680*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289680*0 + 3*560*FLEN/8, x4, x1, x2)

inst_96561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffc000000000; valaddr_reg:x3; val_offset:289683*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289683*0 + 3*561*FLEN/8, x4, x1, x2)

inst_96562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffe000000000; valaddr_reg:x3; val_offset:289686*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289686*0 + 3*562*FLEN/8, x4, x1, x2)

inst_96563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affff000000000; valaddr_reg:x3; val_offset:289689*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289689*0 + 3*563*FLEN/8, x4, x1, x2)

inst_96564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affff800000000; valaddr_reg:x3; val_offset:289692*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289692*0 + 3*564*FLEN/8, x4, x1, x2)

inst_96565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffc00000000; valaddr_reg:x3; val_offset:289695*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289695*0 + 3*565*FLEN/8, x4, x1, x2)

inst_96566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffe00000000; valaddr_reg:x3; val_offset:289698*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289698*0 + 3*566*FLEN/8, x4, x1, x2)

inst_96567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffff00000000; valaddr_reg:x3; val_offset:289701*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289701*0 + 3*567*FLEN/8, x4, x1, x2)

inst_96568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffff80000000; valaddr_reg:x3; val_offset:289704*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289704*0 + 3*568*FLEN/8, x4, x1, x2)

inst_96569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffc0000000; valaddr_reg:x3; val_offset:289707*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289707*0 + 3*569*FLEN/8, x4, x1, x2)

inst_96570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffe0000000; valaddr_reg:x3; val_offset:289710*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289710*0 + 3*570*FLEN/8, x4, x1, x2)

inst_96571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffff0000000; valaddr_reg:x3; val_offset:289713*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289713*0 + 3*571*FLEN/8, x4, x1, x2)

inst_96572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffff8000000; valaddr_reg:x3; val_offset:289716*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289716*0 + 3*572*FLEN/8, x4, x1, x2)

inst_96573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffc000000; valaddr_reg:x3; val_offset:289719*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289719*0 + 3*573*FLEN/8, x4, x1, x2)

inst_96574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffe000000; valaddr_reg:x3; val_offset:289722*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289722*0 + 3*574*FLEN/8, x4, x1, x2)

inst_96575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffff000000; valaddr_reg:x3; val_offset:289725*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289725*0 + 3*575*FLEN/8, x4, x1, x2)

inst_96576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffff800000; valaddr_reg:x3; val_offset:289728*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289728*0 + 3*576*FLEN/8, x4, x1, x2)

inst_96577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffc00000; valaddr_reg:x3; val_offset:289731*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289731*0 + 3*577*FLEN/8, x4, x1, x2)

inst_96578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffe00000; valaddr_reg:x3; val_offset:289734*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289734*0 + 3*578*FLEN/8, x4, x1, x2)

inst_96579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffff00000; valaddr_reg:x3; val_offset:289737*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289737*0 + 3*579*FLEN/8, x4, x1, x2)

inst_96580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffff80000; valaddr_reg:x3; val_offset:289740*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289740*0 + 3*580*FLEN/8, x4, x1, x2)

inst_96581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffc0000; valaddr_reg:x3; val_offset:289743*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289743*0 + 3*581*FLEN/8, x4, x1, x2)

inst_96582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffe0000; valaddr_reg:x3; val_offset:289746*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289746*0 + 3*582*FLEN/8, x4, x1, x2)

inst_96583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffff0000; valaddr_reg:x3; val_offset:289749*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289749*0 + 3*583*FLEN/8, x4, x1, x2)

inst_96584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffff8000; valaddr_reg:x3; val_offset:289752*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289752*0 + 3*584*FLEN/8, x4, x1, x2)

inst_96585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffc000; valaddr_reg:x3; val_offset:289755*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289755*0 + 3*585*FLEN/8, x4, x1, x2)

inst_96586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffe000; valaddr_reg:x3; val_offset:289758*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289758*0 + 3*586*FLEN/8, x4, x1, x2)

inst_96587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffff000; valaddr_reg:x3; val_offset:289761*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289761*0 + 3*587*FLEN/8, x4, x1, x2)

inst_96588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffff800; valaddr_reg:x3; val_offset:289764*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289764*0 + 3*588*FLEN/8, x4, x1, x2)

inst_96589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffc00; valaddr_reg:x3; val_offset:289767*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289767*0 + 3*589*FLEN/8, x4, x1, x2)

inst_96590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffe00; valaddr_reg:x3; val_offset:289770*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289770*0 + 3*590*FLEN/8, x4, x1, x2)

inst_96591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffff00; valaddr_reg:x3; val_offset:289773*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289773*0 + 3*591*FLEN/8, x4, x1, x2)

inst_96592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffff80; valaddr_reg:x3; val_offset:289776*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289776*0 + 3*592*FLEN/8, x4, x1, x2)

inst_96593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffffc0; valaddr_reg:x3; val_offset:289779*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289779*0 + 3*593*FLEN/8, x4, x1, x2)

inst_96594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffffe0; valaddr_reg:x3; val_offset:289782*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289782*0 + 3*594*FLEN/8, x4, x1, x2)

inst_96595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffff0; valaddr_reg:x3; val_offset:289785*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289785*0 + 3*595*FLEN/8, x4, x1, x2)

inst_96596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffff8; valaddr_reg:x3; val_offset:289788*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289788*0 + 3*596*FLEN/8, x4, x1, x2)

inst_96597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffffc; valaddr_reg:x3; val_offset:289791*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289791*0 + 3*597*FLEN/8, x4, x1, x2)

inst_96598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81affffffffffffe; valaddr_reg:x3; val_offset:289794*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289794*0 + 3*598*FLEN/8, x4, x1, x2)

inst_96599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe31d0b385b738 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae31d0b385b738; op2val:0x8000;
op3val:0x81afffffffffffff; valaddr_reg:x3; val_offset:289797*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289797*0 + 3*599*FLEN/8, x4, x1, x2)

inst_96600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:289800*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289800*0 + 3*600*FLEN/8, x4, x1, x2)

inst_96601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:289803*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289803*0 + 3*601*FLEN/8, x4, x1, x2)

inst_96602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:289806*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289806*0 + 3*602*FLEN/8, x4, x1, x2)

inst_96603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:289809*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289809*0 + 3*603*FLEN/8, x4, x1, x2)

inst_96604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:289812*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289812*0 + 3*604*FLEN/8, x4, x1, x2)

inst_96605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:289815*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289815*0 + 3*605*FLEN/8, x4, x1, x2)

inst_96606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:289818*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289818*0 + 3*606*FLEN/8, x4, x1, x2)

inst_96607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:289821*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289821*0 + 3*607*FLEN/8, x4, x1, x2)

inst_96608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:289824*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289824*0 + 3*608*FLEN/8, x4, x1, x2)

inst_96609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:289827*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289827*0 + 3*609*FLEN/8, x4, x1, x2)

inst_96610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:289830*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289830*0 + 3*610*FLEN/8, x4, x1, x2)

inst_96611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:289833*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289833*0 + 3*611*FLEN/8, x4, x1, x2)

inst_96612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:289836*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289836*0 + 3*612*FLEN/8, x4, x1, x2)

inst_96613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:289839*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289839*0 + 3*613*FLEN/8, x4, x1, x2)

inst_96614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:289842*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289842*0 + 3*614*FLEN/8, x4, x1, x2)

inst_96615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:289845*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289845*0 + 3*615*FLEN/8, x4, x1, x2)

inst_96616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:289848*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289848*0 + 3*616*FLEN/8, x4, x1, x2)

inst_96617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:289851*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289851*0 + 3*617*FLEN/8, x4, x1, x2)

inst_96618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:289854*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289854*0 + 3*618*FLEN/8, x4, x1, x2)

inst_96619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:289857*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289857*0 + 3*619*FLEN/8, x4, x1, x2)

inst_96620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:289860*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289860*0 + 3*620*FLEN/8, x4, x1, x2)

inst_96621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:289863*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289863*0 + 3*621*FLEN/8, x4, x1, x2)

inst_96622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:289866*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289866*0 + 3*622*FLEN/8, x4, x1, x2)

inst_96623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:289869*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289869*0 + 3*623*FLEN/8, x4, x1, x2)

inst_96624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:289872*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289872*0 + 3*624*FLEN/8, x4, x1, x2)

inst_96625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:289875*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289875*0 + 3*625*FLEN/8, x4, x1, x2)

inst_96626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:289878*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289878*0 + 3*626*FLEN/8, x4, x1, x2)

inst_96627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:289881*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289881*0 + 3*627*FLEN/8, x4, x1, x2)

inst_96628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:289884*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289884*0 + 3*628*FLEN/8, x4, x1, x2)

inst_96629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:289887*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289887*0 + 3*629*FLEN/8, x4, x1, x2)

inst_96630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:289890*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289890*0 + 3*630*FLEN/8, x4, x1, x2)

inst_96631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:289893*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289893*0 + 3*631*FLEN/8, x4, x1, x2)

inst_96632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:289896*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289896*0 + 3*632*FLEN/8, x4, x1, x2)

inst_96633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:289899*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289899*0 + 3*633*FLEN/8, x4, x1, x2)

inst_96634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:289902*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289902*0 + 3*634*FLEN/8, x4, x1, x2)

inst_96635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:289905*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289905*0 + 3*635*FLEN/8, x4, x1, x2)

inst_96636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:289908*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289908*0 + 3*636*FLEN/8, x4, x1, x2)

inst_96637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:289911*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289911*0 + 3*637*FLEN/8, x4, x1, x2)

inst_96638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:289914*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289914*0 + 3*638*FLEN/8, x4, x1, x2)

inst_96639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:289917*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289917*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_96640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:289920*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289920*0 + 3*640*FLEN/8, x4, x1, x2)

inst_96641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:289923*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289923*0 + 3*641*FLEN/8, x4, x1, x2)

inst_96642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:289926*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289926*0 + 3*642*FLEN/8, x4, x1, x2)

inst_96643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:289929*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289929*0 + 3*643*FLEN/8, x4, x1, x2)

inst_96644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:289932*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289932*0 + 3*644*FLEN/8, x4, x1, x2)

inst_96645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:289935*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289935*0 + 3*645*FLEN/8, x4, x1, x2)

inst_96646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:289938*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289938*0 + 3*646*FLEN/8, x4, x1, x2)

inst_96647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:289941*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289941*0 + 3*647*FLEN/8, x4, x1, x2)

inst_96648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:289944*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289944*0 + 3*648*FLEN/8, x4, x1, x2)

inst_96649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:289947*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289947*0 + 3*649*FLEN/8, x4, x1, x2)

inst_96650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:289950*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289950*0 + 3*650*FLEN/8, x4, x1, x2)

inst_96651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:289953*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289953*0 + 3*651*FLEN/8, x4, x1, x2)

inst_96652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:289956*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289956*0 + 3*652*FLEN/8, x4, x1, x2)

inst_96653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:289959*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289959*0 + 3*653*FLEN/8, x4, x1, x2)

inst_96654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:289962*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289962*0 + 3*654*FLEN/8, x4, x1, x2)

inst_96655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:289965*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289965*0 + 3*655*FLEN/8, x4, x1, x2)

inst_96656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:289968*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289968*0 + 3*656*FLEN/8, x4, x1, x2)

inst_96657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:289971*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289971*0 + 3*657*FLEN/8, x4, x1, x2)

inst_96658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:289974*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289974*0 + 3*658*FLEN/8, x4, x1, x2)

inst_96659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:289977*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289977*0 + 3*659*FLEN/8, x4, x1, x2)

inst_96660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:289980*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289980*0 + 3*660*FLEN/8, x4, x1, x2)

inst_96661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:289983*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289983*0 + 3*661*FLEN/8, x4, x1, x2)

inst_96662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:289986*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289986*0 + 3*662*FLEN/8, x4, x1, x2)

inst_96663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:289989*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289989*0 + 3*663*FLEN/8, x4, x1, x2)

inst_96664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:289992*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289992*0 + 3*664*FLEN/8, x4, x1, x2)

inst_96665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:289995*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289995*0 + 3*665*FLEN/8, x4, x1, x2)

inst_96666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:289998*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289998*0 + 3*666*FLEN/8, x4, x1, x2)

inst_96667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:290001*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290001*0 + 3*667*FLEN/8, x4, x1, x2)

inst_96668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:290004*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290004*0 + 3*668*FLEN/8, x4, x1, x2)

inst_96669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:290007*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290007*0 + 3*669*FLEN/8, x4, x1, x2)

inst_96670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:290010*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290010*0 + 3*670*FLEN/8, x4, x1, x2)

inst_96671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:290013*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290013*0 + 3*671*FLEN/8, x4, x1, x2)

inst_96672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:290016*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290016*0 + 3*672*FLEN/8, x4, x1, x2)

inst_96673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:290019*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290019*0 + 3*673*FLEN/8, x4, x1, x2)

inst_96674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:290022*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290022*0 + 3*674*FLEN/8, x4, x1, x2)

inst_96675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:290025*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290025*0 + 3*675*FLEN/8, x4, x1, x2)

inst_96676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:290028*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290028*0 + 3*676*FLEN/8, x4, x1, x2)

inst_96677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:290031*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290031*0 + 3*677*FLEN/8, x4, x1, x2)

inst_96678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:290034*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290034*0 + 3*678*FLEN/8, x4, x1, x2)

inst_96679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:290037*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290037*0 + 3*679*FLEN/8, x4, x1, x2)

inst_96680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:290040*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290040*0 + 3*680*FLEN/8, x4, x1, x2)

inst_96681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:290043*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290043*0 + 3*681*FLEN/8, x4, x1, x2)

inst_96682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:290046*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290046*0 + 3*682*FLEN/8, x4, x1, x2)

inst_96683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:290049*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290049*0 + 3*683*FLEN/8, x4, x1, x2)

inst_96684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:290052*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290052*0 + 3*684*FLEN/8, x4, x1, x2)

inst_96685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:290055*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290055*0 + 3*685*FLEN/8, x4, x1, x2)

inst_96686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:290058*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290058*0 + 3*686*FLEN/8, x4, x1, x2)

inst_96687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:290061*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290061*0 + 3*687*FLEN/8, x4, x1, x2)

inst_96688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:290064*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290064*0 + 3*688*FLEN/8, x4, x1, x2)

inst_96689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:290067*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290067*0 + 3*689*FLEN/8, x4, x1, x2)

inst_96690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:290070*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290070*0 + 3*690*FLEN/8, x4, x1, x2)

inst_96691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:290073*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290073*0 + 3*691*FLEN/8, x4, x1, x2)

inst_96692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:290076*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290076*0 + 3*692*FLEN/8, x4, x1, x2)

inst_96693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:290079*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290079*0 + 3*693*FLEN/8, x4, x1, x2)

inst_96694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:290082*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290082*0 + 3*694*FLEN/8, x4, x1, x2)

inst_96695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:290085*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290085*0 + 3*695*FLEN/8, x4, x1, x2)

inst_96696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:290088*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290088*0 + 3*696*FLEN/8, x4, x1, x2)

inst_96697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:290091*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290091*0 + 3*697*FLEN/8, x4, x1, x2)

inst_96698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:290094*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290094*0 + 3*698*FLEN/8, x4, x1, x2)

inst_96699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:290097*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290097*0 + 3*699*FLEN/8, x4, x1, x2)

inst_96700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:290100*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290100*0 + 3*700*FLEN/8, x4, x1, x2)

inst_96701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:290103*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290103*0 + 3*701*FLEN/8, x4, x1, x2)

inst_96702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:290106*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290106*0 + 3*702*FLEN/8, x4, x1, x2)

inst_96703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:290109*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290109*0 + 3*703*FLEN/8, x4, x1, x2)

inst_96704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:290112*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290112*0 + 3*704*FLEN/8, x4, x1, x2)

inst_96705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:290115*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290115*0 + 3*705*FLEN/8, x4, x1, x2)

inst_96706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:290118*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290118*0 + 3*706*FLEN/8, x4, x1, x2)

inst_96707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:290121*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290121*0 + 3*707*FLEN/8, x4, x1, x2)

inst_96708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:290124*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290124*0 + 3*708*FLEN/8, x4, x1, x2)

inst_96709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:290127*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290127*0 + 3*709*FLEN/8, x4, x1, x2)

inst_96710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:290130*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290130*0 + 3*710*FLEN/8, x4, x1, x2)

inst_96711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:290133*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290133*0 + 3*711*FLEN/8, x4, x1, x2)

inst_96712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:290136*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290136*0 + 3*712*FLEN/8, x4, x1, x2)

inst_96713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:290139*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290139*0 + 3*713*FLEN/8, x4, x1, x2)

inst_96714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:290142*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290142*0 + 3*714*FLEN/8, x4, x1, x2)

inst_96715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:290145*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290145*0 + 3*715*FLEN/8, x4, x1, x2)

inst_96716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:290148*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290148*0 + 3*716*FLEN/8, x4, x1, x2)

inst_96717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:290151*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290151*0 + 3*717*FLEN/8, x4, x1, x2)

inst_96718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:290154*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290154*0 + 3*718*FLEN/8, x4, x1, x2)

inst_96719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:290157*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290157*0 + 3*719*FLEN/8, x4, x1, x2)

inst_96720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:290160*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290160*0 + 3*720*FLEN/8, x4, x1, x2)

inst_96721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:290163*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290163*0 + 3*721*FLEN/8, x4, x1, x2)

inst_96722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:290166*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290166*0 + 3*722*FLEN/8, x4, x1, x2)

inst_96723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:290169*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290169*0 + 3*723*FLEN/8, x4, x1, x2)

inst_96724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:290172*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290172*0 + 3*724*FLEN/8, x4, x1, x2)

inst_96725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe51c7bfc319bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae51c7bfc319bd; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:290175*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290175*0 + 3*725*FLEN/8, x4, x1, x2)

inst_96726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:290178*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290178*0 + 3*726*FLEN/8, x4, x1, x2)

inst_96727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:290181*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290181*0 + 3*727*FLEN/8, x4, x1, x2)

inst_96728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:290184*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290184*0 + 3*728*FLEN/8, x4, x1, x2)

inst_96729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:290187*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290187*0 + 3*729*FLEN/8, x4, x1, x2)

inst_96730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:290190*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290190*0 + 3*730*FLEN/8, x4, x1, x2)

inst_96731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:290193*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290193*0 + 3*731*FLEN/8, x4, x1, x2)

inst_96732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:290196*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290196*0 + 3*732*FLEN/8, x4, x1, x2)

inst_96733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:290199*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290199*0 + 3*733*FLEN/8, x4, x1, x2)

inst_96734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:290202*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290202*0 + 3*734*FLEN/8, x4, x1, x2)

inst_96735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:290205*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290205*0 + 3*735*FLEN/8, x4, x1, x2)

inst_96736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:290208*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290208*0 + 3*736*FLEN/8, x4, x1, x2)

inst_96737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:290211*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290211*0 + 3*737*FLEN/8, x4, x1, x2)

inst_96738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:290214*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290214*0 + 3*738*FLEN/8, x4, x1, x2)

inst_96739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:290217*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290217*0 + 3*739*FLEN/8, x4, x1, x2)

inst_96740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:290220*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290220*0 + 3*740*FLEN/8, x4, x1, x2)

inst_96741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:290223*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290223*0 + 3*741*FLEN/8, x4, x1, x2)

inst_96742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:290226*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290226*0 + 3*742*FLEN/8, x4, x1, x2)

inst_96743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:290229*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290229*0 + 3*743*FLEN/8, x4, x1, x2)

inst_96744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:290232*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290232*0 + 3*744*FLEN/8, x4, x1, x2)

inst_96745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:290235*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290235*0 + 3*745*FLEN/8, x4, x1, x2)

inst_96746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:290238*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290238*0 + 3*746*FLEN/8, x4, x1, x2)

inst_96747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:290241*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290241*0 + 3*747*FLEN/8, x4, x1, x2)

inst_96748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000000000; valaddr_reg:x3; val_offset:290244*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290244*0 + 3*748*FLEN/8, x4, x1, x2)

inst_96749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000000001; valaddr_reg:x3; val_offset:290247*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290247*0 + 3*749*FLEN/8, x4, x1, x2)

inst_96750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000000003; valaddr_reg:x3; val_offset:290250*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290250*0 + 3*750*FLEN/8, x4, x1, x2)

inst_96751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000000007; valaddr_reg:x3; val_offset:290253*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290253*0 + 3*751*FLEN/8, x4, x1, x2)

inst_96752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000000000f; valaddr_reg:x3; val_offset:290256*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290256*0 + 3*752*FLEN/8, x4, x1, x2)

inst_96753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000000001f; valaddr_reg:x3; val_offset:290259*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290259*0 + 3*753*FLEN/8, x4, x1, x2)

inst_96754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000000003f; valaddr_reg:x3; val_offset:290262*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290262*0 + 3*754*FLEN/8, x4, x1, x2)

inst_96755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000000007f; valaddr_reg:x3; val_offset:290265*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290265*0 + 3*755*FLEN/8, x4, x1, x2)

inst_96756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000000000ff; valaddr_reg:x3; val_offset:290268*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290268*0 + 3*756*FLEN/8, x4, x1, x2)

inst_96757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000000001ff; valaddr_reg:x3; val_offset:290271*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290271*0 + 3*757*FLEN/8, x4, x1, x2)

inst_96758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000000003ff; valaddr_reg:x3; val_offset:290274*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290274*0 + 3*758*FLEN/8, x4, x1, x2)

inst_96759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd00000000007ff; valaddr_reg:x3; val_offset:290277*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290277*0 + 3*759*FLEN/8, x4, x1, x2)

inst_96760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000000fff; valaddr_reg:x3; val_offset:290280*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290280*0 + 3*760*FLEN/8, x4, x1, x2)

inst_96761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000001fff; valaddr_reg:x3; val_offset:290283*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290283*0 + 3*761*FLEN/8, x4, x1, x2)

inst_96762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000003fff; valaddr_reg:x3; val_offset:290286*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290286*0 + 3*762*FLEN/8, x4, x1, x2)

inst_96763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd0000000007fff; valaddr_reg:x3; val_offset:290289*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290289*0 + 3*763*FLEN/8, x4, x1, x2)

inst_96764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000000ffff; valaddr_reg:x3; val_offset:290292*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290292*0 + 3*764*FLEN/8, x4, x1, x2)

inst_96765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000001ffff; valaddr_reg:x3; val_offset:290295*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290295*0 + 3*765*FLEN/8, x4, x1, x2)

inst_96766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000003ffff; valaddr_reg:x3; val_offset:290298*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290298*0 + 3*766*FLEN/8, x4, x1, x2)

inst_96767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae61729d7cfd5e; op2val:0x0;
op3val:0xd000000007ffff; valaddr_reg:x3; val_offset:290301*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290301*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6894456762606682453,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708352,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708353,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708355,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708359,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708367,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708383,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708415,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708479,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708607,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708863,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212709375,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212710399,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212712447,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212716543,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212724735,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212741119,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212773887,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212839423,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212970495,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213232639,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213756927,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186214805503,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186216902655,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186221096959,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186229485567,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186246262783,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186279817215,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186346926079,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186481143807,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186749579263,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633187286450175,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633188360191999,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633190507675647,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633194802642943,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633203392577535,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633220572446719,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633254932185087,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633323651661823,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633461090615295,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633735968522239,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166634285724336127,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166635385235963903,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166637584259219455,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166641982305730559,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166650778398752767,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166668370584797183,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166703554956886015,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166773923701063679,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166914661189419007,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167196136166129663,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167759086119550975,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393599,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393600,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170010885933236224,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170573835886657536,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170855310863368192,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6894488996884331406,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927936,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927937,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927939,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927943,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927951,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927967,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927999,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928063,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928191,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928447,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928959,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037929983,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037932031,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037936127,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037944319,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037960703,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037993471,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038059007,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038190079,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038452223,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038976511,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594040025087,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594042122239,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594046316543,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594054705151,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594071482367,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594105036799,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594172145663,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594306363391,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594574798847,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057595111669759,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057596185411583,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057598332895231,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057602627862527,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057611217797119,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057628397666303,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057662757404671,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057731476881407,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057868915834879,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058143793741823,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058693549555711,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72059793061183487,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72061992084439039,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72066390130950143,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72075186223972351,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72092778410016767,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72127962782105599,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72198331526283263,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72339069014638591,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72620543991349247,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(73183493944770559,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613183,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613184,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75435293758455808,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75998243711877120,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76279718688587776,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76420456176943104,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76490824921120768,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76526009293209600,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76543601479254016,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76552397572276224,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76556795618787328,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76558994642042880,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560094153670656,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560643909484544,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560918787391488,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561056226344960,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561124945821696,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561159305560064,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561176485429248,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561185075363840,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561189370331136,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561191517814784,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561192591556608,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193128427520,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193396862976,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193531080704,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193598189568,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193631744000,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193648521216,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193656909824,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193661104128,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193663201280,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664249856,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664774144,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665036288,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665167360,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665232896,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665265664,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665282048,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665290240,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665294336,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665296384,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297408,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297920,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298176,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298304,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298368,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298400,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298416,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298424,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298428,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298430,64,FLEN)
NAN_BOXED(6894499585041653189,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298431,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042048,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042049,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042051,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042055,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042063,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042079,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042111,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042175,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042303,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583042559,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583043071,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583044095,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583046143,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583050239,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583058431,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583074815,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583107583,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583173119,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583304191,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686583566335,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686584090623,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686585139199,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686587236351,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686591430655,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686599819263,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686616596479,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686650150911,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686717259775,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755686851477503,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755687119912959,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755687656783871,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755688730525695,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755690878009343,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755695172976639,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755703762911231,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755720942780415,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755755302518783,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755824021995519,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456755961460948991,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456756236338855935,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456756786094669823,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456757885606297599,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456760084629553151,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456764482676064255,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456773278769086463,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456790870955130879,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456826055327219711,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13456896424071397375,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13457037161559752703,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13457318636536463359,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13457881586489884671,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13459007486396727295,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13459007486396727296,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13460133386303569920,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13460696336256991232,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13460977811233701888,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461118548722057216,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461188917466234880,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461224101838323712,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461241694024368128,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461250490117390336,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461254888163901440,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461257087187156992,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461258186698784768,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461258736454598656,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259011332505600,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259148771459072,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259217490935808,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259251850674176,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259269030543360,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259277620477952,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259281915445248,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259284062928896,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259285136670720,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259285673541632,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259285941977088,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286076194816,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286143303680,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286176858112,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286193635328,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286202023936,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286206218240,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286208315392,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286209363968,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286209888256,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210150400,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210281472,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210347008,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210379776,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210396160,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210404352,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210408448,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210410496,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210411520,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412032,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412288,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412416,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412480,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412512,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412528,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412536,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412540,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412542,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13461259286210412543,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894499686885734733,64,FLEN)
NAN_BOXED(11511471707032412294,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627167457279,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627168505855,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627170603007,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627174797311,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627183185919,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627199963135,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627233517567,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627300626431,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627434844159,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627703279615,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465628240150527,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465629313892351,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465631461375999,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465635756343295,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465644346277887,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465661526147071,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465695885885439,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465764605362175,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465902044315647,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466176922222591,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466726678036479,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340467826189664255,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340470025212919807,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340474423259430911,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340483219352453119,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340500811538497535,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340535995910586367,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340606364654764031,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340747102143119359,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341028577119830015,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341591527073251327,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093951,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093952,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9343843326886936576,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344406276840357888,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344687751817068544,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344828489305423872,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344898858049601536,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344934042421690368,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344951634607734784,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344960430700756992,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344964828747268096,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344967027770523648,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968127282151424,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968677037965312,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968951915872256,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969089354825728,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969158074302464,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969192434040832,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969209613910016,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969218203844608,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969222498811904,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969224646295552,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969225720037376,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226256908288,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226525343744,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226659561472,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226726670336,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226760224768,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226777001984,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226785390592,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226789584896,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226791682048,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226792730624,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793254912,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793517056,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793648128,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793713664,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793746432,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793762816,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793771008,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793775104,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793777152,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778176,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778688,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778944,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779072,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779136,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779168,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779184,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779192,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779196,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779198,64,FLEN)
NAN_BOXED(6894502851985651512,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779199,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894537997908384189,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816448,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816449,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816451,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816455,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816463,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816479,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816511,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816575,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816703,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816959,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155817471,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155818495,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155820543,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155824639,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155832831,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155849215,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155881983,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155947519,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156078591,64,FLEN)
NAN_BOXED(6894555224447188318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156340735,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
