
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_3072:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:9216*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9216*0 + 3*0*FLEN/8, x4, x1, x2)

inst_3073:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:9219*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9219*0 + 3*1*FLEN/8, x4, x1, x2)

inst_3074:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:9222*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9222*0 + 3*2*FLEN/8, x4, x1, x2)

inst_3075:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:9225*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9225*0 + 3*3*FLEN/8, x4, x1, x2)

inst_3076:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:9228*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9228*0 + 3*4*FLEN/8, x4, x1, x2)

inst_3077:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:9231*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9231*0 + 3*5*FLEN/8, x4, x1, x2)

inst_3078:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:9234*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9234*0 + 3*6*FLEN/8, x4, x1, x2)

inst_3079:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:9237*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9237*0 + 3*7*FLEN/8, x4, x1, x2)

inst_3080:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:9240*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9240*0 + 3*8*FLEN/8, x4, x1, x2)

inst_3081:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:9243*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9243*0 + 3*9*FLEN/8, x4, x1, x2)

inst_3082:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:9246*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9246*0 + 3*10*FLEN/8, x4, x1, x2)

inst_3083:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:9249*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9249*0 + 3*11*FLEN/8, x4, x1, x2)

inst_3084:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:9252*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9252*0 + 3*12*FLEN/8, x4, x1, x2)

inst_3085:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:9255*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9255*0 + 3*13*FLEN/8, x4, x1, x2)

inst_3086:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:9258*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9258*0 + 3*14*FLEN/8, x4, x1, x2)

inst_3087:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:9261*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9261*0 + 3*15*FLEN/8, x4, x1, x2)

inst_3088:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:9264*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9264*0 + 3*16*FLEN/8, x4, x1, x2)

inst_3089:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:9267*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9267*0 + 3*17*FLEN/8, x4, x1, x2)

inst_3090:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:9270*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9270*0 + 3*18*FLEN/8, x4, x1, x2)

inst_3091:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:9273*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9273*0 + 3*19*FLEN/8, x4, x1, x2)

inst_3092:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:9276*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9276*0 + 3*20*FLEN/8, x4, x1, x2)

inst_3093:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:9279*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9279*0 + 3*21*FLEN/8, x4, x1, x2)

inst_3094:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:9282*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9282*0 + 3*22*FLEN/8, x4, x1, x2)

inst_3095:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:9285*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9285*0 + 3*23*FLEN/8, x4, x1, x2)

inst_3096:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:9288*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9288*0 + 3*24*FLEN/8, x4, x1, x2)

inst_3097:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:9291*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9291*0 + 3*25*FLEN/8, x4, x1, x2)

inst_3098:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:9294*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9294*0 + 3*26*FLEN/8, x4, x1, x2)

inst_3099:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:9297*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9297*0 + 3*27*FLEN/8, x4, x1, x2)

inst_3100:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:9300*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9300*0 + 3*28*FLEN/8, x4, x1, x2)

inst_3101:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:9303*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9303*0 + 3*29*FLEN/8, x4, x1, x2)

inst_3102:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:9306*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9306*0 + 3*30*FLEN/8, x4, x1, x2)

inst_3103:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:9309*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9309*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3104:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:9312*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9312*0 + 3*32*FLEN/8, x4, x1, x2)

inst_3105:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:9315*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9315*0 + 3*33*FLEN/8, x4, x1, x2)

inst_3106:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:9318*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9318*0 + 3*34*FLEN/8, x4, x1, x2)

inst_3107:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:9321*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9321*0 + 3*35*FLEN/8, x4, x1, x2)

inst_3108:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:9324*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9324*0 + 3*36*FLEN/8, x4, x1, x2)

inst_3109:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:9327*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9327*0 + 3*37*FLEN/8, x4, x1, x2)

inst_3110:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:9330*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9330*0 + 3*38*FLEN/8, x4, x1, x2)

inst_3111:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:9333*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9333*0 + 3*39*FLEN/8, x4, x1, x2)

inst_3112:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:9336*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9336*0 + 3*40*FLEN/8, x4, x1, x2)

inst_3113:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:9339*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9339*0 + 3*41*FLEN/8, x4, x1, x2)

inst_3114:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:9342*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9342*0 + 3*42*FLEN/8, x4, x1, x2)

inst_3115:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:9345*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9345*0 + 3*43*FLEN/8, x4, x1, x2)

inst_3116:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:9348*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9348*0 + 3*44*FLEN/8, x4, x1, x2)

inst_3117:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:9351*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9351*0 + 3*45*FLEN/8, x4, x1, x2)

inst_3118:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:9354*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9354*0 + 3*46*FLEN/8, x4, x1, x2)

inst_3119:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:9357*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9357*0 + 3*47*FLEN/8, x4, x1, x2)

inst_3120:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:9360*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9360*0 + 3*48*FLEN/8, x4, x1, x2)

inst_3121:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:9363*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9363*0 + 3*49*FLEN/8, x4, x1, x2)

inst_3122:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:9366*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9366*0 + 3*50*FLEN/8, x4, x1, x2)

inst_3123:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:9369*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9369*0 + 3*51*FLEN/8, x4, x1, x2)

inst_3124:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:9372*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9372*0 + 3*52*FLEN/8, x4, x1, x2)

inst_3125:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:9375*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9375*0 + 3*53*FLEN/8, x4, x1, x2)

inst_3126:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:9378*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9378*0 + 3*54*FLEN/8, x4, x1, x2)

inst_3127:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:9381*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9381*0 + 3*55*FLEN/8, x4, x1, x2)

inst_3128:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:9384*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9384*0 + 3*56*FLEN/8, x4, x1, x2)

inst_3129:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:9387*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9387*0 + 3*57*FLEN/8, x4, x1, x2)

inst_3130:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:9390*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9390*0 + 3*58*FLEN/8, x4, x1, x2)

inst_3131:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:9393*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9393*0 + 3*59*FLEN/8, x4, x1, x2)

inst_3132:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:9396*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9396*0 + 3*60*FLEN/8, x4, x1, x2)

inst_3133:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:9399*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9399*0 + 3*61*FLEN/8, x4, x1, x2)

inst_3134:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:9402*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9402*0 + 3*62*FLEN/8, x4, x1, x2)

inst_3135:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:9405*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9405*0 + 3*63*FLEN/8, x4, x1, x2)

inst_3136:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:9408*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9408*0 + 3*64*FLEN/8, x4, x1, x2)

inst_3137:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:9411*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9411*0 + 3*65*FLEN/8, x4, x1, x2)

inst_3138:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:9414*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9414*0 + 3*66*FLEN/8, x4, x1, x2)

inst_3139:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:9417*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9417*0 + 3*67*FLEN/8, x4, x1, x2)

inst_3140:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:9420*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9420*0 + 3*68*FLEN/8, x4, x1, x2)

inst_3141:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:9423*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9423*0 + 3*69*FLEN/8, x4, x1, x2)

inst_3142:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:9426*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9426*0 + 3*70*FLEN/8, x4, x1, x2)

inst_3143:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:9429*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9429*0 + 3*71*FLEN/8, x4, x1, x2)

inst_3144:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:9432*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9432*0 + 3*72*FLEN/8, x4, x1, x2)

inst_3145:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:9435*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9435*0 + 3*73*FLEN/8, x4, x1, x2)

inst_3146:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:9438*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9438*0 + 3*74*FLEN/8, x4, x1, x2)

inst_3147:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:9441*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9441*0 + 3*75*FLEN/8, x4, x1, x2)

inst_3148:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:9444*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9444*0 + 3*76*FLEN/8, x4, x1, x2)

inst_3149:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa310885ac047f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a310885ac047f; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:9447*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9447*0 + 3*77*FLEN/8, x4, x1, x2)

inst_3150:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:9450*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9450*0 + 3*78*FLEN/8, x4, x1, x2)

inst_3151:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:9453*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9453*0 + 3*79*FLEN/8, x4, x1, x2)

inst_3152:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:9456*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9456*0 + 3*80*FLEN/8, x4, x1, x2)

inst_3153:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:9459*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9459*0 + 3*81*FLEN/8, x4, x1, x2)

inst_3154:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:9462*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9462*0 + 3*82*FLEN/8, x4, x1, x2)

inst_3155:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:9465*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9465*0 + 3*83*FLEN/8, x4, x1, x2)

inst_3156:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:9468*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9468*0 + 3*84*FLEN/8, x4, x1, x2)

inst_3157:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:9471*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9471*0 + 3*85*FLEN/8, x4, x1, x2)

inst_3158:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:9474*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9474*0 + 3*86*FLEN/8, x4, x1, x2)

inst_3159:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:9477*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9477*0 + 3*87*FLEN/8, x4, x1, x2)

inst_3160:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:9480*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9480*0 + 3*88*FLEN/8, x4, x1, x2)

inst_3161:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:9483*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9483*0 + 3*89*FLEN/8, x4, x1, x2)

inst_3162:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:9486*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9486*0 + 3*90*FLEN/8, x4, x1, x2)

inst_3163:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:9489*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9489*0 + 3*91*FLEN/8, x4, x1, x2)

inst_3164:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:9492*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9492*0 + 3*92*FLEN/8, x4, x1, x2)

inst_3165:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:9495*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9495*0 + 3*93*FLEN/8, x4, x1, x2)

inst_3166:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:9498*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9498*0 + 3*94*FLEN/8, x4, x1, x2)

inst_3167:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:9501*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9501*0 + 3*95*FLEN/8, x4, x1, x2)

inst_3168:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:9504*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9504*0 + 3*96*FLEN/8, x4, x1, x2)

inst_3169:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:9507*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9507*0 + 3*97*FLEN/8, x4, x1, x2)

inst_3170:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:9510*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9510*0 + 3*98*FLEN/8, x4, x1, x2)

inst_3171:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:9513*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9513*0 + 3*99*FLEN/8, x4, x1, x2)

inst_3172:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:9516*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9516*0 + 3*100*FLEN/8, x4, x1, x2)

inst_3173:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:9519*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9519*0 + 3*101*FLEN/8, x4, x1, x2)

inst_3174:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:9522*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9522*0 + 3*102*FLEN/8, x4, x1, x2)

inst_3175:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:9525*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9525*0 + 3*103*FLEN/8, x4, x1, x2)

inst_3176:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:9528*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9528*0 + 3*104*FLEN/8, x4, x1, x2)

inst_3177:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:9531*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9531*0 + 3*105*FLEN/8, x4, x1, x2)

inst_3178:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:9534*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9534*0 + 3*106*FLEN/8, x4, x1, x2)

inst_3179:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:9537*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9537*0 + 3*107*FLEN/8, x4, x1, x2)

inst_3180:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:9540*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9540*0 + 3*108*FLEN/8, x4, x1, x2)

inst_3181:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:9543*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9543*0 + 3*109*FLEN/8, x4, x1, x2)

inst_3182:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:9546*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9546*0 + 3*110*FLEN/8, x4, x1, x2)

inst_3183:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:9549*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9549*0 + 3*111*FLEN/8, x4, x1, x2)

inst_3184:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:9552*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9552*0 + 3*112*FLEN/8, x4, x1, x2)

inst_3185:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:9555*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9555*0 + 3*113*FLEN/8, x4, x1, x2)

inst_3186:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:9558*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9558*0 + 3*114*FLEN/8, x4, x1, x2)

inst_3187:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:9561*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9561*0 + 3*115*FLEN/8, x4, x1, x2)

inst_3188:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:9564*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9564*0 + 3*116*FLEN/8, x4, x1, x2)

inst_3189:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:9567*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9567*0 + 3*117*FLEN/8, x4, x1, x2)

inst_3190:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:9570*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9570*0 + 3*118*FLEN/8, x4, x1, x2)

inst_3191:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:9573*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9573*0 + 3*119*FLEN/8, x4, x1, x2)

inst_3192:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:9576*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9576*0 + 3*120*FLEN/8, x4, x1, x2)

inst_3193:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:9579*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9579*0 + 3*121*FLEN/8, x4, x1, x2)

inst_3194:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:9582*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9582*0 + 3*122*FLEN/8, x4, x1, x2)

inst_3195:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:9585*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9585*0 + 3*123*FLEN/8, x4, x1, x2)

inst_3196:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:9588*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9588*0 + 3*124*FLEN/8, x4, x1, x2)

inst_3197:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:9591*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9591*0 + 3*125*FLEN/8, x4, x1, x2)

inst_3198:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:9594*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9594*0 + 3*126*FLEN/8, x4, x1, x2)

inst_3199:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:9597*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9597*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_3200:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:9600*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9600*0 + 3*128*FLEN/8, x4, x1, x2)

inst_3201:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:9603*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9603*0 + 3*129*FLEN/8, x4, x1, x2)

inst_3202:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:9606*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9606*0 + 3*130*FLEN/8, x4, x1, x2)

inst_3203:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:9609*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9609*0 + 3*131*FLEN/8, x4, x1, x2)

inst_3204:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:9612*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9612*0 + 3*132*FLEN/8, x4, x1, x2)

inst_3205:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:9615*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9615*0 + 3*133*FLEN/8, x4, x1, x2)

inst_3206:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:9618*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9618*0 + 3*134*FLEN/8, x4, x1, x2)

inst_3207:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:9621*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9621*0 + 3*135*FLEN/8, x4, x1, x2)

inst_3208:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:9624*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9624*0 + 3*136*FLEN/8, x4, x1, x2)

inst_3209:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:9627*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9627*0 + 3*137*FLEN/8, x4, x1, x2)

inst_3210:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:9630*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9630*0 + 3*138*FLEN/8, x4, x1, x2)

inst_3211:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:9633*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9633*0 + 3*139*FLEN/8, x4, x1, x2)

inst_3212:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:9636*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9636*0 + 3*140*FLEN/8, x4, x1, x2)

inst_3213:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:9639*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9639*0 + 3*141*FLEN/8, x4, x1, x2)

inst_3214:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:9642*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9642*0 + 3*142*FLEN/8, x4, x1, x2)

inst_3215:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:9645*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9645*0 + 3*143*FLEN/8, x4, x1, x2)

inst_3216:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:9648*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9648*0 + 3*144*FLEN/8, x4, x1, x2)

inst_3217:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:9651*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9651*0 + 3*145*FLEN/8, x4, x1, x2)

inst_3218:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:9654*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9654*0 + 3*146*FLEN/8, x4, x1, x2)

inst_3219:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:9657*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9657*0 + 3*147*FLEN/8, x4, x1, x2)

inst_3220:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:9660*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9660*0 + 3*148*FLEN/8, x4, x1, x2)

inst_3221:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:9663*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9663*0 + 3*149*FLEN/8, x4, x1, x2)

inst_3222:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:9666*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9666*0 + 3*150*FLEN/8, x4, x1, x2)

inst_3223:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:9669*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9669*0 + 3*151*FLEN/8, x4, x1, x2)

inst_3224:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:9672*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9672*0 + 3*152*FLEN/8, x4, x1, x2)

inst_3225:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:9675*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9675*0 + 3*153*FLEN/8, x4, x1, x2)

inst_3226:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:9678*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9678*0 + 3*154*FLEN/8, x4, x1, x2)

inst_3227:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:9681*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9681*0 + 3*155*FLEN/8, x4, x1, x2)

inst_3228:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:9684*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9684*0 + 3*156*FLEN/8, x4, x1, x2)

inst_3229:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:9687*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9687*0 + 3*157*FLEN/8, x4, x1, x2)

inst_3230:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:9690*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9690*0 + 3*158*FLEN/8, x4, x1, x2)

inst_3231:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:9693*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9693*0 + 3*159*FLEN/8, x4, x1, x2)

inst_3232:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:9696*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9696*0 + 3*160*FLEN/8, x4, x1, x2)

inst_3233:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:9699*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9699*0 + 3*161*FLEN/8, x4, x1, x2)

inst_3234:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:9702*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9702*0 + 3*162*FLEN/8, x4, x1, x2)

inst_3235:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:9705*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9705*0 + 3*163*FLEN/8, x4, x1, x2)

inst_3236:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:9708*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9708*0 + 3*164*FLEN/8, x4, x1, x2)

inst_3237:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:9711*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9711*0 + 3*165*FLEN/8, x4, x1, x2)

inst_3238:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:9714*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9714*0 + 3*166*FLEN/8, x4, x1, x2)

inst_3239:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:9717*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9717*0 + 3*167*FLEN/8, x4, x1, x2)

inst_3240:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:9720*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9720*0 + 3*168*FLEN/8, x4, x1, x2)

inst_3241:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:9723*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9723*0 + 3*169*FLEN/8, x4, x1, x2)

inst_3242:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:9726*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9726*0 + 3*170*FLEN/8, x4, x1, x2)

inst_3243:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:9729*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9729*0 + 3*171*FLEN/8, x4, x1, x2)

inst_3244:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:9732*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9732*0 + 3*172*FLEN/8, x4, x1, x2)

inst_3245:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:9735*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9735*0 + 3*173*FLEN/8, x4, x1, x2)

inst_3246:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:9738*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9738*0 + 3*174*FLEN/8, x4, x1, x2)

inst_3247:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:9741*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9741*0 + 3*175*FLEN/8, x4, x1, x2)

inst_3248:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:9744*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9744*0 + 3*176*FLEN/8, x4, x1, x2)

inst_3249:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:9747*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9747*0 + 3*177*FLEN/8, x4, x1, x2)

inst_3250:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:9750*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9750*0 + 3*178*FLEN/8, x4, x1, x2)

inst_3251:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:9753*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9753*0 + 3*179*FLEN/8, x4, x1, x2)

inst_3252:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:9756*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9756*0 + 3*180*FLEN/8, x4, x1, x2)

inst_3253:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:9759*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9759*0 + 3*181*FLEN/8, x4, x1, x2)

inst_3254:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:9762*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9762*0 + 3*182*FLEN/8, x4, x1, x2)

inst_3255:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:9765*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9765*0 + 3*183*FLEN/8, x4, x1, x2)

inst_3256:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:9768*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9768*0 + 3*184*FLEN/8, x4, x1, x2)

inst_3257:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:9771*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9771*0 + 3*185*FLEN/8, x4, x1, x2)

inst_3258:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:9774*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9774*0 + 3*186*FLEN/8, x4, x1, x2)

inst_3259:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:9777*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9777*0 + 3*187*FLEN/8, x4, x1, x2)

inst_3260:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:9780*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9780*0 + 3*188*FLEN/8, x4, x1, x2)

inst_3261:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:9783*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9783*0 + 3*189*FLEN/8, x4, x1, x2)

inst_3262:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:9786*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9786*0 + 3*190*FLEN/8, x4, x1, x2)

inst_3263:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:9789*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9789*0 + 3*191*FLEN/8, x4, x1, x2)

inst_3264:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:9792*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9792*0 + 3*192*FLEN/8, x4, x1, x2)

inst_3265:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:9795*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9795*0 + 3*193*FLEN/8, x4, x1, x2)

inst_3266:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:9798*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9798*0 + 3*194*FLEN/8, x4, x1, x2)

inst_3267:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:9801*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9801*0 + 3*195*FLEN/8, x4, x1, x2)

inst_3268:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:9804*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9804*0 + 3*196*FLEN/8, x4, x1, x2)

inst_3269:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:9807*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9807*0 + 3*197*FLEN/8, x4, x1, x2)

inst_3270:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:9810*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9810*0 + 3*198*FLEN/8, x4, x1, x2)

inst_3271:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:9813*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9813*0 + 3*199*FLEN/8, x4, x1, x2)

inst_3272:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:9816*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9816*0 + 3*200*FLEN/8, x4, x1, x2)

inst_3273:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:9819*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9819*0 + 3*201*FLEN/8, x4, x1, x2)

inst_3274:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:9822*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9822*0 + 3*202*FLEN/8, x4, x1, x2)

inst_3275:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c1a812e98063f; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:9825*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9825*0 + 3*203*FLEN/8, x4, x1, x2)

inst_3276:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000000000; valaddr_reg:x3; val_offset:9828*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9828*0 + 3*204*FLEN/8, x4, x1, x2)

inst_3277:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000000001; valaddr_reg:x3; val_offset:9831*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9831*0 + 3*205*FLEN/8, x4, x1, x2)

inst_3278:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000000003; valaddr_reg:x3; val_offset:9834*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9834*0 + 3*206*FLEN/8, x4, x1, x2)

inst_3279:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000000007; valaddr_reg:x3; val_offset:9837*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9837*0 + 3*207*FLEN/8, x4, x1, x2)

inst_3280:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000000000f; valaddr_reg:x3; val_offset:9840*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9840*0 + 3*208*FLEN/8, x4, x1, x2)

inst_3281:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000000001f; valaddr_reg:x3; val_offset:9843*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9843*0 + 3*209*FLEN/8, x4, x1, x2)

inst_3282:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000000003f; valaddr_reg:x3; val_offset:9846*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9846*0 + 3*210*FLEN/8, x4, x1, x2)

inst_3283:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000000007f; valaddr_reg:x3; val_offset:9849*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9849*0 + 3*211*FLEN/8, x4, x1, x2)

inst_3284:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000000000ff; valaddr_reg:x3; val_offset:9852*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9852*0 + 3*212*FLEN/8, x4, x1, x2)

inst_3285:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000000001ff; valaddr_reg:x3; val_offset:9855*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9855*0 + 3*213*FLEN/8, x4, x1, x2)

inst_3286:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000000003ff; valaddr_reg:x3; val_offset:9858*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9858*0 + 3*214*FLEN/8, x4, x1, x2)

inst_3287:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000000007ff; valaddr_reg:x3; val_offset:9861*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9861*0 + 3*215*FLEN/8, x4, x1, x2)

inst_3288:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000000fff; valaddr_reg:x3; val_offset:9864*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9864*0 + 3*216*FLEN/8, x4, x1, x2)

inst_3289:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000001fff; valaddr_reg:x3; val_offset:9867*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9867*0 + 3*217*FLEN/8, x4, x1, x2)

inst_3290:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000003fff; valaddr_reg:x3; val_offset:9870*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9870*0 + 3*218*FLEN/8, x4, x1, x2)

inst_3291:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000007fff; valaddr_reg:x3; val_offset:9873*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9873*0 + 3*219*FLEN/8, x4, x1, x2)

inst_3292:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000000ffff; valaddr_reg:x3; val_offset:9876*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9876*0 + 3*220*FLEN/8, x4, x1, x2)

inst_3293:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000001ffff; valaddr_reg:x3; val_offset:9879*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9879*0 + 3*221*FLEN/8, x4, x1, x2)

inst_3294:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000003ffff; valaddr_reg:x3; val_offset:9882*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9882*0 + 3*222*FLEN/8, x4, x1, x2)

inst_3295:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000007ffff; valaddr_reg:x3; val_offset:9885*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9885*0 + 3*223*FLEN/8, x4, x1, x2)

inst_3296:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000000fffff; valaddr_reg:x3; val_offset:9888*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9888*0 + 3*224*FLEN/8, x4, x1, x2)

inst_3297:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000001fffff; valaddr_reg:x3; val_offset:9891*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9891*0 + 3*225*FLEN/8, x4, x1, x2)

inst_3298:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000003fffff; valaddr_reg:x3; val_offset:9894*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9894*0 + 3*226*FLEN/8, x4, x1, x2)

inst_3299:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000007fffff; valaddr_reg:x3; val_offset:9897*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9897*0 + 3*227*FLEN/8, x4, x1, x2)

inst_3300:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000000ffffff; valaddr_reg:x3; val_offset:9900*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9900*0 + 3*228*FLEN/8, x4, x1, x2)

inst_3301:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000001ffffff; valaddr_reg:x3; val_offset:9903*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9903*0 + 3*229*FLEN/8, x4, x1, x2)

inst_3302:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000003ffffff; valaddr_reg:x3; val_offset:9906*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9906*0 + 3*230*FLEN/8, x4, x1, x2)

inst_3303:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000007ffffff; valaddr_reg:x3; val_offset:9909*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9909*0 + 3*231*FLEN/8, x4, x1, x2)

inst_3304:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000000fffffff; valaddr_reg:x3; val_offset:9912*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9912*0 + 3*232*FLEN/8, x4, x1, x2)

inst_3305:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000001fffffff; valaddr_reg:x3; val_offset:9915*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9915*0 + 3*233*FLEN/8, x4, x1, x2)

inst_3306:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000003fffffff; valaddr_reg:x3; val_offset:9918*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9918*0 + 3*234*FLEN/8, x4, x1, x2)

inst_3307:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000007fffffff; valaddr_reg:x3; val_offset:9921*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9921*0 + 3*235*FLEN/8, x4, x1, x2)

inst_3308:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00000ffffffff; valaddr_reg:x3; val_offset:9924*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9924*0 + 3*236*FLEN/8, x4, x1, x2)

inst_3309:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00001ffffffff; valaddr_reg:x3; val_offset:9927*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9927*0 + 3*237*FLEN/8, x4, x1, x2)

inst_3310:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00003ffffffff; valaddr_reg:x3; val_offset:9930*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9930*0 + 3*238*FLEN/8, x4, x1, x2)

inst_3311:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00007ffffffff; valaddr_reg:x3; val_offset:9933*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9933*0 + 3*239*FLEN/8, x4, x1, x2)

inst_3312:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0000fffffffff; valaddr_reg:x3; val_offset:9936*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9936*0 + 3*240*FLEN/8, x4, x1, x2)

inst_3313:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0001fffffffff; valaddr_reg:x3; val_offset:9939*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9939*0 + 3*241*FLEN/8, x4, x1, x2)

inst_3314:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0003fffffffff; valaddr_reg:x3; val_offset:9942*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9942*0 + 3*242*FLEN/8, x4, x1, x2)

inst_3315:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0007fffffffff; valaddr_reg:x3; val_offset:9945*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9945*0 + 3*243*FLEN/8, x4, x1, x2)

inst_3316:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc000ffffffffff; valaddr_reg:x3; val_offset:9948*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9948*0 + 3*244*FLEN/8, x4, x1, x2)

inst_3317:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc001ffffffffff; valaddr_reg:x3; val_offset:9951*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9951*0 + 3*245*FLEN/8, x4, x1, x2)

inst_3318:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc003ffffffffff; valaddr_reg:x3; val_offset:9954*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9954*0 + 3*246*FLEN/8, x4, x1, x2)

inst_3319:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc007ffffffffff; valaddr_reg:x3; val_offset:9957*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9957*0 + 3*247*FLEN/8, x4, x1, x2)

inst_3320:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc00fffffffffff; valaddr_reg:x3; val_offset:9960*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9960*0 + 3*248*FLEN/8, x4, x1, x2)

inst_3321:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc01fffffffffff; valaddr_reg:x3; val_offset:9963*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9963*0 + 3*249*FLEN/8, x4, x1, x2)

inst_3322:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc03fffffffffff; valaddr_reg:x3; val_offset:9966*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9966*0 + 3*250*FLEN/8, x4, x1, x2)

inst_3323:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc07fffffffffff; valaddr_reg:x3; val_offset:9969*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9969*0 + 3*251*FLEN/8, x4, x1, x2)

inst_3324:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc0ffffffffffff; valaddr_reg:x3; val_offset:9972*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9972*0 + 3*252*FLEN/8, x4, x1, x2)

inst_3325:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc1ffffffffffff; valaddr_reg:x3; val_offset:9975*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9975*0 + 3*253*FLEN/8, x4, x1, x2)

inst_3326:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc3ffffffffffff; valaddr_reg:x3; val_offset:9978*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9978*0 + 3*254*FLEN/8, x4, x1, x2)

inst_3327:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc7ffffffffffff; valaddr_reg:x3; val_offset:9981*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9981*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_3328:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcc8000000000000; valaddr_reg:x3; val_offset:9984*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9984*0 + 3*256*FLEN/8, x4, x1, x2)

inst_3329:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccc000000000000; valaddr_reg:x3; val_offset:9987*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9987*0 + 3*257*FLEN/8, x4, x1, x2)

inst_3330:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbcce000000000000; valaddr_reg:x3; val_offset:9990*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9990*0 + 3*258*FLEN/8, x4, x1, x2)

inst_3331:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccf000000000000; valaddr_reg:x3; val_offset:9993*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9993*0 + 3*259*FLEN/8, x4, x1, x2)

inst_3332:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccf800000000000; valaddr_reg:x3; val_offset:9996*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9996*0 + 3*260*FLEN/8, x4, x1, x2)

inst_3333:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfc00000000000; valaddr_reg:x3; val_offset:9999*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 9999*0 + 3*261*FLEN/8, x4, x1, x2)

inst_3334:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfe00000000000; valaddr_reg:x3; val_offset:10002*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10002*0 + 3*262*FLEN/8, x4, x1, x2)

inst_3335:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccff00000000000; valaddr_reg:x3; val_offset:10005*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10005*0 + 3*263*FLEN/8, x4, x1, x2)

inst_3336:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccff80000000000; valaddr_reg:x3; val_offset:10008*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10008*0 + 3*264*FLEN/8, x4, x1, x2)

inst_3337:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffc0000000000; valaddr_reg:x3; val_offset:10011*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10011*0 + 3*265*FLEN/8, x4, x1, x2)

inst_3338:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffe0000000000; valaddr_reg:x3; val_offset:10014*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10014*0 + 3*266*FLEN/8, x4, x1, x2)

inst_3339:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfff0000000000; valaddr_reg:x3; val_offset:10017*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10017*0 + 3*267*FLEN/8, x4, x1, x2)

inst_3340:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfff8000000000; valaddr_reg:x3; val_offset:10020*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10020*0 + 3*268*FLEN/8, x4, x1, x2)

inst_3341:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffc000000000; valaddr_reg:x3; val_offset:10023*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10023*0 + 3*269*FLEN/8, x4, x1, x2)

inst_3342:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffe000000000; valaddr_reg:x3; val_offset:10026*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10026*0 + 3*270*FLEN/8, x4, x1, x2)

inst_3343:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffff000000000; valaddr_reg:x3; val_offset:10029*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10029*0 + 3*271*FLEN/8, x4, x1, x2)

inst_3344:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffff800000000; valaddr_reg:x3; val_offset:10032*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10032*0 + 3*272*FLEN/8, x4, x1, x2)

inst_3345:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffc00000000; valaddr_reg:x3; val_offset:10035*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10035*0 + 3*273*FLEN/8, x4, x1, x2)

inst_3346:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffe00000000; valaddr_reg:x3; val_offset:10038*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10038*0 + 3*274*FLEN/8, x4, x1, x2)

inst_3347:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffff00000000; valaddr_reg:x3; val_offset:10041*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10041*0 + 3*275*FLEN/8, x4, x1, x2)

inst_3348:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffff80000000; valaddr_reg:x3; val_offset:10044*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10044*0 + 3*276*FLEN/8, x4, x1, x2)

inst_3349:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffc0000000; valaddr_reg:x3; val_offset:10047*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10047*0 + 3*277*FLEN/8, x4, x1, x2)

inst_3350:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffe0000000; valaddr_reg:x3; val_offset:10050*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10050*0 + 3*278*FLEN/8, x4, x1, x2)

inst_3351:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffff0000000; valaddr_reg:x3; val_offset:10053*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10053*0 + 3*279*FLEN/8, x4, x1, x2)

inst_3352:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffff8000000; valaddr_reg:x3; val_offset:10056*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10056*0 + 3*280*FLEN/8, x4, x1, x2)

inst_3353:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffc000000; valaddr_reg:x3; val_offset:10059*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10059*0 + 3*281*FLEN/8, x4, x1, x2)

inst_3354:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffe000000; valaddr_reg:x3; val_offset:10062*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10062*0 + 3*282*FLEN/8, x4, x1, x2)

inst_3355:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffff000000; valaddr_reg:x3; val_offset:10065*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10065*0 + 3*283*FLEN/8, x4, x1, x2)

inst_3356:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffff800000; valaddr_reg:x3; val_offset:10068*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10068*0 + 3*284*FLEN/8, x4, x1, x2)

inst_3357:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffc00000; valaddr_reg:x3; val_offset:10071*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10071*0 + 3*285*FLEN/8, x4, x1, x2)

inst_3358:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffe00000; valaddr_reg:x3; val_offset:10074*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10074*0 + 3*286*FLEN/8, x4, x1, x2)

inst_3359:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffff00000; valaddr_reg:x3; val_offset:10077*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10077*0 + 3*287*FLEN/8, x4, x1, x2)

inst_3360:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffff80000; valaddr_reg:x3; val_offset:10080*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10080*0 + 3*288*FLEN/8, x4, x1, x2)

inst_3361:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffc0000; valaddr_reg:x3; val_offset:10083*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10083*0 + 3*289*FLEN/8, x4, x1, x2)

inst_3362:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffe0000; valaddr_reg:x3; val_offset:10086*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10086*0 + 3*290*FLEN/8, x4, x1, x2)

inst_3363:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffff0000; valaddr_reg:x3; val_offset:10089*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10089*0 + 3*291*FLEN/8, x4, x1, x2)

inst_3364:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffff8000; valaddr_reg:x3; val_offset:10092*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10092*0 + 3*292*FLEN/8, x4, x1, x2)

inst_3365:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffc000; valaddr_reg:x3; val_offset:10095*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10095*0 + 3*293*FLEN/8, x4, x1, x2)

inst_3366:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffe000; valaddr_reg:x3; val_offset:10098*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10098*0 + 3*294*FLEN/8, x4, x1, x2)

inst_3367:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffff000; valaddr_reg:x3; val_offset:10101*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10101*0 + 3*295*FLEN/8, x4, x1, x2)

inst_3368:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffff800; valaddr_reg:x3; val_offset:10104*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10104*0 + 3*296*FLEN/8, x4, x1, x2)

inst_3369:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffc00; valaddr_reg:x3; val_offset:10107*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10107*0 + 3*297*FLEN/8, x4, x1, x2)

inst_3370:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffe00; valaddr_reg:x3; val_offset:10110*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10110*0 + 3*298*FLEN/8, x4, x1, x2)

inst_3371:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffff00; valaddr_reg:x3; val_offset:10113*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10113*0 + 3*299*FLEN/8, x4, x1, x2)

inst_3372:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffff80; valaddr_reg:x3; val_offset:10116*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10116*0 + 3*300*FLEN/8, x4, x1, x2)

inst_3373:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffffc0; valaddr_reg:x3; val_offset:10119*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10119*0 + 3*301*FLEN/8, x4, x1, x2)

inst_3374:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffffe0; valaddr_reg:x3; val_offset:10122*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10122*0 + 3*302*FLEN/8, x4, x1, x2)

inst_3375:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffff0; valaddr_reg:x3; val_offset:10125*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10125*0 + 3*303*FLEN/8, x4, x1, x2)

inst_3376:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffff8; valaddr_reg:x3; val_offset:10128*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10128*0 + 3*304*FLEN/8, x4, x1, x2)

inst_3377:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffffc; valaddr_reg:x3; val_offset:10131*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10131*0 + 3*305*FLEN/8, x4, x1, x2)

inst_3378:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccffffffffffffe; valaddr_reg:x3; val_offset:10134*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10134*0 + 3*306*FLEN/8, x4, x1, x2)

inst_3379:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3cc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbccfffffffffffff; valaddr_reg:x3; val_offset:10137*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10137*0 + 3*307*FLEN/8, x4, x1, x2)

inst_3380:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:10140*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10140*0 + 3*308*FLEN/8, x4, x1, x2)

inst_3381:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:10143*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10143*0 + 3*309*FLEN/8, x4, x1, x2)

inst_3382:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:10146*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10146*0 + 3*310*FLEN/8, x4, x1, x2)

inst_3383:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:10149*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10149*0 + 3*311*FLEN/8, x4, x1, x2)

inst_3384:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:10152*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10152*0 + 3*312*FLEN/8, x4, x1, x2)

inst_3385:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:10155*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10155*0 + 3*313*FLEN/8, x4, x1, x2)

inst_3386:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:10158*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10158*0 + 3*314*FLEN/8, x4, x1, x2)

inst_3387:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:10161*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10161*0 + 3*315*FLEN/8, x4, x1, x2)

inst_3388:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:10164*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10164*0 + 3*316*FLEN/8, x4, x1, x2)

inst_3389:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:10167*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10167*0 + 3*317*FLEN/8, x4, x1, x2)

inst_3390:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:10170*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10170*0 + 3*318*FLEN/8, x4, x1, x2)

inst_3391:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:10173*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10173*0 + 3*319*FLEN/8, x4, x1, x2)

inst_3392:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:10176*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10176*0 + 3*320*FLEN/8, x4, x1, x2)

inst_3393:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:10179*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10179*0 + 3*321*FLEN/8, x4, x1, x2)

inst_3394:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:10182*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10182*0 + 3*322*FLEN/8, x4, x1, x2)

inst_3395:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:10185*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10185*0 + 3*323*FLEN/8, x4, x1, x2)

inst_3396:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:10188*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10188*0 + 3*324*FLEN/8, x4, x1, x2)

inst_3397:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:10191*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10191*0 + 3*325*FLEN/8, x4, x1, x2)

inst_3398:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:10194*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10194*0 + 3*326*FLEN/8, x4, x1, x2)

inst_3399:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:10197*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10197*0 + 3*327*FLEN/8, x4, x1, x2)

inst_3400:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:10200*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10200*0 + 3*328*FLEN/8, x4, x1, x2)

inst_3401:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc30407e58dcff and fs2 == 1 and fe2 == 0x201 and fm2 == 0x229d793b268bf and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5c30407e58dcff; op2val:0xa01229d793b268bf;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:10203*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10203*0 + 3*329*FLEN/8, x4, x1, x2)

inst_3402:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:10206*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10206*0 + 3*330*FLEN/8, x4, x1, x2)

inst_3403:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:10209*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10209*0 + 3*331*FLEN/8, x4, x1, x2)

inst_3404:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:10212*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10212*0 + 3*332*FLEN/8, x4, x1, x2)

inst_3405:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:10215*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10215*0 + 3*333*FLEN/8, x4, x1, x2)

inst_3406:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:10218*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10218*0 + 3*334*FLEN/8, x4, x1, x2)

inst_3407:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:10221*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10221*0 + 3*335*FLEN/8, x4, x1, x2)

inst_3408:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:10224*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10224*0 + 3*336*FLEN/8, x4, x1, x2)

inst_3409:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:10227*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10227*0 + 3*337*FLEN/8, x4, x1, x2)

inst_3410:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:10230*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10230*0 + 3*338*FLEN/8, x4, x1, x2)

inst_3411:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:10233*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10233*0 + 3*339*FLEN/8, x4, x1, x2)

inst_3412:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:10236*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10236*0 + 3*340*FLEN/8, x4, x1, x2)

inst_3413:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:10239*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10239*0 + 3*341*FLEN/8, x4, x1, x2)

inst_3414:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:10242*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10242*0 + 3*342*FLEN/8, x4, x1, x2)

inst_3415:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:10245*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10245*0 + 3*343*FLEN/8, x4, x1, x2)

inst_3416:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:10248*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10248*0 + 3*344*FLEN/8, x4, x1, x2)

inst_3417:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:10251*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10251*0 + 3*345*FLEN/8, x4, x1, x2)

inst_3418:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:10254*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10254*0 + 3*346*FLEN/8, x4, x1, x2)

inst_3419:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:10257*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10257*0 + 3*347*FLEN/8, x4, x1, x2)

inst_3420:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:10260*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10260*0 + 3*348*FLEN/8, x4, x1, x2)

inst_3421:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:10263*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10263*0 + 3*349*FLEN/8, x4, x1, x2)

inst_3422:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:10266*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10266*0 + 3*350*FLEN/8, x4, x1, x2)

inst_3423:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:10269*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10269*0 + 3*351*FLEN/8, x4, x1, x2)

inst_3424:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000000000; valaddr_reg:x3; val_offset:10272*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10272*0 + 3*352*FLEN/8, x4, x1, x2)

inst_3425:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000000001; valaddr_reg:x3; val_offset:10275*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10275*0 + 3*353*FLEN/8, x4, x1, x2)

inst_3426:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000000003; valaddr_reg:x3; val_offset:10278*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10278*0 + 3*354*FLEN/8, x4, x1, x2)

inst_3427:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000000007; valaddr_reg:x3; val_offset:10281*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10281*0 + 3*355*FLEN/8, x4, x1, x2)

inst_3428:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000000000f; valaddr_reg:x3; val_offset:10284*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10284*0 + 3*356*FLEN/8, x4, x1, x2)

inst_3429:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000000001f; valaddr_reg:x3; val_offset:10287*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10287*0 + 3*357*FLEN/8, x4, x1, x2)

inst_3430:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000000003f; valaddr_reg:x3; val_offset:10290*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10290*0 + 3*358*FLEN/8, x4, x1, x2)

inst_3431:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000000007f; valaddr_reg:x3; val_offset:10293*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10293*0 + 3*359*FLEN/8, x4, x1, x2)

inst_3432:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000000000ff; valaddr_reg:x3; val_offset:10296*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10296*0 + 3*360*FLEN/8, x4, x1, x2)

inst_3433:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000000001ff; valaddr_reg:x3; val_offset:10299*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10299*0 + 3*361*FLEN/8, x4, x1, x2)

inst_3434:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000000003ff; valaddr_reg:x3; val_offset:10302*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10302*0 + 3*362*FLEN/8, x4, x1, x2)

inst_3435:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000000007ff; valaddr_reg:x3; val_offset:10305*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10305*0 + 3*363*FLEN/8, x4, x1, x2)

inst_3436:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000000fff; valaddr_reg:x3; val_offset:10308*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10308*0 + 3*364*FLEN/8, x4, x1, x2)

inst_3437:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000001fff; valaddr_reg:x3; val_offset:10311*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10311*0 + 3*365*FLEN/8, x4, x1, x2)

inst_3438:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000003fff; valaddr_reg:x3; val_offset:10314*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10314*0 + 3*366*FLEN/8, x4, x1, x2)

inst_3439:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000007fff; valaddr_reg:x3; val_offset:10317*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10317*0 + 3*367*FLEN/8, x4, x1, x2)

inst_3440:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000000ffff; valaddr_reg:x3; val_offset:10320*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10320*0 + 3*368*FLEN/8, x4, x1, x2)

inst_3441:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000001ffff; valaddr_reg:x3; val_offset:10323*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10323*0 + 3*369*FLEN/8, x4, x1, x2)

inst_3442:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000003ffff; valaddr_reg:x3; val_offset:10326*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10326*0 + 3*370*FLEN/8, x4, x1, x2)

inst_3443:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000007ffff; valaddr_reg:x3; val_offset:10329*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10329*0 + 3*371*FLEN/8, x4, x1, x2)

inst_3444:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000000fffff; valaddr_reg:x3; val_offset:10332*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10332*0 + 3*372*FLEN/8, x4, x1, x2)

inst_3445:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000001fffff; valaddr_reg:x3; val_offset:10335*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10335*0 + 3*373*FLEN/8, x4, x1, x2)

inst_3446:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000003fffff; valaddr_reg:x3; val_offset:10338*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10338*0 + 3*374*FLEN/8, x4, x1, x2)

inst_3447:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000007fffff; valaddr_reg:x3; val_offset:10341*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10341*0 + 3*375*FLEN/8, x4, x1, x2)

inst_3448:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000000ffffff; valaddr_reg:x3; val_offset:10344*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10344*0 + 3*376*FLEN/8, x4, x1, x2)

inst_3449:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000001ffffff; valaddr_reg:x3; val_offset:10347*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10347*0 + 3*377*FLEN/8, x4, x1, x2)

inst_3450:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000003ffffff; valaddr_reg:x3; val_offset:10350*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10350*0 + 3*378*FLEN/8, x4, x1, x2)

inst_3451:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000007ffffff; valaddr_reg:x3; val_offset:10353*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10353*0 + 3*379*FLEN/8, x4, x1, x2)

inst_3452:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000000fffffff; valaddr_reg:x3; val_offset:10356*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10356*0 + 3*380*FLEN/8, x4, x1, x2)

inst_3453:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000001fffffff; valaddr_reg:x3; val_offset:10359*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10359*0 + 3*381*FLEN/8, x4, x1, x2)

inst_3454:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000003fffffff; valaddr_reg:x3; val_offset:10362*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10362*0 + 3*382*FLEN/8, x4, x1, x2)

inst_3455:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000007fffffff; valaddr_reg:x3; val_offset:10365*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10365*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_3456:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00000ffffffff; valaddr_reg:x3; val_offset:10368*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10368*0 + 3*384*FLEN/8, x4, x1, x2)

inst_3457:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00001ffffffff; valaddr_reg:x3; val_offset:10371*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10371*0 + 3*385*FLEN/8, x4, x1, x2)

inst_3458:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00003ffffffff; valaddr_reg:x3; val_offset:10374*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10374*0 + 3*386*FLEN/8, x4, x1, x2)

inst_3459:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00007ffffffff; valaddr_reg:x3; val_offset:10377*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10377*0 + 3*387*FLEN/8, x4, x1, x2)

inst_3460:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0000fffffffff; valaddr_reg:x3; val_offset:10380*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10380*0 + 3*388*FLEN/8, x4, x1, x2)

inst_3461:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0001fffffffff; valaddr_reg:x3; val_offset:10383*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10383*0 + 3*389*FLEN/8, x4, x1, x2)

inst_3462:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0003fffffffff; valaddr_reg:x3; val_offset:10386*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10386*0 + 3*390*FLEN/8, x4, x1, x2)

inst_3463:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0007fffffffff; valaddr_reg:x3; val_offset:10389*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10389*0 + 3*391*FLEN/8, x4, x1, x2)

inst_3464:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b000ffffffffff; valaddr_reg:x3; val_offset:10392*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10392*0 + 3*392*FLEN/8, x4, x1, x2)

inst_3465:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b001ffffffffff; valaddr_reg:x3; val_offset:10395*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10395*0 + 3*393*FLEN/8, x4, x1, x2)

inst_3466:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b003ffffffffff; valaddr_reg:x3; val_offset:10398*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10398*0 + 3*394*FLEN/8, x4, x1, x2)

inst_3467:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b007ffffffffff; valaddr_reg:x3; val_offset:10401*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10401*0 + 3*395*FLEN/8, x4, x1, x2)

inst_3468:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b00fffffffffff; valaddr_reg:x3; val_offset:10404*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10404*0 + 3*396*FLEN/8, x4, x1, x2)

inst_3469:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b01fffffffffff; valaddr_reg:x3; val_offset:10407*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10407*0 + 3*397*FLEN/8, x4, x1, x2)

inst_3470:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b03fffffffffff; valaddr_reg:x3; val_offset:10410*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10410*0 + 3*398*FLEN/8, x4, x1, x2)

inst_3471:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b07fffffffffff; valaddr_reg:x3; val_offset:10413*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10413*0 + 3*399*FLEN/8, x4, x1, x2)

inst_3472:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b0ffffffffffff; valaddr_reg:x3; val_offset:10416*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10416*0 + 3*400*FLEN/8, x4, x1, x2)

inst_3473:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b1ffffffffffff; valaddr_reg:x3; val_offset:10419*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10419*0 + 3*401*FLEN/8, x4, x1, x2)

inst_3474:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b3ffffffffffff; valaddr_reg:x3; val_offset:10422*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10422*0 + 3*402*FLEN/8, x4, x1, x2)

inst_3475:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b7ffffffffffff; valaddr_reg:x3; val_offset:10425*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10425*0 + 3*403*FLEN/8, x4, x1, x2)

inst_3476:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2b8000000000000; valaddr_reg:x3; val_offset:10428*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10428*0 + 3*404*FLEN/8, x4, x1, x2)

inst_3477:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bc000000000000; valaddr_reg:x3; val_offset:10431*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10431*0 + 3*405*FLEN/8, x4, x1, x2)

inst_3478:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2be000000000000; valaddr_reg:x3; val_offset:10434*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10434*0 + 3*406*FLEN/8, x4, x1, x2)

inst_3479:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bf000000000000; valaddr_reg:x3; val_offset:10437*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10437*0 + 3*407*FLEN/8, x4, x1, x2)

inst_3480:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:10440*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10440*0 + 3*408*FLEN/8, x4, x1, x2)

inst_3481:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:10443*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10443*0 + 3*409*FLEN/8, x4, x1, x2)

inst_3482:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:10446*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10446*0 + 3*410*FLEN/8, x4, x1, x2)

inst_3483:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:10449*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10449*0 + 3*411*FLEN/8, x4, x1, x2)

inst_3484:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:10452*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10452*0 + 3*412*FLEN/8, x4, x1, x2)

inst_3485:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:10455*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10455*0 + 3*413*FLEN/8, x4, x1, x2)

inst_3486:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffe0000000000; valaddr_reg:x3; val_offset:10458*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10458*0 + 3*414*FLEN/8, x4, x1, x2)

inst_3487:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfff0000000000; valaddr_reg:x3; val_offset:10461*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10461*0 + 3*415*FLEN/8, x4, x1, x2)

inst_3488:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfff8000000000; valaddr_reg:x3; val_offset:10464*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10464*0 + 3*416*FLEN/8, x4, x1, x2)

inst_3489:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffc000000000; valaddr_reg:x3; val_offset:10467*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10467*0 + 3*417*FLEN/8, x4, x1, x2)

inst_3490:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffe000000000; valaddr_reg:x3; val_offset:10470*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10470*0 + 3*418*FLEN/8, x4, x1, x2)

inst_3491:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffff000000000; valaddr_reg:x3; val_offset:10473*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10473*0 + 3*419*FLEN/8, x4, x1, x2)

inst_3492:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffff800000000; valaddr_reg:x3; val_offset:10476*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10476*0 + 3*420*FLEN/8, x4, x1, x2)

inst_3493:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffc00000000; valaddr_reg:x3; val_offset:10479*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10479*0 + 3*421*FLEN/8, x4, x1, x2)

inst_3494:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffe00000000; valaddr_reg:x3; val_offset:10482*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10482*0 + 3*422*FLEN/8, x4, x1, x2)

inst_3495:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffff00000000; valaddr_reg:x3; val_offset:10485*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10485*0 + 3*423*FLEN/8, x4, x1, x2)

inst_3496:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffff80000000; valaddr_reg:x3; val_offset:10488*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10488*0 + 3*424*FLEN/8, x4, x1, x2)

inst_3497:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffc0000000; valaddr_reg:x3; val_offset:10491*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10491*0 + 3*425*FLEN/8, x4, x1, x2)

inst_3498:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffe0000000; valaddr_reg:x3; val_offset:10494*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10494*0 + 3*426*FLEN/8, x4, x1, x2)

inst_3499:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffff0000000; valaddr_reg:x3; val_offset:10497*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10497*0 + 3*427*FLEN/8, x4, x1, x2)

inst_3500:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffff8000000; valaddr_reg:x3; val_offset:10500*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10500*0 + 3*428*FLEN/8, x4, x1, x2)

inst_3501:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffc000000; valaddr_reg:x3; val_offset:10503*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10503*0 + 3*429*FLEN/8, x4, x1, x2)

inst_3502:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffe000000; valaddr_reg:x3; val_offset:10506*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10506*0 + 3*430*FLEN/8, x4, x1, x2)

inst_3503:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffff000000; valaddr_reg:x3; val_offset:10509*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10509*0 + 3*431*FLEN/8, x4, x1, x2)

inst_3504:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffff800000; valaddr_reg:x3; val_offset:10512*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10512*0 + 3*432*FLEN/8, x4, x1, x2)

inst_3505:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffc00000; valaddr_reg:x3; val_offset:10515*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10515*0 + 3*433*FLEN/8, x4, x1, x2)

inst_3506:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffe00000; valaddr_reg:x3; val_offset:10518*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10518*0 + 3*434*FLEN/8, x4, x1, x2)

inst_3507:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffff00000; valaddr_reg:x3; val_offset:10521*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10521*0 + 3*435*FLEN/8, x4, x1, x2)

inst_3508:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffff80000; valaddr_reg:x3; val_offset:10524*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10524*0 + 3*436*FLEN/8, x4, x1, x2)

inst_3509:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffc0000; valaddr_reg:x3; val_offset:10527*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10527*0 + 3*437*FLEN/8, x4, x1, x2)

inst_3510:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffe0000; valaddr_reg:x3; val_offset:10530*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10530*0 + 3*438*FLEN/8, x4, x1, x2)

inst_3511:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffff0000; valaddr_reg:x3; val_offset:10533*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10533*0 + 3*439*FLEN/8, x4, x1, x2)

inst_3512:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffff8000; valaddr_reg:x3; val_offset:10536*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10536*0 + 3*440*FLEN/8, x4, x1, x2)

inst_3513:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffc000; valaddr_reg:x3; val_offset:10539*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10539*0 + 3*441*FLEN/8, x4, x1, x2)

inst_3514:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffe000; valaddr_reg:x3; val_offset:10542*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10542*0 + 3*442*FLEN/8, x4, x1, x2)

inst_3515:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffff000; valaddr_reg:x3; val_offset:10545*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10545*0 + 3*443*FLEN/8, x4, x1, x2)

inst_3516:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffff800; valaddr_reg:x3; val_offset:10548*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10548*0 + 3*444*FLEN/8, x4, x1, x2)

inst_3517:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffc00; valaddr_reg:x3; val_offset:10551*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10551*0 + 3*445*FLEN/8, x4, x1, x2)

inst_3518:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffe00; valaddr_reg:x3; val_offset:10554*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10554*0 + 3*446*FLEN/8, x4, x1, x2)

inst_3519:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffff00; valaddr_reg:x3; val_offset:10557*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10557*0 + 3*447*FLEN/8, x4, x1, x2)

inst_3520:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffff80; valaddr_reg:x3; val_offset:10560*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10560*0 + 3*448*FLEN/8, x4, x1, x2)

inst_3521:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffffc0; valaddr_reg:x3; val_offset:10563*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10563*0 + 3*449*FLEN/8, x4, x1, x2)

inst_3522:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffffe0; valaddr_reg:x3; val_offset:10566*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10566*0 + 3*450*FLEN/8, x4, x1, x2)

inst_3523:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffff0; valaddr_reg:x3; val_offset:10569*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10569*0 + 3*451*FLEN/8, x4, x1, x2)

inst_3524:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffff8; valaddr_reg:x3; val_offset:10572*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10572*0 + 3*452*FLEN/8, x4, x1, x2)

inst_3525:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffffc; valaddr_reg:x3; val_offset:10575*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10575*0 + 3*453*FLEN/8, x4, x1, x2)

inst_3526:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bffffffffffffe; valaddr_reg:x3; val_offset:10578*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10578*0 + 3*454*FLEN/8, x4, x1, x2)

inst_3527:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe13b23d40acdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e13b23d40acdf; op2val:0x0;
op3val:0x2bfffffffffffff; valaddr_reg:x3; val_offset:10581*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10581*0 + 3*455*FLEN/8, x4, x1, x2)

inst_3528:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000000000; valaddr_reg:x3; val_offset:10584*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10584*0 + 3*456*FLEN/8, x4, x1, x2)

inst_3529:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000000001; valaddr_reg:x3; val_offset:10587*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10587*0 + 3*457*FLEN/8, x4, x1, x2)

inst_3530:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000000003; valaddr_reg:x3; val_offset:10590*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10590*0 + 3*458*FLEN/8, x4, x1, x2)

inst_3531:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000000007; valaddr_reg:x3; val_offset:10593*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10593*0 + 3*459*FLEN/8, x4, x1, x2)

inst_3532:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000000000f; valaddr_reg:x3; val_offset:10596*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10596*0 + 3*460*FLEN/8, x4, x1, x2)

inst_3533:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000000001f; valaddr_reg:x3; val_offset:10599*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10599*0 + 3*461*FLEN/8, x4, x1, x2)

inst_3534:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000000003f; valaddr_reg:x3; val_offset:10602*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10602*0 + 3*462*FLEN/8, x4, x1, x2)

inst_3535:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000000007f; valaddr_reg:x3; val_offset:10605*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10605*0 + 3*463*FLEN/8, x4, x1, x2)

inst_3536:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000000000ff; valaddr_reg:x3; val_offset:10608*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10608*0 + 3*464*FLEN/8, x4, x1, x2)

inst_3537:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000000001ff; valaddr_reg:x3; val_offset:10611*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10611*0 + 3*465*FLEN/8, x4, x1, x2)

inst_3538:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000000003ff; valaddr_reg:x3; val_offset:10614*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10614*0 + 3*466*FLEN/8, x4, x1, x2)

inst_3539:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000000007ff; valaddr_reg:x3; val_offset:10617*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10617*0 + 3*467*FLEN/8, x4, x1, x2)

inst_3540:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000000fff; valaddr_reg:x3; val_offset:10620*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10620*0 + 3*468*FLEN/8, x4, x1, x2)

inst_3541:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000001fff; valaddr_reg:x3; val_offset:10623*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10623*0 + 3*469*FLEN/8, x4, x1, x2)

inst_3542:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000003fff; valaddr_reg:x3; val_offset:10626*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10626*0 + 3*470*FLEN/8, x4, x1, x2)

inst_3543:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000007fff; valaddr_reg:x3; val_offset:10629*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10629*0 + 3*471*FLEN/8, x4, x1, x2)

inst_3544:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000000ffff; valaddr_reg:x3; val_offset:10632*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10632*0 + 3*472*FLEN/8, x4, x1, x2)

inst_3545:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000001ffff; valaddr_reg:x3; val_offset:10635*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10635*0 + 3*473*FLEN/8, x4, x1, x2)

inst_3546:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000003ffff; valaddr_reg:x3; val_offset:10638*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10638*0 + 3*474*FLEN/8, x4, x1, x2)

inst_3547:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000007ffff; valaddr_reg:x3; val_offset:10641*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10641*0 + 3*475*FLEN/8, x4, x1, x2)

inst_3548:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000000fffff; valaddr_reg:x3; val_offset:10644*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10644*0 + 3*476*FLEN/8, x4, x1, x2)

inst_3549:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000001fffff; valaddr_reg:x3; val_offset:10647*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10647*0 + 3*477*FLEN/8, x4, x1, x2)

inst_3550:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000003fffff; valaddr_reg:x3; val_offset:10650*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10650*0 + 3*478*FLEN/8, x4, x1, x2)

inst_3551:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000007fffff; valaddr_reg:x3; val_offset:10653*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10653*0 + 3*479*FLEN/8, x4, x1, x2)

inst_3552:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000000ffffff; valaddr_reg:x3; val_offset:10656*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10656*0 + 3*480*FLEN/8, x4, x1, x2)

inst_3553:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000001ffffff; valaddr_reg:x3; val_offset:10659*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10659*0 + 3*481*FLEN/8, x4, x1, x2)

inst_3554:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000003ffffff; valaddr_reg:x3; val_offset:10662*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10662*0 + 3*482*FLEN/8, x4, x1, x2)

inst_3555:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000007ffffff; valaddr_reg:x3; val_offset:10665*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10665*0 + 3*483*FLEN/8, x4, x1, x2)

inst_3556:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000000fffffff; valaddr_reg:x3; val_offset:10668*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10668*0 + 3*484*FLEN/8, x4, x1, x2)

inst_3557:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000001fffffff; valaddr_reg:x3; val_offset:10671*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10671*0 + 3*485*FLEN/8, x4, x1, x2)

inst_3558:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000003fffffff; valaddr_reg:x3; val_offset:10674*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10674*0 + 3*486*FLEN/8, x4, x1, x2)

inst_3559:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000007fffffff; valaddr_reg:x3; val_offset:10677*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10677*0 + 3*487*FLEN/8, x4, x1, x2)

inst_3560:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00000ffffffff; valaddr_reg:x3; val_offset:10680*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10680*0 + 3*488*FLEN/8, x4, x1, x2)

inst_3561:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00001ffffffff; valaddr_reg:x3; val_offset:10683*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10683*0 + 3*489*FLEN/8, x4, x1, x2)

inst_3562:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00003ffffffff; valaddr_reg:x3; val_offset:10686*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10686*0 + 3*490*FLEN/8, x4, x1, x2)

inst_3563:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00007ffffffff; valaddr_reg:x3; val_offset:10689*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10689*0 + 3*491*FLEN/8, x4, x1, x2)

inst_3564:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0000fffffffff; valaddr_reg:x3; val_offset:10692*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10692*0 + 3*492*FLEN/8, x4, x1, x2)

inst_3565:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0001fffffffff; valaddr_reg:x3; val_offset:10695*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10695*0 + 3*493*FLEN/8, x4, x1, x2)

inst_3566:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0003fffffffff; valaddr_reg:x3; val_offset:10698*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10698*0 + 3*494*FLEN/8, x4, x1, x2)

inst_3567:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0007fffffffff; valaddr_reg:x3; val_offset:10701*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10701*0 + 3*495*FLEN/8, x4, x1, x2)

inst_3568:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e000ffffffffff; valaddr_reg:x3; val_offset:10704*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10704*0 + 3*496*FLEN/8, x4, x1, x2)

inst_3569:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e001ffffffffff; valaddr_reg:x3; val_offset:10707*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10707*0 + 3*497*FLEN/8, x4, x1, x2)

inst_3570:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e003ffffffffff; valaddr_reg:x3; val_offset:10710*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10710*0 + 3*498*FLEN/8, x4, x1, x2)

inst_3571:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e007ffffffffff; valaddr_reg:x3; val_offset:10713*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10713*0 + 3*499*FLEN/8, x4, x1, x2)

inst_3572:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e00fffffffffff; valaddr_reg:x3; val_offset:10716*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10716*0 + 3*500*FLEN/8, x4, x1, x2)

inst_3573:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e01fffffffffff; valaddr_reg:x3; val_offset:10719*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10719*0 + 3*501*FLEN/8, x4, x1, x2)

inst_3574:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e03fffffffffff; valaddr_reg:x3; val_offset:10722*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10722*0 + 3*502*FLEN/8, x4, x1, x2)

inst_3575:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e07fffffffffff; valaddr_reg:x3; val_offset:10725*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10725*0 + 3*503*FLEN/8, x4, x1, x2)

inst_3576:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e0ffffffffffff; valaddr_reg:x3; val_offset:10728*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10728*0 + 3*504*FLEN/8, x4, x1, x2)

inst_3577:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e1ffffffffffff; valaddr_reg:x3; val_offset:10731*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10731*0 + 3*505*FLEN/8, x4, x1, x2)

inst_3578:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e3ffffffffffff; valaddr_reg:x3; val_offset:10734*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10734*0 + 3*506*FLEN/8, x4, x1, x2)

inst_3579:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e7ffffffffffff; valaddr_reg:x3; val_offset:10737*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10737*0 + 3*507*FLEN/8, x4, x1, x2)

inst_3580:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8e8000000000000; valaddr_reg:x3; val_offset:10740*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10740*0 + 3*508*FLEN/8, x4, x1, x2)

inst_3581:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8ec000000000000; valaddr_reg:x3; val_offset:10743*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10743*0 + 3*509*FLEN/8, x4, x1, x2)

inst_3582:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8ee000000000000; valaddr_reg:x3; val_offset:10746*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10746*0 + 3*510*FLEN/8, x4, x1, x2)

inst_3583:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8ef000000000000; valaddr_reg:x3; val_offset:10749*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10749*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_3584:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8ef800000000000; valaddr_reg:x3; val_offset:10752*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10752*0 + 3*512*FLEN/8, x4, x1, x2)

inst_3585:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efc00000000000; valaddr_reg:x3; val_offset:10755*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10755*0 + 3*513*FLEN/8, x4, x1, x2)

inst_3586:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efe00000000000; valaddr_reg:x3; val_offset:10758*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10758*0 + 3*514*FLEN/8, x4, x1, x2)

inst_3587:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8eff00000000000; valaddr_reg:x3; val_offset:10761*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10761*0 + 3*515*FLEN/8, x4, x1, x2)

inst_3588:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8eff80000000000; valaddr_reg:x3; val_offset:10764*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10764*0 + 3*516*FLEN/8, x4, x1, x2)

inst_3589:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effc0000000000; valaddr_reg:x3; val_offset:10767*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10767*0 + 3*517*FLEN/8, x4, x1, x2)

inst_3590:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effe0000000000; valaddr_reg:x3; val_offset:10770*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10770*0 + 3*518*FLEN/8, x4, x1, x2)

inst_3591:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efff0000000000; valaddr_reg:x3; val_offset:10773*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10773*0 + 3*519*FLEN/8, x4, x1, x2)

inst_3592:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efff8000000000; valaddr_reg:x3; val_offset:10776*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10776*0 + 3*520*FLEN/8, x4, x1, x2)

inst_3593:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffc000000000; valaddr_reg:x3; val_offset:10779*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10779*0 + 3*521*FLEN/8, x4, x1, x2)

inst_3594:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffe000000000; valaddr_reg:x3; val_offset:10782*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10782*0 + 3*522*FLEN/8, x4, x1, x2)

inst_3595:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effff000000000; valaddr_reg:x3; val_offset:10785*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10785*0 + 3*523*FLEN/8, x4, x1, x2)

inst_3596:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effff800000000; valaddr_reg:x3; val_offset:10788*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10788*0 + 3*524*FLEN/8, x4, x1, x2)

inst_3597:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffc00000000; valaddr_reg:x3; val_offset:10791*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10791*0 + 3*525*FLEN/8, x4, x1, x2)

inst_3598:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffe00000000; valaddr_reg:x3; val_offset:10794*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10794*0 + 3*526*FLEN/8, x4, x1, x2)

inst_3599:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffff00000000; valaddr_reg:x3; val_offset:10797*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10797*0 + 3*527*FLEN/8, x4, x1, x2)

inst_3600:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffff80000000; valaddr_reg:x3; val_offset:10800*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10800*0 + 3*528*FLEN/8, x4, x1, x2)

inst_3601:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffc0000000; valaddr_reg:x3; val_offset:10803*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10803*0 + 3*529*FLEN/8, x4, x1, x2)

inst_3602:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffe0000000; valaddr_reg:x3; val_offset:10806*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10806*0 + 3*530*FLEN/8, x4, x1, x2)

inst_3603:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffff0000000; valaddr_reg:x3; val_offset:10809*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10809*0 + 3*531*FLEN/8, x4, x1, x2)

inst_3604:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffff8000000; valaddr_reg:x3; val_offset:10812*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10812*0 + 3*532*FLEN/8, x4, x1, x2)

inst_3605:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffc000000; valaddr_reg:x3; val_offset:10815*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10815*0 + 3*533*FLEN/8, x4, x1, x2)

inst_3606:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffe000000; valaddr_reg:x3; val_offset:10818*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10818*0 + 3*534*FLEN/8, x4, x1, x2)

inst_3607:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffff000000; valaddr_reg:x3; val_offset:10821*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10821*0 + 3*535*FLEN/8, x4, x1, x2)

inst_3608:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffff800000; valaddr_reg:x3; val_offset:10824*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10824*0 + 3*536*FLEN/8, x4, x1, x2)

inst_3609:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffc00000; valaddr_reg:x3; val_offset:10827*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10827*0 + 3*537*FLEN/8, x4, x1, x2)

inst_3610:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffe00000; valaddr_reg:x3; val_offset:10830*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10830*0 + 3*538*FLEN/8, x4, x1, x2)

inst_3611:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffff00000; valaddr_reg:x3; val_offset:10833*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10833*0 + 3*539*FLEN/8, x4, x1, x2)

inst_3612:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffff80000; valaddr_reg:x3; val_offset:10836*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10836*0 + 3*540*FLEN/8, x4, x1, x2)

inst_3613:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffc0000; valaddr_reg:x3; val_offset:10839*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10839*0 + 3*541*FLEN/8, x4, x1, x2)

inst_3614:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffe0000; valaddr_reg:x3; val_offset:10842*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10842*0 + 3*542*FLEN/8, x4, x1, x2)

inst_3615:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffff0000; valaddr_reg:x3; val_offset:10845*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10845*0 + 3*543*FLEN/8, x4, x1, x2)

inst_3616:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffff8000; valaddr_reg:x3; val_offset:10848*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10848*0 + 3*544*FLEN/8, x4, x1, x2)

inst_3617:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffc000; valaddr_reg:x3; val_offset:10851*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10851*0 + 3*545*FLEN/8, x4, x1, x2)

inst_3618:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffe000; valaddr_reg:x3; val_offset:10854*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10854*0 + 3*546*FLEN/8, x4, x1, x2)

inst_3619:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffff000; valaddr_reg:x3; val_offset:10857*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10857*0 + 3*547*FLEN/8, x4, x1, x2)

inst_3620:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffff800; valaddr_reg:x3; val_offset:10860*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10860*0 + 3*548*FLEN/8, x4, x1, x2)

inst_3621:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffc00; valaddr_reg:x3; val_offset:10863*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10863*0 + 3*549*FLEN/8, x4, x1, x2)

inst_3622:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffe00; valaddr_reg:x3; val_offset:10866*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10866*0 + 3*550*FLEN/8, x4, x1, x2)

inst_3623:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffff00; valaddr_reg:x3; val_offset:10869*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10869*0 + 3*551*FLEN/8, x4, x1, x2)

inst_3624:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffff80; valaddr_reg:x3; val_offset:10872*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10872*0 + 3*552*FLEN/8, x4, x1, x2)

inst_3625:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffffc0; valaddr_reg:x3; val_offset:10875*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10875*0 + 3*553*FLEN/8, x4, x1, x2)

inst_3626:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffffe0; valaddr_reg:x3; val_offset:10878*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10878*0 + 3*554*FLEN/8, x4, x1, x2)

inst_3627:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffff0; valaddr_reg:x3; val_offset:10881*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10881*0 + 3*555*FLEN/8, x4, x1, x2)

inst_3628:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffff8; valaddr_reg:x3; val_offset:10884*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10884*0 + 3*556*FLEN/8, x4, x1, x2)

inst_3629:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffffc; valaddr_reg:x3; val_offset:10887*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10887*0 + 3*557*FLEN/8, x4, x1, x2)

inst_3630:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8effffffffffffe; valaddr_reg:x3; val_offset:10890*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10890*0 + 3*558*FLEN/8, x4, x1, x2)

inst_3631:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xb8efffffffffffff; valaddr_reg:x3; val_offset:10893*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10893*0 + 3*559*FLEN/8, x4, x1, x2)

inst_3632:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:10896*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10896*0 + 3*560*FLEN/8, x4, x1, x2)

inst_3633:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:10899*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10899*0 + 3*561*FLEN/8, x4, x1, x2)

inst_3634:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:10902*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10902*0 + 3*562*FLEN/8, x4, x1, x2)

inst_3635:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:10905*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10905*0 + 3*563*FLEN/8, x4, x1, x2)

inst_3636:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:10908*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10908*0 + 3*564*FLEN/8, x4, x1, x2)

inst_3637:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:10911*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10911*0 + 3*565*FLEN/8, x4, x1, x2)

inst_3638:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:10914*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10914*0 + 3*566*FLEN/8, x4, x1, x2)

inst_3639:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:10917*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10917*0 + 3*567*FLEN/8, x4, x1, x2)

inst_3640:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:10920*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10920*0 + 3*568*FLEN/8, x4, x1, x2)

inst_3641:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:10923*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10923*0 + 3*569*FLEN/8, x4, x1, x2)

inst_3642:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:10926*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10926*0 + 3*570*FLEN/8, x4, x1, x2)

inst_3643:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:10929*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10929*0 + 3*571*FLEN/8, x4, x1, x2)

inst_3644:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:10932*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10932*0 + 3*572*FLEN/8, x4, x1, x2)

inst_3645:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:10935*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10935*0 + 3*573*FLEN/8, x4, x1, x2)

inst_3646:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:10938*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10938*0 + 3*574*FLEN/8, x4, x1, x2)

inst_3647:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:10941*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10941*0 + 3*575*FLEN/8, x4, x1, x2)

inst_3648:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:10944*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10944*0 + 3*576*FLEN/8, x4, x1, x2)

inst_3649:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:10947*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10947*0 + 3*577*FLEN/8, x4, x1, x2)

inst_3650:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:10950*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10950*0 + 3*578*FLEN/8, x4, x1, x2)

inst_3651:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:10953*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10953*0 + 3*579*FLEN/8, x4, x1, x2)

inst_3652:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:10956*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10956*0 + 3*580*FLEN/8, x4, x1, x2)

inst_3653:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xe1713e7a54abf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x103fa31bf0746 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5e1713e7a54abf; op2val:0xa01103fa31bf0746;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:10959*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10959*0 + 3*581*FLEN/8, x4, x1, x2)

inst_3654:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000000000; valaddr_reg:x3; val_offset:10962*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10962*0 + 3*582*FLEN/8, x4, x1, x2)

inst_3655:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000000001; valaddr_reg:x3; val_offset:10965*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10965*0 + 3*583*FLEN/8, x4, x1, x2)

inst_3656:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000000003; valaddr_reg:x3; val_offset:10968*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10968*0 + 3*584*FLEN/8, x4, x1, x2)

inst_3657:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000000007; valaddr_reg:x3; val_offset:10971*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10971*0 + 3*585*FLEN/8, x4, x1, x2)

inst_3658:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000000000f; valaddr_reg:x3; val_offset:10974*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10974*0 + 3*586*FLEN/8, x4, x1, x2)

inst_3659:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000000001f; valaddr_reg:x3; val_offset:10977*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10977*0 + 3*587*FLEN/8, x4, x1, x2)

inst_3660:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000000003f; valaddr_reg:x3; val_offset:10980*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10980*0 + 3*588*FLEN/8, x4, x1, x2)

inst_3661:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000000007f; valaddr_reg:x3; val_offset:10983*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10983*0 + 3*589*FLEN/8, x4, x1, x2)

inst_3662:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000000000ff; valaddr_reg:x3; val_offset:10986*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10986*0 + 3*590*FLEN/8, x4, x1, x2)

inst_3663:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000000001ff; valaddr_reg:x3; val_offset:10989*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10989*0 + 3*591*FLEN/8, x4, x1, x2)

inst_3664:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000000003ff; valaddr_reg:x3; val_offset:10992*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10992*0 + 3*592*FLEN/8, x4, x1, x2)

inst_3665:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000000007ff; valaddr_reg:x3; val_offset:10995*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10995*0 + 3*593*FLEN/8, x4, x1, x2)

inst_3666:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000000fff; valaddr_reg:x3; val_offset:10998*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 10998*0 + 3*594*FLEN/8, x4, x1, x2)

inst_3667:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000001fff; valaddr_reg:x3; val_offset:11001*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11001*0 + 3*595*FLEN/8, x4, x1, x2)

inst_3668:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000003fff; valaddr_reg:x3; val_offset:11004*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11004*0 + 3*596*FLEN/8, x4, x1, x2)

inst_3669:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000007fff; valaddr_reg:x3; val_offset:11007*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11007*0 + 3*597*FLEN/8, x4, x1, x2)

inst_3670:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000000ffff; valaddr_reg:x3; val_offset:11010*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11010*0 + 3*598*FLEN/8, x4, x1, x2)

inst_3671:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000001ffff; valaddr_reg:x3; val_offset:11013*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11013*0 + 3*599*FLEN/8, x4, x1, x2)

inst_3672:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000003ffff; valaddr_reg:x3; val_offset:11016*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11016*0 + 3*600*FLEN/8, x4, x1, x2)

inst_3673:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000007ffff; valaddr_reg:x3; val_offset:11019*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11019*0 + 3*601*FLEN/8, x4, x1, x2)

inst_3674:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000000fffff; valaddr_reg:x3; val_offset:11022*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11022*0 + 3*602*FLEN/8, x4, x1, x2)

inst_3675:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000001fffff; valaddr_reg:x3; val_offset:11025*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11025*0 + 3*603*FLEN/8, x4, x1, x2)

inst_3676:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000003fffff; valaddr_reg:x3; val_offset:11028*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11028*0 + 3*604*FLEN/8, x4, x1, x2)

inst_3677:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000007fffff; valaddr_reg:x3; val_offset:11031*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11031*0 + 3*605*FLEN/8, x4, x1, x2)

inst_3678:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000000ffffff; valaddr_reg:x3; val_offset:11034*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11034*0 + 3*606*FLEN/8, x4, x1, x2)

inst_3679:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000001ffffff; valaddr_reg:x3; val_offset:11037*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11037*0 + 3*607*FLEN/8, x4, x1, x2)

inst_3680:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000003ffffff; valaddr_reg:x3; val_offset:11040*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11040*0 + 3*608*FLEN/8, x4, x1, x2)

inst_3681:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000007ffffff; valaddr_reg:x3; val_offset:11043*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11043*0 + 3*609*FLEN/8, x4, x1, x2)

inst_3682:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000000fffffff; valaddr_reg:x3; val_offset:11046*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11046*0 + 3*610*FLEN/8, x4, x1, x2)

inst_3683:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000001fffffff; valaddr_reg:x3; val_offset:11049*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11049*0 + 3*611*FLEN/8, x4, x1, x2)

inst_3684:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000003fffffff; valaddr_reg:x3; val_offset:11052*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11052*0 + 3*612*FLEN/8, x4, x1, x2)

inst_3685:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000007fffffff; valaddr_reg:x3; val_offset:11055*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11055*0 + 3*613*FLEN/8, x4, x1, x2)

inst_3686:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00000ffffffff; valaddr_reg:x3; val_offset:11058*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11058*0 + 3*614*FLEN/8, x4, x1, x2)

inst_3687:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00001ffffffff; valaddr_reg:x3; val_offset:11061*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11061*0 + 3*615*FLEN/8, x4, x1, x2)

inst_3688:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00003ffffffff; valaddr_reg:x3; val_offset:11064*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11064*0 + 3*616*FLEN/8, x4, x1, x2)

inst_3689:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00007ffffffff; valaddr_reg:x3; val_offset:11067*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11067*0 + 3*617*FLEN/8, x4, x1, x2)

inst_3690:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0000fffffffff; valaddr_reg:x3; val_offset:11070*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11070*0 + 3*618*FLEN/8, x4, x1, x2)

inst_3691:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0001fffffffff; valaddr_reg:x3; val_offset:11073*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11073*0 + 3*619*FLEN/8, x4, x1, x2)

inst_3692:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0003fffffffff; valaddr_reg:x3; val_offset:11076*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11076*0 + 3*620*FLEN/8, x4, x1, x2)

inst_3693:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0007fffffffff; valaddr_reg:x3; val_offset:11079*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11079*0 + 3*621*FLEN/8, x4, x1, x2)

inst_3694:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c000ffffffffff; valaddr_reg:x3; val_offset:11082*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11082*0 + 3*622*FLEN/8, x4, x1, x2)

inst_3695:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c001ffffffffff; valaddr_reg:x3; val_offset:11085*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11085*0 + 3*623*FLEN/8, x4, x1, x2)

inst_3696:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c003ffffffffff; valaddr_reg:x3; val_offset:11088*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11088*0 + 3*624*FLEN/8, x4, x1, x2)

inst_3697:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c007ffffffffff; valaddr_reg:x3; val_offset:11091*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11091*0 + 3*625*FLEN/8, x4, x1, x2)

inst_3698:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c00fffffffffff; valaddr_reg:x3; val_offset:11094*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11094*0 + 3*626*FLEN/8, x4, x1, x2)

inst_3699:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c01fffffffffff; valaddr_reg:x3; val_offset:11097*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11097*0 + 3*627*FLEN/8, x4, x1, x2)

inst_3700:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c03fffffffffff; valaddr_reg:x3; val_offset:11100*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11100*0 + 3*628*FLEN/8, x4, x1, x2)

inst_3701:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c07fffffffffff; valaddr_reg:x3; val_offset:11103*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11103*0 + 3*629*FLEN/8, x4, x1, x2)

inst_3702:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c0ffffffffffff; valaddr_reg:x3; val_offset:11106*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11106*0 + 3*630*FLEN/8, x4, x1, x2)

inst_3703:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c1ffffffffffff; valaddr_reg:x3; val_offset:11109*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11109*0 + 3*631*FLEN/8, x4, x1, x2)

inst_3704:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c3ffffffffffff; valaddr_reg:x3; val_offset:11112*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11112*0 + 3*632*FLEN/8, x4, x1, x2)

inst_3705:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c7ffffffffffff; valaddr_reg:x3; val_offset:11115*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11115*0 + 3*633*FLEN/8, x4, x1, x2)

inst_3706:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38c8000000000000; valaddr_reg:x3; val_offset:11118*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11118*0 + 3*634*FLEN/8, x4, x1, x2)

inst_3707:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cc000000000000; valaddr_reg:x3; val_offset:11121*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11121*0 + 3*635*FLEN/8, x4, x1, x2)

inst_3708:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38ce000000000000; valaddr_reg:x3; val_offset:11124*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11124*0 + 3*636*FLEN/8, x4, x1, x2)

inst_3709:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cf000000000000; valaddr_reg:x3; val_offset:11127*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11127*0 + 3*637*FLEN/8, x4, x1, x2)

inst_3710:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cf800000000000; valaddr_reg:x3; val_offset:11130*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11130*0 + 3*638*FLEN/8, x4, x1, x2)

inst_3711:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfc00000000000; valaddr_reg:x3; val_offset:11133*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11133*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_3712:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfe00000000000; valaddr_reg:x3; val_offset:11136*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11136*0 + 3*640*FLEN/8, x4, x1, x2)

inst_3713:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cff00000000000; valaddr_reg:x3; val_offset:11139*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11139*0 + 3*641*FLEN/8, x4, x1, x2)

inst_3714:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cff80000000000; valaddr_reg:x3; val_offset:11142*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11142*0 + 3*642*FLEN/8, x4, x1, x2)

inst_3715:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffc0000000000; valaddr_reg:x3; val_offset:11145*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11145*0 + 3*643*FLEN/8, x4, x1, x2)

inst_3716:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffe0000000000; valaddr_reg:x3; val_offset:11148*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11148*0 + 3*644*FLEN/8, x4, x1, x2)

inst_3717:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfff0000000000; valaddr_reg:x3; val_offset:11151*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11151*0 + 3*645*FLEN/8, x4, x1, x2)

inst_3718:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfff8000000000; valaddr_reg:x3; val_offset:11154*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11154*0 + 3*646*FLEN/8, x4, x1, x2)

inst_3719:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffc000000000; valaddr_reg:x3; val_offset:11157*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11157*0 + 3*647*FLEN/8, x4, x1, x2)

inst_3720:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffe000000000; valaddr_reg:x3; val_offset:11160*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11160*0 + 3*648*FLEN/8, x4, x1, x2)

inst_3721:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffff000000000; valaddr_reg:x3; val_offset:11163*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11163*0 + 3*649*FLEN/8, x4, x1, x2)

inst_3722:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffff800000000; valaddr_reg:x3; val_offset:11166*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11166*0 + 3*650*FLEN/8, x4, x1, x2)

inst_3723:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffc00000000; valaddr_reg:x3; val_offset:11169*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11169*0 + 3*651*FLEN/8, x4, x1, x2)

inst_3724:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffe00000000; valaddr_reg:x3; val_offset:11172*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11172*0 + 3*652*FLEN/8, x4, x1, x2)

inst_3725:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffff00000000; valaddr_reg:x3; val_offset:11175*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11175*0 + 3*653*FLEN/8, x4, x1, x2)

inst_3726:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffff80000000; valaddr_reg:x3; val_offset:11178*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11178*0 + 3*654*FLEN/8, x4, x1, x2)

inst_3727:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffc0000000; valaddr_reg:x3; val_offset:11181*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11181*0 + 3*655*FLEN/8, x4, x1, x2)

inst_3728:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffe0000000; valaddr_reg:x3; val_offset:11184*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11184*0 + 3*656*FLEN/8, x4, x1, x2)

inst_3729:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffff0000000; valaddr_reg:x3; val_offset:11187*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11187*0 + 3*657*FLEN/8, x4, x1, x2)

inst_3730:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffff8000000; valaddr_reg:x3; val_offset:11190*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11190*0 + 3*658*FLEN/8, x4, x1, x2)

inst_3731:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffc000000; valaddr_reg:x3; val_offset:11193*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11193*0 + 3*659*FLEN/8, x4, x1, x2)

inst_3732:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffe000000; valaddr_reg:x3; val_offset:11196*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11196*0 + 3*660*FLEN/8, x4, x1, x2)

inst_3733:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffff000000; valaddr_reg:x3; val_offset:11199*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11199*0 + 3*661*FLEN/8, x4, x1, x2)

inst_3734:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffff800000; valaddr_reg:x3; val_offset:11202*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11202*0 + 3*662*FLEN/8, x4, x1, x2)

inst_3735:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffc00000; valaddr_reg:x3; val_offset:11205*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11205*0 + 3*663*FLEN/8, x4, x1, x2)

inst_3736:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffe00000; valaddr_reg:x3; val_offset:11208*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11208*0 + 3*664*FLEN/8, x4, x1, x2)

inst_3737:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffff00000; valaddr_reg:x3; val_offset:11211*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11211*0 + 3*665*FLEN/8, x4, x1, x2)

inst_3738:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffff80000; valaddr_reg:x3; val_offset:11214*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11214*0 + 3*666*FLEN/8, x4, x1, x2)

inst_3739:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffc0000; valaddr_reg:x3; val_offset:11217*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11217*0 + 3*667*FLEN/8, x4, x1, x2)

inst_3740:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffe0000; valaddr_reg:x3; val_offset:11220*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11220*0 + 3*668*FLEN/8, x4, x1, x2)

inst_3741:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffff0000; valaddr_reg:x3; val_offset:11223*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11223*0 + 3*669*FLEN/8, x4, x1, x2)

inst_3742:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffff8000; valaddr_reg:x3; val_offset:11226*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11226*0 + 3*670*FLEN/8, x4, x1, x2)

inst_3743:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffc000; valaddr_reg:x3; val_offset:11229*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11229*0 + 3*671*FLEN/8, x4, x1, x2)

inst_3744:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffe000; valaddr_reg:x3; val_offset:11232*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11232*0 + 3*672*FLEN/8, x4, x1, x2)

inst_3745:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffff000; valaddr_reg:x3; val_offset:11235*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11235*0 + 3*673*FLEN/8, x4, x1, x2)

inst_3746:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffff800; valaddr_reg:x3; val_offset:11238*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11238*0 + 3*674*FLEN/8, x4, x1, x2)

inst_3747:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffc00; valaddr_reg:x3; val_offset:11241*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11241*0 + 3*675*FLEN/8, x4, x1, x2)

inst_3748:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffe00; valaddr_reg:x3; val_offset:11244*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11244*0 + 3*676*FLEN/8, x4, x1, x2)

inst_3749:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffff00; valaddr_reg:x3; val_offset:11247*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11247*0 + 3*677*FLEN/8, x4, x1, x2)

inst_3750:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffff80; valaddr_reg:x3; val_offset:11250*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11250*0 + 3*678*FLEN/8, x4, x1, x2)

inst_3751:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffffc0; valaddr_reg:x3; val_offset:11253*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11253*0 + 3*679*FLEN/8, x4, x1, x2)

inst_3752:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffffe0; valaddr_reg:x3; val_offset:11256*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11256*0 + 3*680*FLEN/8, x4, x1, x2)

inst_3753:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffff0; valaddr_reg:x3; val_offset:11259*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11259*0 + 3*681*FLEN/8, x4, x1, x2)

inst_3754:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffff8; valaddr_reg:x3; val_offset:11262*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11262*0 + 3*682*FLEN/8, x4, x1, x2)

inst_3755:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffffc; valaddr_reg:x3; val_offset:11265*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11265*0 + 3*683*FLEN/8, x4, x1, x2)

inst_3756:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cffffffffffffe; valaddr_reg:x3; val_offset:11268*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11268*0 + 3*684*FLEN/8, x4, x1, x2)

inst_3757:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x38cfffffffffffff; valaddr_reg:x3; val_offset:11271*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11271*0 + 3*685*FLEN/8, x4, x1, x2)

inst_3758:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:11274*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11274*0 + 3*686*FLEN/8, x4, x1, x2)

inst_3759:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:11277*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11277*0 + 3*687*FLEN/8, x4, x1, x2)

inst_3760:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:11280*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11280*0 + 3*688*FLEN/8, x4, x1, x2)

inst_3761:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:11283*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11283*0 + 3*689*FLEN/8, x4, x1, x2)

inst_3762:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:11286*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11286*0 + 3*690*FLEN/8, x4, x1, x2)

inst_3763:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:11289*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11289*0 + 3*691*FLEN/8, x4, x1, x2)

inst_3764:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:11292*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11292*0 + 3*692*FLEN/8, x4, x1, x2)

inst_3765:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:11295*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11295*0 + 3*693*FLEN/8, x4, x1, x2)

inst_3766:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:11298*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11298*0 + 3*694*FLEN/8, x4, x1, x2)

inst_3767:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:11301*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11301*0 + 3*695*FLEN/8, x4, x1, x2)

inst_3768:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:11304*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11304*0 + 3*696*FLEN/8, x4, x1, x2)

inst_3769:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:11307*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11307*0 + 3*697*FLEN/8, x4, x1, x2)

inst_3770:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:11310*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11310*0 + 3*698*FLEN/8, x4, x1, x2)

inst_3771:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:11313*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11313*0 + 3*699*FLEN/8, x4, x1, x2)

inst_3772:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:11316*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11316*0 + 3*700*FLEN/8, x4, x1, x2)

inst_3773:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:11319*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11319*0 + 3*701*FLEN/8, x4, x1, x2)

inst_3774:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:11322*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11322*0 + 3*702*FLEN/8, x4, x1, x2)

inst_3775:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:11325*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11325*0 + 3*703*FLEN/8, x4, x1, x2)

inst_3776:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:11328*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11328*0 + 3*704*FLEN/8, x4, x1, x2)

inst_3777:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:11331*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11331*0 + 3*705*FLEN/8, x4, x1, x2)

inst_3778:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:11334*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11334*0 + 3*706*FLEN/8, x4, x1, x2)

inst_3779:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x207 and fm2 == 0xdccfb670cd3bf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f612e48c86dcddf; op2val:0x207dccfb670cd3bf;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:11337*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11337*0 + 3*707*FLEN/8, x4, x1, x2)

inst_3780:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:11340*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11340*0 + 3*708*FLEN/8, x4, x1, x2)

inst_3781:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:11343*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11343*0 + 3*709*FLEN/8, x4, x1, x2)

inst_3782:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:11346*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11346*0 + 3*710*FLEN/8, x4, x1, x2)

inst_3783:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:11349*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11349*0 + 3*711*FLEN/8, x4, x1, x2)

inst_3784:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:11352*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11352*0 + 3*712*FLEN/8, x4, x1, x2)

inst_3785:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:11355*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11355*0 + 3*713*FLEN/8, x4, x1, x2)

inst_3786:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:11358*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11358*0 + 3*714*FLEN/8, x4, x1, x2)

inst_3787:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:11361*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11361*0 + 3*715*FLEN/8, x4, x1, x2)

inst_3788:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:11364*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11364*0 + 3*716*FLEN/8, x4, x1, x2)

inst_3789:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:11367*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11367*0 + 3*717*FLEN/8, x4, x1, x2)

inst_3790:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:11370*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11370*0 + 3*718*FLEN/8, x4, x1, x2)

inst_3791:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:11373*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11373*0 + 3*719*FLEN/8, x4, x1, x2)

inst_3792:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:11376*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11376*0 + 3*720*FLEN/8, x4, x1, x2)

inst_3793:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:11379*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11379*0 + 3*721*FLEN/8, x4, x1, x2)

inst_3794:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:11382*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11382*0 + 3*722*FLEN/8, x4, x1, x2)

inst_3795:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:11385*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11385*0 + 3*723*FLEN/8, x4, x1, x2)

inst_3796:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:11388*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11388*0 + 3*724*FLEN/8, x4, x1, x2)

inst_3797:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:11391*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11391*0 + 3*725*FLEN/8, x4, x1, x2)

inst_3798:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:11394*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11394*0 + 3*726*FLEN/8, x4, x1, x2)

inst_3799:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:11397*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11397*0 + 3*727*FLEN/8, x4, x1, x2)

inst_3800:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:11400*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11400*0 + 3*728*FLEN/8, x4, x1, x2)

inst_3801:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:11403*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11403*0 + 3*729*FLEN/8, x4, x1, x2)

inst_3802:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:11406*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11406*0 + 3*730*FLEN/8, x4, x1, x2)

inst_3803:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:11409*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11409*0 + 3*731*FLEN/8, x4, x1, x2)

inst_3804:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:11412*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11412*0 + 3*732*FLEN/8, x4, x1, x2)

inst_3805:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:11415*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11415*0 + 3*733*FLEN/8, x4, x1, x2)

inst_3806:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:11418*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11418*0 + 3*734*FLEN/8, x4, x1, x2)

inst_3807:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:11421*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11421*0 + 3*735*FLEN/8, x4, x1, x2)

inst_3808:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:11424*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11424*0 + 3*736*FLEN/8, x4, x1, x2)

inst_3809:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:11427*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11427*0 + 3*737*FLEN/8, x4, x1, x2)

inst_3810:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:11430*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11430*0 + 3*738*FLEN/8, x4, x1, x2)

inst_3811:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:11433*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11433*0 + 3*739*FLEN/8, x4, x1, x2)

inst_3812:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:11436*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11436*0 + 3*740*FLEN/8, x4, x1, x2)

inst_3813:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:11439*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11439*0 + 3*741*FLEN/8, x4, x1, x2)

inst_3814:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:11442*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11442*0 + 3*742*FLEN/8, x4, x1, x2)

inst_3815:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:11445*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11445*0 + 3*743*FLEN/8, x4, x1, x2)

inst_3816:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:11448*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11448*0 + 3*744*FLEN/8, x4, x1, x2)

inst_3817:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:11451*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11451*0 + 3*745*FLEN/8, x4, x1, x2)

inst_3818:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:11454*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11454*0 + 3*746*FLEN/8, x4, x1, x2)

inst_3819:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:11457*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11457*0 + 3*747*FLEN/8, x4, x1, x2)

inst_3820:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:11460*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11460*0 + 3*748*FLEN/8, x4, x1, x2)

inst_3821:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:11463*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11463*0 + 3*749*FLEN/8, x4, x1, x2)

inst_3822:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:11466*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11466*0 + 3*750*FLEN/8, x4, x1, x2)

inst_3823:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:11469*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11469*0 + 3*751*FLEN/8, x4, x1, x2)

inst_3824:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:11472*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11472*0 + 3*752*FLEN/8, x4, x1, x2)

inst_3825:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:11475*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11475*0 + 3*753*FLEN/8, x4, x1, x2)

inst_3826:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:11478*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11478*0 + 3*754*FLEN/8, x4, x1, x2)

inst_3827:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:11481*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11481*0 + 3*755*FLEN/8, x4, x1, x2)

inst_3828:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:11484*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11484*0 + 3*756*FLEN/8, x4, x1, x2)

inst_3829:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:11487*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11487*0 + 3*757*FLEN/8, x4, x1, x2)

inst_3830:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:11490*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11490*0 + 3*758*FLEN/8, x4, x1, x2)

inst_3831:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:11493*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11493*0 + 3*759*FLEN/8, x4, x1, x2)

inst_3832:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:11496*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11496*0 + 3*760*FLEN/8, x4, x1, x2)

inst_3833:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:11499*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11499*0 + 3*761*FLEN/8, x4, x1, x2)

inst_3834:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:11502*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11502*0 + 3*762*FLEN/8, x4, x1, x2)

inst_3835:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:11505*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11505*0 + 3*763*FLEN/8, x4, x1, x2)

inst_3836:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:11508*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11508*0 + 3*764*FLEN/8, x4, x1, x2)

inst_3837:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:11511*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11511*0 + 3*765*FLEN/8, x4, x1, x2)

inst_3838:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:11514*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11514*0 + 3*766*FLEN/8, x4, x1, x2)

inst_3839:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x15a2e53dfc62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f615a2e53dfc62f; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:11517*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 11517*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6870858094179255423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6871396273595352639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897920,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897921,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897923,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897927,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897935,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897951,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658897983,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658898047,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658898175,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658898431,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658898943,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658899967,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658902015,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658906111,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658914303,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658930687,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874658963455,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874659028991,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874659160063,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874659422207,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874659946495,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874660995071,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874663092223,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874667286527,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874675675135,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874692452351,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874726006783,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874793115647,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870874927333375,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870875195768831,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870875732639743,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870876806381567,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870878953865215,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870883248832511,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870891838767103,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870909018636287,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600870943378374655,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600871012097851391,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600871149536804863,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600871424414711807,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600871974170525695,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600873073682153471,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600875272705409023,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600879670751920127,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600888466844942335,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600906059030986751,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13600941243403075583,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13601011612147253247,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13601152349635608575,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13601433824612319231,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13601996774565740543,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13603122674472583167,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13603122674472583168,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13604248574379425792,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13604811524332847104,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605092999309557760,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605233736797913088,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605304105542090752,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605339289914179584,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605356882100224000,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605365678193246208,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605370076239757312,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605372275263012864,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605373374774640640,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605373924530454528,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374199408361472,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374336847314944,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374405566791680,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374439926530048,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374457106399232,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374465696333824,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374469991301120,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374472138784768,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374473212526592,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374473749397504,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474017832960,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474152050688,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474219159552,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474252713984,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474269491200,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474277879808,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474282074112,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474284171264,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474285219840,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474285744128,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286006272,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286137344,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286202880,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286235648,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286252032,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286260224,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286264320,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286266368,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286267392,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286267904,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268160,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268288,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268352,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268384,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268400,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268408,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268412,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268414,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13605374474286268415,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6871420185016327423,64,FLEN)
NAN_BOXED(11534327601521911999,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931328,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931329,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931331,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931335,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931343,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931359,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931391,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931455,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931583,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931839,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976932351,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976933375,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976935423,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976939519,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976947711,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976964095,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976996863,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977062399,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977193471,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977455615,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977979903,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783979028479,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783981125631,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783985319935,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783993708543,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784010485759,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784044040191,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784111149055,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784245366783,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784513802239,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654785050673151,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654786124414975,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654788271898623,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654792566865919,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654801156800511,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654818336669695,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654852696408063,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654921415884799,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655058854838271,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655333732745215,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655883488559103,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193656983000186879,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193659182023442431,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193663580069953535,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193672376162975743,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193689968349020159,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193725152721108991,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193795521465286655,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193936258953641983,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194217733930352639,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194780683883773951,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616575,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616576,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197032483697459200,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197595433650880512,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197876908627591168,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198156184581046272,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157284092674048,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157833848487936,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158108726394880,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158246165348352,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158314884825088,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158349244563456,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158366424432640,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158375014367232,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158379309334528,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158381456818176,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158382530560000,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383067430912,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383335866368,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383470084096,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383537192960,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383570747392,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383587524608,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383595913216,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383600107520,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383602204672,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603253248,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603777536,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604039680,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604170752,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604236288,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604269056,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604285440,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604293632,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604297728,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604299776,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604300800,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301312,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301568,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301696,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301760,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301792,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301808,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301816,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301820,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301822,64,FLEN)
NAN_BOXED(6871951737666710751,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301823,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927168,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927169,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927171,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927175,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927183,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927199,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927231,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927295,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927423,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761927679,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761928191,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761929215,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761931263,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761935359,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761943551,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761959935,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697761992703,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697762058239,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697762189311,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697762451455,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697762975743,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697764024319,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697766121471,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697770315775,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697778704383,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697795481599,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697829036031,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647697896144895,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647698030362623,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647698298798079,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647698835668991,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647699909410815,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647702056894463,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647706351861759,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647714941796351,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647732121665535,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647766481403903,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647835200880639,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321647972639834111,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321648247517741055,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321648797273554943,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321649896785182719,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321652095808438271,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321656493854949375,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321665289947971583,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321682882134015999,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321718066506104831,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321788435250282495,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13321929172738637823,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13322210647715348479,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13322773597668769791,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13323899497575612415,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13323899497575612416,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13325025397482455040,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13325588347435876352,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13325869822412587008,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326010559900942336,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326080928645120000,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326116113017208832,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326133705203253248,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326142501296275456,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326146899342786560,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326149098366042112,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326150197877669888,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326150747633483776,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151022511390720,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151159950344192,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151228669820928,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151263029559296,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151280209428480,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151288799363072,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151293094330368,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151295241814016,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151296315555840,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151296852426752,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297120862208,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297255079936,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297322188800,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297355743232,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297372520448,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297380909056,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297385103360,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297387200512,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297388249088,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297388773376,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389035520,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389166592,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389232128,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389264896,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389281280,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389289472,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389293568,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389295616,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389296640,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297152,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297408,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297536,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297600,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297632,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297648,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297656,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297660,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297662,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13326151297389297663,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6871955455672142527,64,FLEN)
NAN_BOXED(11534004493783861062,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410368,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410369,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410371,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410375,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410383,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410399,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410431,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410495,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410623,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652410879,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652411391,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652412415,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652414463,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652418559,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652426751,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652443135,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652475903,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652541439,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652672511,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461652934655,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461653458943,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461654507519,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461656604671,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461660798975,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461669187583,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461685964799,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461719519231,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461786628095,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268461920845823,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268462189281279,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268462726152191,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268463799894015,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268465947377663,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268470242344959,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268478832279551,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268496012148735,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268530371887103,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268599091363839,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089268736530317311,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089269011408224255,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089269561164038143,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089270660675665919,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089272859698921471,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089277257745432575,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089286053838454783,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089303646024499199,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089338830396588031,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089409199140765695,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089549936629121023,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4089831411605831679,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4090394361559252991,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4091520261466095615,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4091520261466095616,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4092646161372938240,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093209111326359552,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093490586303070208,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093631323791425536,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093701692535603200,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093736876907692032,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093754469093736448,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093763265186758656,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093767663233269760,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093769862256525312,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093770961768153088,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093771511523966976,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093771786401873920,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093771923840827392,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093771992560304128,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772026920042496,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772044099911680,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772052689846272,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772056984813568,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772059132297216,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772060206039040,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772060742909952,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061011345408,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061145563136,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061212672000,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061246226432,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061263003648,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061271392256,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061275586560,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061277683712,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061278732288,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279256576,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279518720,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279649792,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279715328,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279748096,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279764480,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279772672,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279776768,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279778816,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279779840,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780352,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780608,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780736,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780800,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780832,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780848,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780856,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780860,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780862,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4093772061279780863,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6872825396479249887,64,FLEN)
NAN_BOXED(2341252761440277439,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6872873661366257199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
