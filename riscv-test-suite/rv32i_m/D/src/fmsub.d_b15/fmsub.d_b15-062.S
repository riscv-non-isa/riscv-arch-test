
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_46848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffe0000000; valaddr_reg:x3; val_offset:140544*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140544*0 + 3*0*FLEN/8, x4, x1, x2)

inst_46849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffff0000000; valaddr_reg:x3; val_offset:140547*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140547*0 + 3*1*FLEN/8, x4, x1, x2)

inst_46850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffff8000000; valaddr_reg:x3; val_offset:140550*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140550*0 + 3*2*FLEN/8, x4, x1, x2)

inst_46851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffc000000; valaddr_reg:x3; val_offset:140553*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140553*0 + 3*3*FLEN/8, x4, x1, x2)

inst_46852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffe000000; valaddr_reg:x3; val_offset:140556*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140556*0 + 3*4*FLEN/8, x4, x1, x2)

inst_46853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffff000000; valaddr_reg:x3; val_offset:140559*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140559*0 + 3*5*FLEN/8, x4, x1, x2)

inst_46854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffff800000; valaddr_reg:x3; val_offset:140562*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140562*0 + 3*6*FLEN/8, x4, x1, x2)

inst_46855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffc00000; valaddr_reg:x3; val_offset:140565*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140565*0 + 3*7*FLEN/8, x4, x1, x2)

inst_46856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffe00000; valaddr_reg:x3; val_offset:140568*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140568*0 + 3*8*FLEN/8, x4, x1, x2)

inst_46857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffff00000; valaddr_reg:x3; val_offset:140571*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140571*0 + 3*9*FLEN/8, x4, x1, x2)

inst_46858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffff80000; valaddr_reg:x3; val_offset:140574*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140574*0 + 3*10*FLEN/8, x4, x1, x2)

inst_46859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffc0000; valaddr_reg:x3; val_offset:140577*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140577*0 + 3*11*FLEN/8, x4, x1, x2)

inst_46860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffe0000; valaddr_reg:x3; val_offset:140580*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140580*0 + 3*12*FLEN/8, x4, x1, x2)

inst_46861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffff0000; valaddr_reg:x3; val_offset:140583*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140583*0 + 3*13*FLEN/8, x4, x1, x2)

inst_46862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffff8000; valaddr_reg:x3; val_offset:140586*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140586*0 + 3*14*FLEN/8, x4, x1, x2)

inst_46863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffc000; valaddr_reg:x3; val_offset:140589*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140589*0 + 3*15*FLEN/8, x4, x1, x2)

inst_46864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffe000; valaddr_reg:x3; val_offset:140592*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140592*0 + 3*16*FLEN/8, x4, x1, x2)

inst_46865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffff000; valaddr_reg:x3; val_offset:140595*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140595*0 + 3*17*FLEN/8, x4, x1, x2)

inst_46866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffff800; valaddr_reg:x3; val_offset:140598*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140598*0 + 3*18*FLEN/8, x4, x1, x2)

inst_46867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffc00; valaddr_reg:x3; val_offset:140601*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140601*0 + 3*19*FLEN/8, x4, x1, x2)

inst_46868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffe00; valaddr_reg:x3; val_offset:140604*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140604*0 + 3*20*FLEN/8, x4, x1, x2)

inst_46869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffff00; valaddr_reg:x3; val_offset:140607*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140607*0 + 3*21*FLEN/8, x4, x1, x2)

inst_46870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffff80; valaddr_reg:x3; val_offset:140610*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140610*0 + 3*22*FLEN/8, x4, x1, x2)

inst_46871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffffc0; valaddr_reg:x3; val_offset:140613*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140613*0 + 3*23*FLEN/8, x4, x1, x2)

inst_46872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffffe0; valaddr_reg:x3; val_offset:140616*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140616*0 + 3*24*FLEN/8, x4, x1, x2)

inst_46873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffff0; valaddr_reg:x3; val_offset:140619*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140619*0 + 3*25*FLEN/8, x4, x1, x2)

inst_46874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffff8; valaddr_reg:x3; val_offset:140622*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140622*0 + 3*26*FLEN/8, x4, x1, x2)

inst_46875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffffc; valaddr_reg:x3; val_offset:140625*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140625*0 + 3*27*FLEN/8, x4, x1, x2)

inst_46876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817ffffffffffffe; valaddr_reg:x3; val_offset:140628*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140628*0 + 3*28*FLEN/8, x4, x1, x2)

inst_46877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd16c4c7c39115 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d16c4c7c39115; op2val:0x8000;
op3val:0x817fffffffffffff; valaddr_reg:x3; val_offset:140631*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140631*0 + 3*29*FLEN/8, x4, x1, x2)

inst_46878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:140634*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140634*0 + 3*30*FLEN/8, x4, x1, x2)

inst_46879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:140637*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140637*0 + 3*31*FLEN/8, x4, x1, x2)

inst_46880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:140640*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140640*0 + 3*32*FLEN/8, x4, x1, x2)

inst_46881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:140643*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140643*0 + 3*33*FLEN/8, x4, x1, x2)

inst_46882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:140646*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140646*0 + 3*34*FLEN/8, x4, x1, x2)

inst_46883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:140649*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140649*0 + 3*35*FLEN/8, x4, x1, x2)

inst_46884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:140652*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140652*0 + 3*36*FLEN/8, x4, x1, x2)

inst_46885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:140655*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140655*0 + 3*37*FLEN/8, x4, x1, x2)

inst_46886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:140658*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140658*0 + 3*38*FLEN/8, x4, x1, x2)

inst_46887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:140661*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140661*0 + 3*39*FLEN/8, x4, x1, x2)

inst_46888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:140664*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140664*0 + 3*40*FLEN/8, x4, x1, x2)

inst_46889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:140667*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140667*0 + 3*41*FLEN/8, x4, x1, x2)

inst_46890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:140670*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140670*0 + 3*42*FLEN/8, x4, x1, x2)

inst_46891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:140673*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140673*0 + 3*43*FLEN/8, x4, x1, x2)

inst_46892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:140676*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140676*0 + 3*44*FLEN/8, x4, x1, x2)

inst_46893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:140679*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140679*0 + 3*45*FLEN/8, x4, x1, x2)

inst_46894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:140682*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140682*0 + 3*46*FLEN/8, x4, x1, x2)

inst_46895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:140685*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140685*0 + 3*47*FLEN/8, x4, x1, x2)

inst_46896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:140688*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140688*0 + 3*48*FLEN/8, x4, x1, x2)

inst_46897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:140691*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140691*0 + 3*49*FLEN/8, x4, x1, x2)

inst_46898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:140694*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140694*0 + 3*50*FLEN/8, x4, x1, x2)

inst_46899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:140697*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140697*0 + 3*51*FLEN/8, x4, x1, x2)

inst_46900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000000000; valaddr_reg:x3; val_offset:140700*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140700*0 + 3*52*FLEN/8, x4, x1, x2)

inst_46901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000000001; valaddr_reg:x3; val_offset:140703*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140703*0 + 3*53*FLEN/8, x4, x1, x2)

inst_46902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000000003; valaddr_reg:x3; val_offset:140706*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140706*0 + 3*54*FLEN/8, x4, x1, x2)

inst_46903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000000007; valaddr_reg:x3; val_offset:140709*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140709*0 + 3*55*FLEN/8, x4, x1, x2)

inst_46904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000000000f; valaddr_reg:x3; val_offset:140712*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140712*0 + 3*56*FLEN/8, x4, x1, x2)

inst_46905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000000001f; valaddr_reg:x3; val_offset:140715*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140715*0 + 3*57*FLEN/8, x4, x1, x2)

inst_46906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000000003f; valaddr_reg:x3; val_offset:140718*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140718*0 + 3*58*FLEN/8, x4, x1, x2)

inst_46907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000000007f; valaddr_reg:x3; val_offset:140721*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140721*0 + 3*59*FLEN/8, x4, x1, x2)

inst_46908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000000000ff; valaddr_reg:x3; val_offset:140724*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140724*0 + 3*60*FLEN/8, x4, x1, x2)

inst_46909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000000001ff; valaddr_reg:x3; val_offset:140727*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140727*0 + 3*61*FLEN/8, x4, x1, x2)

inst_46910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000000003ff; valaddr_reg:x3; val_offset:140730*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140730*0 + 3*62*FLEN/8, x4, x1, x2)

inst_46911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000000007ff; valaddr_reg:x3; val_offset:140733*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140733*0 + 3*63*FLEN/8, x4, x1, x2)

inst_46912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000000fff; valaddr_reg:x3; val_offset:140736*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140736*0 + 3*64*FLEN/8, x4, x1, x2)

inst_46913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000001fff; valaddr_reg:x3; val_offset:140739*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140739*0 + 3*65*FLEN/8, x4, x1, x2)

inst_46914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000003fff; valaddr_reg:x3; val_offset:140742*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140742*0 + 3*66*FLEN/8, x4, x1, x2)

inst_46915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000007fff; valaddr_reg:x3; val_offset:140745*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140745*0 + 3*67*FLEN/8, x4, x1, x2)

inst_46916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000000ffff; valaddr_reg:x3; val_offset:140748*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140748*0 + 3*68*FLEN/8, x4, x1, x2)

inst_46917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000001ffff; valaddr_reg:x3; val_offset:140751*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140751*0 + 3*69*FLEN/8, x4, x1, x2)

inst_46918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000003ffff; valaddr_reg:x3; val_offset:140754*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140754*0 + 3*70*FLEN/8, x4, x1, x2)

inst_46919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000007ffff; valaddr_reg:x3; val_offset:140757*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140757*0 + 3*71*FLEN/8, x4, x1, x2)

inst_46920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000000fffff; valaddr_reg:x3; val_offset:140760*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140760*0 + 3*72*FLEN/8, x4, x1, x2)

inst_46921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000001fffff; valaddr_reg:x3; val_offset:140763*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140763*0 + 3*73*FLEN/8, x4, x1, x2)

inst_46922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000003fffff; valaddr_reg:x3; val_offset:140766*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140766*0 + 3*74*FLEN/8, x4, x1, x2)

inst_46923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000007fffff; valaddr_reg:x3; val_offset:140769*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140769*0 + 3*75*FLEN/8, x4, x1, x2)

inst_46924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000000ffffff; valaddr_reg:x3; val_offset:140772*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140772*0 + 3*76*FLEN/8, x4, x1, x2)

inst_46925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000001ffffff; valaddr_reg:x3; val_offset:140775*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140775*0 + 3*77*FLEN/8, x4, x1, x2)

inst_46926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000003ffffff; valaddr_reg:x3; val_offset:140778*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140778*0 + 3*78*FLEN/8, x4, x1, x2)

inst_46927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000007ffffff; valaddr_reg:x3; val_offset:140781*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140781*0 + 3*79*FLEN/8, x4, x1, x2)

inst_46928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000000fffffff; valaddr_reg:x3; val_offset:140784*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140784*0 + 3*80*FLEN/8, x4, x1, x2)

inst_46929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000001fffffff; valaddr_reg:x3; val_offset:140787*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140787*0 + 3*81*FLEN/8, x4, x1, x2)

inst_46930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000003fffffff; valaddr_reg:x3; val_offset:140790*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140790*0 + 3*82*FLEN/8, x4, x1, x2)

inst_46931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000007fffffff; valaddr_reg:x3; val_offset:140793*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140793*0 + 3*83*FLEN/8, x4, x1, x2)

inst_46932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200000ffffffff; valaddr_reg:x3; val_offset:140796*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140796*0 + 3*84*FLEN/8, x4, x1, x2)

inst_46933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200001ffffffff; valaddr_reg:x3; val_offset:140799*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140799*0 + 3*85*FLEN/8, x4, x1, x2)

inst_46934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200003ffffffff; valaddr_reg:x3; val_offset:140802*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140802*0 + 3*86*FLEN/8, x4, x1, x2)

inst_46935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200007ffffffff; valaddr_reg:x3; val_offset:140805*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140805*0 + 3*87*FLEN/8, x4, x1, x2)

inst_46936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220000fffffffff; valaddr_reg:x3; val_offset:140808*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140808*0 + 3*88*FLEN/8, x4, x1, x2)

inst_46937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220001fffffffff; valaddr_reg:x3; val_offset:140811*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140811*0 + 3*89*FLEN/8, x4, x1, x2)

inst_46938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220003fffffffff; valaddr_reg:x3; val_offset:140814*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140814*0 + 3*90*FLEN/8, x4, x1, x2)

inst_46939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220007fffffffff; valaddr_reg:x3; val_offset:140817*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140817*0 + 3*91*FLEN/8, x4, x1, x2)

inst_46940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822000ffffffffff; valaddr_reg:x3; val_offset:140820*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140820*0 + 3*92*FLEN/8, x4, x1, x2)

inst_46941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822001ffffffffff; valaddr_reg:x3; val_offset:140823*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140823*0 + 3*93*FLEN/8, x4, x1, x2)

inst_46942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822003ffffffffff; valaddr_reg:x3; val_offset:140826*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140826*0 + 3*94*FLEN/8, x4, x1, x2)

inst_46943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822007ffffffffff; valaddr_reg:x3; val_offset:140829*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140829*0 + 3*95*FLEN/8, x4, x1, x2)

inst_46944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82200fffffffffff; valaddr_reg:x3; val_offset:140832*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140832*0 + 3*96*FLEN/8, x4, x1, x2)

inst_46945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82201fffffffffff; valaddr_reg:x3; val_offset:140835*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140835*0 + 3*97*FLEN/8, x4, x1, x2)

inst_46946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82203fffffffffff; valaddr_reg:x3; val_offset:140838*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140838*0 + 3*98*FLEN/8, x4, x1, x2)

inst_46947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x82207fffffffffff; valaddr_reg:x3; val_offset:140841*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140841*0 + 3*99*FLEN/8, x4, x1, x2)

inst_46948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8220ffffffffffff; valaddr_reg:x3; val_offset:140844*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140844*0 + 3*100*FLEN/8, x4, x1, x2)

inst_46949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8221ffffffffffff; valaddr_reg:x3; val_offset:140847*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140847*0 + 3*101*FLEN/8, x4, x1, x2)

inst_46950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8223ffffffffffff; valaddr_reg:x3; val_offset:140850*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140850*0 + 3*102*FLEN/8, x4, x1, x2)

inst_46951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8227ffffffffffff; valaddr_reg:x3; val_offset:140853*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140853*0 + 3*103*FLEN/8, x4, x1, x2)

inst_46952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x8228000000000000; valaddr_reg:x3; val_offset:140856*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140856*0 + 3*104*FLEN/8, x4, x1, x2)

inst_46953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822c000000000000; valaddr_reg:x3; val_offset:140859*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140859*0 + 3*105*FLEN/8, x4, x1, x2)

inst_46954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822e000000000000; valaddr_reg:x3; val_offset:140862*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140862*0 + 3*106*FLEN/8, x4, x1, x2)

inst_46955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822f000000000000; valaddr_reg:x3; val_offset:140865*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140865*0 + 3*107*FLEN/8, x4, x1, x2)

inst_46956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822f800000000000; valaddr_reg:x3; val_offset:140868*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140868*0 + 3*108*FLEN/8, x4, x1, x2)

inst_46957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fc00000000000; valaddr_reg:x3; val_offset:140871*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140871*0 + 3*109*FLEN/8, x4, x1, x2)

inst_46958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fe00000000000; valaddr_reg:x3; val_offset:140874*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140874*0 + 3*110*FLEN/8, x4, x1, x2)

inst_46959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ff00000000000; valaddr_reg:x3; val_offset:140877*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140877*0 + 3*111*FLEN/8, x4, x1, x2)

inst_46960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ff80000000000; valaddr_reg:x3; val_offset:140880*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140880*0 + 3*112*FLEN/8, x4, x1, x2)

inst_46961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffc0000000000; valaddr_reg:x3; val_offset:140883*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140883*0 + 3*113*FLEN/8, x4, x1, x2)

inst_46962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffe0000000000; valaddr_reg:x3; val_offset:140886*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140886*0 + 3*114*FLEN/8, x4, x1, x2)

inst_46963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fff0000000000; valaddr_reg:x3; val_offset:140889*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140889*0 + 3*115*FLEN/8, x4, x1, x2)

inst_46964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fff8000000000; valaddr_reg:x3; val_offset:140892*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140892*0 + 3*116*FLEN/8, x4, x1, x2)

inst_46965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffc000000000; valaddr_reg:x3; val_offset:140895*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140895*0 + 3*117*FLEN/8, x4, x1, x2)

inst_46966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffe000000000; valaddr_reg:x3; val_offset:140898*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140898*0 + 3*118*FLEN/8, x4, x1, x2)

inst_46967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffff000000000; valaddr_reg:x3; val_offset:140901*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140901*0 + 3*119*FLEN/8, x4, x1, x2)

inst_46968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffff800000000; valaddr_reg:x3; val_offset:140904*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140904*0 + 3*120*FLEN/8, x4, x1, x2)

inst_46969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffc00000000; valaddr_reg:x3; val_offset:140907*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140907*0 + 3*121*FLEN/8, x4, x1, x2)

inst_46970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffe00000000; valaddr_reg:x3; val_offset:140910*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140910*0 + 3*122*FLEN/8, x4, x1, x2)

inst_46971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffff00000000; valaddr_reg:x3; val_offset:140913*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140913*0 + 3*123*FLEN/8, x4, x1, x2)

inst_46972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffff80000000; valaddr_reg:x3; val_offset:140916*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140916*0 + 3*124*FLEN/8, x4, x1, x2)

inst_46973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffc0000000; valaddr_reg:x3; val_offset:140919*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140919*0 + 3*125*FLEN/8, x4, x1, x2)

inst_46974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffe0000000; valaddr_reg:x3; val_offset:140922*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140922*0 + 3*126*FLEN/8, x4, x1, x2)

inst_46975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffff0000000; valaddr_reg:x3; val_offset:140925*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140925*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_46976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffff8000000; valaddr_reg:x3; val_offset:140928*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140928*0 + 3*128*FLEN/8, x4, x1, x2)

inst_46977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffc000000; valaddr_reg:x3; val_offset:140931*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140931*0 + 3*129*FLEN/8, x4, x1, x2)

inst_46978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffe000000; valaddr_reg:x3; val_offset:140934*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140934*0 + 3*130*FLEN/8, x4, x1, x2)

inst_46979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffff000000; valaddr_reg:x3; val_offset:140937*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140937*0 + 3*131*FLEN/8, x4, x1, x2)

inst_46980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffff800000; valaddr_reg:x3; val_offset:140940*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140940*0 + 3*132*FLEN/8, x4, x1, x2)

inst_46981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffc00000; valaddr_reg:x3; val_offset:140943*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140943*0 + 3*133*FLEN/8, x4, x1, x2)

inst_46982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffe00000; valaddr_reg:x3; val_offset:140946*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140946*0 + 3*134*FLEN/8, x4, x1, x2)

inst_46983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffff00000; valaddr_reg:x3; val_offset:140949*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140949*0 + 3*135*FLEN/8, x4, x1, x2)

inst_46984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffff80000; valaddr_reg:x3; val_offset:140952*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140952*0 + 3*136*FLEN/8, x4, x1, x2)

inst_46985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffc0000; valaddr_reg:x3; val_offset:140955*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140955*0 + 3*137*FLEN/8, x4, x1, x2)

inst_46986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffe0000; valaddr_reg:x3; val_offset:140958*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140958*0 + 3*138*FLEN/8, x4, x1, x2)

inst_46987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffff0000; valaddr_reg:x3; val_offset:140961*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140961*0 + 3*139*FLEN/8, x4, x1, x2)

inst_46988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffff8000; valaddr_reg:x3; val_offset:140964*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140964*0 + 3*140*FLEN/8, x4, x1, x2)

inst_46989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffc000; valaddr_reg:x3; val_offset:140967*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140967*0 + 3*141*FLEN/8, x4, x1, x2)

inst_46990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffe000; valaddr_reg:x3; val_offset:140970*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140970*0 + 3*142*FLEN/8, x4, x1, x2)

inst_46991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffff000; valaddr_reg:x3; val_offset:140973*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140973*0 + 3*143*FLEN/8, x4, x1, x2)

inst_46992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffff800; valaddr_reg:x3; val_offset:140976*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140976*0 + 3*144*FLEN/8, x4, x1, x2)

inst_46993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffc00; valaddr_reg:x3; val_offset:140979*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140979*0 + 3*145*FLEN/8, x4, x1, x2)

inst_46994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffe00; valaddr_reg:x3; val_offset:140982*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140982*0 + 3*146*FLEN/8, x4, x1, x2)

inst_46995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffff00; valaddr_reg:x3; val_offset:140985*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140985*0 + 3*147*FLEN/8, x4, x1, x2)

inst_46996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffff80; valaddr_reg:x3; val_offset:140988*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140988*0 + 3*148*FLEN/8, x4, x1, x2)

inst_46997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffffc0; valaddr_reg:x3; val_offset:140991*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140991*0 + 3*149*FLEN/8, x4, x1, x2)

inst_46998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffffe0; valaddr_reg:x3; val_offset:140994*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140994*0 + 3*150*FLEN/8, x4, x1, x2)

inst_46999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffff0; valaddr_reg:x3; val_offset:140997*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140997*0 + 3*151*FLEN/8, x4, x1, x2)

inst_47000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffff8; valaddr_reg:x3; val_offset:141000*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141000*0 + 3*152*FLEN/8, x4, x1, x2)

inst_47001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffffc; valaddr_reg:x3; val_offset:141003*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141003*0 + 3*153*FLEN/8, x4, x1, x2)

inst_47002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822ffffffffffffe; valaddr_reg:x3; val_offset:141006*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141006*0 + 3*154*FLEN/8, x4, x1, x2)

inst_47003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d17c6c95aefed; op2val:0x8000;
op3val:0x822fffffffffffff; valaddr_reg:x3; val_offset:141009*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141009*0 + 3*155*FLEN/8, x4, x1, x2)

inst_47004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:141012*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141012*0 + 3*156*FLEN/8, x4, x1, x2)

inst_47005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:141015*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141015*0 + 3*157*FLEN/8, x4, x1, x2)

inst_47006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:141018*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141018*0 + 3*158*FLEN/8, x4, x1, x2)

inst_47007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:141021*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141021*0 + 3*159*FLEN/8, x4, x1, x2)

inst_47008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:141024*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141024*0 + 3*160*FLEN/8, x4, x1, x2)

inst_47009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:141027*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141027*0 + 3*161*FLEN/8, x4, x1, x2)

inst_47010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:141030*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141030*0 + 3*162*FLEN/8, x4, x1, x2)

inst_47011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:141033*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141033*0 + 3*163*FLEN/8, x4, x1, x2)

inst_47012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:141036*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141036*0 + 3*164*FLEN/8, x4, x1, x2)

inst_47013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:141039*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141039*0 + 3*165*FLEN/8, x4, x1, x2)

inst_47014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:141042*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141042*0 + 3*166*FLEN/8, x4, x1, x2)

inst_47015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:141045*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141045*0 + 3*167*FLEN/8, x4, x1, x2)

inst_47016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:141048*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141048*0 + 3*168*FLEN/8, x4, x1, x2)

inst_47017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:141051*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141051*0 + 3*169*FLEN/8, x4, x1, x2)

inst_47018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:141054*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141054*0 + 3*170*FLEN/8, x4, x1, x2)

inst_47019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:141057*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141057*0 + 3*171*FLEN/8, x4, x1, x2)

inst_47020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:141060*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141060*0 + 3*172*FLEN/8, x4, x1, x2)

inst_47021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:141063*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141063*0 + 3*173*FLEN/8, x4, x1, x2)

inst_47022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:141066*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141066*0 + 3*174*FLEN/8, x4, x1, x2)

inst_47023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:141069*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141069*0 + 3*175*FLEN/8, x4, x1, x2)

inst_47024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:141072*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141072*0 + 3*176*FLEN/8, x4, x1, x2)

inst_47025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:141075*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141075*0 + 3*177*FLEN/8, x4, x1, x2)

inst_47026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:141078*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141078*0 + 3*178*FLEN/8, x4, x1, x2)

inst_47027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:141081*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141081*0 + 3*179*FLEN/8, x4, x1, x2)

inst_47028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:141084*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141084*0 + 3*180*FLEN/8, x4, x1, x2)

inst_47029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:141087*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141087*0 + 3*181*FLEN/8, x4, x1, x2)

inst_47030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:141090*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141090*0 + 3*182*FLEN/8, x4, x1, x2)

inst_47031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:141093*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141093*0 + 3*183*FLEN/8, x4, x1, x2)

inst_47032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:141096*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141096*0 + 3*184*FLEN/8, x4, x1, x2)

inst_47033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:141099*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141099*0 + 3*185*FLEN/8, x4, x1, x2)

inst_47034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:141102*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141102*0 + 3*186*FLEN/8, x4, x1, x2)

inst_47035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:141105*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141105*0 + 3*187*FLEN/8, x4, x1, x2)

inst_47036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:141108*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141108*0 + 3*188*FLEN/8, x4, x1, x2)

inst_47037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:141111*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141111*0 + 3*189*FLEN/8, x4, x1, x2)

inst_47038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:141114*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141114*0 + 3*190*FLEN/8, x4, x1, x2)

inst_47039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:141117*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141117*0 + 3*191*FLEN/8, x4, x1, x2)

inst_47040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:141120*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141120*0 + 3*192*FLEN/8, x4, x1, x2)

inst_47041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:141123*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141123*0 + 3*193*FLEN/8, x4, x1, x2)

inst_47042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:141126*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141126*0 + 3*194*FLEN/8, x4, x1, x2)

inst_47043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:141129*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141129*0 + 3*195*FLEN/8, x4, x1, x2)

inst_47044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:141132*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141132*0 + 3*196*FLEN/8, x4, x1, x2)

inst_47045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:141135*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141135*0 + 3*197*FLEN/8, x4, x1, x2)

inst_47046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:141138*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141138*0 + 3*198*FLEN/8, x4, x1, x2)

inst_47047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:141141*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141141*0 + 3*199*FLEN/8, x4, x1, x2)

inst_47048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:141144*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141144*0 + 3*200*FLEN/8, x4, x1, x2)

inst_47049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:141147*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141147*0 + 3*201*FLEN/8, x4, x1, x2)

inst_47050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:141150*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141150*0 + 3*202*FLEN/8, x4, x1, x2)

inst_47051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:141153*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141153*0 + 3*203*FLEN/8, x4, x1, x2)

inst_47052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:141156*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141156*0 + 3*204*FLEN/8, x4, x1, x2)

inst_47053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:141159*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141159*0 + 3*205*FLEN/8, x4, x1, x2)

inst_47054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:141162*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141162*0 + 3*206*FLEN/8, x4, x1, x2)

inst_47055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:141165*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141165*0 + 3*207*FLEN/8, x4, x1, x2)

inst_47056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:141168*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141168*0 + 3*208*FLEN/8, x4, x1, x2)

inst_47057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:141171*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141171*0 + 3*209*FLEN/8, x4, x1, x2)

inst_47058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:141174*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141174*0 + 3*210*FLEN/8, x4, x1, x2)

inst_47059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:141177*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141177*0 + 3*211*FLEN/8, x4, x1, x2)

inst_47060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:141180*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141180*0 + 3*212*FLEN/8, x4, x1, x2)

inst_47061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:141183*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141183*0 + 3*213*FLEN/8, x4, x1, x2)

inst_47062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:141186*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141186*0 + 3*214*FLEN/8, x4, x1, x2)

inst_47063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:141189*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141189*0 + 3*215*FLEN/8, x4, x1, x2)

inst_47064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:141192*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141192*0 + 3*216*FLEN/8, x4, x1, x2)

inst_47065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:141195*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141195*0 + 3*217*FLEN/8, x4, x1, x2)

inst_47066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:141198*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141198*0 + 3*218*FLEN/8, x4, x1, x2)

inst_47067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:141201*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141201*0 + 3*219*FLEN/8, x4, x1, x2)

inst_47068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:141204*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141204*0 + 3*220*FLEN/8, x4, x1, x2)

inst_47069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:141207*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141207*0 + 3*221*FLEN/8, x4, x1, x2)

inst_47070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:141210*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141210*0 + 3*222*FLEN/8, x4, x1, x2)

inst_47071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:141213*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141213*0 + 3*223*FLEN/8, x4, x1, x2)

inst_47072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:141216*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141216*0 + 3*224*FLEN/8, x4, x1, x2)

inst_47073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:141219*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141219*0 + 3*225*FLEN/8, x4, x1, x2)

inst_47074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:141222*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141222*0 + 3*226*FLEN/8, x4, x1, x2)

inst_47075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:141225*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141225*0 + 3*227*FLEN/8, x4, x1, x2)

inst_47076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:141228*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141228*0 + 3*228*FLEN/8, x4, x1, x2)

inst_47077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:141231*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141231*0 + 3*229*FLEN/8, x4, x1, x2)

inst_47078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:141234*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141234*0 + 3*230*FLEN/8, x4, x1, x2)

inst_47079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:141237*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141237*0 + 3*231*FLEN/8, x4, x1, x2)

inst_47080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:141240*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141240*0 + 3*232*FLEN/8, x4, x1, x2)

inst_47081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:141243*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141243*0 + 3*233*FLEN/8, x4, x1, x2)

inst_47082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:141246*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141246*0 + 3*234*FLEN/8, x4, x1, x2)

inst_47083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:141249*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141249*0 + 3*235*FLEN/8, x4, x1, x2)

inst_47084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:141252*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141252*0 + 3*236*FLEN/8, x4, x1, x2)

inst_47085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:141255*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141255*0 + 3*237*FLEN/8, x4, x1, x2)

inst_47086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:141258*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141258*0 + 3*238*FLEN/8, x4, x1, x2)

inst_47087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:141261*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141261*0 + 3*239*FLEN/8, x4, x1, x2)

inst_47088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:141264*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141264*0 + 3*240*FLEN/8, x4, x1, x2)

inst_47089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:141267*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141267*0 + 3*241*FLEN/8, x4, x1, x2)

inst_47090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:141270*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141270*0 + 3*242*FLEN/8, x4, x1, x2)

inst_47091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:141273*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141273*0 + 3*243*FLEN/8, x4, x1, x2)

inst_47092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:141276*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141276*0 + 3*244*FLEN/8, x4, x1, x2)

inst_47093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:141279*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141279*0 + 3*245*FLEN/8, x4, x1, x2)

inst_47094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:141282*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141282*0 + 3*246*FLEN/8, x4, x1, x2)

inst_47095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:141285*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141285*0 + 3*247*FLEN/8, x4, x1, x2)

inst_47096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:141288*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141288*0 + 3*248*FLEN/8, x4, x1, x2)

inst_47097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:141291*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141291*0 + 3*249*FLEN/8, x4, x1, x2)

inst_47098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:141294*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141294*0 + 3*250*FLEN/8, x4, x1, x2)

inst_47099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:141297*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141297*0 + 3*251*FLEN/8, x4, x1, x2)

inst_47100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:141300*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141300*0 + 3*252*FLEN/8, x4, x1, x2)

inst_47101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:141303*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141303*0 + 3*253*FLEN/8, x4, x1, x2)

inst_47102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:141306*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141306*0 + 3*254*FLEN/8, x4, x1, x2)

inst_47103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:141309*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141309*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_47104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:141312*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141312*0 + 3*256*FLEN/8, x4, x1, x2)

inst_47105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:141315*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141315*0 + 3*257*FLEN/8, x4, x1, x2)

inst_47106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:141318*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141318*0 + 3*258*FLEN/8, x4, x1, x2)

inst_47107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:141321*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141321*0 + 3*259*FLEN/8, x4, x1, x2)

inst_47108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:141324*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141324*0 + 3*260*FLEN/8, x4, x1, x2)

inst_47109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:141327*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141327*0 + 3*261*FLEN/8, x4, x1, x2)

inst_47110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:141330*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141330*0 + 3*262*FLEN/8, x4, x1, x2)

inst_47111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:141333*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141333*0 + 3*263*FLEN/8, x4, x1, x2)

inst_47112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:141336*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141336*0 + 3*264*FLEN/8, x4, x1, x2)

inst_47113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:141339*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141339*0 + 3*265*FLEN/8, x4, x1, x2)

inst_47114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:141342*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141342*0 + 3*266*FLEN/8, x4, x1, x2)

inst_47115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:141345*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141345*0 + 3*267*FLEN/8, x4, x1, x2)

inst_47116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:141348*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141348*0 + 3*268*FLEN/8, x4, x1, x2)

inst_47117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:141351*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141351*0 + 3*269*FLEN/8, x4, x1, x2)

inst_47118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:141354*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141354*0 + 3*270*FLEN/8, x4, x1, x2)

inst_47119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:141357*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141357*0 + 3*271*FLEN/8, x4, x1, x2)

inst_47120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:141360*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141360*0 + 3*272*FLEN/8, x4, x1, x2)

inst_47121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:141363*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141363*0 + 3*273*FLEN/8, x4, x1, x2)

inst_47122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:141366*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141366*0 + 3*274*FLEN/8, x4, x1, x2)

inst_47123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:141369*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141369*0 + 3*275*FLEN/8, x4, x1, x2)

inst_47124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:141372*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141372*0 + 3*276*FLEN/8, x4, x1, x2)

inst_47125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:141375*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141375*0 + 3*277*FLEN/8, x4, x1, x2)

inst_47126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:141378*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141378*0 + 3*278*FLEN/8, x4, x1, x2)

inst_47127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:141381*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141381*0 + 3*279*FLEN/8, x4, x1, x2)

inst_47128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:141384*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141384*0 + 3*280*FLEN/8, x4, x1, x2)

inst_47129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd249ca2611c89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d249ca2611c89; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:141387*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141387*0 + 3*281*FLEN/8, x4, x1, x2)

inst_47130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:141390*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141390*0 + 3*282*FLEN/8, x4, x1, x2)

inst_47131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:141393*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141393*0 + 3*283*FLEN/8, x4, x1, x2)

inst_47132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:141396*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141396*0 + 3*284*FLEN/8, x4, x1, x2)

inst_47133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:141399*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141399*0 + 3*285*FLEN/8, x4, x1, x2)

inst_47134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:141402*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141402*0 + 3*286*FLEN/8, x4, x1, x2)

inst_47135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:141405*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141405*0 + 3*287*FLEN/8, x4, x1, x2)

inst_47136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:141408*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141408*0 + 3*288*FLEN/8, x4, x1, x2)

inst_47137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:141411*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141411*0 + 3*289*FLEN/8, x4, x1, x2)

inst_47138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:141414*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141414*0 + 3*290*FLEN/8, x4, x1, x2)

inst_47139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:141417*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141417*0 + 3*291*FLEN/8, x4, x1, x2)

inst_47140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:141420*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141420*0 + 3*292*FLEN/8, x4, x1, x2)

inst_47141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:141423*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141423*0 + 3*293*FLEN/8, x4, x1, x2)

inst_47142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:141426*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141426*0 + 3*294*FLEN/8, x4, x1, x2)

inst_47143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:141429*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141429*0 + 3*295*FLEN/8, x4, x1, x2)

inst_47144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:141432*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141432*0 + 3*296*FLEN/8, x4, x1, x2)

inst_47145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:141435*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141435*0 + 3*297*FLEN/8, x4, x1, x2)

inst_47146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:141438*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141438*0 + 3*298*FLEN/8, x4, x1, x2)

inst_47147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:141441*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141441*0 + 3*299*FLEN/8, x4, x1, x2)

inst_47148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:141444*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141444*0 + 3*300*FLEN/8, x4, x1, x2)

inst_47149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:141447*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141447*0 + 3*301*FLEN/8, x4, x1, x2)

inst_47150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:141450*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141450*0 + 3*302*FLEN/8, x4, x1, x2)

inst_47151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:141453*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141453*0 + 3*303*FLEN/8, x4, x1, x2)

inst_47152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:141456*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141456*0 + 3*304*FLEN/8, x4, x1, x2)

inst_47153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:141459*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141459*0 + 3*305*FLEN/8, x4, x1, x2)

inst_47154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:141462*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141462*0 + 3*306*FLEN/8, x4, x1, x2)

inst_47155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:141465*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141465*0 + 3*307*FLEN/8, x4, x1, x2)

inst_47156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:141468*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141468*0 + 3*308*FLEN/8, x4, x1, x2)

inst_47157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:141471*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141471*0 + 3*309*FLEN/8, x4, x1, x2)

inst_47158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:141474*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141474*0 + 3*310*FLEN/8, x4, x1, x2)

inst_47159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:141477*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141477*0 + 3*311*FLEN/8, x4, x1, x2)

inst_47160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:141480*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141480*0 + 3*312*FLEN/8, x4, x1, x2)

inst_47161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:141483*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141483*0 + 3*313*FLEN/8, x4, x1, x2)

inst_47162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:141486*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141486*0 + 3*314*FLEN/8, x4, x1, x2)

inst_47163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:141489*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141489*0 + 3*315*FLEN/8, x4, x1, x2)

inst_47164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:141492*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141492*0 + 3*316*FLEN/8, x4, x1, x2)

inst_47165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:141495*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141495*0 + 3*317*FLEN/8, x4, x1, x2)

inst_47166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:141498*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141498*0 + 3*318*FLEN/8, x4, x1, x2)

inst_47167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:141501*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141501*0 + 3*319*FLEN/8, x4, x1, x2)

inst_47168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:141504*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141504*0 + 3*320*FLEN/8, x4, x1, x2)

inst_47169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:141507*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141507*0 + 3*321*FLEN/8, x4, x1, x2)

inst_47170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:141510*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141510*0 + 3*322*FLEN/8, x4, x1, x2)

inst_47171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:141513*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141513*0 + 3*323*FLEN/8, x4, x1, x2)

inst_47172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:141516*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141516*0 + 3*324*FLEN/8, x4, x1, x2)

inst_47173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:141519*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141519*0 + 3*325*FLEN/8, x4, x1, x2)

inst_47174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:141522*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141522*0 + 3*326*FLEN/8, x4, x1, x2)

inst_47175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:141525*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141525*0 + 3*327*FLEN/8, x4, x1, x2)

inst_47176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:141528*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141528*0 + 3*328*FLEN/8, x4, x1, x2)

inst_47177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:141531*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141531*0 + 3*329*FLEN/8, x4, x1, x2)

inst_47178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:141534*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141534*0 + 3*330*FLEN/8, x4, x1, x2)

inst_47179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:141537*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141537*0 + 3*331*FLEN/8, x4, x1, x2)

inst_47180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:141540*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141540*0 + 3*332*FLEN/8, x4, x1, x2)

inst_47181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:141543*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141543*0 + 3*333*FLEN/8, x4, x1, x2)

inst_47182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:141546*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141546*0 + 3*334*FLEN/8, x4, x1, x2)

inst_47183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:141549*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141549*0 + 3*335*FLEN/8, x4, x1, x2)

inst_47184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:141552*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141552*0 + 3*336*FLEN/8, x4, x1, x2)

inst_47185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:141555*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141555*0 + 3*337*FLEN/8, x4, x1, x2)

inst_47186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:141558*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141558*0 + 3*338*FLEN/8, x4, x1, x2)

inst_47187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:141561*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141561*0 + 3*339*FLEN/8, x4, x1, x2)

inst_47188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:141564*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141564*0 + 3*340*FLEN/8, x4, x1, x2)

inst_47189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:141567*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141567*0 + 3*341*FLEN/8, x4, x1, x2)

inst_47190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:141570*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141570*0 + 3*342*FLEN/8, x4, x1, x2)

inst_47191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:141573*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141573*0 + 3*343*FLEN/8, x4, x1, x2)

inst_47192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:141576*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141576*0 + 3*344*FLEN/8, x4, x1, x2)

inst_47193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:141579*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141579*0 + 3*345*FLEN/8, x4, x1, x2)

inst_47194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:141582*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141582*0 + 3*346*FLEN/8, x4, x1, x2)

inst_47195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:141585*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141585*0 + 3*347*FLEN/8, x4, x1, x2)

inst_47196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:141588*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141588*0 + 3*348*FLEN/8, x4, x1, x2)

inst_47197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:141591*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141591*0 + 3*349*FLEN/8, x4, x1, x2)

inst_47198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:141594*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141594*0 + 3*350*FLEN/8, x4, x1, x2)

inst_47199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:141597*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141597*0 + 3*351*FLEN/8, x4, x1, x2)

inst_47200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:141600*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141600*0 + 3*352*FLEN/8, x4, x1, x2)

inst_47201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:141603*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141603*0 + 3*353*FLEN/8, x4, x1, x2)

inst_47202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:141606*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141606*0 + 3*354*FLEN/8, x4, x1, x2)

inst_47203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:141609*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141609*0 + 3*355*FLEN/8, x4, x1, x2)

inst_47204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:141612*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141612*0 + 3*356*FLEN/8, x4, x1, x2)

inst_47205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:141615*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141615*0 + 3*357*FLEN/8, x4, x1, x2)

inst_47206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:141618*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141618*0 + 3*358*FLEN/8, x4, x1, x2)

inst_47207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:141621*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141621*0 + 3*359*FLEN/8, x4, x1, x2)

inst_47208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:141624*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141624*0 + 3*360*FLEN/8, x4, x1, x2)

inst_47209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:141627*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141627*0 + 3*361*FLEN/8, x4, x1, x2)

inst_47210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:141630*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141630*0 + 3*362*FLEN/8, x4, x1, x2)

inst_47211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:141633*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141633*0 + 3*363*FLEN/8, x4, x1, x2)

inst_47212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:141636*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141636*0 + 3*364*FLEN/8, x4, x1, x2)

inst_47213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:141639*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141639*0 + 3*365*FLEN/8, x4, x1, x2)

inst_47214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:141642*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141642*0 + 3*366*FLEN/8, x4, x1, x2)

inst_47215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:141645*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141645*0 + 3*367*FLEN/8, x4, x1, x2)

inst_47216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:141648*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141648*0 + 3*368*FLEN/8, x4, x1, x2)

inst_47217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:141651*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141651*0 + 3*369*FLEN/8, x4, x1, x2)

inst_47218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:141654*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141654*0 + 3*370*FLEN/8, x4, x1, x2)

inst_47219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:141657*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141657*0 + 3*371*FLEN/8, x4, x1, x2)

inst_47220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:141660*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141660*0 + 3*372*FLEN/8, x4, x1, x2)

inst_47221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:141663*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141663*0 + 3*373*FLEN/8, x4, x1, x2)

inst_47222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:141666*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141666*0 + 3*374*FLEN/8, x4, x1, x2)

inst_47223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:141669*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141669*0 + 3*375*FLEN/8, x4, x1, x2)

inst_47224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:141672*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141672*0 + 3*376*FLEN/8, x4, x1, x2)

inst_47225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:141675*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141675*0 + 3*377*FLEN/8, x4, x1, x2)

inst_47226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:141678*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141678*0 + 3*378*FLEN/8, x4, x1, x2)

inst_47227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:141681*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141681*0 + 3*379*FLEN/8, x4, x1, x2)

inst_47228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:141684*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141684*0 + 3*380*FLEN/8, x4, x1, x2)

inst_47229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:141687*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141687*0 + 3*381*FLEN/8, x4, x1, x2)

inst_47230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:141690*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141690*0 + 3*382*FLEN/8, x4, x1, x2)

inst_47231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:141693*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141693*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_47232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:141696*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141696*0 + 3*384*FLEN/8, x4, x1, x2)

inst_47233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:141699*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141699*0 + 3*385*FLEN/8, x4, x1, x2)

inst_47234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:141702*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141702*0 + 3*386*FLEN/8, x4, x1, x2)

inst_47235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:141705*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141705*0 + 3*387*FLEN/8, x4, x1, x2)

inst_47236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:141708*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141708*0 + 3*388*FLEN/8, x4, x1, x2)

inst_47237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:141711*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141711*0 + 3*389*FLEN/8, x4, x1, x2)

inst_47238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:141714*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141714*0 + 3*390*FLEN/8, x4, x1, x2)

inst_47239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:141717*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141717*0 + 3*391*FLEN/8, x4, x1, x2)

inst_47240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:141720*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141720*0 + 3*392*FLEN/8, x4, x1, x2)

inst_47241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:141723*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141723*0 + 3*393*FLEN/8, x4, x1, x2)

inst_47242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:141726*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141726*0 + 3*394*FLEN/8, x4, x1, x2)

inst_47243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:141729*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141729*0 + 3*395*FLEN/8, x4, x1, x2)

inst_47244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:141732*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141732*0 + 3*396*FLEN/8, x4, x1, x2)

inst_47245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:141735*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141735*0 + 3*397*FLEN/8, x4, x1, x2)

inst_47246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:141738*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141738*0 + 3*398*FLEN/8, x4, x1, x2)

inst_47247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:141741*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141741*0 + 3*399*FLEN/8, x4, x1, x2)

inst_47248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:141744*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141744*0 + 3*400*FLEN/8, x4, x1, x2)

inst_47249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:141747*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141747*0 + 3*401*FLEN/8, x4, x1, x2)

inst_47250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:141750*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141750*0 + 3*402*FLEN/8, x4, x1, x2)

inst_47251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:141753*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141753*0 + 3*403*FLEN/8, x4, x1, x2)

inst_47252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:141756*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141756*0 + 3*404*FLEN/8, x4, x1, x2)

inst_47253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:141759*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141759*0 + 3*405*FLEN/8, x4, x1, x2)

inst_47254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:141762*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141762*0 + 3*406*FLEN/8, x4, x1, x2)

inst_47255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd2b976b226cf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d2b976b226cf5; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:141765*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141765*0 + 3*407*FLEN/8, x4, x1, x2)

inst_47256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000000000; valaddr_reg:x3; val_offset:141768*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141768*0 + 3*408*FLEN/8, x4, x1, x2)

inst_47257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000000001; valaddr_reg:x3; val_offset:141771*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141771*0 + 3*409*FLEN/8, x4, x1, x2)

inst_47258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000000003; valaddr_reg:x3; val_offset:141774*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141774*0 + 3*410*FLEN/8, x4, x1, x2)

inst_47259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000000007; valaddr_reg:x3; val_offset:141777*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141777*0 + 3*411*FLEN/8, x4, x1, x2)

inst_47260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000000000f; valaddr_reg:x3; val_offset:141780*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141780*0 + 3*412*FLEN/8, x4, x1, x2)

inst_47261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000000001f; valaddr_reg:x3; val_offset:141783*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141783*0 + 3*413*FLEN/8, x4, x1, x2)

inst_47262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000000003f; valaddr_reg:x3; val_offset:141786*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141786*0 + 3*414*FLEN/8, x4, x1, x2)

inst_47263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000000007f; valaddr_reg:x3; val_offset:141789*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141789*0 + 3*415*FLEN/8, x4, x1, x2)

inst_47264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000000000ff; valaddr_reg:x3; val_offset:141792*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141792*0 + 3*416*FLEN/8, x4, x1, x2)

inst_47265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000000001ff; valaddr_reg:x3; val_offset:141795*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141795*0 + 3*417*FLEN/8, x4, x1, x2)

inst_47266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000000003ff; valaddr_reg:x3; val_offset:141798*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141798*0 + 3*418*FLEN/8, x4, x1, x2)

inst_47267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000000007ff; valaddr_reg:x3; val_offset:141801*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141801*0 + 3*419*FLEN/8, x4, x1, x2)

inst_47268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000000fff; valaddr_reg:x3; val_offset:141804*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141804*0 + 3*420*FLEN/8, x4, x1, x2)

inst_47269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000001fff; valaddr_reg:x3; val_offset:141807*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141807*0 + 3*421*FLEN/8, x4, x1, x2)

inst_47270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000003fff; valaddr_reg:x3; val_offset:141810*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141810*0 + 3*422*FLEN/8, x4, x1, x2)

inst_47271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000007fff; valaddr_reg:x3; val_offset:141813*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141813*0 + 3*423*FLEN/8, x4, x1, x2)

inst_47272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000000ffff; valaddr_reg:x3; val_offset:141816*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141816*0 + 3*424*FLEN/8, x4, x1, x2)

inst_47273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000001ffff; valaddr_reg:x3; val_offset:141819*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141819*0 + 3*425*FLEN/8, x4, x1, x2)

inst_47274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000003ffff; valaddr_reg:x3; val_offset:141822*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141822*0 + 3*426*FLEN/8, x4, x1, x2)

inst_47275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000007ffff; valaddr_reg:x3; val_offset:141825*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141825*0 + 3*427*FLEN/8, x4, x1, x2)

inst_47276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000000fffff; valaddr_reg:x3; val_offset:141828*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141828*0 + 3*428*FLEN/8, x4, x1, x2)

inst_47277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000001fffff; valaddr_reg:x3; val_offset:141831*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141831*0 + 3*429*FLEN/8, x4, x1, x2)

inst_47278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000003fffff; valaddr_reg:x3; val_offset:141834*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141834*0 + 3*430*FLEN/8, x4, x1, x2)

inst_47279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000007fffff; valaddr_reg:x3; val_offset:141837*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141837*0 + 3*431*FLEN/8, x4, x1, x2)

inst_47280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000000ffffff; valaddr_reg:x3; val_offset:141840*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141840*0 + 3*432*FLEN/8, x4, x1, x2)

inst_47281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000001ffffff; valaddr_reg:x3; val_offset:141843*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141843*0 + 3*433*FLEN/8, x4, x1, x2)

inst_47282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000003ffffff; valaddr_reg:x3; val_offset:141846*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141846*0 + 3*434*FLEN/8, x4, x1, x2)

inst_47283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000007ffffff; valaddr_reg:x3; val_offset:141849*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141849*0 + 3*435*FLEN/8, x4, x1, x2)

inst_47284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000000fffffff; valaddr_reg:x3; val_offset:141852*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141852*0 + 3*436*FLEN/8, x4, x1, x2)

inst_47285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000001fffffff; valaddr_reg:x3; val_offset:141855*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141855*0 + 3*437*FLEN/8, x4, x1, x2)

inst_47286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000003fffffff; valaddr_reg:x3; val_offset:141858*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141858*0 + 3*438*FLEN/8, x4, x1, x2)

inst_47287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000007fffffff; valaddr_reg:x3; val_offset:141861*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141861*0 + 3*439*FLEN/8, x4, x1, x2)

inst_47288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500000ffffffff; valaddr_reg:x3; val_offset:141864*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141864*0 + 3*440*FLEN/8, x4, x1, x2)

inst_47289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500001ffffffff; valaddr_reg:x3; val_offset:141867*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141867*0 + 3*441*FLEN/8, x4, x1, x2)

inst_47290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500003ffffffff; valaddr_reg:x3; val_offset:141870*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141870*0 + 3*442*FLEN/8, x4, x1, x2)

inst_47291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500007ffffffff; valaddr_reg:x3; val_offset:141873*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141873*0 + 3*443*FLEN/8, x4, x1, x2)

inst_47292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50000fffffffff; valaddr_reg:x3; val_offset:141876*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141876*0 + 3*444*FLEN/8, x4, x1, x2)

inst_47293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50001fffffffff; valaddr_reg:x3; val_offset:141879*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141879*0 + 3*445*FLEN/8, x4, x1, x2)

inst_47294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50003fffffffff; valaddr_reg:x3; val_offset:141882*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141882*0 + 3*446*FLEN/8, x4, x1, x2)

inst_47295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50007fffffffff; valaddr_reg:x3; val_offset:141885*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141885*0 + 3*447*FLEN/8, x4, x1, x2)

inst_47296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5000ffffffffff; valaddr_reg:x3; val_offset:141888*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141888*0 + 3*448*FLEN/8, x4, x1, x2)

inst_47297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5001ffffffffff; valaddr_reg:x3; val_offset:141891*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141891*0 + 3*449*FLEN/8, x4, x1, x2)

inst_47298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5003ffffffffff; valaddr_reg:x3; val_offset:141894*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141894*0 + 3*450*FLEN/8, x4, x1, x2)

inst_47299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5007ffffffffff; valaddr_reg:x3; val_offset:141897*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141897*0 + 3*451*FLEN/8, x4, x1, x2)

inst_47300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e500fffffffffff; valaddr_reg:x3; val_offset:141900*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141900*0 + 3*452*FLEN/8, x4, x1, x2)

inst_47301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e501fffffffffff; valaddr_reg:x3; val_offset:141903*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141903*0 + 3*453*FLEN/8, x4, x1, x2)

inst_47302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e503fffffffffff; valaddr_reg:x3; val_offset:141906*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141906*0 + 3*454*FLEN/8, x4, x1, x2)

inst_47303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e507fffffffffff; valaddr_reg:x3; val_offset:141909*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141909*0 + 3*455*FLEN/8, x4, x1, x2)

inst_47304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e50ffffffffffff; valaddr_reg:x3; val_offset:141912*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141912*0 + 3*456*FLEN/8, x4, x1, x2)

inst_47305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e51ffffffffffff; valaddr_reg:x3; val_offset:141915*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141915*0 + 3*457*FLEN/8, x4, x1, x2)

inst_47306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e53ffffffffffff; valaddr_reg:x3; val_offset:141918*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141918*0 + 3*458*FLEN/8, x4, x1, x2)

inst_47307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e57ffffffffffff; valaddr_reg:x3; val_offset:141921*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141921*0 + 3*459*FLEN/8, x4, x1, x2)

inst_47308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e58000000000000; valaddr_reg:x3; val_offset:141924*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141924*0 + 3*460*FLEN/8, x4, x1, x2)

inst_47309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5c000000000000; valaddr_reg:x3; val_offset:141927*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141927*0 + 3*461*FLEN/8, x4, x1, x2)

inst_47310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5e000000000000; valaddr_reg:x3; val_offset:141930*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141930*0 + 3*462*FLEN/8, x4, x1, x2)

inst_47311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5f000000000000; valaddr_reg:x3; val_offset:141933*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141933*0 + 3*463*FLEN/8, x4, x1, x2)

inst_47312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5f800000000000; valaddr_reg:x3; val_offset:141936*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141936*0 + 3*464*FLEN/8, x4, x1, x2)

inst_47313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fc00000000000; valaddr_reg:x3; val_offset:141939*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141939*0 + 3*465*FLEN/8, x4, x1, x2)

inst_47314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fe00000000000; valaddr_reg:x3; val_offset:141942*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141942*0 + 3*466*FLEN/8, x4, x1, x2)

inst_47315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ff00000000000; valaddr_reg:x3; val_offset:141945*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141945*0 + 3*467*FLEN/8, x4, x1, x2)

inst_47316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ff80000000000; valaddr_reg:x3; val_offset:141948*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141948*0 + 3*468*FLEN/8, x4, x1, x2)

inst_47317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffc0000000000; valaddr_reg:x3; val_offset:141951*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141951*0 + 3*469*FLEN/8, x4, x1, x2)

inst_47318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffe0000000000; valaddr_reg:x3; val_offset:141954*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141954*0 + 3*470*FLEN/8, x4, x1, x2)

inst_47319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fff0000000000; valaddr_reg:x3; val_offset:141957*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141957*0 + 3*471*FLEN/8, x4, x1, x2)

inst_47320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fff8000000000; valaddr_reg:x3; val_offset:141960*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141960*0 + 3*472*FLEN/8, x4, x1, x2)

inst_47321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffc000000000; valaddr_reg:x3; val_offset:141963*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141963*0 + 3*473*FLEN/8, x4, x1, x2)

inst_47322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffe000000000; valaddr_reg:x3; val_offset:141966*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141966*0 + 3*474*FLEN/8, x4, x1, x2)

inst_47323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffff000000000; valaddr_reg:x3; val_offset:141969*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141969*0 + 3*475*FLEN/8, x4, x1, x2)

inst_47324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffff800000000; valaddr_reg:x3; val_offset:141972*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141972*0 + 3*476*FLEN/8, x4, x1, x2)

inst_47325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffc00000000; valaddr_reg:x3; val_offset:141975*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141975*0 + 3*477*FLEN/8, x4, x1, x2)

inst_47326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffe00000000; valaddr_reg:x3; val_offset:141978*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141978*0 + 3*478*FLEN/8, x4, x1, x2)

inst_47327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffff00000000; valaddr_reg:x3; val_offset:141981*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141981*0 + 3*479*FLEN/8, x4, x1, x2)

inst_47328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffff80000000; valaddr_reg:x3; val_offset:141984*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141984*0 + 3*480*FLEN/8, x4, x1, x2)

inst_47329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffc0000000; valaddr_reg:x3; val_offset:141987*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141987*0 + 3*481*FLEN/8, x4, x1, x2)

inst_47330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffe0000000; valaddr_reg:x3; val_offset:141990*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141990*0 + 3*482*FLEN/8, x4, x1, x2)

inst_47331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffff0000000; valaddr_reg:x3; val_offset:141993*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141993*0 + 3*483*FLEN/8, x4, x1, x2)

inst_47332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffff8000000; valaddr_reg:x3; val_offset:141996*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141996*0 + 3*484*FLEN/8, x4, x1, x2)

inst_47333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffc000000; valaddr_reg:x3; val_offset:141999*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141999*0 + 3*485*FLEN/8, x4, x1, x2)

inst_47334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffe000000; valaddr_reg:x3; val_offset:142002*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142002*0 + 3*486*FLEN/8, x4, x1, x2)

inst_47335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffff000000; valaddr_reg:x3; val_offset:142005*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142005*0 + 3*487*FLEN/8, x4, x1, x2)

inst_47336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffff800000; valaddr_reg:x3; val_offset:142008*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142008*0 + 3*488*FLEN/8, x4, x1, x2)

inst_47337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffc00000; valaddr_reg:x3; val_offset:142011*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142011*0 + 3*489*FLEN/8, x4, x1, x2)

inst_47338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffe00000; valaddr_reg:x3; val_offset:142014*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142014*0 + 3*490*FLEN/8, x4, x1, x2)

inst_47339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffff00000; valaddr_reg:x3; val_offset:142017*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142017*0 + 3*491*FLEN/8, x4, x1, x2)

inst_47340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffff80000; valaddr_reg:x3; val_offset:142020*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142020*0 + 3*492*FLEN/8, x4, x1, x2)

inst_47341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffc0000; valaddr_reg:x3; val_offset:142023*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142023*0 + 3*493*FLEN/8, x4, x1, x2)

inst_47342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffe0000; valaddr_reg:x3; val_offset:142026*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142026*0 + 3*494*FLEN/8, x4, x1, x2)

inst_47343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffff0000; valaddr_reg:x3; val_offset:142029*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142029*0 + 3*495*FLEN/8, x4, x1, x2)

inst_47344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffff8000; valaddr_reg:x3; val_offset:142032*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142032*0 + 3*496*FLEN/8, x4, x1, x2)

inst_47345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffc000; valaddr_reg:x3; val_offset:142035*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142035*0 + 3*497*FLEN/8, x4, x1, x2)

inst_47346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffe000; valaddr_reg:x3; val_offset:142038*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142038*0 + 3*498*FLEN/8, x4, x1, x2)

inst_47347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffff000; valaddr_reg:x3; val_offset:142041*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142041*0 + 3*499*FLEN/8, x4, x1, x2)

inst_47348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffff800; valaddr_reg:x3; val_offset:142044*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142044*0 + 3*500*FLEN/8, x4, x1, x2)

inst_47349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffc00; valaddr_reg:x3; val_offset:142047*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142047*0 + 3*501*FLEN/8, x4, x1, x2)

inst_47350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffe00; valaddr_reg:x3; val_offset:142050*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142050*0 + 3*502*FLEN/8, x4, x1, x2)

inst_47351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffff00; valaddr_reg:x3; val_offset:142053*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142053*0 + 3*503*FLEN/8, x4, x1, x2)

inst_47352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffff80; valaddr_reg:x3; val_offset:142056*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142056*0 + 3*504*FLEN/8, x4, x1, x2)

inst_47353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffffc0; valaddr_reg:x3; val_offset:142059*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142059*0 + 3*505*FLEN/8, x4, x1, x2)

inst_47354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffffe0; valaddr_reg:x3; val_offset:142062*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142062*0 + 3*506*FLEN/8, x4, x1, x2)

inst_47355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffff0; valaddr_reg:x3; val_offset:142065*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142065*0 + 3*507*FLEN/8, x4, x1, x2)

inst_47356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffff8; valaddr_reg:x3; val_offset:142068*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142068*0 + 3*508*FLEN/8, x4, x1, x2)

inst_47357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffffc; valaddr_reg:x3; val_offset:142071*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142071*0 + 3*509*FLEN/8, x4, x1, x2)

inst_47358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5ffffffffffffe; valaddr_reg:x3; val_offset:142074*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142074*0 + 3*510*FLEN/8, x4, x1, x2)

inst_47359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3e5fffffffffffff; valaddr_reg:x3; val_offset:142077*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142077*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_47360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:142080*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142080*0 + 3*512*FLEN/8, x4, x1, x2)

inst_47361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:142083*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142083*0 + 3*513*FLEN/8, x4, x1, x2)

inst_47362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:142086*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142086*0 + 3*514*FLEN/8, x4, x1, x2)

inst_47363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:142089*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142089*0 + 3*515*FLEN/8, x4, x1, x2)

inst_47364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:142092*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142092*0 + 3*516*FLEN/8, x4, x1, x2)

inst_47365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:142095*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142095*0 + 3*517*FLEN/8, x4, x1, x2)

inst_47366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:142098*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142098*0 + 3*518*FLEN/8, x4, x1, x2)

inst_47367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:142101*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142101*0 + 3*519*FLEN/8, x4, x1, x2)

inst_47368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:142104*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142104*0 + 3*520*FLEN/8, x4, x1, x2)

inst_47369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:142107*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142107*0 + 3*521*FLEN/8, x4, x1, x2)

inst_47370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:142110*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142110*0 + 3*522*FLEN/8, x4, x1, x2)

inst_47371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:142113*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142113*0 + 3*523*FLEN/8, x4, x1, x2)

inst_47372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:142116*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142116*0 + 3*524*FLEN/8, x4, x1, x2)

inst_47373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:142119*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142119*0 + 3*525*FLEN/8, x4, x1, x2)

inst_47374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:142122*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142122*0 + 3*526*FLEN/8, x4, x1, x2)

inst_47375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:142125*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142125*0 + 3*527*FLEN/8, x4, x1, x2)

inst_47376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:142128*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142128*0 + 3*528*FLEN/8, x4, x1, x2)

inst_47377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:142131*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142131*0 + 3*529*FLEN/8, x4, x1, x2)

inst_47378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:142134*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142134*0 + 3*530*FLEN/8, x4, x1, x2)

inst_47379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:142137*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142137*0 + 3*531*FLEN/8, x4, x1, x2)

inst_47380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:142140*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142140*0 + 3*532*FLEN/8, x4, x1, x2)

inst_47381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1810cdd257719 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4012b921b92d; op2val:0x2041810cdd257719;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:142143*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142143*0 + 3*533*FLEN/8, x4, x1, x2)

inst_47382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:142146*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142146*0 + 3*534*FLEN/8, x4, x1, x2)

inst_47383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:142149*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142149*0 + 3*535*FLEN/8, x4, x1, x2)

inst_47384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:142152*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142152*0 + 3*536*FLEN/8, x4, x1, x2)

inst_47385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:142155*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142155*0 + 3*537*FLEN/8, x4, x1, x2)

inst_47386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:142158*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142158*0 + 3*538*FLEN/8, x4, x1, x2)

inst_47387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:142161*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142161*0 + 3*539*FLEN/8, x4, x1, x2)

inst_47388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:142164*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142164*0 + 3*540*FLEN/8, x4, x1, x2)

inst_47389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:142167*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142167*0 + 3*541*FLEN/8, x4, x1, x2)

inst_47390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:142170*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142170*0 + 3*542*FLEN/8, x4, x1, x2)

inst_47391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:142173*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142173*0 + 3*543*FLEN/8, x4, x1, x2)

inst_47392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:142176*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142176*0 + 3*544*FLEN/8, x4, x1, x2)

inst_47393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:142179*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142179*0 + 3*545*FLEN/8, x4, x1, x2)

inst_47394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:142182*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142182*0 + 3*546*FLEN/8, x4, x1, x2)

inst_47395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:142185*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142185*0 + 3*547*FLEN/8, x4, x1, x2)

inst_47396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:142188*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142188*0 + 3*548*FLEN/8, x4, x1, x2)

inst_47397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:142191*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142191*0 + 3*549*FLEN/8, x4, x1, x2)

inst_47398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:142194*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142194*0 + 3*550*FLEN/8, x4, x1, x2)

inst_47399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:142197*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142197*0 + 3*551*FLEN/8, x4, x1, x2)

inst_47400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:142200*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142200*0 + 3*552*FLEN/8, x4, x1, x2)

inst_47401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:142203*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142203*0 + 3*553*FLEN/8, x4, x1, x2)

inst_47402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:142206*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142206*0 + 3*554*FLEN/8, x4, x1, x2)

inst_47403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:142209*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142209*0 + 3*555*FLEN/8, x4, x1, x2)

inst_47404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000000000; valaddr_reg:x3; val_offset:142212*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142212*0 + 3*556*FLEN/8, x4, x1, x2)

inst_47405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000000001; valaddr_reg:x3; val_offset:142215*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142215*0 + 3*557*FLEN/8, x4, x1, x2)

inst_47406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000000003; valaddr_reg:x3; val_offset:142218*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142218*0 + 3*558*FLEN/8, x4, x1, x2)

inst_47407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000000007; valaddr_reg:x3; val_offset:142221*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142221*0 + 3*559*FLEN/8, x4, x1, x2)

inst_47408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000000000f; valaddr_reg:x3; val_offset:142224*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142224*0 + 3*560*FLEN/8, x4, x1, x2)

inst_47409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000000001f; valaddr_reg:x3; val_offset:142227*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142227*0 + 3*561*FLEN/8, x4, x1, x2)

inst_47410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000000003f; valaddr_reg:x3; val_offset:142230*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142230*0 + 3*562*FLEN/8, x4, x1, x2)

inst_47411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000000007f; valaddr_reg:x3; val_offset:142233*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142233*0 + 3*563*FLEN/8, x4, x1, x2)

inst_47412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000000000ff; valaddr_reg:x3; val_offset:142236*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142236*0 + 3*564*FLEN/8, x4, x1, x2)

inst_47413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000000001ff; valaddr_reg:x3; val_offset:142239*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142239*0 + 3*565*FLEN/8, x4, x1, x2)

inst_47414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000000003ff; valaddr_reg:x3; val_offset:142242*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142242*0 + 3*566*FLEN/8, x4, x1, x2)

inst_47415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000000007ff; valaddr_reg:x3; val_offset:142245*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142245*0 + 3*567*FLEN/8, x4, x1, x2)

inst_47416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000000fff; valaddr_reg:x3; val_offset:142248*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142248*0 + 3*568*FLEN/8, x4, x1, x2)

inst_47417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000001fff; valaddr_reg:x3; val_offset:142251*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142251*0 + 3*569*FLEN/8, x4, x1, x2)

inst_47418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000003fff; valaddr_reg:x3; val_offset:142254*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142254*0 + 3*570*FLEN/8, x4, x1, x2)

inst_47419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000007fff; valaddr_reg:x3; val_offset:142257*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142257*0 + 3*571*FLEN/8, x4, x1, x2)

inst_47420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000000ffff; valaddr_reg:x3; val_offset:142260*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142260*0 + 3*572*FLEN/8, x4, x1, x2)

inst_47421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000001ffff; valaddr_reg:x3; val_offset:142263*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142263*0 + 3*573*FLEN/8, x4, x1, x2)

inst_47422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000003ffff; valaddr_reg:x3; val_offset:142266*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142266*0 + 3*574*FLEN/8, x4, x1, x2)

inst_47423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000007ffff; valaddr_reg:x3; val_offset:142269*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142269*0 + 3*575*FLEN/8, x4, x1, x2)

inst_47424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000000fffff; valaddr_reg:x3; val_offset:142272*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142272*0 + 3*576*FLEN/8, x4, x1, x2)

inst_47425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000001fffff; valaddr_reg:x3; val_offset:142275*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142275*0 + 3*577*FLEN/8, x4, x1, x2)

inst_47426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000003fffff; valaddr_reg:x3; val_offset:142278*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142278*0 + 3*578*FLEN/8, x4, x1, x2)

inst_47427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000007fffff; valaddr_reg:x3; val_offset:142281*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142281*0 + 3*579*FLEN/8, x4, x1, x2)

inst_47428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000000ffffff; valaddr_reg:x3; val_offset:142284*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142284*0 + 3*580*FLEN/8, x4, x1, x2)

inst_47429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000001ffffff; valaddr_reg:x3; val_offset:142287*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142287*0 + 3*581*FLEN/8, x4, x1, x2)

inst_47430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000003ffffff; valaddr_reg:x3; val_offset:142290*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142290*0 + 3*582*FLEN/8, x4, x1, x2)

inst_47431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000007ffffff; valaddr_reg:x3; val_offset:142293*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142293*0 + 3*583*FLEN/8, x4, x1, x2)

inst_47432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000000fffffff; valaddr_reg:x3; val_offset:142296*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142296*0 + 3*584*FLEN/8, x4, x1, x2)

inst_47433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000001fffffff; valaddr_reg:x3; val_offset:142299*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142299*0 + 3*585*FLEN/8, x4, x1, x2)

inst_47434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000003fffffff; valaddr_reg:x3; val_offset:142302*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142302*0 + 3*586*FLEN/8, x4, x1, x2)

inst_47435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000007fffffff; valaddr_reg:x3; val_offset:142305*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142305*0 + 3*587*FLEN/8, x4, x1, x2)

inst_47436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900000ffffffff; valaddr_reg:x3; val_offset:142308*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142308*0 + 3*588*FLEN/8, x4, x1, x2)

inst_47437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900001ffffffff; valaddr_reg:x3; val_offset:142311*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142311*0 + 3*589*FLEN/8, x4, x1, x2)

inst_47438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900003ffffffff; valaddr_reg:x3; val_offset:142314*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142314*0 + 3*590*FLEN/8, x4, x1, x2)

inst_47439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900007ffffffff; valaddr_reg:x3; val_offset:142317*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142317*0 + 3*591*FLEN/8, x4, x1, x2)

inst_47440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90000fffffffff; valaddr_reg:x3; val_offset:142320*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142320*0 + 3*592*FLEN/8, x4, x1, x2)

inst_47441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90001fffffffff; valaddr_reg:x3; val_offset:142323*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142323*0 + 3*593*FLEN/8, x4, x1, x2)

inst_47442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90003fffffffff; valaddr_reg:x3; val_offset:142326*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142326*0 + 3*594*FLEN/8, x4, x1, x2)

inst_47443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90007fffffffff; valaddr_reg:x3; val_offset:142329*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142329*0 + 3*595*FLEN/8, x4, x1, x2)

inst_47444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9000ffffffffff; valaddr_reg:x3; val_offset:142332*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142332*0 + 3*596*FLEN/8, x4, x1, x2)

inst_47445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9001ffffffffff; valaddr_reg:x3; val_offset:142335*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142335*0 + 3*597*FLEN/8, x4, x1, x2)

inst_47446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9003ffffffffff; valaddr_reg:x3; val_offset:142338*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142338*0 + 3*598*FLEN/8, x4, x1, x2)

inst_47447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9007ffffffffff; valaddr_reg:x3; val_offset:142341*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142341*0 + 3*599*FLEN/8, x4, x1, x2)

inst_47448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf900fffffffffff; valaddr_reg:x3; val_offset:142344*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142344*0 + 3*600*FLEN/8, x4, x1, x2)

inst_47449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf901fffffffffff; valaddr_reg:x3; val_offset:142347*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142347*0 + 3*601*FLEN/8, x4, x1, x2)

inst_47450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf903fffffffffff; valaddr_reg:x3; val_offset:142350*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142350*0 + 3*602*FLEN/8, x4, x1, x2)

inst_47451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf907fffffffffff; valaddr_reg:x3; val_offset:142353*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142353*0 + 3*603*FLEN/8, x4, x1, x2)

inst_47452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf90ffffffffffff; valaddr_reg:x3; val_offset:142356*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142356*0 + 3*604*FLEN/8, x4, x1, x2)

inst_47453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf91ffffffffffff; valaddr_reg:x3; val_offset:142359*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142359*0 + 3*605*FLEN/8, x4, x1, x2)

inst_47454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf93ffffffffffff; valaddr_reg:x3; val_offset:142362*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142362*0 + 3*606*FLEN/8, x4, x1, x2)

inst_47455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf97ffffffffffff; valaddr_reg:x3; val_offset:142365*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142365*0 + 3*607*FLEN/8, x4, x1, x2)

inst_47456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf98000000000000; valaddr_reg:x3; val_offset:142368*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142368*0 + 3*608*FLEN/8, x4, x1, x2)

inst_47457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9c000000000000; valaddr_reg:x3; val_offset:142371*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142371*0 + 3*609*FLEN/8, x4, x1, x2)

inst_47458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9e000000000000; valaddr_reg:x3; val_offset:142374*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142374*0 + 3*610*FLEN/8, x4, x1, x2)

inst_47459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9f000000000000; valaddr_reg:x3; val_offset:142377*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142377*0 + 3*611*FLEN/8, x4, x1, x2)

inst_47460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9f800000000000; valaddr_reg:x3; val_offset:142380*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142380*0 + 3*612*FLEN/8, x4, x1, x2)

inst_47461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fc00000000000; valaddr_reg:x3; val_offset:142383*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142383*0 + 3*613*FLEN/8, x4, x1, x2)

inst_47462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fe00000000000; valaddr_reg:x3; val_offset:142386*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142386*0 + 3*614*FLEN/8, x4, x1, x2)

inst_47463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ff00000000000; valaddr_reg:x3; val_offset:142389*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142389*0 + 3*615*FLEN/8, x4, x1, x2)

inst_47464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ff80000000000; valaddr_reg:x3; val_offset:142392*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142392*0 + 3*616*FLEN/8, x4, x1, x2)

inst_47465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffc0000000000; valaddr_reg:x3; val_offset:142395*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142395*0 + 3*617*FLEN/8, x4, x1, x2)

inst_47466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffe0000000000; valaddr_reg:x3; val_offset:142398*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142398*0 + 3*618*FLEN/8, x4, x1, x2)

inst_47467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fff0000000000; valaddr_reg:x3; val_offset:142401*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142401*0 + 3*619*FLEN/8, x4, x1, x2)

inst_47468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fff8000000000; valaddr_reg:x3; val_offset:142404*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142404*0 + 3*620*FLEN/8, x4, x1, x2)

inst_47469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffc000000000; valaddr_reg:x3; val_offset:142407*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142407*0 + 3*621*FLEN/8, x4, x1, x2)

inst_47470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffe000000000; valaddr_reg:x3; val_offset:142410*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142410*0 + 3*622*FLEN/8, x4, x1, x2)

inst_47471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffff000000000; valaddr_reg:x3; val_offset:142413*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142413*0 + 3*623*FLEN/8, x4, x1, x2)

inst_47472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffff800000000; valaddr_reg:x3; val_offset:142416*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142416*0 + 3*624*FLEN/8, x4, x1, x2)

inst_47473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffc00000000; valaddr_reg:x3; val_offset:142419*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142419*0 + 3*625*FLEN/8, x4, x1, x2)

inst_47474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffe00000000; valaddr_reg:x3; val_offset:142422*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142422*0 + 3*626*FLEN/8, x4, x1, x2)

inst_47475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffff00000000; valaddr_reg:x3; val_offset:142425*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142425*0 + 3*627*FLEN/8, x4, x1, x2)

inst_47476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffff80000000; valaddr_reg:x3; val_offset:142428*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142428*0 + 3*628*FLEN/8, x4, x1, x2)

inst_47477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffc0000000; valaddr_reg:x3; val_offset:142431*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142431*0 + 3*629*FLEN/8, x4, x1, x2)

inst_47478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffe0000000; valaddr_reg:x3; val_offset:142434*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142434*0 + 3*630*FLEN/8, x4, x1, x2)

inst_47479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffff0000000; valaddr_reg:x3; val_offset:142437*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142437*0 + 3*631*FLEN/8, x4, x1, x2)

inst_47480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffff8000000; valaddr_reg:x3; val_offset:142440*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142440*0 + 3*632*FLEN/8, x4, x1, x2)

inst_47481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffc000000; valaddr_reg:x3; val_offset:142443*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142443*0 + 3*633*FLEN/8, x4, x1, x2)

inst_47482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffe000000; valaddr_reg:x3; val_offset:142446*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142446*0 + 3*634*FLEN/8, x4, x1, x2)

inst_47483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffff000000; valaddr_reg:x3; val_offset:142449*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142449*0 + 3*635*FLEN/8, x4, x1, x2)

inst_47484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffff800000; valaddr_reg:x3; val_offset:142452*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142452*0 + 3*636*FLEN/8, x4, x1, x2)

inst_47485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffc00000; valaddr_reg:x3; val_offset:142455*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142455*0 + 3*637*FLEN/8, x4, x1, x2)

inst_47486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffe00000; valaddr_reg:x3; val_offset:142458*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142458*0 + 3*638*FLEN/8, x4, x1, x2)

inst_47487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffff00000; valaddr_reg:x3; val_offset:142461*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142461*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_47488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffff80000; valaddr_reg:x3; val_offset:142464*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142464*0 + 3*640*FLEN/8, x4, x1, x2)

inst_47489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffc0000; valaddr_reg:x3; val_offset:142467*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142467*0 + 3*641*FLEN/8, x4, x1, x2)

inst_47490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffe0000; valaddr_reg:x3; val_offset:142470*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142470*0 + 3*642*FLEN/8, x4, x1, x2)

inst_47491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffff0000; valaddr_reg:x3; val_offset:142473*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142473*0 + 3*643*FLEN/8, x4, x1, x2)

inst_47492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffff8000; valaddr_reg:x3; val_offset:142476*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142476*0 + 3*644*FLEN/8, x4, x1, x2)

inst_47493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffc000; valaddr_reg:x3; val_offset:142479*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142479*0 + 3*645*FLEN/8, x4, x1, x2)

inst_47494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffe000; valaddr_reg:x3; val_offset:142482*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142482*0 + 3*646*FLEN/8, x4, x1, x2)

inst_47495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffff000; valaddr_reg:x3; val_offset:142485*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142485*0 + 3*647*FLEN/8, x4, x1, x2)

inst_47496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffff800; valaddr_reg:x3; val_offset:142488*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142488*0 + 3*648*FLEN/8, x4, x1, x2)

inst_47497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffc00; valaddr_reg:x3; val_offset:142491*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142491*0 + 3*649*FLEN/8, x4, x1, x2)

inst_47498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffe00; valaddr_reg:x3; val_offset:142494*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142494*0 + 3*650*FLEN/8, x4, x1, x2)

inst_47499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffff00; valaddr_reg:x3; val_offset:142497*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142497*0 + 3*651*FLEN/8, x4, x1, x2)

inst_47500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffff80; valaddr_reg:x3; val_offset:142500*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142500*0 + 3*652*FLEN/8, x4, x1, x2)

inst_47501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffffc0; valaddr_reg:x3; val_offset:142503*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142503*0 + 3*653*FLEN/8, x4, x1, x2)

inst_47502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffffe0; valaddr_reg:x3; val_offset:142506*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142506*0 + 3*654*FLEN/8, x4, x1, x2)

inst_47503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffff0; valaddr_reg:x3; val_offset:142509*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142509*0 + 3*655*FLEN/8, x4, x1, x2)

inst_47504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffff8; valaddr_reg:x3; val_offset:142512*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142512*0 + 3*656*FLEN/8, x4, x1, x2)

inst_47505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffffc; valaddr_reg:x3; val_offset:142515*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142515*0 + 3*657*FLEN/8, x4, x1, x2)

inst_47506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9ffffffffffffe; valaddr_reg:x3; val_offset:142518*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142518*0 + 3*658*FLEN/8, x4, x1, x2)

inst_47507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd484e5c7d8c61 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x17c20fc567952 and fs3 == 1 and fe3 == 0x3f9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d484e5c7d8c61; op2val:0x9fd17c20fc567952;
op3val:0xbf9fffffffffffff; valaddr_reg:x3; val_offset:142521*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142521*0 + 3*659*FLEN/8, x4, x1, x2)

inst_47508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:142524*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142524*0 + 3*660*FLEN/8, x4, x1, x2)

inst_47509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:142527*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142527*0 + 3*661*FLEN/8, x4, x1, x2)

inst_47510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:142530*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142530*0 + 3*662*FLEN/8, x4, x1, x2)

inst_47511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:142533*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142533*0 + 3*663*FLEN/8, x4, x1, x2)

inst_47512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:142536*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142536*0 + 3*664*FLEN/8, x4, x1, x2)

inst_47513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:142539*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142539*0 + 3*665*FLEN/8, x4, x1, x2)

inst_47514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:142542*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142542*0 + 3*666*FLEN/8, x4, x1, x2)

inst_47515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:142545*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142545*0 + 3*667*FLEN/8, x4, x1, x2)

inst_47516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:142548*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142548*0 + 3*668*FLEN/8, x4, x1, x2)

inst_47517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:142551*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142551*0 + 3*669*FLEN/8, x4, x1, x2)

inst_47518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:142554*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142554*0 + 3*670*FLEN/8, x4, x1, x2)

inst_47519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:142557*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142557*0 + 3*671*FLEN/8, x4, x1, x2)

inst_47520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:142560*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142560*0 + 3*672*FLEN/8, x4, x1, x2)

inst_47521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:142563*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142563*0 + 3*673*FLEN/8, x4, x1, x2)

inst_47522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:142566*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142566*0 + 3*674*FLEN/8, x4, x1, x2)

inst_47523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:142569*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142569*0 + 3*675*FLEN/8, x4, x1, x2)

inst_47524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:142572*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142572*0 + 3*676*FLEN/8, x4, x1, x2)

inst_47525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:142575*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142575*0 + 3*677*FLEN/8, x4, x1, x2)

inst_47526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:142578*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142578*0 + 3*678*FLEN/8, x4, x1, x2)

inst_47527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:142581*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142581*0 + 3*679*FLEN/8, x4, x1, x2)

inst_47528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:142584*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142584*0 + 3*680*FLEN/8, x4, x1, x2)

inst_47529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:142587*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142587*0 + 3*681*FLEN/8, x4, x1, x2)

inst_47530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:142590*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142590*0 + 3*682*FLEN/8, x4, x1, x2)

inst_47531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:142593*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142593*0 + 3*683*FLEN/8, x4, x1, x2)

inst_47532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:142596*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142596*0 + 3*684*FLEN/8, x4, x1, x2)

inst_47533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:142599*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142599*0 + 3*685*FLEN/8, x4, x1, x2)

inst_47534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:142602*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142602*0 + 3*686*FLEN/8, x4, x1, x2)

inst_47535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:142605*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142605*0 + 3*687*FLEN/8, x4, x1, x2)

inst_47536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:142608*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142608*0 + 3*688*FLEN/8, x4, x1, x2)

inst_47537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:142611*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142611*0 + 3*689*FLEN/8, x4, x1, x2)

inst_47538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:142614*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142614*0 + 3*690*FLEN/8, x4, x1, x2)

inst_47539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:142617*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142617*0 + 3*691*FLEN/8, x4, x1, x2)

inst_47540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:142620*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142620*0 + 3*692*FLEN/8, x4, x1, x2)

inst_47541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:142623*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142623*0 + 3*693*FLEN/8, x4, x1, x2)

inst_47542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:142626*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142626*0 + 3*694*FLEN/8, x4, x1, x2)

inst_47543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:142629*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142629*0 + 3*695*FLEN/8, x4, x1, x2)

inst_47544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:142632*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142632*0 + 3*696*FLEN/8, x4, x1, x2)

inst_47545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:142635*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142635*0 + 3*697*FLEN/8, x4, x1, x2)

inst_47546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:142638*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142638*0 + 3*698*FLEN/8, x4, x1, x2)

inst_47547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:142641*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142641*0 + 3*699*FLEN/8, x4, x1, x2)

inst_47548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:142644*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142644*0 + 3*700*FLEN/8, x4, x1, x2)

inst_47549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:142647*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142647*0 + 3*701*FLEN/8, x4, x1, x2)

inst_47550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:142650*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142650*0 + 3*702*FLEN/8, x4, x1, x2)

inst_47551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:142653*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142653*0 + 3*703*FLEN/8, x4, x1, x2)

inst_47552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:142656*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142656*0 + 3*704*FLEN/8, x4, x1, x2)

inst_47553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:142659*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142659*0 + 3*705*FLEN/8, x4, x1, x2)

inst_47554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:142662*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142662*0 + 3*706*FLEN/8, x4, x1, x2)

inst_47555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:142665*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142665*0 + 3*707*FLEN/8, x4, x1, x2)

inst_47556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:142668*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142668*0 + 3*708*FLEN/8, x4, x1, x2)

inst_47557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:142671*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142671*0 + 3*709*FLEN/8, x4, x1, x2)

inst_47558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:142674*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142674*0 + 3*710*FLEN/8, x4, x1, x2)

inst_47559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:142677*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142677*0 + 3*711*FLEN/8, x4, x1, x2)

inst_47560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:142680*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142680*0 + 3*712*FLEN/8, x4, x1, x2)

inst_47561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:142683*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142683*0 + 3*713*FLEN/8, x4, x1, x2)

inst_47562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:142686*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142686*0 + 3*714*FLEN/8, x4, x1, x2)

inst_47563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:142689*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142689*0 + 3*715*FLEN/8, x4, x1, x2)

inst_47564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:142692*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142692*0 + 3*716*FLEN/8, x4, x1, x2)

inst_47565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:142695*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142695*0 + 3*717*FLEN/8, x4, x1, x2)

inst_47566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:142698*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142698*0 + 3*718*FLEN/8, x4, x1, x2)

inst_47567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:142701*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142701*0 + 3*719*FLEN/8, x4, x1, x2)

inst_47568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:142704*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142704*0 + 3*720*FLEN/8, x4, x1, x2)

inst_47569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:142707*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142707*0 + 3*721*FLEN/8, x4, x1, x2)

inst_47570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:142710*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142710*0 + 3*722*FLEN/8, x4, x1, x2)

inst_47571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:142713*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142713*0 + 3*723*FLEN/8, x4, x1, x2)

inst_47572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:142716*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142716*0 + 3*724*FLEN/8, x4, x1, x2)

inst_47573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:142719*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142719*0 + 3*725*FLEN/8, x4, x1, x2)

inst_47574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:142722*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142722*0 + 3*726*FLEN/8, x4, x1, x2)

inst_47575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:142725*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142725*0 + 3*727*FLEN/8, x4, x1, x2)

inst_47576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:142728*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142728*0 + 3*728*FLEN/8, x4, x1, x2)

inst_47577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:142731*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142731*0 + 3*729*FLEN/8, x4, x1, x2)

inst_47578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:142734*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142734*0 + 3*730*FLEN/8, x4, x1, x2)

inst_47579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:142737*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142737*0 + 3*731*FLEN/8, x4, x1, x2)

inst_47580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:142740*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142740*0 + 3*732*FLEN/8, x4, x1, x2)

inst_47581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:142743*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142743*0 + 3*733*FLEN/8, x4, x1, x2)

inst_47582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:142746*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142746*0 + 3*734*FLEN/8, x4, x1, x2)

inst_47583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:142749*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142749*0 + 3*735*FLEN/8, x4, x1, x2)

inst_47584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:142752*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142752*0 + 3*736*FLEN/8, x4, x1, x2)

inst_47585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:142755*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142755*0 + 3*737*FLEN/8, x4, x1, x2)

inst_47586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:142758*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142758*0 + 3*738*FLEN/8, x4, x1, x2)

inst_47587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:142761*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142761*0 + 3*739*FLEN/8, x4, x1, x2)

inst_47588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:142764*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142764*0 + 3*740*FLEN/8, x4, x1, x2)

inst_47589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:142767*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142767*0 + 3*741*FLEN/8, x4, x1, x2)

inst_47590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:142770*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142770*0 + 3*742*FLEN/8, x4, x1, x2)

inst_47591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:142773*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142773*0 + 3*743*FLEN/8, x4, x1, x2)

inst_47592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:142776*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142776*0 + 3*744*FLEN/8, x4, x1, x2)

inst_47593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:142779*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142779*0 + 3*745*FLEN/8, x4, x1, x2)

inst_47594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:142782*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142782*0 + 3*746*FLEN/8, x4, x1, x2)

inst_47595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:142785*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142785*0 + 3*747*FLEN/8, x4, x1, x2)

inst_47596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:142788*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142788*0 + 3*748*FLEN/8, x4, x1, x2)

inst_47597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:142791*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142791*0 + 3*749*FLEN/8, x4, x1, x2)

inst_47598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:142794*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142794*0 + 3*750*FLEN/8, x4, x1, x2)

inst_47599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:142797*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142797*0 + 3*751*FLEN/8, x4, x1, x2)

inst_47600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:142800*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142800*0 + 3*752*FLEN/8, x4, x1, x2)

inst_47601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:142803*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142803*0 + 3*753*FLEN/8, x4, x1, x2)

inst_47602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:142806*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142806*0 + 3*754*FLEN/8, x4, x1, x2)

inst_47603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:142809*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142809*0 + 3*755*FLEN/8, x4, x1, x2)

inst_47604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:142812*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142812*0 + 3*756*FLEN/8, x4, x1, x2)

inst_47605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:142815*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142815*0 + 3*757*FLEN/8, x4, x1, x2)

inst_47606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:142818*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142818*0 + 3*758*FLEN/8, x4, x1, x2)

inst_47607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:142821*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142821*0 + 3*759*FLEN/8, x4, x1, x2)

inst_47608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:142824*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142824*0 + 3*760*FLEN/8, x4, x1, x2)

inst_47609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:142827*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142827*0 + 3*761*FLEN/8, x4, x1, x2)

inst_47610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:142830*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142830*0 + 3*762*FLEN/8, x4, x1, x2)

inst_47611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:142833*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142833*0 + 3*763*FLEN/8, x4, x1, x2)

inst_47612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:142836*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142836*0 + 3*764*FLEN/8, x4, x1, x2)

inst_47613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:142839*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142839*0 + 3*765*FLEN/8, x4, x1, x2)

inst_47614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:142842*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142842*0 + 3*766*FLEN/8, x4, x1, x2)

inst_47615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6d7615e1b591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d6d7615e1b591; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:142845*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142845*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427374796800,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427643232256,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427777449984,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427844558848,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427878113280,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427894890496,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427903279104,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427907473408,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427909570560,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427910619136,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911143424,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911405568,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911536640,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911602176,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911634944,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911651328,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911659520,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911663616,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911665664,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911666688,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667200,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667456,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667584,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667648,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667680,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667696,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667704,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667708,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667710,64,FLEN)
NAN_BOXED(6889688039367610645,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667711,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372672,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372673,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372675,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372679,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372687,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372703,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372735,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372799,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372927,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373183,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373695,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185374719,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185376767,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185380863,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185389055,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185405439,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185438207,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185503743,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185634815,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185896959,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424186421247,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424187469823,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424189566975,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424193761279,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424202149887,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424218927103,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424252481535,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424319590399,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424453808127,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424722243583,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494425259114495,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494426332856319,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494428480339967,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494432775307263,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494441365241855,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494458545111039,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494492904849407,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494561624326143,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494699063279615,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494973941186559,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376495523697000447,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376496623208628223,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376498822231883775,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376503220278394879,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376512016371417087,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376529608557461503,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376564792929550335,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376635161673727999,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376775899162083327,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377057374138793983,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377620324092215295,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057919,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057920,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9379872123905900544,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380435073859321856,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380716548836032512,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380857286324387840,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380927655068565504,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380962839440654336,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380980431626698752,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380989227719720960,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380993625766232064,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380995824789487616,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380996924301115392,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997474056929280,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997748934836224,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997886373789696,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997955093266432,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997989453004800,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998006632873984,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998015222808576,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998019517775872,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998021665259520,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998022739001344,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023275872256,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023544307712,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023678525440,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023745634304,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023779188736,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023795965952,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023804354560,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023808548864,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023810646016,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023811694592,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812218880,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812481024,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812612096,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812677632,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812710400,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812726784,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812734976,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812739072,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812741120,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742144,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742656,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742912,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743040,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743104,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743136,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743152,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743160,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743164,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743166,64,FLEN)
NAN_BOXED(6889689147495870445,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743167,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6889703260104498313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6889710934284201205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384512,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384513,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384515,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384519,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384527,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384543,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384575,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384639,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488384767,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488385023,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488385535,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488386559,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488388607,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488392703,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488400895,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488417279,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488450047,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488515583,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488646655,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828488908799,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828489433087,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828490481663,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828492578815,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828496773119,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828505161727,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828521938943,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828555493375,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828622602239,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088828756819967,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088829025255423,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088829562126335,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088830635868159,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088832783351807,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088837078319103,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088845668253695,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088862848122879,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088897207861247,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490088965927337983,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490089103366291455,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490089378244198399,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490089928000012287,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490091027511640063,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490093226534895615,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490097624581406719,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490106420674428927,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490124012860473343,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490159197232562175,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490229565976739839,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490370303465095167,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4490651778441805823,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4491214728395227135,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4492340628302069759,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4492340628302069760,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4493466528208912384,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494029478162333696,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494310953139044352,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494451690627399680,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494522059371577344,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494557243743666176,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494574835929710592,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494583632022732800,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494588030069243904,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494590229092499456,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494591328604127232,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494591878359941120,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592153237848064,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592290676801536,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592359396278272,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592393756016640,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592410935885824,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592419525820416,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592423820787712,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592425968271360,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592427042013184,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592427578884096,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592427847319552,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592427981537280,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428048646144,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428082200576,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428098977792,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428107366400,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428111560704,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428113657856,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428114706432,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115230720,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115492864,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115623936,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115689472,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115722240,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115738624,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115746816,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115750912,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115752960,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115753984,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754496,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754752,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754880,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754944,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754976,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115754992,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115755000,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115755004,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115755006,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4494592428115755007,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889733454106310957,64,FLEN)
NAN_BOXED(2324280774949697305,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570240,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570241,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570243,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570247,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570255,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570271,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570303,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570367,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570495,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890570751,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890571263,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890572287,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890574335,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890578431,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890586623,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890603007,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890635775,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890701311,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857890832383,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857891094527,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857891618815,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857892667391,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857894764543,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857898958847,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857907347455,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857924124671,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532857957679103,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532858024787967,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532858159005695,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532858427441151,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532858964312063,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532860038053887,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532862185537535,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532866480504831,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532875070439423,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532892250308607,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532926610046975,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803532995329523711,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803533132768477183,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803533407646384127,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803533957402198015,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803535056913825791,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803537255937081343,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803541653983592447,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803550450076614655,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803568042262659071,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803603226634747903,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803673595378925567,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13803814332867280895,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13804095807843991551,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13804658757797412863,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13805784657704255487,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13805784657704255488,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13806910557611098112,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13807473507564519424,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13807754982541230080,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13807895720029585408,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13807966088773763072,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808001273145851904,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808018865331896320,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808027661424918528,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808032059471429632,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808034258494685184,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808035358006312960,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808035907762126848,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036182640033792,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036320078987264,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036388798464000,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036423158202368,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036440338071552,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036448928006144,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036453222973440,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036455370457088,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036456444198912,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036456981069824,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457249505280,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457383723008,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457450831872,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457484386304,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457501163520,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457509552128,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457513746432,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457515843584,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457516892160,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517416448,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517678592,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517809664,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517875200,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517907968,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517924352,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517932544,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517936640,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517938688,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517939712,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940224,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940480,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940608,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940672,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940704,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940720,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940728,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940732,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940734,64,FLEN)
NAN_BOXED(6889742506343107681,64,FLEN)
NAN_BOXED(11516122203277392210,64,FLEN)
NAN_BOXED(13808036457517940735,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6889783358887409041,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
