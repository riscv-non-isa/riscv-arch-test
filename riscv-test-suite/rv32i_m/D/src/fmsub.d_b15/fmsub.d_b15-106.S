
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_80640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:241920*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241920*0 + 3*0*FLEN/8, x4, x1, x2)

inst_80641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:241923*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241923*0 + 3*1*FLEN/8, x4, x1, x2)

inst_80642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:241926*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241926*0 + 3*2*FLEN/8, x4, x1, x2)

inst_80643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:241929*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241929*0 + 3*3*FLEN/8, x4, x1, x2)

inst_80644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:241932*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241932*0 + 3*4*FLEN/8, x4, x1, x2)

inst_80645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:241935*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241935*0 + 3*5*FLEN/8, x4, x1, x2)

inst_80646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:241938*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241938*0 + 3*6*FLEN/8, x4, x1, x2)

inst_80647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:241941*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241941*0 + 3*7*FLEN/8, x4, x1, x2)

inst_80648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:241944*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241944*0 + 3*8*FLEN/8, x4, x1, x2)

inst_80649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:241947*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241947*0 + 3*9*FLEN/8, x4, x1, x2)

inst_80650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:241950*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241950*0 + 3*10*FLEN/8, x4, x1, x2)

inst_80651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:241953*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241953*0 + 3*11*FLEN/8, x4, x1, x2)

inst_80652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:241956*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241956*0 + 3*12*FLEN/8, x4, x1, x2)

inst_80653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:241959*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241959*0 + 3*13*FLEN/8, x4, x1, x2)

inst_80654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:241962*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241962*0 + 3*14*FLEN/8, x4, x1, x2)

inst_80655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:241965*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241965*0 + 3*15*FLEN/8, x4, x1, x2)

inst_80656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000000000; valaddr_reg:x3; val_offset:241968*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241968*0 + 3*16*FLEN/8, x4, x1, x2)

inst_80657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000000001; valaddr_reg:x3; val_offset:241971*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241971*0 + 3*17*FLEN/8, x4, x1, x2)

inst_80658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000000003; valaddr_reg:x3; val_offset:241974*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241974*0 + 3*18*FLEN/8, x4, x1, x2)

inst_80659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000000007; valaddr_reg:x3; val_offset:241977*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241977*0 + 3*19*FLEN/8, x4, x1, x2)

inst_80660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000000000f; valaddr_reg:x3; val_offset:241980*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241980*0 + 3*20*FLEN/8, x4, x1, x2)

inst_80661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000000001f; valaddr_reg:x3; val_offset:241983*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241983*0 + 3*21*FLEN/8, x4, x1, x2)

inst_80662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000000003f; valaddr_reg:x3; val_offset:241986*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241986*0 + 3*22*FLEN/8, x4, x1, x2)

inst_80663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000000007f; valaddr_reg:x3; val_offset:241989*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241989*0 + 3*23*FLEN/8, x4, x1, x2)

inst_80664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000000000ff; valaddr_reg:x3; val_offset:241992*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241992*0 + 3*24*FLEN/8, x4, x1, x2)

inst_80665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000000001ff; valaddr_reg:x3; val_offset:241995*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241995*0 + 3*25*FLEN/8, x4, x1, x2)

inst_80666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000000003ff; valaddr_reg:x3; val_offset:241998*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241998*0 + 3*26*FLEN/8, x4, x1, x2)

inst_80667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000000007ff; valaddr_reg:x3; val_offset:242001*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242001*0 + 3*27*FLEN/8, x4, x1, x2)

inst_80668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000000fff; valaddr_reg:x3; val_offset:242004*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242004*0 + 3*28*FLEN/8, x4, x1, x2)

inst_80669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000001fff; valaddr_reg:x3; val_offset:242007*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242007*0 + 3*29*FLEN/8, x4, x1, x2)

inst_80670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000003fff; valaddr_reg:x3; val_offset:242010*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242010*0 + 3*30*FLEN/8, x4, x1, x2)

inst_80671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000007fff; valaddr_reg:x3; val_offset:242013*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242013*0 + 3*31*FLEN/8, x4, x1, x2)

inst_80672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000000ffff; valaddr_reg:x3; val_offset:242016*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242016*0 + 3*32*FLEN/8, x4, x1, x2)

inst_80673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000001ffff; valaddr_reg:x3; val_offset:242019*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242019*0 + 3*33*FLEN/8, x4, x1, x2)

inst_80674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000003ffff; valaddr_reg:x3; val_offset:242022*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242022*0 + 3*34*FLEN/8, x4, x1, x2)

inst_80675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000007ffff; valaddr_reg:x3; val_offset:242025*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242025*0 + 3*35*FLEN/8, x4, x1, x2)

inst_80676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000000fffff; valaddr_reg:x3; val_offset:242028*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242028*0 + 3*36*FLEN/8, x4, x1, x2)

inst_80677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000001fffff; valaddr_reg:x3; val_offset:242031*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242031*0 + 3*37*FLEN/8, x4, x1, x2)

inst_80678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000003fffff; valaddr_reg:x3; val_offset:242034*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242034*0 + 3*38*FLEN/8, x4, x1, x2)

inst_80679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000007fffff; valaddr_reg:x3; val_offset:242037*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242037*0 + 3*39*FLEN/8, x4, x1, x2)

inst_80680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000000ffffff; valaddr_reg:x3; val_offset:242040*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242040*0 + 3*40*FLEN/8, x4, x1, x2)

inst_80681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000001ffffff; valaddr_reg:x3; val_offset:242043*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242043*0 + 3*41*FLEN/8, x4, x1, x2)

inst_80682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000003ffffff; valaddr_reg:x3; val_offset:242046*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242046*0 + 3*42*FLEN/8, x4, x1, x2)

inst_80683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000007ffffff; valaddr_reg:x3; val_offset:242049*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242049*0 + 3*43*FLEN/8, x4, x1, x2)

inst_80684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000000fffffff; valaddr_reg:x3; val_offset:242052*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242052*0 + 3*44*FLEN/8, x4, x1, x2)

inst_80685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000001fffffff; valaddr_reg:x3; val_offset:242055*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242055*0 + 3*45*FLEN/8, x4, x1, x2)

inst_80686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000003fffffff; valaddr_reg:x3; val_offset:242058*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242058*0 + 3*46*FLEN/8, x4, x1, x2)

inst_80687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000007fffffff; valaddr_reg:x3; val_offset:242061*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242061*0 + 3*47*FLEN/8, x4, x1, x2)

inst_80688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900000ffffffff; valaddr_reg:x3; val_offset:242064*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242064*0 + 3*48*FLEN/8, x4, x1, x2)

inst_80689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900001ffffffff; valaddr_reg:x3; val_offset:242067*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242067*0 + 3*49*FLEN/8, x4, x1, x2)

inst_80690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900003ffffffff; valaddr_reg:x3; val_offset:242070*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242070*0 + 3*50*FLEN/8, x4, x1, x2)

inst_80691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900007ffffffff; valaddr_reg:x3; val_offset:242073*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242073*0 + 3*51*FLEN/8, x4, x1, x2)

inst_80692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090000fffffffff; valaddr_reg:x3; val_offset:242076*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242076*0 + 3*52*FLEN/8, x4, x1, x2)

inst_80693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090001fffffffff; valaddr_reg:x3; val_offset:242079*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242079*0 + 3*53*FLEN/8, x4, x1, x2)

inst_80694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090003fffffffff; valaddr_reg:x3; val_offset:242082*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242082*0 + 3*54*FLEN/8, x4, x1, x2)

inst_80695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090007fffffffff; valaddr_reg:x3; val_offset:242085*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242085*0 + 3*55*FLEN/8, x4, x1, x2)

inst_80696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809000ffffffffff; valaddr_reg:x3; val_offset:242088*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242088*0 + 3*56*FLEN/8, x4, x1, x2)

inst_80697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809001ffffffffff; valaddr_reg:x3; val_offset:242091*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242091*0 + 3*57*FLEN/8, x4, x1, x2)

inst_80698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809003ffffffffff; valaddr_reg:x3; val_offset:242094*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242094*0 + 3*58*FLEN/8, x4, x1, x2)

inst_80699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809007ffffffffff; valaddr_reg:x3; val_offset:242097*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242097*0 + 3*59*FLEN/8, x4, x1, x2)

inst_80700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80900fffffffffff; valaddr_reg:x3; val_offset:242100*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242100*0 + 3*60*FLEN/8, x4, x1, x2)

inst_80701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80901fffffffffff; valaddr_reg:x3; val_offset:242103*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242103*0 + 3*61*FLEN/8, x4, x1, x2)

inst_80702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80903fffffffffff; valaddr_reg:x3; val_offset:242106*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242106*0 + 3*62*FLEN/8, x4, x1, x2)

inst_80703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x80907fffffffffff; valaddr_reg:x3; val_offset:242109*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242109*0 + 3*63*FLEN/8, x4, x1, x2)

inst_80704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8090ffffffffffff; valaddr_reg:x3; val_offset:242112*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242112*0 + 3*64*FLEN/8, x4, x1, x2)

inst_80705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8091ffffffffffff; valaddr_reg:x3; val_offset:242115*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242115*0 + 3*65*FLEN/8, x4, x1, x2)

inst_80706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8093ffffffffffff; valaddr_reg:x3; val_offset:242118*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242118*0 + 3*66*FLEN/8, x4, x1, x2)

inst_80707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8097ffffffffffff; valaddr_reg:x3; val_offset:242121*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242121*0 + 3*67*FLEN/8, x4, x1, x2)

inst_80708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8098000000000000; valaddr_reg:x3; val_offset:242124*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242124*0 + 3*68*FLEN/8, x4, x1, x2)

inst_80709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809c000000000000; valaddr_reg:x3; val_offset:242127*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242127*0 + 3*69*FLEN/8, x4, x1, x2)

inst_80710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809e000000000000; valaddr_reg:x3; val_offset:242130*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242130*0 + 3*70*FLEN/8, x4, x1, x2)

inst_80711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809f000000000000; valaddr_reg:x3; val_offset:242133*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242133*0 + 3*71*FLEN/8, x4, x1, x2)

inst_80712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809f800000000000; valaddr_reg:x3; val_offset:242136*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242136*0 + 3*72*FLEN/8, x4, x1, x2)

inst_80713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fc00000000000; valaddr_reg:x3; val_offset:242139*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242139*0 + 3*73*FLEN/8, x4, x1, x2)

inst_80714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fe00000000000; valaddr_reg:x3; val_offset:242142*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242142*0 + 3*74*FLEN/8, x4, x1, x2)

inst_80715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ff00000000000; valaddr_reg:x3; val_offset:242145*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242145*0 + 3*75*FLEN/8, x4, x1, x2)

inst_80716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ff80000000000; valaddr_reg:x3; val_offset:242148*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242148*0 + 3*76*FLEN/8, x4, x1, x2)

inst_80717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffc0000000000; valaddr_reg:x3; val_offset:242151*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242151*0 + 3*77*FLEN/8, x4, x1, x2)

inst_80718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffe0000000000; valaddr_reg:x3; val_offset:242154*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242154*0 + 3*78*FLEN/8, x4, x1, x2)

inst_80719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fff0000000000; valaddr_reg:x3; val_offset:242157*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242157*0 + 3*79*FLEN/8, x4, x1, x2)

inst_80720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fff8000000000; valaddr_reg:x3; val_offset:242160*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242160*0 + 3*80*FLEN/8, x4, x1, x2)

inst_80721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffc000000000; valaddr_reg:x3; val_offset:242163*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242163*0 + 3*81*FLEN/8, x4, x1, x2)

inst_80722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffe000000000; valaddr_reg:x3; val_offset:242166*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242166*0 + 3*82*FLEN/8, x4, x1, x2)

inst_80723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffff000000000; valaddr_reg:x3; val_offset:242169*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242169*0 + 3*83*FLEN/8, x4, x1, x2)

inst_80724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffff800000000; valaddr_reg:x3; val_offset:242172*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242172*0 + 3*84*FLEN/8, x4, x1, x2)

inst_80725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffc00000000; valaddr_reg:x3; val_offset:242175*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242175*0 + 3*85*FLEN/8, x4, x1, x2)

inst_80726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffe00000000; valaddr_reg:x3; val_offset:242178*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242178*0 + 3*86*FLEN/8, x4, x1, x2)

inst_80727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffff00000000; valaddr_reg:x3; val_offset:242181*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242181*0 + 3*87*FLEN/8, x4, x1, x2)

inst_80728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffff80000000; valaddr_reg:x3; val_offset:242184*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242184*0 + 3*88*FLEN/8, x4, x1, x2)

inst_80729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffc0000000; valaddr_reg:x3; val_offset:242187*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242187*0 + 3*89*FLEN/8, x4, x1, x2)

inst_80730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffe0000000; valaddr_reg:x3; val_offset:242190*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242190*0 + 3*90*FLEN/8, x4, x1, x2)

inst_80731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffff0000000; valaddr_reg:x3; val_offset:242193*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242193*0 + 3*91*FLEN/8, x4, x1, x2)

inst_80732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffff8000000; valaddr_reg:x3; val_offset:242196*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242196*0 + 3*92*FLEN/8, x4, x1, x2)

inst_80733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffc000000; valaddr_reg:x3; val_offset:242199*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242199*0 + 3*93*FLEN/8, x4, x1, x2)

inst_80734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffe000000; valaddr_reg:x3; val_offset:242202*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242202*0 + 3*94*FLEN/8, x4, x1, x2)

inst_80735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffff000000; valaddr_reg:x3; val_offset:242205*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242205*0 + 3*95*FLEN/8, x4, x1, x2)

inst_80736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffff800000; valaddr_reg:x3; val_offset:242208*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242208*0 + 3*96*FLEN/8, x4, x1, x2)

inst_80737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffc00000; valaddr_reg:x3; val_offset:242211*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242211*0 + 3*97*FLEN/8, x4, x1, x2)

inst_80738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffe00000; valaddr_reg:x3; val_offset:242214*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242214*0 + 3*98*FLEN/8, x4, x1, x2)

inst_80739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffff00000; valaddr_reg:x3; val_offset:242217*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242217*0 + 3*99*FLEN/8, x4, x1, x2)

inst_80740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffff80000; valaddr_reg:x3; val_offset:242220*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242220*0 + 3*100*FLEN/8, x4, x1, x2)

inst_80741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffc0000; valaddr_reg:x3; val_offset:242223*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242223*0 + 3*101*FLEN/8, x4, x1, x2)

inst_80742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffe0000; valaddr_reg:x3; val_offset:242226*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242226*0 + 3*102*FLEN/8, x4, x1, x2)

inst_80743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffff0000; valaddr_reg:x3; val_offset:242229*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242229*0 + 3*103*FLEN/8, x4, x1, x2)

inst_80744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffff8000; valaddr_reg:x3; val_offset:242232*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242232*0 + 3*104*FLEN/8, x4, x1, x2)

inst_80745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffc000; valaddr_reg:x3; val_offset:242235*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242235*0 + 3*105*FLEN/8, x4, x1, x2)

inst_80746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffe000; valaddr_reg:x3; val_offset:242238*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242238*0 + 3*106*FLEN/8, x4, x1, x2)

inst_80747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffff000; valaddr_reg:x3; val_offset:242241*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242241*0 + 3*107*FLEN/8, x4, x1, x2)

inst_80748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffff800; valaddr_reg:x3; val_offset:242244*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242244*0 + 3*108*FLEN/8, x4, x1, x2)

inst_80749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffc00; valaddr_reg:x3; val_offset:242247*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242247*0 + 3*109*FLEN/8, x4, x1, x2)

inst_80750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffe00; valaddr_reg:x3; val_offset:242250*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242250*0 + 3*110*FLEN/8, x4, x1, x2)

inst_80751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffff00; valaddr_reg:x3; val_offset:242253*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242253*0 + 3*111*FLEN/8, x4, x1, x2)

inst_80752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffff80; valaddr_reg:x3; val_offset:242256*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242256*0 + 3*112*FLEN/8, x4, x1, x2)

inst_80753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffffc0; valaddr_reg:x3; val_offset:242259*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242259*0 + 3*113*FLEN/8, x4, x1, x2)

inst_80754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffffe0; valaddr_reg:x3; val_offset:242262*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242262*0 + 3*114*FLEN/8, x4, x1, x2)

inst_80755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffff0; valaddr_reg:x3; val_offset:242265*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242265*0 + 3*115*FLEN/8, x4, x1, x2)

inst_80756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffff8; valaddr_reg:x3; val_offset:242268*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242268*0 + 3*116*FLEN/8, x4, x1, x2)

inst_80757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffffc; valaddr_reg:x3; val_offset:242271*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242271*0 + 3*117*FLEN/8, x4, x1, x2)

inst_80758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809ffffffffffffe; valaddr_reg:x3; val_offset:242274*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242274*0 + 3*118*FLEN/8, x4, x1, x2)

inst_80759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x809fffffffffffff; valaddr_reg:x3; val_offset:242277*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242277*0 + 3*119*FLEN/8, x4, x1, x2)

inst_80760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:242280*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242280*0 + 3*120*FLEN/8, x4, x1, x2)

inst_80761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:242283*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242283*0 + 3*121*FLEN/8, x4, x1, x2)

inst_80762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:242286*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242286*0 + 3*122*FLEN/8, x4, x1, x2)

inst_80763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:242289*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242289*0 + 3*123*FLEN/8, x4, x1, x2)

inst_80764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:242292*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242292*0 + 3*124*FLEN/8, x4, x1, x2)

inst_80765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:242295*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242295*0 + 3*125*FLEN/8, x4, x1, x2)

inst_80766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:242298*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242298*0 + 3*126*FLEN/8, x4, x1, x2)

inst_80767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:242301*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242301*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_80768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:242304*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242304*0 + 3*128*FLEN/8, x4, x1, x2)

inst_80769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:242307*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242307*0 + 3*129*FLEN/8, x4, x1, x2)

inst_80770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:242310*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242310*0 + 3*130*FLEN/8, x4, x1, x2)

inst_80771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:242313*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242313*0 + 3*131*FLEN/8, x4, x1, x2)

inst_80772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:242316*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242316*0 + 3*132*FLEN/8, x4, x1, x2)

inst_80773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:242319*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242319*0 + 3*133*FLEN/8, x4, x1, x2)

inst_80774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:242322*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242322*0 + 3*134*FLEN/8, x4, x1, x2)

inst_80775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:242325*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242325*0 + 3*135*FLEN/8, x4, x1, x2)

inst_80776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:242328*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242328*0 + 3*136*FLEN/8, x4, x1, x2)

inst_80777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:242331*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242331*0 + 3*137*FLEN/8, x4, x1, x2)

inst_80778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:242334*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242334*0 + 3*138*FLEN/8, x4, x1, x2)

inst_80779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:242337*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242337*0 + 3*139*FLEN/8, x4, x1, x2)

inst_80780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:242340*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242340*0 + 3*140*FLEN/8, x4, x1, x2)

inst_80781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:242343*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242343*0 + 3*141*FLEN/8, x4, x1, x2)

inst_80782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:242346*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242346*0 + 3*142*FLEN/8, x4, x1, x2)

inst_80783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:242349*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242349*0 + 3*143*FLEN/8, x4, x1, x2)

inst_80784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:242352*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242352*0 + 3*144*FLEN/8, x4, x1, x2)

inst_80785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:242355*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242355*0 + 3*145*FLEN/8, x4, x1, x2)

inst_80786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:242358*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242358*0 + 3*146*FLEN/8, x4, x1, x2)

inst_80787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:242361*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242361*0 + 3*147*FLEN/8, x4, x1, x2)

inst_80788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:242364*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242364*0 + 3*148*FLEN/8, x4, x1, x2)

inst_80789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:242367*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242367*0 + 3*149*FLEN/8, x4, x1, x2)

inst_80790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:242370*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242370*0 + 3*150*FLEN/8, x4, x1, x2)

inst_80791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:242373*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242373*0 + 3*151*FLEN/8, x4, x1, x2)

inst_80792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:242376*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242376*0 + 3*152*FLEN/8, x4, x1, x2)

inst_80793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:242379*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242379*0 + 3*153*FLEN/8, x4, x1, x2)

inst_80794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:242382*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242382*0 + 3*154*FLEN/8, x4, x1, x2)

inst_80795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:242385*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242385*0 + 3*155*FLEN/8, x4, x1, x2)

inst_80796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:242388*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242388*0 + 3*156*FLEN/8, x4, x1, x2)

inst_80797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:242391*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242391*0 + 3*157*FLEN/8, x4, x1, x2)

inst_80798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:242394*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242394*0 + 3*158*FLEN/8, x4, x1, x2)

inst_80799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:242397*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242397*0 + 3*159*FLEN/8, x4, x1, x2)

inst_80800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:242400*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242400*0 + 3*160*FLEN/8, x4, x1, x2)

inst_80801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:242403*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242403*0 + 3*161*FLEN/8, x4, x1, x2)

inst_80802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:242406*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242406*0 + 3*162*FLEN/8, x4, x1, x2)

inst_80803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:242409*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242409*0 + 3*163*FLEN/8, x4, x1, x2)

inst_80804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:242412*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242412*0 + 3*164*FLEN/8, x4, x1, x2)

inst_80805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:242415*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242415*0 + 3*165*FLEN/8, x4, x1, x2)

inst_80806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:242418*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242418*0 + 3*166*FLEN/8, x4, x1, x2)

inst_80807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:242421*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242421*0 + 3*167*FLEN/8, x4, x1, x2)

inst_80808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:242424*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242424*0 + 3*168*FLEN/8, x4, x1, x2)

inst_80809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:242427*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242427*0 + 3*169*FLEN/8, x4, x1, x2)

inst_80810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:242430*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242430*0 + 3*170*FLEN/8, x4, x1, x2)

inst_80811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:242433*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242433*0 + 3*171*FLEN/8, x4, x1, x2)

inst_80812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:242436*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242436*0 + 3*172*FLEN/8, x4, x1, x2)

inst_80813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:242439*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242439*0 + 3*173*FLEN/8, x4, x1, x2)

inst_80814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:242442*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242442*0 + 3*174*FLEN/8, x4, x1, x2)

inst_80815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:242445*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242445*0 + 3*175*FLEN/8, x4, x1, x2)

inst_80816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:242448*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242448*0 + 3*176*FLEN/8, x4, x1, x2)

inst_80817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:242451*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242451*0 + 3*177*FLEN/8, x4, x1, x2)

inst_80818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:242454*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242454*0 + 3*178*FLEN/8, x4, x1, x2)

inst_80819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:242457*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242457*0 + 3*179*FLEN/8, x4, x1, x2)

inst_80820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:242460*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242460*0 + 3*180*FLEN/8, x4, x1, x2)

inst_80821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:242463*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242463*0 + 3*181*FLEN/8, x4, x1, x2)

inst_80822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:242466*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242466*0 + 3*182*FLEN/8, x4, x1, x2)

inst_80823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:242469*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242469*0 + 3*183*FLEN/8, x4, x1, x2)

inst_80824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:242472*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242472*0 + 3*184*FLEN/8, x4, x1, x2)

inst_80825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:242475*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242475*0 + 3*185*FLEN/8, x4, x1, x2)

inst_80826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:242478*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242478*0 + 3*186*FLEN/8, x4, x1, x2)

inst_80827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:242481*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242481*0 + 3*187*FLEN/8, x4, x1, x2)

inst_80828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:242484*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242484*0 + 3*188*FLEN/8, x4, x1, x2)

inst_80829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:242487*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242487*0 + 3*189*FLEN/8, x4, x1, x2)

inst_80830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:242490*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242490*0 + 3*190*FLEN/8, x4, x1, x2)

inst_80831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:242493*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242493*0 + 3*191*FLEN/8, x4, x1, x2)

inst_80832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:242496*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242496*0 + 3*192*FLEN/8, x4, x1, x2)

inst_80833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:242499*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242499*0 + 3*193*FLEN/8, x4, x1, x2)

inst_80834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:242502*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242502*0 + 3*194*FLEN/8, x4, x1, x2)

inst_80835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:242505*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242505*0 + 3*195*FLEN/8, x4, x1, x2)

inst_80836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:242508*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242508*0 + 3*196*FLEN/8, x4, x1, x2)

inst_80837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:242511*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242511*0 + 3*197*FLEN/8, x4, x1, x2)

inst_80838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:242514*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242514*0 + 3*198*FLEN/8, x4, x1, x2)

inst_80839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:242517*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242517*0 + 3*199*FLEN/8, x4, x1, x2)

inst_80840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:242520*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242520*0 + 3*200*FLEN/8, x4, x1, x2)

inst_80841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:242523*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242523*0 + 3*201*FLEN/8, x4, x1, x2)

inst_80842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:242526*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242526*0 + 3*202*FLEN/8, x4, x1, x2)

inst_80843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:242529*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242529*0 + 3*203*FLEN/8, x4, x1, x2)

inst_80844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:242532*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242532*0 + 3*204*FLEN/8, x4, x1, x2)

inst_80845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:242535*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242535*0 + 3*205*FLEN/8, x4, x1, x2)

inst_80846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:242538*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242538*0 + 3*206*FLEN/8, x4, x1, x2)

inst_80847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:242541*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242541*0 + 3*207*FLEN/8, x4, x1, x2)

inst_80848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:242544*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242544*0 + 3*208*FLEN/8, x4, x1, x2)

inst_80849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:242547*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242547*0 + 3*209*FLEN/8, x4, x1, x2)

inst_80850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:242550*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242550*0 + 3*210*FLEN/8, x4, x1, x2)

inst_80851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:242553*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242553*0 + 3*211*FLEN/8, x4, x1, x2)

inst_80852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:242556*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242556*0 + 3*212*FLEN/8, x4, x1, x2)

inst_80853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:242559*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242559*0 + 3*213*FLEN/8, x4, x1, x2)

inst_80854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:242562*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242562*0 + 3*214*FLEN/8, x4, x1, x2)

inst_80855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:242565*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242565*0 + 3*215*FLEN/8, x4, x1, x2)

inst_80856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:242568*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242568*0 + 3*216*FLEN/8, x4, x1, x2)

inst_80857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:242571*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242571*0 + 3*217*FLEN/8, x4, x1, x2)

inst_80858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:242574*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242574*0 + 3*218*FLEN/8, x4, x1, x2)

inst_80859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:242577*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242577*0 + 3*219*FLEN/8, x4, x1, x2)

inst_80860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:242580*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242580*0 + 3*220*FLEN/8, x4, x1, x2)

inst_80861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:242583*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242583*0 + 3*221*FLEN/8, x4, x1, x2)

inst_80862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:242586*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242586*0 + 3*222*FLEN/8, x4, x1, x2)

inst_80863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:242589*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242589*0 + 3*223*FLEN/8, x4, x1, x2)

inst_80864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:242592*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242592*0 + 3*224*FLEN/8, x4, x1, x2)

inst_80865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:242595*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242595*0 + 3*225*FLEN/8, x4, x1, x2)

inst_80866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:242598*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242598*0 + 3*226*FLEN/8, x4, x1, x2)

inst_80867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:242601*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242601*0 + 3*227*FLEN/8, x4, x1, x2)

inst_80868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:242604*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242604*0 + 3*228*FLEN/8, x4, x1, x2)

inst_80869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:242607*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242607*0 + 3*229*FLEN/8, x4, x1, x2)

inst_80870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:242610*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242610*0 + 3*230*FLEN/8, x4, x1, x2)

inst_80871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:242613*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242613*0 + 3*231*FLEN/8, x4, x1, x2)

inst_80872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:242616*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242616*0 + 3*232*FLEN/8, x4, x1, x2)

inst_80873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:242619*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242619*0 + 3*233*FLEN/8, x4, x1, x2)

inst_80874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:242622*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242622*0 + 3*234*FLEN/8, x4, x1, x2)

inst_80875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:242625*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242625*0 + 3*235*FLEN/8, x4, x1, x2)

inst_80876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:242628*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242628*0 + 3*236*FLEN/8, x4, x1, x2)

inst_80877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:242631*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242631*0 + 3*237*FLEN/8, x4, x1, x2)

inst_80878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:242634*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242634*0 + 3*238*FLEN/8, x4, x1, x2)

inst_80879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:242637*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242637*0 + 3*239*FLEN/8, x4, x1, x2)

inst_80880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:242640*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242640*0 + 3*240*FLEN/8, x4, x1, x2)

inst_80881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:242643*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242643*0 + 3*241*FLEN/8, x4, x1, x2)

inst_80882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:242646*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242646*0 + 3*242*FLEN/8, x4, x1, x2)

inst_80883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:242649*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242649*0 + 3*243*FLEN/8, x4, x1, x2)

inst_80884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:242652*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242652*0 + 3*244*FLEN/8, x4, x1, x2)

inst_80885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa894eb52d7a53a; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:242655*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242655*0 + 3*245*FLEN/8, x4, x1, x2)

inst_80886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:242658*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242658*0 + 3*246*FLEN/8, x4, x1, x2)

inst_80887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:242661*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242661*0 + 3*247*FLEN/8, x4, x1, x2)

inst_80888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:242664*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242664*0 + 3*248*FLEN/8, x4, x1, x2)

inst_80889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:242667*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242667*0 + 3*249*FLEN/8, x4, x1, x2)

inst_80890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:242670*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242670*0 + 3*250*FLEN/8, x4, x1, x2)

inst_80891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:242673*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242673*0 + 3*251*FLEN/8, x4, x1, x2)

inst_80892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:242676*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242676*0 + 3*252*FLEN/8, x4, x1, x2)

inst_80893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:242679*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242679*0 + 3*253*FLEN/8, x4, x1, x2)

inst_80894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:242682*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242682*0 + 3*254*FLEN/8, x4, x1, x2)

inst_80895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:242685*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242685*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_80896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:242688*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242688*0 + 3*256*FLEN/8, x4, x1, x2)

inst_80897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:242691*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242691*0 + 3*257*FLEN/8, x4, x1, x2)

inst_80898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:242694*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242694*0 + 3*258*FLEN/8, x4, x1, x2)

inst_80899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:242697*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242697*0 + 3*259*FLEN/8, x4, x1, x2)

inst_80900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:242700*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242700*0 + 3*260*FLEN/8, x4, x1, x2)

inst_80901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:242703*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242703*0 + 3*261*FLEN/8, x4, x1, x2)

inst_80902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:242706*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242706*0 + 3*262*FLEN/8, x4, x1, x2)

inst_80903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:242709*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242709*0 + 3*263*FLEN/8, x4, x1, x2)

inst_80904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:242712*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242712*0 + 3*264*FLEN/8, x4, x1, x2)

inst_80905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:242715*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242715*0 + 3*265*FLEN/8, x4, x1, x2)

inst_80906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:242718*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242718*0 + 3*266*FLEN/8, x4, x1, x2)

inst_80907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:242721*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242721*0 + 3*267*FLEN/8, x4, x1, x2)

inst_80908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:242724*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242724*0 + 3*268*FLEN/8, x4, x1, x2)

inst_80909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:242727*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242727*0 + 3*269*FLEN/8, x4, x1, x2)

inst_80910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:242730*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242730*0 + 3*270*FLEN/8, x4, x1, x2)

inst_80911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:242733*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242733*0 + 3*271*FLEN/8, x4, x1, x2)

inst_80912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:242736*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242736*0 + 3*272*FLEN/8, x4, x1, x2)

inst_80913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:242739*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242739*0 + 3*273*FLEN/8, x4, x1, x2)

inst_80914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:242742*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242742*0 + 3*274*FLEN/8, x4, x1, x2)

inst_80915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:242745*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242745*0 + 3*275*FLEN/8, x4, x1, x2)

inst_80916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:242748*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242748*0 + 3*276*FLEN/8, x4, x1, x2)

inst_80917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:242751*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242751*0 + 3*277*FLEN/8, x4, x1, x2)

inst_80918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:242754*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242754*0 + 3*278*FLEN/8, x4, x1, x2)

inst_80919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:242757*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242757*0 + 3*279*FLEN/8, x4, x1, x2)

inst_80920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:242760*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242760*0 + 3*280*FLEN/8, x4, x1, x2)

inst_80921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:242763*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242763*0 + 3*281*FLEN/8, x4, x1, x2)

inst_80922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:242766*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242766*0 + 3*282*FLEN/8, x4, x1, x2)

inst_80923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:242769*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242769*0 + 3*283*FLEN/8, x4, x1, x2)

inst_80924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:242772*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242772*0 + 3*284*FLEN/8, x4, x1, x2)

inst_80925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:242775*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242775*0 + 3*285*FLEN/8, x4, x1, x2)

inst_80926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:242778*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242778*0 + 3*286*FLEN/8, x4, x1, x2)

inst_80927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:242781*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242781*0 + 3*287*FLEN/8, x4, x1, x2)

inst_80928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:242784*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242784*0 + 3*288*FLEN/8, x4, x1, x2)

inst_80929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:242787*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242787*0 + 3*289*FLEN/8, x4, x1, x2)

inst_80930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:242790*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242790*0 + 3*290*FLEN/8, x4, x1, x2)

inst_80931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:242793*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242793*0 + 3*291*FLEN/8, x4, x1, x2)

inst_80932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:242796*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242796*0 + 3*292*FLEN/8, x4, x1, x2)

inst_80933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:242799*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242799*0 + 3*293*FLEN/8, x4, x1, x2)

inst_80934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:242802*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242802*0 + 3*294*FLEN/8, x4, x1, x2)

inst_80935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:242805*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242805*0 + 3*295*FLEN/8, x4, x1, x2)

inst_80936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:242808*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242808*0 + 3*296*FLEN/8, x4, x1, x2)

inst_80937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:242811*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242811*0 + 3*297*FLEN/8, x4, x1, x2)

inst_80938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:242814*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242814*0 + 3*298*FLEN/8, x4, x1, x2)

inst_80939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:242817*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242817*0 + 3*299*FLEN/8, x4, x1, x2)

inst_80940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:242820*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242820*0 + 3*300*FLEN/8, x4, x1, x2)

inst_80941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:242823*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242823*0 + 3*301*FLEN/8, x4, x1, x2)

inst_80942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:242826*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242826*0 + 3*302*FLEN/8, x4, x1, x2)

inst_80943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:242829*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242829*0 + 3*303*FLEN/8, x4, x1, x2)

inst_80944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:242832*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242832*0 + 3*304*FLEN/8, x4, x1, x2)

inst_80945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:242835*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242835*0 + 3*305*FLEN/8, x4, x1, x2)

inst_80946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:242838*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242838*0 + 3*306*FLEN/8, x4, x1, x2)

inst_80947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:242841*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242841*0 + 3*307*FLEN/8, x4, x1, x2)

inst_80948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:242844*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242844*0 + 3*308*FLEN/8, x4, x1, x2)

inst_80949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:242847*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242847*0 + 3*309*FLEN/8, x4, x1, x2)

inst_80950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:242850*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242850*0 + 3*310*FLEN/8, x4, x1, x2)

inst_80951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:242853*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242853*0 + 3*311*FLEN/8, x4, x1, x2)

inst_80952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:242856*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242856*0 + 3*312*FLEN/8, x4, x1, x2)

inst_80953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:242859*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242859*0 + 3*313*FLEN/8, x4, x1, x2)

inst_80954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:242862*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242862*0 + 3*314*FLEN/8, x4, x1, x2)

inst_80955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:242865*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242865*0 + 3*315*FLEN/8, x4, x1, x2)

inst_80956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:242868*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242868*0 + 3*316*FLEN/8, x4, x1, x2)

inst_80957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:242871*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242871*0 + 3*317*FLEN/8, x4, x1, x2)

inst_80958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:242874*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242874*0 + 3*318*FLEN/8, x4, x1, x2)

inst_80959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:242877*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242877*0 + 3*319*FLEN/8, x4, x1, x2)

inst_80960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:242880*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242880*0 + 3*320*FLEN/8, x4, x1, x2)

inst_80961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:242883*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242883*0 + 3*321*FLEN/8, x4, x1, x2)

inst_80962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:242886*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242886*0 + 3*322*FLEN/8, x4, x1, x2)

inst_80963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:242889*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242889*0 + 3*323*FLEN/8, x4, x1, x2)

inst_80964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:242892*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242892*0 + 3*324*FLEN/8, x4, x1, x2)

inst_80965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:242895*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242895*0 + 3*325*FLEN/8, x4, x1, x2)

inst_80966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:242898*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242898*0 + 3*326*FLEN/8, x4, x1, x2)

inst_80967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:242901*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242901*0 + 3*327*FLEN/8, x4, x1, x2)

inst_80968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:242904*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242904*0 + 3*328*FLEN/8, x4, x1, x2)

inst_80969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:242907*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242907*0 + 3*329*FLEN/8, x4, x1, x2)

inst_80970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:242910*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242910*0 + 3*330*FLEN/8, x4, x1, x2)

inst_80971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:242913*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242913*0 + 3*331*FLEN/8, x4, x1, x2)

inst_80972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:242916*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242916*0 + 3*332*FLEN/8, x4, x1, x2)

inst_80973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:242919*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242919*0 + 3*333*FLEN/8, x4, x1, x2)

inst_80974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:242922*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242922*0 + 3*334*FLEN/8, x4, x1, x2)

inst_80975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:242925*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242925*0 + 3*335*FLEN/8, x4, x1, x2)

inst_80976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:242928*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242928*0 + 3*336*FLEN/8, x4, x1, x2)

inst_80977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:242931*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242931*0 + 3*337*FLEN/8, x4, x1, x2)

inst_80978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:242934*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242934*0 + 3*338*FLEN/8, x4, x1, x2)

inst_80979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:242937*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242937*0 + 3*339*FLEN/8, x4, x1, x2)

inst_80980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:242940*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242940*0 + 3*340*FLEN/8, x4, x1, x2)

inst_80981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:242943*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242943*0 + 3*341*FLEN/8, x4, x1, x2)

inst_80982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:242946*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242946*0 + 3*342*FLEN/8, x4, x1, x2)

inst_80983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:242949*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242949*0 + 3*343*FLEN/8, x4, x1, x2)

inst_80984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:242952*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242952*0 + 3*344*FLEN/8, x4, x1, x2)

inst_80985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:242955*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242955*0 + 3*345*FLEN/8, x4, x1, x2)

inst_80986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:242958*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242958*0 + 3*346*FLEN/8, x4, x1, x2)

inst_80987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:242961*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242961*0 + 3*347*FLEN/8, x4, x1, x2)

inst_80988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:242964*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242964*0 + 3*348*FLEN/8, x4, x1, x2)

inst_80989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:242967*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242967*0 + 3*349*FLEN/8, x4, x1, x2)

inst_80990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:242970*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242970*0 + 3*350*FLEN/8, x4, x1, x2)

inst_80991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:242973*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242973*0 + 3*351*FLEN/8, x4, x1, x2)

inst_80992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:242976*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242976*0 + 3*352*FLEN/8, x4, x1, x2)

inst_80993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:242979*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242979*0 + 3*353*FLEN/8, x4, x1, x2)

inst_80994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:242982*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242982*0 + 3*354*FLEN/8, x4, x1, x2)

inst_80995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:242985*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242985*0 + 3*355*FLEN/8, x4, x1, x2)

inst_80996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:242988*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242988*0 + 3*356*FLEN/8, x4, x1, x2)

inst_80997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:242991*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242991*0 + 3*357*FLEN/8, x4, x1, x2)

inst_80998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:242994*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242994*0 + 3*358*FLEN/8, x4, x1, x2)

inst_80999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:242997*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 242997*0 + 3*359*FLEN/8, x4, x1, x2)

inst_81000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:243000*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243000*0 + 3*360*FLEN/8, x4, x1, x2)

inst_81001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:243003*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243003*0 + 3*361*FLEN/8, x4, x1, x2)

inst_81002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:243006*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243006*0 + 3*362*FLEN/8, x4, x1, x2)

inst_81003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:243009*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243009*0 + 3*363*FLEN/8, x4, x1, x2)

inst_81004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:243012*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243012*0 + 3*364*FLEN/8, x4, x1, x2)

inst_81005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:243015*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243015*0 + 3*365*FLEN/8, x4, x1, x2)

inst_81006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:243018*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243018*0 + 3*366*FLEN/8, x4, x1, x2)

inst_81007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:243021*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243021*0 + 3*367*FLEN/8, x4, x1, x2)

inst_81008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:243024*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243024*0 + 3*368*FLEN/8, x4, x1, x2)

inst_81009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:243027*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243027*0 + 3*369*FLEN/8, x4, x1, x2)

inst_81010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:243030*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243030*0 + 3*370*FLEN/8, x4, x1, x2)

inst_81011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b5b5c083d7a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b5b5c083d7a4; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:243033*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243033*0 + 3*371*FLEN/8, x4, x1, x2)

inst_81012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000000000; valaddr_reg:x3; val_offset:243036*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243036*0 + 3*372*FLEN/8, x4, x1, x2)

inst_81013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000000001; valaddr_reg:x3; val_offset:243039*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243039*0 + 3*373*FLEN/8, x4, x1, x2)

inst_81014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000000003; valaddr_reg:x3; val_offset:243042*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243042*0 + 3*374*FLEN/8, x4, x1, x2)

inst_81015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000000007; valaddr_reg:x3; val_offset:243045*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243045*0 + 3*375*FLEN/8, x4, x1, x2)

inst_81016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000000000f; valaddr_reg:x3; val_offset:243048*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243048*0 + 3*376*FLEN/8, x4, x1, x2)

inst_81017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000000001f; valaddr_reg:x3; val_offset:243051*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243051*0 + 3*377*FLEN/8, x4, x1, x2)

inst_81018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000000003f; valaddr_reg:x3; val_offset:243054*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243054*0 + 3*378*FLEN/8, x4, x1, x2)

inst_81019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000000007f; valaddr_reg:x3; val_offset:243057*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243057*0 + 3*379*FLEN/8, x4, x1, x2)

inst_81020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000000000ff; valaddr_reg:x3; val_offset:243060*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243060*0 + 3*380*FLEN/8, x4, x1, x2)

inst_81021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000000001ff; valaddr_reg:x3; val_offset:243063*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243063*0 + 3*381*FLEN/8, x4, x1, x2)

inst_81022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000000003ff; valaddr_reg:x3; val_offset:243066*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243066*0 + 3*382*FLEN/8, x4, x1, x2)

inst_81023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000000007ff; valaddr_reg:x3; val_offset:243069*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243069*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_81024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000000fff; valaddr_reg:x3; val_offset:243072*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243072*0 + 3*384*FLEN/8, x4, x1, x2)

inst_81025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000001fff; valaddr_reg:x3; val_offset:243075*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243075*0 + 3*385*FLEN/8, x4, x1, x2)

inst_81026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000003fff; valaddr_reg:x3; val_offset:243078*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243078*0 + 3*386*FLEN/8, x4, x1, x2)

inst_81027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000007fff; valaddr_reg:x3; val_offset:243081*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243081*0 + 3*387*FLEN/8, x4, x1, x2)

inst_81028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000000ffff; valaddr_reg:x3; val_offset:243084*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243084*0 + 3*388*FLEN/8, x4, x1, x2)

inst_81029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000001ffff; valaddr_reg:x3; val_offset:243087*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243087*0 + 3*389*FLEN/8, x4, x1, x2)

inst_81030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000003ffff; valaddr_reg:x3; val_offset:243090*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243090*0 + 3*390*FLEN/8, x4, x1, x2)

inst_81031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000007ffff; valaddr_reg:x3; val_offset:243093*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243093*0 + 3*391*FLEN/8, x4, x1, x2)

inst_81032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000000fffff; valaddr_reg:x3; val_offset:243096*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243096*0 + 3*392*FLEN/8, x4, x1, x2)

inst_81033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000001fffff; valaddr_reg:x3; val_offset:243099*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243099*0 + 3*393*FLEN/8, x4, x1, x2)

inst_81034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000003fffff; valaddr_reg:x3; val_offset:243102*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243102*0 + 3*394*FLEN/8, x4, x1, x2)

inst_81035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000007fffff; valaddr_reg:x3; val_offset:243105*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243105*0 + 3*395*FLEN/8, x4, x1, x2)

inst_81036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000000ffffff; valaddr_reg:x3; val_offset:243108*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243108*0 + 3*396*FLEN/8, x4, x1, x2)

inst_81037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000001ffffff; valaddr_reg:x3; val_offset:243111*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243111*0 + 3*397*FLEN/8, x4, x1, x2)

inst_81038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000003ffffff; valaddr_reg:x3; val_offset:243114*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243114*0 + 3*398*FLEN/8, x4, x1, x2)

inst_81039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000007ffffff; valaddr_reg:x3; val_offset:243117*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243117*0 + 3*399*FLEN/8, x4, x1, x2)

inst_81040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000000fffffff; valaddr_reg:x3; val_offset:243120*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243120*0 + 3*400*FLEN/8, x4, x1, x2)

inst_81041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000001fffffff; valaddr_reg:x3; val_offset:243123*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243123*0 + 3*401*FLEN/8, x4, x1, x2)

inst_81042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000003fffffff; valaddr_reg:x3; val_offset:243126*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243126*0 + 3*402*FLEN/8, x4, x1, x2)

inst_81043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000007fffffff; valaddr_reg:x3; val_offset:243129*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243129*0 + 3*403*FLEN/8, x4, x1, x2)

inst_81044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100000ffffffff; valaddr_reg:x3; val_offset:243132*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243132*0 + 3*404*FLEN/8, x4, x1, x2)

inst_81045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100001ffffffff; valaddr_reg:x3; val_offset:243135*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243135*0 + 3*405*FLEN/8, x4, x1, x2)

inst_81046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100003ffffffff; valaddr_reg:x3; val_offset:243138*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243138*0 + 3*406*FLEN/8, x4, x1, x2)

inst_81047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100007ffffffff; valaddr_reg:x3; val_offset:243141*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243141*0 + 3*407*FLEN/8, x4, x1, x2)

inst_81048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10000fffffffff; valaddr_reg:x3; val_offset:243144*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243144*0 + 3*408*FLEN/8, x4, x1, x2)

inst_81049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10001fffffffff; valaddr_reg:x3; val_offset:243147*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243147*0 + 3*409*FLEN/8, x4, x1, x2)

inst_81050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10003fffffffff; valaddr_reg:x3; val_offset:243150*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243150*0 + 3*410*FLEN/8, x4, x1, x2)

inst_81051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10007fffffffff; valaddr_reg:x3; val_offset:243153*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243153*0 + 3*411*FLEN/8, x4, x1, x2)

inst_81052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1000ffffffffff; valaddr_reg:x3; val_offset:243156*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243156*0 + 3*412*FLEN/8, x4, x1, x2)

inst_81053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1001ffffffffff; valaddr_reg:x3; val_offset:243159*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243159*0 + 3*413*FLEN/8, x4, x1, x2)

inst_81054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1003ffffffffff; valaddr_reg:x3; val_offset:243162*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243162*0 + 3*414*FLEN/8, x4, x1, x2)

inst_81055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1007ffffffffff; valaddr_reg:x3; val_offset:243165*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243165*0 + 3*415*FLEN/8, x4, x1, x2)

inst_81056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e100fffffffffff; valaddr_reg:x3; val_offset:243168*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243168*0 + 3*416*FLEN/8, x4, x1, x2)

inst_81057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e101fffffffffff; valaddr_reg:x3; val_offset:243171*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243171*0 + 3*417*FLEN/8, x4, x1, x2)

inst_81058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e103fffffffffff; valaddr_reg:x3; val_offset:243174*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243174*0 + 3*418*FLEN/8, x4, x1, x2)

inst_81059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e107fffffffffff; valaddr_reg:x3; val_offset:243177*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243177*0 + 3*419*FLEN/8, x4, x1, x2)

inst_81060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e10ffffffffffff; valaddr_reg:x3; val_offset:243180*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243180*0 + 3*420*FLEN/8, x4, x1, x2)

inst_81061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e11ffffffffffff; valaddr_reg:x3; val_offset:243183*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243183*0 + 3*421*FLEN/8, x4, x1, x2)

inst_81062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e13ffffffffffff; valaddr_reg:x3; val_offset:243186*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243186*0 + 3*422*FLEN/8, x4, x1, x2)

inst_81063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e17ffffffffffff; valaddr_reg:x3; val_offset:243189*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243189*0 + 3*423*FLEN/8, x4, x1, x2)

inst_81064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e18000000000000; valaddr_reg:x3; val_offset:243192*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243192*0 + 3*424*FLEN/8, x4, x1, x2)

inst_81065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1c000000000000; valaddr_reg:x3; val_offset:243195*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243195*0 + 3*425*FLEN/8, x4, x1, x2)

inst_81066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1e000000000000; valaddr_reg:x3; val_offset:243198*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243198*0 + 3*426*FLEN/8, x4, x1, x2)

inst_81067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1f000000000000; valaddr_reg:x3; val_offset:243201*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243201*0 + 3*427*FLEN/8, x4, x1, x2)

inst_81068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1f800000000000; valaddr_reg:x3; val_offset:243204*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243204*0 + 3*428*FLEN/8, x4, x1, x2)

inst_81069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fc00000000000; valaddr_reg:x3; val_offset:243207*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243207*0 + 3*429*FLEN/8, x4, x1, x2)

inst_81070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fe00000000000; valaddr_reg:x3; val_offset:243210*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243210*0 + 3*430*FLEN/8, x4, x1, x2)

inst_81071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ff00000000000; valaddr_reg:x3; val_offset:243213*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243213*0 + 3*431*FLEN/8, x4, x1, x2)

inst_81072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ff80000000000; valaddr_reg:x3; val_offset:243216*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243216*0 + 3*432*FLEN/8, x4, x1, x2)

inst_81073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffc0000000000; valaddr_reg:x3; val_offset:243219*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243219*0 + 3*433*FLEN/8, x4, x1, x2)

inst_81074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffe0000000000; valaddr_reg:x3; val_offset:243222*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243222*0 + 3*434*FLEN/8, x4, x1, x2)

inst_81075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fff0000000000; valaddr_reg:x3; val_offset:243225*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243225*0 + 3*435*FLEN/8, x4, x1, x2)

inst_81076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fff8000000000; valaddr_reg:x3; val_offset:243228*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243228*0 + 3*436*FLEN/8, x4, x1, x2)

inst_81077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffc000000000; valaddr_reg:x3; val_offset:243231*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243231*0 + 3*437*FLEN/8, x4, x1, x2)

inst_81078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffe000000000; valaddr_reg:x3; val_offset:243234*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243234*0 + 3*438*FLEN/8, x4, x1, x2)

inst_81079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffff000000000; valaddr_reg:x3; val_offset:243237*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243237*0 + 3*439*FLEN/8, x4, x1, x2)

inst_81080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffff800000000; valaddr_reg:x3; val_offset:243240*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243240*0 + 3*440*FLEN/8, x4, x1, x2)

inst_81081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffc00000000; valaddr_reg:x3; val_offset:243243*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243243*0 + 3*441*FLEN/8, x4, x1, x2)

inst_81082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffe00000000; valaddr_reg:x3; val_offset:243246*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243246*0 + 3*442*FLEN/8, x4, x1, x2)

inst_81083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffff00000000; valaddr_reg:x3; val_offset:243249*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243249*0 + 3*443*FLEN/8, x4, x1, x2)

inst_81084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffff80000000; valaddr_reg:x3; val_offset:243252*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243252*0 + 3*444*FLEN/8, x4, x1, x2)

inst_81085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffc0000000; valaddr_reg:x3; val_offset:243255*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243255*0 + 3*445*FLEN/8, x4, x1, x2)

inst_81086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffe0000000; valaddr_reg:x3; val_offset:243258*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243258*0 + 3*446*FLEN/8, x4, x1, x2)

inst_81087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffff0000000; valaddr_reg:x3; val_offset:243261*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243261*0 + 3*447*FLEN/8, x4, x1, x2)

inst_81088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffff8000000; valaddr_reg:x3; val_offset:243264*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243264*0 + 3*448*FLEN/8, x4, x1, x2)

inst_81089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffc000000; valaddr_reg:x3; val_offset:243267*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243267*0 + 3*449*FLEN/8, x4, x1, x2)

inst_81090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffe000000; valaddr_reg:x3; val_offset:243270*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243270*0 + 3*450*FLEN/8, x4, x1, x2)

inst_81091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffff000000; valaddr_reg:x3; val_offset:243273*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243273*0 + 3*451*FLEN/8, x4, x1, x2)

inst_81092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffff800000; valaddr_reg:x3; val_offset:243276*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243276*0 + 3*452*FLEN/8, x4, x1, x2)

inst_81093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffc00000; valaddr_reg:x3; val_offset:243279*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243279*0 + 3*453*FLEN/8, x4, x1, x2)

inst_81094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffe00000; valaddr_reg:x3; val_offset:243282*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243282*0 + 3*454*FLEN/8, x4, x1, x2)

inst_81095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffff00000; valaddr_reg:x3; val_offset:243285*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243285*0 + 3*455*FLEN/8, x4, x1, x2)

inst_81096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffff80000; valaddr_reg:x3; val_offset:243288*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243288*0 + 3*456*FLEN/8, x4, x1, x2)

inst_81097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffc0000; valaddr_reg:x3; val_offset:243291*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243291*0 + 3*457*FLEN/8, x4, x1, x2)

inst_81098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffe0000; valaddr_reg:x3; val_offset:243294*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243294*0 + 3*458*FLEN/8, x4, x1, x2)

inst_81099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffff0000; valaddr_reg:x3; val_offset:243297*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243297*0 + 3*459*FLEN/8, x4, x1, x2)

inst_81100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffff8000; valaddr_reg:x3; val_offset:243300*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243300*0 + 3*460*FLEN/8, x4, x1, x2)

inst_81101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffc000; valaddr_reg:x3; val_offset:243303*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243303*0 + 3*461*FLEN/8, x4, x1, x2)

inst_81102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffe000; valaddr_reg:x3; val_offset:243306*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243306*0 + 3*462*FLEN/8, x4, x1, x2)

inst_81103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffff000; valaddr_reg:x3; val_offset:243309*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243309*0 + 3*463*FLEN/8, x4, x1, x2)

inst_81104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffff800; valaddr_reg:x3; val_offset:243312*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243312*0 + 3*464*FLEN/8, x4, x1, x2)

inst_81105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffc00; valaddr_reg:x3; val_offset:243315*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243315*0 + 3*465*FLEN/8, x4, x1, x2)

inst_81106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffe00; valaddr_reg:x3; val_offset:243318*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243318*0 + 3*466*FLEN/8, x4, x1, x2)

inst_81107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffff00; valaddr_reg:x3; val_offset:243321*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243321*0 + 3*467*FLEN/8, x4, x1, x2)

inst_81108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffff80; valaddr_reg:x3; val_offset:243324*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243324*0 + 3*468*FLEN/8, x4, x1, x2)

inst_81109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffffc0; valaddr_reg:x3; val_offset:243327*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243327*0 + 3*469*FLEN/8, x4, x1, x2)

inst_81110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffffe0; valaddr_reg:x3; val_offset:243330*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243330*0 + 3*470*FLEN/8, x4, x1, x2)

inst_81111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffff0; valaddr_reg:x3; val_offset:243333*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243333*0 + 3*471*FLEN/8, x4, x1, x2)

inst_81112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffff8; valaddr_reg:x3; val_offset:243336*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243336*0 + 3*472*FLEN/8, x4, x1, x2)

inst_81113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffffc; valaddr_reg:x3; val_offset:243339*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243339*0 + 3*473*FLEN/8, x4, x1, x2)

inst_81114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1ffffffffffffe; valaddr_reg:x3; val_offset:243342*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243342*0 + 3*474*FLEN/8, x4, x1, x2)

inst_81115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3e1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3e1fffffffffffff; valaddr_reg:x3; val_offset:243345*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243345*0 + 3*475*FLEN/8, x4, x1, x2)

inst_81116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:243348*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243348*0 + 3*476*FLEN/8, x4, x1, x2)

inst_81117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:243351*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243351*0 + 3*477*FLEN/8, x4, x1, x2)

inst_81118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:243354*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243354*0 + 3*478*FLEN/8, x4, x1, x2)

inst_81119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:243357*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243357*0 + 3*479*FLEN/8, x4, x1, x2)

inst_81120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:243360*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243360*0 + 3*480*FLEN/8, x4, x1, x2)

inst_81121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:243363*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243363*0 + 3*481*FLEN/8, x4, x1, x2)

inst_81122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:243366*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243366*0 + 3*482*FLEN/8, x4, x1, x2)

inst_81123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:243369*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243369*0 + 3*483*FLEN/8, x4, x1, x2)

inst_81124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:243372*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243372*0 + 3*484*FLEN/8, x4, x1, x2)

inst_81125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:243375*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243375*0 + 3*485*FLEN/8, x4, x1, x2)

inst_81126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:243378*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243378*0 + 3*486*FLEN/8, x4, x1, x2)

inst_81127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:243381*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243381*0 + 3*487*FLEN/8, x4, x1, x2)

inst_81128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:243384*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243384*0 + 3*488*FLEN/8, x4, x1, x2)

inst_81129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:243387*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243387*0 + 3*489*FLEN/8, x4, x1, x2)

inst_81130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:243390*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243390*0 + 3*490*FLEN/8, x4, x1, x2)

inst_81131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:243393*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243393*0 + 3*491*FLEN/8, x4, x1, x2)

inst_81132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:243396*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243396*0 + 3*492*FLEN/8, x4, x1, x2)

inst_81133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:243399*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243399*0 + 3*493*FLEN/8, x4, x1, x2)

inst_81134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:243402*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243402*0 + 3*494*FLEN/8, x4, x1, x2)

inst_81135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:243405*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243405*0 + 3*495*FLEN/8, x4, x1, x2)

inst_81136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:243408*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243408*0 + 3*496*FLEN/8, x4, x1, x2)

inst_81137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4961eaabdb7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8deeb902c377e; op2val:0x2034961eaabdb7c8;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:243411*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243411*0 + 3*497*FLEN/8, x4, x1, x2)

inst_81138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:243414*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243414*0 + 3*498*FLEN/8, x4, x1, x2)

inst_81139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:243417*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243417*0 + 3*499*FLEN/8, x4, x1, x2)

inst_81140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:243420*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243420*0 + 3*500*FLEN/8, x4, x1, x2)

inst_81141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:243423*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243423*0 + 3*501*FLEN/8, x4, x1, x2)

inst_81142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:243426*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243426*0 + 3*502*FLEN/8, x4, x1, x2)

inst_81143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:243429*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243429*0 + 3*503*FLEN/8, x4, x1, x2)

inst_81144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:243432*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243432*0 + 3*504*FLEN/8, x4, x1, x2)

inst_81145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:243435*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243435*0 + 3*505*FLEN/8, x4, x1, x2)

inst_81146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:243438*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243438*0 + 3*506*FLEN/8, x4, x1, x2)

inst_81147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:243441*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243441*0 + 3*507*FLEN/8, x4, x1, x2)

inst_81148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:243444*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243444*0 + 3*508*FLEN/8, x4, x1, x2)

inst_81149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:243447*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243447*0 + 3*509*FLEN/8, x4, x1, x2)

inst_81150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:243450*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243450*0 + 3*510*FLEN/8, x4, x1, x2)

inst_81151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:243453*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243453*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_81152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:243456*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243456*0 + 3*512*FLEN/8, x4, x1, x2)

inst_81153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:243459*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243459*0 + 3*513*FLEN/8, x4, x1, x2)

inst_81154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:243462*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243462*0 + 3*514*FLEN/8, x4, x1, x2)

inst_81155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:243465*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243465*0 + 3*515*FLEN/8, x4, x1, x2)

inst_81156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:243468*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243468*0 + 3*516*FLEN/8, x4, x1, x2)

inst_81157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:243471*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243471*0 + 3*517*FLEN/8, x4, x1, x2)

inst_81158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:243474*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243474*0 + 3*518*FLEN/8, x4, x1, x2)

inst_81159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:243477*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243477*0 + 3*519*FLEN/8, x4, x1, x2)

inst_81160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000000000; valaddr_reg:x3; val_offset:243480*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243480*0 + 3*520*FLEN/8, x4, x1, x2)

inst_81161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000000001; valaddr_reg:x3; val_offset:243483*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243483*0 + 3*521*FLEN/8, x4, x1, x2)

inst_81162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000000003; valaddr_reg:x3; val_offset:243486*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243486*0 + 3*522*FLEN/8, x4, x1, x2)

inst_81163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000000007; valaddr_reg:x3; val_offset:243489*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243489*0 + 3*523*FLEN/8, x4, x1, x2)

inst_81164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000000000f; valaddr_reg:x3; val_offset:243492*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243492*0 + 3*524*FLEN/8, x4, x1, x2)

inst_81165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000000001f; valaddr_reg:x3; val_offset:243495*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243495*0 + 3*525*FLEN/8, x4, x1, x2)

inst_81166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000000003f; valaddr_reg:x3; val_offset:243498*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243498*0 + 3*526*FLEN/8, x4, x1, x2)

inst_81167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000000007f; valaddr_reg:x3; val_offset:243501*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243501*0 + 3*527*FLEN/8, x4, x1, x2)

inst_81168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000000000ff; valaddr_reg:x3; val_offset:243504*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243504*0 + 3*528*FLEN/8, x4, x1, x2)

inst_81169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000000001ff; valaddr_reg:x3; val_offset:243507*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243507*0 + 3*529*FLEN/8, x4, x1, x2)

inst_81170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000000003ff; valaddr_reg:x3; val_offset:243510*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243510*0 + 3*530*FLEN/8, x4, x1, x2)

inst_81171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000000007ff; valaddr_reg:x3; val_offset:243513*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243513*0 + 3*531*FLEN/8, x4, x1, x2)

inst_81172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000000fff; valaddr_reg:x3; val_offset:243516*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243516*0 + 3*532*FLEN/8, x4, x1, x2)

inst_81173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000001fff; valaddr_reg:x3; val_offset:243519*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243519*0 + 3*533*FLEN/8, x4, x1, x2)

inst_81174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000003fff; valaddr_reg:x3; val_offset:243522*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243522*0 + 3*534*FLEN/8, x4, x1, x2)

inst_81175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000007fff; valaddr_reg:x3; val_offset:243525*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243525*0 + 3*535*FLEN/8, x4, x1, x2)

inst_81176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000000ffff; valaddr_reg:x3; val_offset:243528*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243528*0 + 3*536*FLEN/8, x4, x1, x2)

inst_81177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000001ffff; valaddr_reg:x3; val_offset:243531*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243531*0 + 3*537*FLEN/8, x4, x1, x2)

inst_81178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000003ffff; valaddr_reg:x3; val_offset:243534*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243534*0 + 3*538*FLEN/8, x4, x1, x2)

inst_81179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000007ffff; valaddr_reg:x3; val_offset:243537*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243537*0 + 3*539*FLEN/8, x4, x1, x2)

inst_81180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000000fffff; valaddr_reg:x3; val_offset:243540*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243540*0 + 3*540*FLEN/8, x4, x1, x2)

inst_81181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000001fffff; valaddr_reg:x3; val_offset:243543*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243543*0 + 3*541*FLEN/8, x4, x1, x2)

inst_81182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000003fffff; valaddr_reg:x3; val_offset:243546*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243546*0 + 3*542*FLEN/8, x4, x1, x2)

inst_81183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000007fffff; valaddr_reg:x3; val_offset:243549*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243549*0 + 3*543*FLEN/8, x4, x1, x2)

inst_81184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000000ffffff; valaddr_reg:x3; val_offset:243552*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243552*0 + 3*544*FLEN/8, x4, x1, x2)

inst_81185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000001ffffff; valaddr_reg:x3; val_offset:243555*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243555*0 + 3*545*FLEN/8, x4, x1, x2)

inst_81186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000003ffffff; valaddr_reg:x3; val_offset:243558*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243558*0 + 3*546*FLEN/8, x4, x1, x2)

inst_81187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000007ffffff; valaddr_reg:x3; val_offset:243561*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243561*0 + 3*547*FLEN/8, x4, x1, x2)

inst_81188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000000fffffff; valaddr_reg:x3; val_offset:243564*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243564*0 + 3*548*FLEN/8, x4, x1, x2)

inst_81189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000001fffffff; valaddr_reg:x3; val_offset:243567*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243567*0 + 3*549*FLEN/8, x4, x1, x2)

inst_81190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000003fffffff; valaddr_reg:x3; val_offset:243570*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243570*0 + 3*550*FLEN/8, x4, x1, x2)

inst_81191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000007fffffff; valaddr_reg:x3; val_offset:243573*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243573*0 + 3*551*FLEN/8, x4, x1, x2)

inst_81192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00000ffffffff; valaddr_reg:x3; val_offset:243576*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243576*0 + 3*552*FLEN/8, x4, x1, x2)

inst_81193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00001ffffffff; valaddr_reg:x3; val_offset:243579*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243579*0 + 3*553*FLEN/8, x4, x1, x2)

inst_81194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00003ffffffff; valaddr_reg:x3; val_offset:243582*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243582*0 + 3*554*FLEN/8, x4, x1, x2)

inst_81195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00007ffffffff; valaddr_reg:x3; val_offset:243585*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243585*0 + 3*555*FLEN/8, x4, x1, x2)

inst_81196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0000fffffffff; valaddr_reg:x3; val_offset:243588*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243588*0 + 3*556*FLEN/8, x4, x1, x2)

inst_81197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0001fffffffff; valaddr_reg:x3; val_offset:243591*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243591*0 + 3*557*FLEN/8, x4, x1, x2)

inst_81198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0003fffffffff; valaddr_reg:x3; val_offset:243594*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243594*0 + 3*558*FLEN/8, x4, x1, x2)

inst_81199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0007fffffffff; valaddr_reg:x3; val_offset:243597*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243597*0 + 3*559*FLEN/8, x4, x1, x2)

inst_81200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e000ffffffffff; valaddr_reg:x3; val_offset:243600*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243600*0 + 3*560*FLEN/8, x4, x1, x2)

inst_81201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e001ffffffffff; valaddr_reg:x3; val_offset:243603*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243603*0 + 3*561*FLEN/8, x4, x1, x2)

inst_81202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e003ffffffffff; valaddr_reg:x3; val_offset:243606*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243606*0 + 3*562*FLEN/8, x4, x1, x2)

inst_81203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e007ffffffffff; valaddr_reg:x3; val_offset:243609*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243609*0 + 3*563*FLEN/8, x4, x1, x2)

inst_81204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e00fffffffffff; valaddr_reg:x3; val_offset:243612*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243612*0 + 3*564*FLEN/8, x4, x1, x2)

inst_81205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e01fffffffffff; valaddr_reg:x3; val_offset:243615*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243615*0 + 3*565*FLEN/8, x4, x1, x2)

inst_81206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e03fffffffffff; valaddr_reg:x3; val_offset:243618*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243618*0 + 3*566*FLEN/8, x4, x1, x2)

inst_81207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e07fffffffffff; valaddr_reg:x3; val_offset:243621*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243621*0 + 3*567*FLEN/8, x4, x1, x2)

inst_81208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e0ffffffffffff; valaddr_reg:x3; val_offset:243624*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243624*0 + 3*568*FLEN/8, x4, x1, x2)

inst_81209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e1ffffffffffff; valaddr_reg:x3; val_offset:243627*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243627*0 + 3*569*FLEN/8, x4, x1, x2)

inst_81210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e3ffffffffffff; valaddr_reg:x3; val_offset:243630*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243630*0 + 3*570*FLEN/8, x4, x1, x2)

inst_81211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e7ffffffffffff; valaddr_reg:x3; val_offset:243633*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243633*0 + 3*571*FLEN/8, x4, x1, x2)

inst_81212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80e8000000000000; valaddr_reg:x3; val_offset:243636*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243636*0 + 3*572*FLEN/8, x4, x1, x2)

inst_81213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80ec000000000000; valaddr_reg:x3; val_offset:243639*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243639*0 + 3*573*FLEN/8, x4, x1, x2)

inst_81214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80ee000000000000; valaddr_reg:x3; val_offset:243642*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243642*0 + 3*574*FLEN/8, x4, x1, x2)

inst_81215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80ef000000000000; valaddr_reg:x3; val_offset:243645*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243645*0 + 3*575*FLEN/8, x4, x1, x2)

inst_81216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80ef800000000000; valaddr_reg:x3; val_offset:243648*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243648*0 + 3*576*FLEN/8, x4, x1, x2)

inst_81217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efc00000000000; valaddr_reg:x3; val_offset:243651*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243651*0 + 3*577*FLEN/8, x4, x1, x2)

inst_81218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efe00000000000; valaddr_reg:x3; val_offset:243654*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243654*0 + 3*578*FLEN/8, x4, x1, x2)

inst_81219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80eff00000000000; valaddr_reg:x3; val_offset:243657*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243657*0 + 3*579*FLEN/8, x4, x1, x2)

inst_81220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80eff80000000000; valaddr_reg:x3; val_offset:243660*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243660*0 + 3*580*FLEN/8, x4, x1, x2)

inst_81221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effc0000000000; valaddr_reg:x3; val_offset:243663*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243663*0 + 3*581*FLEN/8, x4, x1, x2)

inst_81222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effe0000000000; valaddr_reg:x3; val_offset:243666*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243666*0 + 3*582*FLEN/8, x4, x1, x2)

inst_81223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efff0000000000; valaddr_reg:x3; val_offset:243669*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243669*0 + 3*583*FLEN/8, x4, x1, x2)

inst_81224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efff8000000000; valaddr_reg:x3; val_offset:243672*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243672*0 + 3*584*FLEN/8, x4, x1, x2)

inst_81225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffc000000000; valaddr_reg:x3; val_offset:243675*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243675*0 + 3*585*FLEN/8, x4, x1, x2)

inst_81226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffe000000000; valaddr_reg:x3; val_offset:243678*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243678*0 + 3*586*FLEN/8, x4, x1, x2)

inst_81227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effff000000000; valaddr_reg:x3; val_offset:243681*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243681*0 + 3*587*FLEN/8, x4, x1, x2)

inst_81228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effff800000000; valaddr_reg:x3; val_offset:243684*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243684*0 + 3*588*FLEN/8, x4, x1, x2)

inst_81229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffc00000000; valaddr_reg:x3; val_offset:243687*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243687*0 + 3*589*FLEN/8, x4, x1, x2)

inst_81230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffe00000000; valaddr_reg:x3; val_offset:243690*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243690*0 + 3*590*FLEN/8, x4, x1, x2)

inst_81231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffff00000000; valaddr_reg:x3; val_offset:243693*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243693*0 + 3*591*FLEN/8, x4, x1, x2)

inst_81232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffff80000000; valaddr_reg:x3; val_offset:243696*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243696*0 + 3*592*FLEN/8, x4, x1, x2)

inst_81233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffc0000000; valaddr_reg:x3; val_offset:243699*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243699*0 + 3*593*FLEN/8, x4, x1, x2)

inst_81234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffe0000000; valaddr_reg:x3; val_offset:243702*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243702*0 + 3*594*FLEN/8, x4, x1, x2)

inst_81235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffff0000000; valaddr_reg:x3; val_offset:243705*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243705*0 + 3*595*FLEN/8, x4, x1, x2)

inst_81236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffff8000000; valaddr_reg:x3; val_offset:243708*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243708*0 + 3*596*FLEN/8, x4, x1, x2)

inst_81237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffc000000; valaddr_reg:x3; val_offset:243711*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243711*0 + 3*597*FLEN/8, x4, x1, x2)

inst_81238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffe000000; valaddr_reg:x3; val_offset:243714*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243714*0 + 3*598*FLEN/8, x4, x1, x2)

inst_81239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffff000000; valaddr_reg:x3; val_offset:243717*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243717*0 + 3*599*FLEN/8, x4, x1, x2)

inst_81240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:243720*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243720*0 + 3*600*FLEN/8, x4, x1, x2)

inst_81241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:243723*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243723*0 + 3*601*FLEN/8, x4, x1, x2)

inst_81242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:243726*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243726*0 + 3*602*FLEN/8, x4, x1, x2)

inst_81243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:243729*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243729*0 + 3*603*FLEN/8, x4, x1, x2)

inst_81244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:243732*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243732*0 + 3*604*FLEN/8, x4, x1, x2)

inst_81245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:243735*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243735*0 + 3*605*FLEN/8, x4, x1, x2)

inst_81246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:243738*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243738*0 + 3*606*FLEN/8, x4, x1, x2)

inst_81247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:243741*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243741*0 + 3*607*FLEN/8, x4, x1, x2)

inst_81248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:243744*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243744*0 + 3*608*FLEN/8, x4, x1, x2)

inst_81249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:243747*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243747*0 + 3*609*FLEN/8, x4, x1, x2)

inst_81250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:243750*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243750*0 + 3*610*FLEN/8, x4, x1, x2)

inst_81251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:243753*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243753*0 + 3*611*FLEN/8, x4, x1, x2)

inst_81252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:243756*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243756*0 + 3*612*FLEN/8, x4, x1, x2)

inst_81253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:243759*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243759*0 + 3*613*FLEN/8, x4, x1, x2)

inst_81254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:243762*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243762*0 + 3*614*FLEN/8, x4, x1, x2)

inst_81255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:243765*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243765*0 + 3*615*FLEN/8, x4, x1, x2)

inst_81256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:243768*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243768*0 + 3*616*FLEN/8, x4, x1, x2)

inst_81257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:243771*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243771*0 + 3*617*FLEN/8, x4, x1, x2)

inst_81258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:243774*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243774*0 + 3*618*FLEN/8, x4, x1, x2)

inst_81259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:243777*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243777*0 + 3*619*FLEN/8, x4, x1, x2)

inst_81260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:243780*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243780*0 + 3*620*FLEN/8, x4, x1, x2)

inst_81261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:243783*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243783*0 + 3*621*FLEN/8, x4, x1, x2)

inst_81262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:243786*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243786*0 + 3*622*FLEN/8, x4, x1, x2)

inst_81263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ebf551167019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ebf551167019; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:243789*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243789*0 + 3*623*FLEN/8, x4, x1, x2)

inst_81264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:243792*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243792*0 + 3*624*FLEN/8, x4, x1, x2)

inst_81265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:243795*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243795*0 + 3*625*FLEN/8, x4, x1, x2)

inst_81266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:243798*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243798*0 + 3*626*FLEN/8, x4, x1, x2)

inst_81267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:243801*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243801*0 + 3*627*FLEN/8, x4, x1, x2)

inst_81268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:243804*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243804*0 + 3*628*FLEN/8, x4, x1, x2)

inst_81269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:243807*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243807*0 + 3*629*FLEN/8, x4, x1, x2)

inst_81270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:243810*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243810*0 + 3*630*FLEN/8, x4, x1, x2)

inst_81271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:243813*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243813*0 + 3*631*FLEN/8, x4, x1, x2)

inst_81272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:243816*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243816*0 + 3*632*FLEN/8, x4, x1, x2)

inst_81273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:243819*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243819*0 + 3*633*FLEN/8, x4, x1, x2)

inst_81274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:243822*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243822*0 + 3*634*FLEN/8, x4, x1, x2)

inst_81275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:243825*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243825*0 + 3*635*FLEN/8, x4, x1, x2)

inst_81276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:243828*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243828*0 + 3*636*FLEN/8, x4, x1, x2)

inst_81277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:243831*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243831*0 + 3*637*FLEN/8, x4, x1, x2)

inst_81278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:243834*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243834*0 + 3*638*FLEN/8, x4, x1, x2)

inst_81279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:243837*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243837*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_81280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:243840*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243840*0 + 3*640*FLEN/8, x4, x1, x2)

inst_81281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:243843*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243843*0 + 3*641*FLEN/8, x4, x1, x2)

inst_81282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:243846*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243846*0 + 3*642*FLEN/8, x4, x1, x2)

inst_81283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:243849*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243849*0 + 3*643*FLEN/8, x4, x1, x2)

inst_81284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:243852*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243852*0 + 3*644*FLEN/8, x4, x1, x2)

inst_81285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:243855*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243855*0 + 3*645*FLEN/8, x4, x1, x2)

inst_81286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000000000; valaddr_reg:x3; val_offset:243858*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243858*0 + 3*646*FLEN/8, x4, x1, x2)

inst_81287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000000001; valaddr_reg:x3; val_offset:243861*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243861*0 + 3*647*FLEN/8, x4, x1, x2)

inst_81288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000000003; valaddr_reg:x3; val_offset:243864*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243864*0 + 3*648*FLEN/8, x4, x1, x2)

inst_81289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000000007; valaddr_reg:x3; val_offset:243867*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243867*0 + 3*649*FLEN/8, x4, x1, x2)

inst_81290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000000000f; valaddr_reg:x3; val_offset:243870*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243870*0 + 3*650*FLEN/8, x4, x1, x2)

inst_81291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000000001f; valaddr_reg:x3; val_offset:243873*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243873*0 + 3*651*FLEN/8, x4, x1, x2)

inst_81292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000000003f; valaddr_reg:x3; val_offset:243876*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243876*0 + 3*652*FLEN/8, x4, x1, x2)

inst_81293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000000007f; valaddr_reg:x3; val_offset:243879*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243879*0 + 3*653*FLEN/8, x4, x1, x2)

inst_81294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000000000ff; valaddr_reg:x3; val_offset:243882*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243882*0 + 3*654*FLEN/8, x4, x1, x2)

inst_81295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000000001ff; valaddr_reg:x3; val_offset:243885*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243885*0 + 3*655*FLEN/8, x4, x1, x2)

inst_81296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000000003ff; valaddr_reg:x3; val_offset:243888*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243888*0 + 3*656*FLEN/8, x4, x1, x2)

inst_81297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000000007ff; valaddr_reg:x3; val_offset:243891*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243891*0 + 3*657*FLEN/8, x4, x1, x2)

inst_81298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000000fff; valaddr_reg:x3; val_offset:243894*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243894*0 + 3*658*FLEN/8, x4, x1, x2)

inst_81299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000001fff; valaddr_reg:x3; val_offset:243897*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243897*0 + 3*659*FLEN/8, x4, x1, x2)

inst_81300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000003fff; valaddr_reg:x3; val_offset:243900*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243900*0 + 3*660*FLEN/8, x4, x1, x2)

inst_81301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000007fff; valaddr_reg:x3; val_offset:243903*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243903*0 + 3*661*FLEN/8, x4, x1, x2)

inst_81302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000000ffff; valaddr_reg:x3; val_offset:243906*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243906*0 + 3*662*FLEN/8, x4, x1, x2)

inst_81303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000001ffff; valaddr_reg:x3; val_offset:243909*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243909*0 + 3*663*FLEN/8, x4, x1, x2)

inst_81304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000003ffff; valaddr_reg:x3; val_offset:243912*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243912*0 + 3*664*FLEN/8, x4, x1, x2)

inst_81305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000007ffff; valaddr_reg:x3; val_offset:243915*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243915*0 + 3*665*FLEN/8, x4, x1, x2)

inst_81306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000000fffff; valaddr_reg:x3; val_offset:243918*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243918*0 + 3*666*FLEN/8, x4, x1, x2)

inst_81307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000001fffff; valaddr_reg:x3; val_offset:243921*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243921*0 + 3*667*FLEN/8, x4, x1, x2)

inst_81308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000003fffff; valaddr_reg:x3; val_offset:243924*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243924*0 + 3*668*FLEN/8, x4, x1, x2)

inst_81309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000007fffff; valaddr_reg:x3; val_offset:243927*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243927*0 + 3*669*FLEN/8, x4, x1, x2)

inst_81310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000000ffffff; valaddr_reg:x3; val_offset:243930*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243930*0 + 3*670*FLEN/8, x4, x1, x2)

inst_81311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000001ffffff; valaddr_reg:x3; val_offset:243933*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243933*0 + 3*671*FLEN/8, x4, x1, x2)

inst_81312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000003ffffff; valaddr_reg:x3; val_offset:243936*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243936*0 + 3*672*FLEN/8, x4, x1, x2)

inst_81313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000007ffffff; valaddr_reg:x3; val_offset:243939*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243939*0 + 3*673*FLEN/8, x4, x1, x2)

inst_81314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000000fffffff; valaddr_reg:x3; val_offset:243942*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243942*0 + 3*674*FLEN/8, x4, x1, x2)

inst_81315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000001fffffff; valaddr_reg:x3; val_offset:243945*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243945*0 + 3*675*FLEN/8, x4, x1, x2)

inst_81316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000003fffffff; valaddr_reg:x3; val_offset:243948*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243948*0 + 3*676*FLEN/8, x4, x1, x2)

inst_81317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000007fffffff; valaddr_reg:x3; val_offset:243951*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243951*0 + 3*677*FLEN/8, x4, x1, x2)

inst_81318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000000ffffffff; valaddr_reg:x3; val_offset:243954*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243954*0 + 3*678*FLEN/8, x4, x1, x2)

inst_81319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000001ffffffff; valaddr_reg:x3; val_offset:243957*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243957*0 + 3*679*FLEN/8, x4, x1, x2)

inst_81320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000003ffffffff; valaddr_reg:x3; val_offset:243960*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243960*0 + 3*680*FLEN/8, x4, x1, x2)

inst_81321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000007ffffffff; valaddr_reg:x3; val_offset:243963*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243963*0 + 3*681*FLEN/8, x4, x1, x2)

inst_81322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100000fffffffff; valaddr_reg:x3; val_offset:243966*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243966*0 + 3*682*FLEN/8, x4, x1, x2)

inst_81323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100001fffffffff; valaddr_reg:x3; val_offset:243969*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243969*0 + 3*683*FLEN/8, x4, x1, x2)

inst_81324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100003fffffffff; valaddr_reg:x3; val_offset:243972*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243972*0 + 3*684*FLEN/8, x4, x1, x2)

inst_81325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100007fffffffff; valaddr_reg:x3; val_offset:243975*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243975*0 + 3*685*FLEN/8, x4, x1, x2)

inst_81326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10000ffffffffff; valaddr_reg:x3; val_offset:243978*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243978*0 + 3*686*FLEN/8, x4, x1, x2)

inst_81327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10001ffffffffff; valaddr_reg:x3; val_offset:243981*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243981*0 + 3*687*FLEN/8, x4, x1, x2)

inst_81328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10003ffffffffff; valaddr_reg:x3; val_offset:243984*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243984*0 + 3*688*FLEN/8, x4, x1, x2)

inst_81329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10007ffffffffff; valaddr_reg:x3; val_offset:243987*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243987*0 + 3*689*FLEN/8, x4, x1, x2)

inst_81330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1000fffffffffff; valaddr_reg:x3; val_offset:243990*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243990*0 + 3*690*FLEN/8, x4, x1, x2)

inst_81331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1001fffffffffff; valaddr_reg:x3; val_offset:243993*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243993*0 + 3*691*FLEN/8, x4, x1, x2)

inst_81332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1003fffffffffff; valaddr_reg:x3; val_offset:243996*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243996*0 + 3*692*FLEN/8, x4, x1, x2)

inst_81333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x1007fffffffffff; valaddr_reg:x3; val_offset:243999*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243999*0 + 3*693*FLEN/8, x4, x1, x2)

inst_81334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x100ffffffffffff; valaddr_reg:x3; val_offset:244002*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244002*0 + 3*694*FLEN/8, x4, x1, x2)

inst_81335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x101ffffffffffff; valaddr_reg:x3; val_offset:244005*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244005*0 + 3*695*FLEN/8, x4, x1, x2)

inst_81336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x103ffffffffffff; valaddr_reg:x3; val_offset:244008*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244008*0 + 3*696*FLEN/8, x4, x1, x2)

inst_81337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x107ffffffffffff; valaddr_reg:x3; val_offset:244011*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244011*0 + 3*697*FLEN/8, x4, x1, x2)

inst_81338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x108000000000000; valaddr_reg:x3; val_offset:244014*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244014*0 + 3*698*FLEN/8, x4, x1, x2)

inst_81339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10c000000000000; valaddr_reg:x3; val_offset:244017*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244017*0 + 3*699*FLEN/8, x4, x1, x2)

inst_81340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10e000000000000; valaddr_reg:x3; val_offset:244020*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244020*0 + 3*700*FLEN/8, x4, x1, x2)

inst_81341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10f000000000000; valaddr_reg:x3; val_offset:244023*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244023*0 + 3*701*FLEN/8, x4, x1, x2)

inst_81342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10f800000000000; valaddr_reg:x3; val_offset:244026*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244026*0 + 3*702*FLEN/8, x4, x1, x2)

inst_81343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fc00000000000; valaddr_reg:x3; val_offset:244029*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244029*0 + 3*703*FLEN/8, x4, x1, x2)

inst_81344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fe00000000000; valaddr_reg:x3; val_offset:244032*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244032*0 + 3*704*FLEN/8, x4, x1, x2)

inst_81345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ff00000000000; valaddr_reg:x3; val_offset:244035*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244035*0 + 3*705*FLEN/8, x4, x1, x2)

inst_81346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ff80000000000; valaddr_reg:x3; val_offset:244038*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244038*0 + 3*706*FLEN/8, x4, x1, x2)

inst_81347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffc0000000000; valaddr_reg:x3; val_offset:244041*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244041*0 + 3*707*FLEN/8, x4, x1, x2)

inst_81348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffe0000000000; valaddr_reg:x3; val_offset:244044*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244044*0 + 3*708*FLEN/8, x4, x1, x2)

inst_81349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fff0000000000; valaddr_reg:x3; val_offset:244047*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244047*0 + 3*709*FLEN/8, x4, x1, x2)

inst_81350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fff8000000000; valaddr_reg:x3; val_offset:244050*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244050*0 + 3*710*FLEN/8, x4, x1, x2)

inst_81351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffc000000000; valaddr_reg:x3; val_offset:244053*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244053*0 + 3*711*FLEN/8, x4, x1, x2)

inst_81352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffe000000000; valaddr_reg:x3; val_offset:244056*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244056*0 + 3*712*FLEN/8, x4, x1, x2)

inst_81353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffff000000000; valaddr_reg:x3; val_offset:244059*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244059*0 + 3*713*FLEN/8, x4, x1, x2)

inst_81354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffff800000000; valaddr_reg:x3; val_offset:244062*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244062*0 + 3*714*FLEN/8, x4, x1, x2)

inst_81355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffc00000000; valaddr_reg:x3; val_offset:244065*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244065*0 + 3*715*FLEN/8, x4, x1, x2)

inst_81356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffe00000000; valaddr_reg:x3; val_offset:244068*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244068*0 + 3*716*FLEN/8, x4, x1, x2)

inst_81357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffff00000000; valaddr_reg:x3; val_offset:244071*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244071*0 + 3*717*FLEN/8, x4, x1, x2)

inst_81358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffff80000000; valaddr_reg:x3; val_offset:244074*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244074*0 + 3*718*FLEN/8, x4, x1, x2)

inst_81359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffc0000000; valaddr_reg:x3; val_offset:244077*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244077*0 + 3*719*FLEN/8, x4, x1, x2)

inst_81360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffe0000000; valaddr_reg:x3; val_offset:244080*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244080*0 + 3*720*FLEN/8, x4, x1, x2)

inst_81361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffff0000000; valaddr_reg:x3; val_offset:244083*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244083*0 + 3*721*FLEN/8, x4, x1, x2)

inst_81362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffff8000000; valaddr_reg:x3; val_offset:244086*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244086*0 + 3*722*FLEN/8, x4, x1, x2)

inst_81363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffc000000; valaddr_reg:x3; val_offset:244089*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244089*0 + 3*723*FLEN/8, x4, x1, x2)

inst_81364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffe000000; valaddr_reg:x3; val_offset:244092*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244092*0 + 3*724*FLEN/8, x4, x1, x2)

inst_81365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffff000000; valaddr_reg:x3; val_offset:244095*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244095*0 + 3*725*FLEN/8, x4, x1, x2)

inst_81366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffff800000; valaddr_reg:x3; val_offset:244098*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244098*0 + 3*726*FLEN/8, x4, x1, x2)

inst_81367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffc00000; valaddr_reg:x3; val_offset:244101*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244101*0 + 3*727*FLEN/8, x4, x1, x2)

inst_81368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffe00000; valaddr_reg:x3; val_offset:244104*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244104*0 + 3*728*FLEN/8, x4, x1, x2)

inst_81369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffff00000; valaddr_reg:x3; val_offset:244107*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244107*0 + 3*729*FLEN/8, x4, x1, x2)

inst_81370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffff80000; valaddr_reg:x3; val_offset:244110*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244110*0 + 3*730*FLEN/8, x4, x1, x2)

inst_81371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffc0000; valaddr_reg:x3; val_offset:244113*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244113*0 + 3*731*FLEN/8, x4, x1, x2)

inst_81372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffe0000; valaddr_reg:x3; val_offset:244116*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244116*0 + 3*732*FLEN/8, x4, x1, x2)

inst_81373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffff0000; valaddr_reg:x3; val_offset:244119*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244119*0 + 3*733*FLEN/8, x4, x1, x2)

inst_81374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffff8000; valaddr_reg:x3; val_offset:244122*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244122*0 + 3*734*FLEN/8, x4, x1, x2)

inst_81375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffc000; valaddr_reg:x3; val_offset:244125*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244125*0 + 3*735*FLEN/8, x4, x1, x2)

inst_81376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffe000; valaddr_reg:x3; val_offset:244128*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244128*0 + 3*736*FLEN/8, x4, x1, x2)

inst_81377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffff000; valaddr_reg:x3; val_offset:244131*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244131*0 + 3*737*FLEN/8, x4, x1, x2)

inst_81378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffff800; valaddr_reg:x3; val_offset:244134*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244134*0 + 3*738*FLEN/8, x4, x1, x2)

inst_81379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffc00; valaddr_reg:x3; val_offset:244137*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244137*0 + 3*739*FLEN/8, x4, x1, x2)

inst_81380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffe00; valaddr_reg:x3; val_offset:244140*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244140*0 + 3*740*FLEN/8, x4, x1, x2)

inst_81381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffff00; valaddr_reg:x3; val_offset:244143*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244143*0 + 3*741*FLEN/8, x4, x1, x2)

inst_81382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffff80; valaddr_reg:x3; val_offset:244146*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244146*0 + 3*742*FLEN/8, x4, x1, x2)

inst_81383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffffc0; valaddr_reg:x3; val_offset:244149*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244149*0 + 3*743*FLEN/8, x4, x1, x2)

inst_81384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffffe0; valaddr_reg:x3; val_offset:244152*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244152*0 + 3*744*FLEN/8, x4, x1, x2)

inst_81385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffff0; valaddr_reg:x3; val_offset:244155*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244155*0 + 3*745*FLEN/8, x4, x1, x2)

inst_81386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffff8; valaddr_reg:x3; val_offset:244158*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244158*0 + 3*746*FLEN/8, x4, x1, x2)

inst_81387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffffc; valaddr_reg:x3; val_offset:244161*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244161*0 + 3*747*FLEN/8, x4, x1, x2)

inst_81388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10ffffffffffffe; valaddr_reg:x3; val_offset:244164*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244164*0 + 3*748*FLEN/8, x4, x1, x2)

inst_81389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fd861faafebb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fd861faafebb; op2val:0x0;
op3val:0x10fffffffffffff; valaddr_reg:x3; val_offset:244167*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244167*0 + 3*749*FLEN/8, x4, x1, x2)

inst_81390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000000000; valaddr_reg:x3; val_offset:244170*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244170*0 + 3*750*FLEN/8, x4, x1, x2)

inst_81391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000000001; valaddr_reg:x3; val_offset:244173*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244173*0 + 3*751*FLEN/8, x4, x1, x2)

inst_81392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000000003; valaddr_reg:x3; val_offset:244176*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244176*0 + 3*752*FLEN/8, x4, x1, x2)

inst_81393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000000007; valaddr_reg:x3; val_offset:244179*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244179*0 + 3*753*FLEN/8, x4, x1, x2)

inst_81394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000000000f; valaddr_reg:x3; val_offset:244182*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244182*0 + 3*754*FLEN/8, x4, x1, x2)

inst_81395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000000001f; valaddr_reg:x3; val_offset:244185*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244185*0 + 3*755*FLEN/8, x4, x1, x2)

inst_81396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000000003f; valaddr_reg:x3; val_offset:244188*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244188*0 + 3*756*FLEN/8, x4, x1, x2)

inst_81397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000000007f; valaddr_reg:x3; val_offset:244191*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244191*0 + 3*757*FLEN/8, x4, x1, x2)

inst_81398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a00000000000ff; valaddr_reg:x3; val_offset:244194*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244194*0 + 3*758*FLEN/8, x4, x1, x2)

inst_81399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a00000000001ff; valaddr_reg:x3; val_offset:244197*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244197*0 + 3*759*FLEN/8, x4, x1, x2)

inst_81400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a00000000003ff; valaddr_reg:x3; val_offset:244200*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244200*0 + 3*760*FLEN/8, x4, x1, x2)

inst_81401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a00000000007ff; valaddr_reg:x3; val_offset:244203*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244203*0 + 3*761*FLEN/8, x4, x1, x2)

inst_81402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000000fff; valaddr_reg:x3; val_offset:244206*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244206*0 + 3*762*FLEN/8, x4, x1, x2)

inst_81403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000001fff; valaddr_reg:x3; val_offset:244209*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244209*0 + 3*763*FLEN/8, x4, x1, x2)

inst_81404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000003fff; valaddr_reg:x3; val_offset:244212*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244212*0 + 3*764*FLEN/8, x4, x1, x2)

inst_81405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a0000000007fff; valaddr_reg:x3; val_offset:244215*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244215*0 + 3*765*FLEN/8, x4, x1, x2)

inst_81406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000000ffff; valaddr_reg:x3; val_offset:244218*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244218*0 + 3*766*FLEN/8, x4, x1, x2)

inst_81407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90cd3970eae8a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x47064be436178 and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90cd3970eae8a; op2val:0x9fc47064be436178;
op3val:0xb8a000000001ffff; valaddr_reg:x3; val_offset:244221*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 244221*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110272,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110273,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110275,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110279,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110287,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110303,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110335,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110399,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110527,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110783,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501111295,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501112319,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501114367,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501118463,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501126655,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501143039,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501175807,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501241343,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501372415,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501634559,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433502158847,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433503207423,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433505304575,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433509498879,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433517887487,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433534664703,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433568219135,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433635327999,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433769545727,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434037981183,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434574852095,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904435648593919,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904437796077567,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904442091044863,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904450680979455,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904467860848639,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904502220587007,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904570940063743,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904708379017215,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904983256924159,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263905533012738047,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263906632524365823,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263908831547621375,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263913229594132479,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263922025687154687,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263939617873199103,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263974802245287935,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264045170989465599,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264185908477820927,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264467383454531583,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9265030333407952895,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795519,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795520,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267282133221638144,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267845083175059456,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268126558151770112,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268267295640125440,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268337664384303104,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268372848756391936,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268390440942436352,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268399237035458560,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268403635081969664,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268405834105225216,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268406933616852992,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407483372666880,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407758250573824,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407895689527296,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407964409004032,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407998768742400,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408015948611584,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408024538546176,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408028833513472,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408030980997120,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032054738944,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032591609856,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032860045312,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032994263040,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033061371904,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033094926336,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033111703552,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033120092160,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033124286464,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033126383616,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127432192,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127956480,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128218624,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128349696,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128415232,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128448000,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128464384,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128472576,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128476672,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128478720,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128479744,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480256,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480512,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480640,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480704,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480736,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480752,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480760,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480764,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480766,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480767,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6892922968118633786,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6892959021914118052,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902528,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902529,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902531,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902535,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902543,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902559,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902591,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902655,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978902783,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978903039,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978903551,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978904575,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978906623,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978910719,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978918911,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978935295,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429978968063,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429979033599,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429979164671,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429979426815,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429979951103,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429980999679,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429983096831,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429987291135,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074429995679743,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074430012456959,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074430046011391,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074430113120255,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074430247337983,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074430515773439,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074431052644351,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074432126386175,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074434273869823,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074438568837119,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074447158771711,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074464338640895,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074498698379263,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074567417855999,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074704856809471,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472074979734716415,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472075529490530303,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472076629002158079,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472078828025413631,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472083226071924735,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472092022164946943,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472109614350991359,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472144798723080191,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472215167467257855,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472355904955613183,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4472637379932323839,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4473200329885745151,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4474326229792587775,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4474326229792587776,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4475452129699430400,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476015079652851712,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476296554629562368,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476437292117917696,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476507660862095360,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476542845234184192,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476560437420228608,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476569233513250816,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476573631559761920,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476575830583017472,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476576930094645248,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476577479850459136,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476577754728366080,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476577892167319552,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476577960886796288,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476577995246534656,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578012426403840,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578021016338432,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578025311305728,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578027458789376,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578028532531200,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029069402112,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029337837568,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029472055296,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029539164160,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029572718592,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029589495808,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029597884416,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029602078720,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029604175872,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029605224448,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029605748736,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606010880,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606141952,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606207488,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606240256,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606256640,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606264832,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606268928,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606270976,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272000,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272512,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272768,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272896,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272960,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606272992,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606273008,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606273016,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606273020,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606273022,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4476578029606273023,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893004333008041854,64,FLEN)
NAN_BOXED(2320644766460393416,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962752,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962753,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962755,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962759,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962767,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962783,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962815,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962879,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963007,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963263,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963775,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637964799,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637966847,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637970943,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637979135,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637995519,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638028287,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638093823,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638224895,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638487039,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431639011327,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431640059903,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431642157055,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431646351359,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431654739967,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431671517183,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431705071615,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431772180479,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431906398207,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432174833663,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432711704575,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422433785446399,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422435932930047,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422440227897343,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422448817831935,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422465997701119,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422500357439487,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422569076916223,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422706515869695,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422981393776639,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286423531149590527,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286424630661218303,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286426829684473855,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286431227730984959,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286440023824007167,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286457616010051583,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286492800382140415,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286563169126318079,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286703906614673407,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286985381591384063,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9287548331544805375,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451647999,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451648000,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9289800131358490624,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290363081311911936,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290644556288622592,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290785293776977920,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290855662521155584,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290890846893244416,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290908439079288832,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290917235172311040,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290921633218822144,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290923832242077696,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290924931753705472,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925481509519360,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925756387426304,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925893826379776,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925962545856512,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925996905594880,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926014085464064,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926022675398656,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926026970365952,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926029117849600,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030191591424,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030728462336,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030996897792,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031131115520,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031198224384,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031231778816,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031248556032,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6893018668550483993,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927936,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927937,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927939,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927943,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927951,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927967,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927999,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928063,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928191,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928447,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928959,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037929983,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037932031,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037936127,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037944319,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037960703,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037993471,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038059007,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038190079,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038452223,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038976511,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594040025087,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594042122239,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594046316543,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594054705151,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594071482367,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594105036799,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594172145663,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594306363391,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594574798847,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057595111669759,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057596185411583,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057598332895231,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057602627862527,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057611217797119,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057628397666303,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057662757404671,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057731476881407,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057868915834879,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058143793741823,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058693549555711,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72059793061183487,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72061992084439039,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72066390130950143,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72075186223972351,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72092778410016767,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72127962782105599,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72198331526283263,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72339069014638591,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72620543991349247,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(73183493944770559,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613183,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613184,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75435293758455808,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75998243711877120,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76279718688587776,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76420456176943104,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76490824921120768,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76526009293209600,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76543601479254016,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76552397572276224,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76556795618787328,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76558994642042880,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560094153670656,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560643909484544,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560918787391488,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561056226344960,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561124945821696,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561159305560064,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561176485429248,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561185075363840,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561189370331136,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561191517814784,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561192591556608,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193128427520,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193396862976,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193531080704,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193598189568,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193631744000,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193648521216,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193656909824,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193661104128,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193663201280,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664249856,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664774144,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665036288,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665167360,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665232896,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665265664,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665282048,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665290240,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665294336,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665296384,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297408,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297920,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298176,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298304,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298368,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298400,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298416,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298424,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298428,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298430,64,FLEN)
NAN_BOXED(6893037982189289147,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298431,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445184,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445185,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445187,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445191,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445199,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445215,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445247,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445311,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445439,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252445695,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252446207,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252447231,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252449279,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252453375,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252461567,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252477951,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252510719,64,FLEN)
NAN_BOXED(6893054807579209354,64,FLEN)
NAN_BOXED(11512450125456957816,64,FLEN)
NAN_BOXED(13303633299252576255,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
