
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_97536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc00fffffffffff; valaddr_reg:x3; val_offset:292608*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292608*0 + 3*0*FLEN/8, x4, x1, x2)

inst_97537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc01fffffffffff; valaddr_reg:x3; val_offset:292611*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292611*0 + 3*1*FLEN/8, x4, x1, x2)

inst_97538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc03fffffffffff; valaddr_reg:x3; val_offset:292614*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292614*0 + 3*2*FLEN/8, x4, x1, x2)

inst_97539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc07fffffffffff; valaddr_reg:x3; val_offset:292617*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292617*0 + 3*3*FLEN/8, x4, x1, x2)

inst_97540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc0ffffffffffff; valaddr_reg:x3; val_offset:292620*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292620*0 + 3*4*FLEN/8, x4, x1, x2)

inst_97541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc1ffffffffffff; valaddr_reg:x3; val_offset:292623*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292623*0 + 3*5*FLEN/8, x4, x1, x2)

inst_97542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc3ffffffffffff; valaddr_reg:x3; val_offset:292626*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292626*0 + 3*6*FLEN/8, x4, x1, x2)

inst_97543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc7ffffffffffff; valaddr_reg:x3; val_offset:292629*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292629*0 + 3*7*FLEN/8, x4, x1, x2)

inst_97544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfc8000000000000; valaddr_reg:x3; val_offset:292632*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292632*0 + 3*8*FLEN/8, x4, x1, x2)

inst_97545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcc000000000000; valaddr_reg:x3; val_offset:292635*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292635*0 + 3*9*FLEN/8, x4, x1, x2)

inst_97546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfce000000000000; valaddr_reg:x3; val_offset:292638*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292638*0 + 3*10*FLEN/8, x4, x1, x2)

inst_97547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcf000000000000; valaddr_reg:x3; val_offset:292641*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292641*0 + 3*11*FLEN/8, x4, x1, x2)

inst_97548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcf800000000000; valaddr_reg:x3; val_offset:292644*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292644*0 + 3*12*FLEN/8, x4, x1, x2)

inst_97549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfc00000000000; valaddr_reg:x3; val_offset:292647*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292647*0 + 3*13*FLEN/8, x4, x1, x2)

inst_97550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfe00000000000; valaddr_reg:x3; val_offset:292650*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292650*0 + 3*14*FLEN/8, x4, x1, x2)

inst_97551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcff00000000000; valaddr_reg:x3; val_offset:292653*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292653*0 + 3*15*FLEN/8, x4, x1, x2)

inst_97552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcff80000000000; valaddr_reg:x3; val_offset:292656*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292656*0 + 3*16*FLEN/8, x4, x1, x2)

inst_97553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffc0000000000; valaddr_reg:x3; val_offset:292659*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292659*0 + 3*17*FLEN/8, x4, x1, x2)

inst_97554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffe0000000000; valaddr_reg:x3; val_offset:292662*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292662*0 + 3*18*FLEN/8, x4, x1, x2)

inst_97555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfff0000000000; valaddr_reg:x3; val_offset:292665*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292665*0 + 3*19*FLEN/8, x4, x1, x2)

inst_97556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfff8000000000; valaddr_reg:x3; val_offset:292668*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292668*0 + 3*20*FLEN/8, x4, x1, x2)

inst_97557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffc000000000; valaddr_reg:x3; val_offset:292671*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292671*0 + 3*21*FLEN/8, x4, x1, x2)

inst_97558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffe000000000; valaddr_reg:x3; val_offset:292674*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292674*0 + 3*22*FLEN/8, x4, x1, x2)

inst_97559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffff000000000; valaddr_reg:x3; val_offset:292677*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292677*0 + 3*23*FLEN/8, x4, x1, x2)

inst_97560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffff800000000; valaddr_reg:x3; val_offset:292680*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292680*0 + 3*24*FLEN/8, x4, x1, x2)

inst_97561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffc00000000; valaddr_reg:x3; val_offset:292683*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292683*0 + 3*25*FLEN/8, x4, x1, x2)

inst_97562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffe00000000; valaddr_reg:x3; val_offset:292686*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292686*0 + 3*26*FLEN/8, x4, x1, x2)

inst_97563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffff00000000; valaddr_reg:x3; val_offset:292689*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292689*0 + 3*27*FLEN/8, x4, x1, x2)

inst_97564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffff80000000; valaddr_reg:x3; val_offset:292692*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292692*0 + 3*28*FLEN/8, x4, x1, x2)

inst_97565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffc0000000; valaddr_reg:x3; val_offset:292695*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292695*0 + 3*29*FLEN/8, x4, x1, x2)

inst_97566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffe0000000; valaddr_reg:x3; val_offset:292698*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292698*0 + 3*30*FLEN/8, x4, x1, x2)

inst_97567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffff0000000; valaddr_reg:x3; val_offset:292701*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292701*0 + 3*31*FLEN/8, x4, x1, x2)

inst_97568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffff8000000; valaddr_reg:x3; val_offset:292704*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292704*0 + 3*32*FLEN/8, x4, x1, x2)

inst_97569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffc000000; valaddr_reg:x3; val_offset:292707*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292707*0 + 3*33*FLEN/8, x4, x1, x2)

inst_97570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffe000000; valaddr_reg:x3; val_offset:292710*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292710*0 + 3*34*FLEN/8, x4, x1, x2)

inst_97571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffff000000; valaddr_reg:x3; val_offset:292713*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292713*0 + 3*35*FLEN/8, x4, x1, x2)

inst_97572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffff800000; valaddr_reg:x3; val_offset:292716*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292716*0 + 3*36*FLEN/8, x4, x1, x2)

inst_97573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffc00000; valaddr_reg:x3; val_offset:292719*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292719*0 + 3*37*FLEN/8, x4, x1, x2)

inst_97574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffe00000; valaddr_reg:x3; val_offset:292722*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292722*0 + 3*38*FLEN/8, x4, x1, x2)

inst_97575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffff00000; valaddr_reg:x3; val_offset:292725*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292725*0 + 3*39*FLEN/8, x4, x1, x2)

inst_97576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffff80000; valaddr_reg:x3; val_offset:292728*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292728*0 + 3*40*FLEN/8, x4, x1, x2)

inst_97577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffc0000; valaddr_reg:x3; val_offset:292731*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292731*0 + 3*41*FLEN/8, x4, x1, x2)

inst_97578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffe0000; valaddr_reg:x3; val_offset:292734*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292734*0 + 3*42*FLEN/8, x4, x1, x2)

inst_97579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffff0000; valaddr_reg:x3; val_offset:292737*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292737*0 + 3*43*FLEN/8, x4, x1, x2)

inst_97580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffff8000; valaddr_reg:x3; val_offset:292740*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292740*0 + 3*44*FLEN/8, x4, x1, x2)

inst_97581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffc000; valaddr_reg:x3; val_offset:292743*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292743*0 + 3*45*FLEN/8, x4, x1, x2)

inst_97582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffe000; valaddr_reg:x3; val_offset:292746*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292746*0 + 3*46*FLEN/8, x4, x1, x2)

inst_97583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffff000; valaddr_reg:x3; val_offset:292749*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292749*0 + 3*47*FLEN/8, x4, x1, x2)

inst_97584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffff800; valaddr_reg:x3; val_offset:292752*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292752*0 + 3*48*FLEN/8, x4, x1, x2)

inst_97585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffc00; valaddr_reg:x3; val_offset:292755*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292755*0 + 3*49*FLEN/8, x4, x1, x2)

inst_97586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffe00; valaddr_reg:x3; val_offset:292758*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292758*0 + 3*50*FLEN/8, x4, x1, x2)

inst_97587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffff00; valaddr_reg:x3; val_offset:292761*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292761*0 + 3*51*FLEN/8, x4, x1, x2)

inst_97588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffff80; valaddr_reg:x3; val_offset:292764*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292764*0 + 3*52*FLEN/8, x4, x1, x2)

inst_97589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffffc0; valaddr_reg:x3; val_offset:292767*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292767*0 + 3*53*FLEN/8, x4, x1, x2)

inst_97590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffffe0; valaddr_reg:x3; val_offset:292770*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292770*0 + 3*54*FLEN/8, x4, x1, x2)

inst_97591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffff0; valaddr_reg:x3; val_offset:292773*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292773*0 + 3*55*FLEN/8, x4, x1, x2)

inst_97592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffff8; valaddr_reg:x3; val_offset:292776*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292776*0 + 3*56*FLEN/8, x4, x1, x2)

inst_97593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffffc; valaddr_reg:x3; val_offset:292779*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292779*0 + 3*57*FLEN/8, x4, x1, x2)

inst_97594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcffffffffffffe; valaddr_reg:x3; val_offset:292782*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292782*0 + 3*58*FLEN/8, x4, x1, x2)

inst_97595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea5ed10729949 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0b4ab5fa9f51f and fs3 == 1 and fe3 == 0x3fc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faea5ed10729949; op2val:0x9fc0b4ab5fa9f51f;
op3val:0xbfcfffffffffffff; valaddr_reg:x3; val_offset:292785*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292785*0 + 3*59*FLEN/8, x4, x1, x2)

inst_97596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:292788*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292788*0 + 3*60*FLEN/8, x4, x1, x2)

inst_97597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:292791*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292791*0 + 3*61*FLEN/8, x4, x1, x2)

inst_97598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:292794*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292794*0 + 3*62*FLEN/8, x4, x1, x2)

inst_97599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:292797*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292797*0 + 3*63*FLEN/8, x4, x1, x2)

inst_97600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:292800*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292800*0 + 3*64*FLEN/8, x4, x1, x2)

inst_97601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:292803*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292803*0 + 3*65*FLEN/8, x4, x1, x2)

inst_97602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:292806*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292806*0 + 3*66*FLEN/8, x4, x1, x2)

inst_97603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:292809*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292809*0 + 3*67*FLEN/8, x4, x1, x2)

inst_97604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:292812*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292812*0 + 3*68*FLEN/8, x4, x1, x2)

inst_97605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:292815*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292815*0 + 3*69*FLEN/8, x4, x1, x2)

inst_97606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:292818*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292818*0 + 3*70*FLEN/8, x4, x1, x2)

inst_97607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:292821*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292821*0 + 3*71*FLEN/8, x4, x1, x2)

inst_97608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:292824*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292824*0 + 3*72*FLEN/8, x4, x1, x2)

inst_97609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:292827*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292827*0 + 3*73*FLEN/8, x4, x1, x2)

inst_97610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:292830*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292830*0 + 3*74*FLEN/8, x4, x1, x2)

inst_97611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:292833*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292833*0 + 3*75*FLEN/8, x4, x1, x2)

inst_97612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:292836*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292836*0 + 3*76*FLEN/8, x4, x1, x2)

inst_97613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:292839*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292839*0 + 3*77*FLEN/8, x4, x1, x2)

inst_97614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:292842*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292842*0 + 3*78*FLEN/8, x4, x1, x2)

inst_97615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:292845*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292845*0 + 3*79*FLEN/8, x4, x1, x2)

inst_97616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:292848*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292848*0 + 3*80*FLEN/8, x4, x1, x2)

inst_97617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:292851*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292851*0 + 3*81*FLEN/8, x4, x1, x2)

inst_97618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:292854*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292854*0 + 3*82*FLEN/8, x4, x1, x2)

inst_97619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:292857*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292857*0 + 3*83*FLEN/8, x4, x1, x2)

inst_97620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:292860*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292860*0 + 3*84*FLEN/8, x4, x1, x2)

inst_97621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:292863*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292863*0 + 3*85*FLEN/8, x4, x1, x2)

inst_97622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:292866*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292866*0 + 3*86*FLEN/8, x4, x1, x2)

inst_97623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:292869*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292869*0 + 3*87*FLEN/8, x4, x1, x2)

inst_97624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:292872*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292872*0 + 3*88*FLEN/8, x4, x1, x2)

inst_97625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:292875*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292875*0 + 3*89*FLEN/8, x4, x1, x2)

inst_97626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:292878*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292878*0 + 3*90*FLEN/8, x4, x1, x2)

inst_97627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:292881*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292881*0 + 3*91*FLEN/8, x4, x1, x2)

inst_97628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:292884*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292884*0 + 3*92*FLEN/8, x4, x1, x2)

inst_97629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:292887*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292887*0 + 3*93*FLEN/8, x4, x1, x2)

inst_97630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:292890*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292890*0 + 3*94*FLEN/8, x4, x1, x2)

inst_97631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:292893*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292893*0 + 3*95*FLEN/8, x4, x1, x2)

inst_97632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:292896*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292896*0 + 3*96*FLEN/8, x4, x1, x2)

inst_97633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:292899*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292899*0 + 3*97*FLEN/8, x4, x1, x2)

inst_97634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:292902*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292902*0 + 3*98*FLEN/8, x4, x1, x2)

inst_97635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:292905*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292905*0 + 3*99*FLEN/8, x4, x1, x2)

inst_97636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:292908*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292908*0 + 3*100*FLEN/8, x4, x1, x2)

inst_97637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:292911*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292911*0 + 3*101*FLEN/8, x4, x1, x2)

inst_97638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:292914*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292914*0 + 3*102*FLEN/8, x4, x1, x2)

inst_97639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:292917*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292917*0 + 3*103*FLEN/8, x4, x1, x2)

inst_97640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:292920*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292920*0 + 3*104*FLEN/8, x4, x1, x2)

inst_97641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:292923*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292923*0 + 3*105*FLEN/8, x4, x1, x2)

inst_97642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:292926*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292926*0 + 3*106*FLEN/8, x4, x1, x2)

inst_97643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:292929*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292929*0 + 3*107*FLEN/8, x4, x1, x2)

inst_97644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:292932*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292932*0 + 3*108*FLEN/8, x4, x1, x2)

inst_97645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:292935*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292935*0 + 3*109*FLEN/8, x4, x1, x2)

inst_97646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:292938*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292938*0 + 3*110*FLEN/8, x4, x1, x2)

inst_97647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:292941*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292941*0 + 3*111*FLEN/8, x4, x1, x2)

inst_97648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:292944*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292944*0 + 3*112*FLEN/8, x4, x1, x2)

inst_97649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:292947*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292947*0 + 3*113*FLEN/8, x4, x1, x2)

inst_97650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:292950*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292950*0 + 3*114*FLEN/8, x4, x1, x2)

inst_97651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:292953*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292953*0 + 3*115*FLEN/8, x4, x1, x2)

inst_97652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:292956*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292956*0 + 3*116*FLEN/8, x4, x1, x2)

inst_97653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:292959*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292959*0 + 3*117*FLEN/8, x4, x1, x2)

inst_97654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:292962*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292962*0 + 3*118*FLEN/8, x4, x1, x2)

inst_97655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:292965*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292965*0 + 3*119*FLEN/8, x4, x1, x2)

inst_97656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:292968*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292968*0 + 3*120*FLEN/8, x4, x1, x2)

inst_97657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:292971*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292971*0 + 3*121*FLEN/8, x4, x1, x2)

inst_97658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:292974*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292974*0 + 3*122*FLEN/8, x4, x1, x2)

inst_97659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:292977*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292977*0 + 3*123*FLEN/8, x4, x1, x2)

inst_97660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:292980*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292980*0 + 3*124*FLEN/8, x4, x1, x2)

inst_97661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:292983*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292983*0 + 3*125*FLEN/8, x4, x1, x2)

inst_97662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:292986*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292986*0 + 3*126*FLEN/8, x4, x1, x2)

inst_97663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:292989*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292989*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_97664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:292992*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292992*0 + 3*128*FLEN/8, x4, x1, x2)

inst_97665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:292995*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292995*0 + 3*129*FLEN/8, x4, x1, x2)

inst_97666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:292998*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 292998*0 + 3*130*FLEN/8, x4, x1, x2)

inst_97667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:293001*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293001*0 + 3*131*FLEN/8, x4, x1, x2)

inst_97668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:293004*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293004*0 + 3*132*FLEN/8, x4, x1, x2)

inst_97669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:293007*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293007*0 + 3*133*FLEN/8, x4, x1, x2)

inst_97670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:293010*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293010*0 + 3*134*FLEN/8, x4, x1, x2)

inst_97671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:293013*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293013*0 + 3*135*FLEN/8, x4, x1, x2)

inst_97672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:293016*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293016*0 + 3*136*FLEN/8, x4, x1, x2)

inst_97673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:293019*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293019*0 + 3*137*FLEN/8, x4, x1, x2)

inst_97674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:293022*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293022*0 + 3*138*FLEN/8, x4, x1, x2)

inst_97675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:293025*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293025*0 + 3*139*FLEN/8, x4, x1, x2)

inst_97676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:293028*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293028*0 + 3*140*FLEN/8, x4, x1, x2)

inst_97677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:293031*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293031*0 + 3*141*FLEN/8, x4, x1, x2)

inst_97678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:293034*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293034*0 + 3*142*FLEN/8, x4, x1, x2)

inst_97679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:293037*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293037*0 + 3*143*FLEN/8, x4, x1, x2)

inst_97680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:293040*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293040*0 + 3*144*FLEN/8, x4, x1, x2)

inst_97681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:293043*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293043*0 + 3*145*FLEN/8, x4, x1, x2)

inst_97682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:293046*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293046*0 + 3*146*FLEN/8, x4, x1, x2)

inst_97683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:293049*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293049*0 + 3*147*FLEN/8, x4, x1, x2)

inst_97684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:293052*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293052*0 + 3*148*FLEN/8, x4, x1, x2)

inst_97685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:293055*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293055*0 + 3*149*FLEN/8, x4, x1, x2)

inst_97686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:293058*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293058*0 + 3*150*FLEN/8, x4, x1, x2)

inst_97687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:293061*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293061*0 + 3*151*FLEN/8, x4, x1, x2)

inst_97688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:293064*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293064*0 + 3*152*FLEN/8, x4, x1, x2)

inst_97689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:293067*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293067*0 + 3*153*FLEN/8, x4, x1, x2)

inst_97690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:293070*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293070*0 + 3*154*FLEN/8, x4, x1, x2)

inst_97691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:293073*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293073*0 + 3*155*FLEN/8, x4, x1, x2)

inst_97692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:293076*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293076*0 + 3*156*FLEN/8, x4, x1, x2)

inst_97693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:293079*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293079*0 + 3*157*FLEN/8, x4, x1, x2)

inst_97694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:293082*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293082*0 + 3*158*FLEN/8, x4, x1, x2)

inst_97695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:293085*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293085*0 + 3*159*FLEN/8, x4, x1, x2)

inst_97696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:293088*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293088*0 + 3*160*FLEN/8, x4, x1, x2)

inst_97697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:293091*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293091*0 + 3*161*FLEN/8, x4, x1, x2)

inst_97698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:293094*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293094*0 + 3*162*FLEN/8, x4, x1, x2)

inst_97699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:293097*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293097*0 + 3*163*FLEN/8, x4, x1, x2)

inst_97700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:293100*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293100*0 + 3*164*FLEN/8, x4, x1, x2)

inst_97701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:293103*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293103*0 + 3*165*FLEN/8, x4, x1, x2)

inst_97702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:293106*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293106*0 + 3*166*FLEN/8, x4, x1, x2)

inst_97703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:293109*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293109*0 + 3*167*FLEN/8, x4, x1, x2)

inst_97704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:293112*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293112*0 + 3*168*FLEN/8, x4, x1, x2)

inst_97705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:293115*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293115*0 + 3*169*FLEN/8, x4, x1, x2)

inst_97706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:293118*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293118*0 + 3*170*FLEN/8, x4, x1, x2)

inst_97707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:293121*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293121*0 + 3*171*FLEN/8, x4, x1, x2)

inst_97708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:293124*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293124*0 + 3*172*FLEN/8, x4, x1, x2)

inst_97709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:293127*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293127*0 + 3*173*FLEN/8, x4, x1, x2)

inst_97710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:293130*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293130*0 + 3*174*FLEN/8, x4, x1, x2)

inst_97711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:293133*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293133*0 + 3*175*FLEN/8, x4, x1, x2)

inst_97712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:293136*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293136*0 + 3*176*FLEN/8, x4, x1, x2)

inst_97713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:293139*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293139*0 + 3*177*FLEN/8, x4, x1, x2)

inst_97714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:293142*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293142*0 + 3*178*FLEN/8, x4, x1, x2)

inst_97715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:293145*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293145*0 + 3*179*FLEN/8, x4, x1, x2)

inst_97716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:293148*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293148*0 + 3*180*FLEN/8, x4, x1, x2)

inst_97717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:293151*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293151*0 + 3*181*FLEN/8, x4, x1, x2)

inst_97718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:293154*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293154*0 + 3*182*FLEN/8, x4, x1, x2)

inst_97719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:293157*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293157*0 + 3*183*FLEN/8, x4, x1, x2)

inst_97720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:293160*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293160*0 + 3*184*FLEN/8, x4, x1, x2)

inst_97721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeae5be0e6f0b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeae5be0e6f0b2; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:293163*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293163*0 + 3*185*FLEN/8, x4, x1, x2)

inst_97722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000000000; valaddr_reg:x3; val_offset:293166*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293166*0 + 3*186*FLEN/8, x4, x1, x2)

inst_97723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000000001; valaddr_reg:x3; val_offset:293169*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293169*0 + 3*187*FLEN/8, x4, x1, x2)

inst_97724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000000003; valaddr_reg:x3; val_offset:293172*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293172*0 + 3*188*FLEN/8, x4, x1, x2)

inst_97725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000000007; valaddr_reg:x3; val_offset:293175*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293175*0 + 3*189*FLEN/8, x4, x1, x2)

inst_97726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000000000f; valaddr_reg:x3; val_offset:293178*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293178*0 + 3*190*FLEN/8, x4, x1, x2)

inst_97727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000000001f; valaddr_reg:x3; val_offset:293181*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293181*0 + 3*191*FLEN/8, x4, x1, x2)

inst_97728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000000003f; valaddr_reg:x3; val_offset:293184*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293184*0 + 3*192*FLEN/8, x4, x1, x2)

inst_97729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000000007f; valaddr_reg:x3; val_offset:293187*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293187*0 + 3*193*FLEN/8, x4, x1, x2)

inst_97730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000000000ff; valaddr_reg:x3; val_offset:293190*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293190*0 + 3*194*FLEN/8, x4, x1, x2)

inst_97731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000000001ff; valaddr_reg:x3; val_offset:293193*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293193*0 + 3*195*FLEN/8, x4, x1, x2)

inst_97732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000000003ff; valaddr_reg:x3; val_offset:293196*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293196*0 + 3*196*FLEN/8, x4, x1, x2)

inst_97733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000000007ff; valaddr_reg:x3; val_offset:293199*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293199*0 + 3*197*FLEN/8, x4, x1, x2)

inst_97734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000000fff; valaddr_reg:x3; val_offset:293202*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293202*0 + 3*198*FLEN/8, x4, x1, x2)

inst_97735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000001fff; valaddr_reg:x3; val_offset:293205*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293205*0 + 3*199*FLEN/8, x4, x1, x2)

inst_97736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000003fff; valaddr_reg:x3; val_offset:293208*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293208*0 + 3*200*FLEN/8, x4, x1, x2)

inst_97737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000007fff; valaddr_reg:x3; val_offset:293211*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293211*0 + 3*201*FLEN/8, x4, x1, x2)

inst_97738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000000ffff; valaddr_reg:x3; val_offset:293214*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293214*0 + 3*202*FLEN/8, x4, x1, x2)

inst_97739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000001ffff; valaddr_reg:x3; val_offset:293217*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293217*0 + 3*203*FLEN/8, x4, x1, x2)

inst_97740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000003ffff; valaddr_reg:x3; val_offset:293220*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293220*0 + 3*204*FLEN/8, x4, x1, x2)

inst_97741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000007ffff; valaddr_reg:x3; val_offset:293223*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293223*0 + 3*205*FLEN/8, x4, x1, x2)

inst_97742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000000fffff; valaddr_reg:x3; val_offset:293226*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293226*0 + 3*206*FLEN/8, x4, x1, x2)

inst_97743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000001fffff; valaddr_reg:x3; val_offset:293229*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293229*0 + 3*207*FLEN/8, x4, x1, x2)

inst_97744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000003fffff; valaddr_reg:x3; val_offset:293232*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293232*0 + 3*208*FLEN/8, x4, x1, x2)

inst_97745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000007fffff; valaddr_reg:x3; val_offset:293235*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293235*0 + 3*209*FLEN/8, x4, x1, x2)

inst_97746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000000ffffff; valaddr_reg:x3; val_offset:293238*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293238*0 + 3*210*FLEN/8, x4, x1, x2)

inst_97747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000001ffffff; valaddr_reg:x3; val_offset:293241*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293241*0 + 3*211*FLEN/8, x4, x1, x2)

inst_97748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000003ffffff; valaddr_reg:x3; val_offset:293244*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293244*0 + 3*212*FLEN/8, x4, x1, x2)

inst_97749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000007ffffff; valaddr_reg:x3; val_offset:293247*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293247*0 + 3*213*FLEN/8, x4, x1, x2)

inst_97750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000000fffffff; valaddr_reg:x3; val_offset:293250*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293250*0 + 3*214*FLEN/8, x4, x1, x2)

inst_97751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000001fffffff; valaddr_reg:x3; val_offset:293253*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293253*0 + 3*215*FLEN/8, x4, x1, x2)

inst_97752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000003fffffff; valaddr_reg:x3; val_offset:293256*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293256*0 + 3*216*FLEN/8, x4, x1, x2)

inst_97753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000007fffffff; valaddr_reg:x3; val_offset:293259*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293259*0 + 3*217*FLEN/8, x4, x1, x2)

inst_97754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00000ffffffff; valaddr_reg:x3; val_offset:293262*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293262*0 + 3*218*FLEN/8, x4, x1, x2)

inst_97755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00001ffffffff; valaddr_reg:x3; val_offset:293265*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293265*0 + 3*219*FLEN/8, x4, x1, x2)

inst_97756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00003ffffffff; valaddr_reg:x3; val_offset:293268*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293268*0 + 3*220*FLEN/8, x4, x1, x2)

inst_97757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00007ffffffff; valaddr_reg:x3; val_offset:293271*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293271*0 + 3*221*FLEN/8, x4, x1, x2)

inst_97758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0000fffffffff; valaddr_reg:x3; val_offset:293274*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293274*0 + 3*222*FLEN/8, x4, x1, x2)

inst_97759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0001fffffffff; valaddr_reg:x3; val_offset:293277*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293277*0 + 3*223*FLEN/8, x4, x1, x2)

inst_97760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0003fffffffff; valaddr_reg:x3; val_offset:293280*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293280*0 + 3*224*FLEN/8, x4, x1, x2)

inst_97761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0007fffffffff; valaddr_reg:x3; val_offset:293283*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293283*0 + 3*225*FLEN/8, x4, x1, x2)

inst_97762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd000ffffffffff; valaddr_reg:x3; val_offset:293286*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293286*0 + 3*226*FLEN/8, x4, x1, x2)

inst_97763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd001ffffffffff; valaddr_reg:x3; val_offset:293289*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293289*0 + 3*227*FLEN/8, x4, x1, x2)

inst_97764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd003ffffffffff; valaddr_reg:x3; val_offset:293292*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293292*0 + 3*228*FLEN/8, x4, x1, x2)

inst_97765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd007ffffffffff; valaddr_reg:x3; val_offset:293295*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293295*0 + 3*229*FLEN/8, x4, x1, x2)

inst_97766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd00fffffffffff; valaddr_reg:x3; val_offset:293298*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293298*0 + 3*230*FLEN/8, x4, x1, x2)

inst_97767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd01fffffffffff; valaddr_reg:x3; val_offset:293301*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293301*0 + 3*231*FLEN/8, x4, x1, x2)

inst_97768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd03fffffffffff; valaddr_reg:x3; val_offset:293304*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293304*0 + 3*232*FLEN/8, x4, x1, x2)

inst_97769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd07fffffffffff; valaddr_reg:x3; val_offset:293307*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293307*0 + 3*233*FLEN/8, x4, x1, x2)

inst_97770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd0ffffffffffff; valaddr_reg:x3; val_offset:293310*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293310*0 + 3*234*FLEN/8, x4, x1, x2)

inst_97771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd1ffffffffffff; valaddr_reg:x3; val_offset:293313*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293313*0 + 3*235*FLEN/8, x4, x1, x2)

inst_97772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd3ffffffffffff; valaddr_reg:x3; val_offset:293316*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293316*0 + 3*236*FLEN/8, x4, x1, x2)

inst_97773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd7ffffffffffff; valaddr_reg:x3; val_offset:293319*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293319*0 + 3*237*FLEN/8, x4, x1, x2)

inst_97774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dd8000000000000; valaddr_reg:x3; val_offset:293322*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293322*0 + 3*238*FLEN/8, x4, x1, x2)

inst_97775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddc000000000000; valaddr_reg:x3; val_offset:293325*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293325*0 + 3*239*FLEN/8, x4, x1, x2)

inst_97776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3dde000000000000; valaddr_reg:x3; val_offset:293328*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293328*0 + 3*240*FLEN/8, x4, x1, x2)

inst_97777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddf000000000000; valaddr_reg:x3; val_offset:293331*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293331*0 + 3*241*FLEN/8, x4, x1, x2)

inst_97778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddf800000000000; valaddr_reg:x3; val_offset:293334*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293334*0 + 3*242*FLEN/8, x4, x1, x2)

inst_97779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfc00000000000; valaddr_reg:x3; val_offset:293337*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293337*0 + 3*243*FLEN/8, x4, x1, x2)

inst_97780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfe00000000000; valaddr_reg:x3; val_offset:293340*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293340*0 + 3*244*FLEN/8, x4, x1, x2)

inst_97781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddff00000000000; valaddr_reg:x3; val_offset:293343*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293343*0 + 3*245*FLEN/8, x4, x1, x2)

inst_97782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddff80000000000; valaddr_reg:x3; val_offset:293346*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293346*0 + 3*246*FLEN/8, x4, x1, x2)

inst_97783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffc0000000000; valaddr_reg:x3; val_offset:293349*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293349*0 + 3*247*FLEN/8, x4, x1, x2)

inst_97784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffe0000000000; valaddr_reg:x3; val_offset:293352*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293352*0 + 3*248*FLEN/8, x4, x1, x2)

inst_97785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfff0000000000; valaddr_reg:x3; val_offset:293355*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293355*0 + 3*249*FLEN/8, x4, x1, x2)

inst_97786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfff8000000000; valaddr_reg:x3; val_offset:293358*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293358*0 + 3*250*FLEN/8, x4, x1, x2)

inst_97787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffc000000000; valaddr_reg:x3; val_offset:293361*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293361*0 + 3*251*FLEN/8, x4, x1, x2)

inst_97788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffe000000000; valaddr_reg:x3; val_offset:293364*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293364*0 + 3*252*FLEN/8, x4, x1, x2)

inst_97789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffff000000000; valaddr_reg:x3; val_offset:293367*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293367*0 + 3*253*FLEN/8, x4, x1, x2)

inst_97790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffff800000000; valaddr_reg:x3; val_offset:293370*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293370*0 + 3*254*FLEN/8, x4, x1, x2)

inst_97791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffc00000000; valaddr_reg:x3; val_offset:293373*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293373*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_97792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffe00000000; valaddr_reg:x3; val_offset:293376*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293376*0 + 3*256*FLEN/8, x4, x1, x2)

inst_97793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffff00000000; valaddr_reg:x3; val_offset:293379*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293379*0 + 3*257*FLEN/8, x4, x1, x2)

inst_97794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffff80000000; valaddr_reg:x3; val_offset:293382*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293382*0 + 3*258*FLEN/8, x4, x1, x2)

inst_97795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffc0000000; valaddr_reg:x3; val_offset:293385*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293385*0 + 3*259*FLEN/8, x4, x1, x2)

inst_97796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffe0000000; valaddr_reg:x3; val_offset:293388*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293388*0 + 3*260*FLEN/8, x4, x1, x2)

inst_97797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffff0000000; valaddr_reg:x3; val_offset:293391*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293391*0 + 3*261*FLEN/8, x4, x1, x2)

inst_97798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffff8000000; valaddr_reg:x3; val_offset:293394*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293394*0 + 3*262*FLEN/8, x4, x1, x2)

inst_97799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffc000000; valaddr_reg:x3; val_offset:293397*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293397*0 + 3*263*FLEN/8, x4, x1, x2)

inst_97800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffe000000; valaddr_reg:x3; val_offset:293400*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293400*0 + 3*264*FLEN/8, x4, x1, x2)

inst_97801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffff000000; valaddr_reg:x3; val_offset:293403*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293403*0 + 3*265*FLEN/8, x4, x1, x2)

inst_97802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffff800000; valaddr_reg:x3; val_offset:293406*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293406*0 + 3*266*FLEN/8, x4, x1, x2)

inst_97803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffc00000; valaddr_reg:x3; val_offset:293409*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293409*0 + 3*267*FLEN/8, x4, x1, x2)

inst_97804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffe00000; valaddr_reg:x3; val_offset:293412*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293412*0 + 3*268*FLEN/8, x4, x1, x2)

inst_97805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffff00000; valaddr_reg:x3; val_offset:293415*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293415*0 + 3*269*FLEN/8, x4, x1, x2)

inst_97806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffff80000; valaddr_reg:x3; val_offset:293418*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293418*0 + 3*270*FLEN/8, x4, x1, x2)

inst_97807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffc0000; valaddr_reg:x3; val_offset:293421*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293421*0 + 3*271*FLEN/8, x4, x1, x2)

inst_97808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffe0000; valaddr_reg:x3; val_offset:293424*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293424*0 + 3*272*FLEN/8, x4, x1, x2)

inst_97809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffff0000; valaddr_reg:x3; val_offset:293427*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293427*0 + 3*273*FLEN/8, x4, x1, x2)

inst_97810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffff8000; valaddr_reg:x3; val_offset:293430*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293430*0 + 3*274*FLEN/8, x4, x1, x2)

inst_97811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffc000; valaddr_reg:x3; val_offset:293433*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293433*0 + 3*275*FLEN/8, x4, x1, x2)

inst_97812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffe000; valaddr_reg:x3; val_offset:293436*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293436*0 + 3*276*FLEN/8, x4, x1, x2)

inst_97813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffff000; valaddr_reg:x3; val_offset:293439*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293439*0 + 3*277*FLEN/8, x4, x1, x2)

inst_97814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffff800; valaddr_reg:x3; val_offset:293442*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293442*0 + 3*278*FLEN/8, x4, x1, x2)

inst_97815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffc00; valaddr_reg:x3; val_offset:293445*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293445*0 + 3*279*FLEN/8, x4, x1, x2)

inst_97816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffe00; valaddr_reg:x3; val_offset:293448*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293448*0 + 3*280*FLEN/8, x4, x1, x2)

inst_97817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffff00; valaddr_reg:x3; val_offset:293451*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293451*0 + 3*281*FLEN/8, x4, x1, x2)

inst_97818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffff80; valaddr_reg:x3; val_offset:293454*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293454*0 + 3*282*FLEN/8, x4, x1, x2)

inst_97819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffffc0; valaddr_reg:x3; val_offset:293457*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293457*0 + 3*283*FLEN/8, x4, x1, x2)

inst_97820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffffe0; valaddr_reg:x3; val_offset:293460*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293460*0 + 3*284*FLEN/8, x4, x1, x2)

inst_97821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffff0; valaddr_reg:x3; val_offset:293463*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293463*0 + 3*285*FLEN/8, x4, x1, x2)

inst_97822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffff8; valaddr_reg:x3; val_offset:293466*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293466*0 + 3*286*FLEN/8, x4, x1, x2)

inst_97823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffffc; valaddr_reg:x3; val_offset:293469*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293469*0 + 3*287*FLEN/8, x4, x1, x2)

inst_97824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddffffffffffffe; valaddr_reg:x3; val_offset:293472*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293472*0 + 3*288*FLEN/8, x4, x1, x2)

inst_97825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3dd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ddfffffffffffff; valaddr_reg:x3; val_offset:293475*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293475*0 + 3*289*FLEN/8, x4, x1, x2)

inst_97826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:293478*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293478*0 + 3*290*FLEN/8, x4, x1, x2)

inst_97827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:293481*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293481*0 + 3*291*FLEN/8, x4, x1, x2)

inst_97828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:293484*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293484*0 + 3*292*FLEN/8, x4, x1, x2)

inst_97829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:293487*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293487*0 + 3*293*FLEN/8, x4, x1, x2)

inst_97830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:293490*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293490*0 + 3*294*FLEN/8, x4, x1, x2)

inst_97831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:293493*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293493*0 + 3*295*FLEN/8, x4, x1, x2)

inst_97832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:293496*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293496*0 + 3*296*FLEN/8, x4, x1, x2)

inst_97833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:293499*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293499*0 + 3*297*FLEN/8, x4, x1, x2)

inst_97834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:293502*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293502*0 + 3*298*FLEN/8, x4, x1, x2)

inst_97835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:293505*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293505*0 + 3*299*FLEN/8, x4, x1, x2)

inst_97836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:293508*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293508*0 + 3*300*FLEN/8, x4, x1, x2)

inst_97837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:293511*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293511*0 + 3*301*FLEN/8, x4, x1, x2)

inst_97838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:293514*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293514*0 + 3*302*FLEN/8, x4, x1, x2)

inst_97839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:293517*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293517*0 + 3*303*FLEN/8, x4, x1, x2)

inst_97840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:293520*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293520*0 + 3*304*FLEN/8, x4, x1, x2)

inst_97841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:293523*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293523*0 + 3*305*FLEN/8, x4, x1, x2)

inst_97842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:293526*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293526*0 + 3*306*FLEN/8, x4, x1, x2)

inst_97843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:293529*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293529*0 + 3*307*FLEN/8, x4, x1, x2)

inst_97844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:293532*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293532*0 + 3*308*FLEN/8, x4, x1, x2)

inst_97845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:293535*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293535*0 + 3*309*FLEN/8, x4, x1, x2)

inst_97846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:293538*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293538*0 + 3*310*FLEN/8, x4, x1, x2)

inst_97847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0ac23e5ea5f17 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb59ad8d9191d; op2val:0x2030ac23e5ea5f17;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:293541*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293541*0 + 3*311*FLEN/8, x4, x1, x2)

inst_97848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000000000; valaddr_reg:x3; val_offset:293544*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293544*0 + 3*312*FLEN/8, x4, x1, x2)

inst_97849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000000001; valaddr_reg:x3; val_offset:293547*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293547*0 + 3*313*FLEN/8, x4, x1, x2)

inst_97850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000000003; valaddr_reg:x3; val_offset:293550*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293550*0 + 3*314*FLEN/8, x4, x1, x2)

inst_97851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000000007; valaddr_reg:x3; val_offset:293553*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293553*0 + 3*315*FLEN/8, x4, x1, x2)

inst_97852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000000000f; valaddr_reg:x3; val_offset:293556*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293556*0 + 3*316*FLEN/8, x4, x1, x2)

inst_97853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000000001f; valaddr_reg:x3; val_offset:293559*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293559*0 + 3*317*FLEN/8, x4, x1, x2)

inst_97854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000000003f; valaddr_reg:x3; val_offset:293562*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293562*0 + 3*318*FLEN/8, x4, x1, x2)

inst_97855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000000007f; valaddr_reg:x3; val_offset:293565*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293565*0 + 3*319*FLEN/8, x4, x1, x2)

inst_97856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000000000ff; valaddr_reg:x3; val_offset:293568*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293568*0 + 3*320*FLEN/8, x4, x1, x2)

inst_97857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000000001ff; valaddr_reg:x3; val_offset:293571*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293571*0 + 3*321*FLEN/8, x4, x1, x2)

inst_97858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000000003ff; valaddr_reg:x3; val_offset:293574*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293574*0 + 3*322*FLEN/8, x4, x1, x2)

inst_97859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000000007ff; valaddr_reg:x3; val_offset:293577*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293577*0 + 3*323*FLEN/8, x4, x1, x2)

inst_97860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000000fff; valaddr_reg:x3; val_offset:293580*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293580*0 + 3*324*FLEN/8, x4, x1, x2)

inst_97861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000001fff; valaddr_reg:x3; val_offset:293583*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293583*0 + 3*325*FLEN/8, x4, x1, x2)

inst_97862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000003fff; valaddr_reg:x3; val_offset:293586*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293586*0 + 3*326*FLEN/8, x4, x1, x2)

inst_97863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000007fff; valaddr_reg:x3; val_offset:293589*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293589*0 + 3*327*FLEN/8, x4, x1, x2)

inst_97864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000000ffff; valaddr_reg:x3; val_offset:293592*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293592*0 + 3*328*FLEN/8, x4, x1, x2)

inst_97865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000001ffff; valaddr_reg:x3; val_offset:293595*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293595*0 + 3*329*FLEN/8, x4, x1, x2)

inst_97866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000003ffff; valaddr_reg:x3; val_offset:293598*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293598*0 + 3*330*FLEN/8, x4, x1, x2)

inst_97867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000007ffff; valaddr_reg:x3; val_offset:293601*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293601*0 + 3*331*FLEN/8, x4, x1, x2)

inst_97868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000000fffff; valaddr_reg:x3; val_offset:293604*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293604*0 + 3*332*FLEN/8, x4, x1, x2)

inst_97869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000001fffff; valaddr_reg:x3; val_offset:293607*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293607*0 + 3*333*FLEN/8, x4, x1, x2)

inst_97870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000003fffff; valaddr_reg:x3; val_offset:293610*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293610*0 + 3*334*FLEN/8, x4, x1, x2)

inst_97871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000007fffff; valaddr_reg:x3; val_offset:293613*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293613*0 + 3*335*FLEN/8, x4, x1, x2)

inst_97872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000000ffffff; valaddr_reg:x3; val_offset:293616*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293616*0 + 3*336*FLEN/8, x4, x1, x2)

inst_97873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000001ffffff; valaddr_reg:x3; val_offset:293619*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293619*0 + 3*337*FLEN/8, x4, x1, x2)

inst_97874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000003ffffff; valaddr_reg:x3; val_offset:293622*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293622*0 + 3*338*FLEN/8, x4, x1, x2)

inst_97875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000007ffffff; valaddr_reg:x3; val_offset:293625*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293625*0 + 3*339*FLEN/8, x4, x1, x2)

inst_97876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000000fffffff; valaddr_reg:x3; val_offset:293628*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293628*0 + 3*340*FLEN/8, x4, x1, x2)

inst_97877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000001fffffff; valaddr_reg:x3; val_offset:293631*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293631*0 + 3*341*FLEN/8, x4, x1, x2)

inst_97878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000003fffffff; valaddr_reg:x3; val_offset:293634*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293634*0 + 3*342*FLEN/8, x4, x1, x2)

inst_97879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000007fffffff; valaddr_reg:x3; val_offset:293637*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293637*0 + 3*343*FLEN/8, x4, x1, x2)

inst_97880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400000ffffffff; valaddr_reg:x3; val_offset:293640*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293640*0 + 3*344*FLEN/8, x4, x1, x2)

inst_97881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400001ffffffff; valaddr_reg:x3; val_offset:293643*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293643*0 + 3*345*FLEN/8, x4, x1, x2)

inst_97882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400003ffffffff; valaddr_reg:x3; val_offset:293646*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293646*0 + 3*346*FLEN/8, x4, x1, x2)

inst_97883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400007ffffffff; valaddr_reg:x3; val_offset:293649*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293649*0 + 3*347*FLEN/8, x4, x1, x2)

inst_97884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840000fffffffff; valaddr_reg:x3; val_offset:293652*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293652*0 + 3*348*FLEN/8, x4, x1, x2)

inst_97885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840001fffffffff; valaddr_reg:x3; val_offset:293655*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293655*0 + 3*349*FLEN/8, x4, x1, x2)

inst_97886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840003fffffffff; valaddr_reg:x3; val_offset:293658*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293658*0 + 3*350*FLEN/8, x4, x1, x2)

inst_97887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840007fffffffff; valaddr_reg:x3; val_offset:293661*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293661*0 + 3*351*FLEN/8, x4, x1, x2)

inst_97888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384000ffffffffff; valaddr_reg:x3; val_offset:293664*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293664*0 + 3*352*FLEN/8, x4, x1, x2)

inst_97889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384001ffffffffff; valaddr_reg:x3; val_offset:293667*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293667*0 + 3*353*FLEN/8, x4, x1, x2)

inst_97890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384003ffffffffff; valaddr_reg:x3; val_offset:293670*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293670*0 + 3*354*FLEN/8, x4, x1, x2)

inst_97891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384007ffffffffff; valaddr_reg:x3; val_offset:293673*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293673*0 + 3*355*FLEN/8, x4, x1, x2)

inst_97892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38400fffffffffff; valaddr_reg:x3; val_offset:293676*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293676*0 + 3*356*FLEN/8, x4, x1, x2)

inst_97893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38401fffffffffff; valaddr_reg:x3; val_offset:293679*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293679*0 + 3*357*FLEN/8, x4, x1, x2)

inst_97894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38403fffffffffff; valaddr_reg:x3; val_offset:293682*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293682*0 + 3*358*FLEN/8, x4, x1, x2)

inst_97895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x38407fffffffffff; valaddr_reg:x3; val_offset:293685*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293685*0 + 3*359*FLEN/8, x4, x1, x2)

inst_97896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3840ffffffffffff; valaddr_reg:x3; val_offset:293688*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293688*0 + 3*360*FLEN/8, x4, x1, x2)

inst_97897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3841ffffffffffff; valaddr_reg:x3; val_offset:293691*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293691*0 + 3*361*FLEN/8, x4, x1, x2)

inst_97898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3843ffffffffffff; valaddr_reg:x3; val_offset:293694*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293694*0 + 3*362*FLEN/8, x4, x1, x2)

inst_97899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3847ffffffffffff; valaddr_reg:x3; val_offset:293697*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293697*0 + 3*363*FLEN/8, x4, x1, x2)

inst_97900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3848000000000000; valaddr_reg:x3; val_offset:293700*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293700*0 + 3*364*FLEN/8, x4, x1, x2)

inst_97901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384c000000000000; valaddr_reg:x3; val_offset:293703*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293703*0 + 3*365*FLEN/8, x4, x1, x2)

inst_97902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384e000000000000; valaddr_reg:x3; val_offset:293706*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293706*0 + 3*366*FLEN/8, x4, x1, x2)

inst_97903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384f000000000000; valaddr_reg:x3; val_offset:293709*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293709*0 + 3*367*FLEN/8, x4, x1, x2)

inst_97904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384f800000000000; valaddr_reg:x3; val_offset:293712*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293712*0 + 3*368*FLEN/8, x4, x1, x2)

inst_97905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fc00000000000; valaddr_reg:x3; val_offset:293715*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293715*0 + 3*369*FLEN/8, x4, x1, x2)

inst_97906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fe00000000000; valaddr_reg:x3; val_offset:293718*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293718*0 + 3*370*FLEN/8, x4, x1, x2)

inst_97907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ff00000000000; valaddr_reg:x3; val_offset:293721*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293721*0 + 3*371*FLEN/8, x4, x1, x2)

inst_97908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ff80000000000; valaddr_reg:x3; val_offset:293724*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293724*0 + 3*372*FLEN/8, x4, x1, x2)

inst_97909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffc0000000000; valaddr_reg:x3; val_offset:293727*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293727*0 + 3*373*FLEN/8, x4, x1, x2)

inst_97910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffe0000000000; valaddr_reg:x3; val_offset:293730*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293730*0 + 3*374*FLEN/8, x4, x1, x2)

inst_97911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fff0000000000; valaddr_reg:x3; val_offset:293733*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293733*0 + 3*375*FLEN/8, x4, x1, x2)

inst_97912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fff8000000000; valaddr_reg:x3; val_offset:293736*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293736*0 + 3*376*FLEN/8, x4, x1, x2)

inst_97913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffc000000000; valaddr_reg:x3; val_offset:293739*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293739*0 + 3*377*FLEN/8, x4, x1, x2)

inst_97914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffe000000000; valaddr_reg:x3; val_offset:293742*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293742*0 + 3*378*FLEN/8, x4, x1, x2)

inst_97915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffff000000000; valaddr_reg:x3; val_offset:293745*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293745*0 + 3*379*FLEN/8, x4, x1, x2)

inst_97916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffff800000000; valaddr_reg:x3; val_offset:293748*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293748*0 + 3*380*FLEN/8, x4, x1, x2)

inst_97917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffc00000000; valaddr_reg:x3; val_offset:293751*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293751*0 + 3*381*FLEN/8, x4, x1, x2)

inst_97918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffe00000000; valaddr_reg:x3; val_offset:293754*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293754*0 + 3*382*FLEN/8, x4, x1, x2)

inst_97919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffff00000000; valaddr_reg:x3; val_offset:293757*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293757*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_97920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffff80000000; valaddr_reg:x3; val_offset:293760*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293760*0 + 3*384*FLEN/8, x4, x1, x2)

inst_97921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffc0000000; valaddr_reg:x3; val_offset:293763*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293763*0 + 3*385*FLEN/8, x4, x1, x2)

inst_97922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffe0000000; valaddr_reg:x3; val_offset:293766*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293766*0 + 3*386*FLEN/8, x4, x1, x2)

inst_97923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffff0000000; valaddr_reg:x3; val_offset:293769*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293769*0 + 3*387*FLEN/8, x4, x1, x2)

inst_97924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffff8000000; valaddr_reg:x3; val_offset:293772*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293772*0 + 3*388*FLEN/8, x4, x1, x2)

inst_97925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffc000000; valaddr_reg:x3; val_offset:293775*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293775*0 + 3*389*FLEN/8, x4, x1, x2)

inst_97926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffe000000; valaddr_reg:x3; val_offset:293778*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293778*0 + 3*390*FLEN/8, x4, x1, x2)

inst_97927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffff000000; valaddr_reg:x3; val_offset:293781*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293781*0 + 3*391*FLEN/8, x4, x1, x2)

inst_97928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffff800000; valaddr_reg:x3; val_offset:293784*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293784*0 + 3*392*FLEN/8, x4, x1, x2)

inst_97929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffc00000; valaddr_reg:x3; val_offset:293787*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293787*0 + 3*393*FLEN/8, x4, x1, x2)

inst_97930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffe00000; valaddr_reg:x3; val_offset:293790*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293790*0 + 3*394*FLEN/8, x4, x1, x2)

inst_97931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffff00000; valaddr_reg:x3; val_offset:293793*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293793*0 + 3*395*FLEN/8, x4, x1, x2)

inst_97932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffff80000; valaddr_reg:x3; val_offset:293796*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293796*0 + 3*396*FLEN/8, x4, x1, x2)

inst_97933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffc0000; valaddr_reg:x3; val_offset:293799*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293799*0 + 3*397*FLEN/8, x4, x1, x2)

inst_97934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffe0000; valaddr_reg:x3; val_offset:293802*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293802*0 + 3*398*FLEN/8, x4, x1, x2)

inst_97935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffff0000; valaddr_reg:x3; val_offset:293805*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293805*0 + 3*399*FLEN/8, x4, x1, x2)

inst_97936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffff8000; valaddr_reg:x3; val_offset:293808*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293808*0 + 3*400*FLEN/8, x4, x1, x2)

inst_97937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffc000; valaddr_reg:x3; val_offset:293811*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293811*0 + 3*401*FLEN/8, x4, x1, x2)

inst_97938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffe000; valaddr_reg:x3; val_offset:293814*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293814*0 + 3*402*FLEN/8, x4, x1, x2)

inst_97939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffff000; valaddr_reg:x3; val_offset:293817*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293817*0 + 3*403*FLEN/8, x4, x1, x2)

inst_97940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffff800; valaddr_reg:x3; val_offset:293820*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293820*0 + 3*404*FLEN/8, x4, x1, x2)

inst_97941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffc00; valaddr_reg:x3; val_offset:293823*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293823*0 + 3*405*FLEN/8, x4, x1, x2)

inst_97942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffe00; valaddr_reg:x3; val_offset:293826*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293826*0 + 3*406*FLEN/8, x4, x1, x2)

inst_97943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffff00; valaddr_reg:x3; val_offset:293829*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293829*0 + 3*407*FLEN/8, x4, x1, x2)

inst_97944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffff80; valaddr_reg:x3; val_offset:293832*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293832*0 + 3*408*FLEN/8, x4, x1, x2)

inst_97945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffffc0; valaddr_reg:x3; val_offset:293835*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293835*0 + 3*409*FLEN/8, x4, x1, x2)

inst_97946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffffe0; valaddr_reg:x3; val_offset:293838*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293838*0 + 3*410*FLEN/8, x4, x1, x2)

inst_97947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffff0; valaddr_reg:x3; val_offset:293841*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293841*0 + 3*411*FLEN/8, x4, x1, x2)

inst_97948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffff8; valaddr_reg:x3; val_offset:293844*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293844*0 + 3*412*FLEN/8, x4, x1, x2)

inst_97949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffffc; valaddr_reg:x3; val_offset:293847*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293847*0 + 3*413*FLEN/8, x4, x1, x2)

inst_97950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384ffffffffffffe; valaddr_reg:x3; val_offset:293850*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293850*0 + 3*414*FLEN/8, x4, x1, x2)

inst_97951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x384fffffffffffff; valaddr_reg:x3; val_offset:293853*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293853*0 + 3*415*FLEN/8, x4, x1, x2)

inst_97952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:293856*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293856*0 + 3*416*FLEN/8, x4, x1, x2)

inst_97953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:293859*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293859*0 + 3*417*FLEN/8, x4, x1, x2)

inst_97954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:293862*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293862*0 + 3*418*FLEN/8, x4, x1, x2)

inst_97955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:293865*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293865*0 + 3*419*FLEN/8, x4, x1, x2)

inst_97956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:293868*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293868*0 + 3*420*FLEN/8, x4, x1, x2)

inst_97957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:293871*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293871*0 + 3*421*FLEN/8, x4, x1, x2)

inst_97958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:293874*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293874*0 + 3*422*FLEN/8, x4, x1, x2)

inst_97959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:293877*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293877*0 + 3*423*FLEN/8, x4, x1, x2)

inst_97960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:293880*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293880*0 + 3*424*FLEN/8, x4, x1, x2)

inst_97961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:293883*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293883*0 + 3*425*FLEN/8, x4, x1, x2)

inst_97962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:293886*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293886*0 + 3*426*FLEN/8, x4, x1, x2)

inst_97963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:293889*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293889*0 + 3*427*FLEN/8, x4, x1, x2)

inst_97964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:293892*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293892*0 + 3*428*FLEN/8, x4, x1, x2)

inst_97965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:293895*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293895*0 + 3*429*FLEN/8, x4, x1, x2)

inst_97966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:293898*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293898*0 + 3*430*FLEN/8, x4, x1, x2)

inst_97967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:293901*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293901*0 + 3*431*FLEN/8, x4, x1, x2)

inst_97968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:293904*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293904*0 + 3*432*FLEN/8, x4, x1, x2)

inst_97969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:293907*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293907*0 + 3*433*FLEN/8, x4, x1, x2)

inst_97970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:293910*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293910*0 + 3*434*FLEN/8, x4, x1, x2)

inst_97971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:293913*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293913*0 + 3*435*FLEN/8, x4, x1, x2)

inst_97972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:293916*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293916*0 + 3*436*FLEN/8, x4, x1, x2)

inst_97973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0abdc9a3532d7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faeb61e2d5d3c7a; op2val:0x2030abdc9a3532d7;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:293919*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293919*0 + 3*437*FLEN/8, x4, x1, x2)

inst_97974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:293922*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293922*0 + 3*438*FLEN/8, x4, x1, x2)

inst_97975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:293925*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293925*0 + 3*439*FLEN/8, x4, x1, x2)

inst_97976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:293928*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293928*0 + 3*440*FLEN/8, x4, x1, x2)

inst_97977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:293931*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293931*0 + 3*441*FLEN/8, x4, x1, x2)

inst_97978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:293934*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293934*0 + 3*442*FLEN/8, x4, x1, x2)

inst_97979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:293937*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293937*0 + 3*443*FLEN/8, x4, x1, x2)

inst_97980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:293940*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293940*0 + 3*444*FLEN/8, x4, x1, x2)

inst_97981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:293943*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293943*0 + 3*445*FLEN/8, x4, x1, x2)

inst_97982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:293946*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293946*0 + 3*446*FLEN/8, x4, x1, x2)

inst_97983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:293949*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293949*0 + 3*447*FLEN/8, x4, x1, x2)

inst_97984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:293952*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293952*0 + 3*448*FLEN/8, x4, x1, x2)

inst_97985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:293955*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293955*0 + 3*449*FLEN/8, x4, x1, x2)

inst_97986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:293958*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293958*0 + 3*450*FLEN/8, x4, x1, x2)

inst_97987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:293961*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293961*0 + 3*451*FLEN/8, x4, x1, x2)

inst_97988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:293964*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293964*0 + 3*452*FLEN/8, x4, x1, x2)

inst_97989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:293967*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293967*0 + 3*453*FLEN/8, x4, x1, x2)

inst_97990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:293970*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293970*0 + 3*454*FLEN/8, x4, x1, x2)

inst_97991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:293973*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293973*0 + 3*455*FLEN/8, x4, x1, x2)

inst_97992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:293976*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293976*0 + 3*456*FLEN/8, x4, x1, x2)

inst_97993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:293979*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293979*0 + 3*457*FLEN/8, x4, x1, x2)

inst_97994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:293982*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293982*0 + 3*458*FLEN/8, x4, x1, x2)

inst_97995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:293985*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293985*0 + 3*459*FLEN/8, x4, x1, x2)

inst_97996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000000000; valaddr_reg:x3; val_offset:293988*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293988*0 + 3*460*FLEN/8, x4, x1, x2)

inst_97997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000000001; valaddr_reg:x3; val_offset:293991*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293991*0 + 3*461*FLEN/8, x4, x1, x2)

inst_97998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000000003; valaddr_reg:x3; val_offset:293994*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293994*0 + 3*462*FLEN/8, x4, x1, x2)

inst_97999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000000007; valaddr_reg:x3; val_offset:293997*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 293997*0 + 3*463*FLEN/8, x4, x1, x2)

inst_98000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000000000f; valaddr_reg:x3; val_offset:294000*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294000*0 + 3*464*FLEN/8, x4, x1, x2)

inst_98001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000000001f; valaddr_reg:x3; val_offset:294003*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294003*0 + 3*465*FLEN/8, x4, x1, x2)

inst_98002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000000003f; valaddr_reg:x3; val_offset:294006*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294006*0 + 3*466*FLEN/8, x4, x1, x2)

inst_98003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000000007f; valaddr_reg:x3; val_offset:294009*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294009*0 + 3*467*FLEN/8, x4, x1, x2)

inst_98004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000000000ff; valaddr_reg:x3; val_offset:294012*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294012*0 + 3*468*FLEN/8, x4, x1, x2)

inst_98005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000000001ff; valaddr_reg:x3; val_offset:294015*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294015*0 + 3*469*FLEN/8, x4, x1, x2)

inst_98006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000000003ff; valaddr_reg:x3; val_offset:294018*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294018*0 + 3*470*FLEN/8, x4, x1, x2)

inst_98007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000000007ff; valaddr_reg:x3; val_offset:294021*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294021*0 + 3*471*FLEN/8, x4, x1, x2)

inst_98008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000000fff; valaddr_reg:x3; val_offset:294024*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294024*0 + 3*472*FLEN/8, x4, x1, x2)

inst_98009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000001fff; valaddr_reg:x3; val_offset:294027*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294027*0 + 3*473*FLEN/8, x4, x1, x2)

inst_98010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000003fff; valaddr_reg:x3; val_offset:294030*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294030*0 + 3*474*FLEN/8, x4, x1, x2)

inst_98011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000007fff; valaddr_reg:x3; val_offset:294033*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294033*0 + 3*475*FLEN/8, x4, x1, x2)

inst_98012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000000ffff; valaddr_reg:x3; val_offset:294036*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294036*0 + 3*476*FLEN/8, x4, x1, x2)

inst_98013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000001ffff; valaddr_reg:x3; val_offset:294039*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294039*0 + 3*477*FLEN/8, x4, x1, x2)

inst_98014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000003ffff; valaddr_reg:x3; val_offset:294042*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294042*0 + 3*478*FLEN/8, x4, x1, x2)

inst_98015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000007ffff; valaddr_reg:x3; val_offset:294045*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294045*0 + 3*479*FLEN/8, x4, x1, x2)

inst_98016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000000fffff; valaddr_reg:x3; val_offset:294048*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294048*0 + 3*480*FLEN/8, x4, x1, x2)

inst_98017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000001fffff; valaddr_reg:x3; val_offset:294051*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294051*0 + 3*481*FLEN/8, x4, x1, x2)

inst_98018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000003fffff; valaddr_reg:x3; val_offset:294054*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294054*0 + 3*482*FLEN/8, x4, x1, x2)

inst_98019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000007fffff; valaddr_reg:x3; val_offset:294057*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294057*0 + 3*483*FLEN/8, x4, x1, x2)

inst_98020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000000ffffff; valaddr_reg:x3; val_offset:294060*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294060*0 + 3*484*FLEN/8, x4, x1, x2)

inst_98021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000001ffffff; valaddr_reg:x3; val_offset:294063*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294063*0 + 3*485*FLEN/8, x4, x1, x2)

inst_98022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000003ffffff; valaddr_reg:x3; val_offset:294066*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294066*0 + 3*486*FLEN/8, x4, x1, x2)

inst_98023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000007ffffff; valaddr_reg:x3; val_offset:294069*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294069*0 + 3*487*FLEN/8, x4, x1, x2)

inst_98024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000000fffffff; valaddr_reg:x3; val_offset:294072*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294072*0 + 3*488*FLEN/8, x4, x1, x2)

inst_98025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000001fffffff; valaddr_reg:x3; val_offset:294075*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294075*0 + 3*489*FLEN/8, x4, x1, x2)

inst_98026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000003fffffff; valaddr_reg:x3; val_offset:294078*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294078*0 + 3*490*FLEN/8, x4, x1, x2)

inst_98027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000007fffffff; valaddr_reg:x3; val_offset:294081*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294081*0 + 3*491*FLEN/8, x4, x1, x2)

inst_98028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600000ffffffff; valaddr_reg:x3; val_offset:294084*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294084*0 + 3*492*FLEN/8, x4, x1, x2)

inst_98029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600001ffffffff; valaddr_reg:x3; val_offset:294087*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294087*0 + 3*493*FLEN/8, x4, x1, x2)

inst_98030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600003ffffffff; valaddr_reg:x3; val_offset:294090*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294090*0 + 3*494*FLEN/8, x4, x1, x2)

inst_98031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600007ffffffff; valaddr_reg:x3; val_offset:294093*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294093*0 + 3*495*FLEN/8, x4, x1, x2)

inst_98032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160000fffffffff; valaddr_reg:x3; val_offset:294096*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294096*0 + 3*496*FLEN/8, x4, x1, x2)

inst_98033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160001fffffffff; valaddr_reg:x3; val_offset:294099*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294099*0 + 3*497*FLEN/8, x4, x1, x2)

inst_98034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160003fffffffff; valaddr_reg:x3; val_offset:294102*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294102*0 + 3*498*FLEN/8, x4, x1, x2)

inst_98035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160007fffffffff; valaddr_reg:x3; val_offset:294105*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294105*0 + 3*499*FLEN/8, x4, x1, x2)

inst_98036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16000ffffffffff; valaddr_reg:x3; val_offset:294108*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294108*0 + 3*500*FLEN/8, x4, x1, x2)

inst_98037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16001ffffffffff; valaddr_reg:x3; val_offset:294111*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294111*0 + 3*501*FLEN/8, x4, x1, x2)

inst_98038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16003ffffffffff; valaddr_reg:x3; val_offset:294114*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294114*0 + 3*502*FLEN/8, x4, x1, x2)

inst_98039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16007ffffffffff; valaddr_reg:x3; val_offset:294117*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294117*0 + 3*503*FLEN/8, x4, x1, x2)

inst_98040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1600fffffffffff; valaddr_reg:x3; val_offset:294120*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294120*0 + 3*504*FLEN/8, x4, x1, x2)

inst_98041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1601fffffffffff; valaddr_reg:x3; val_offset:294123*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294123*0 + 3*505*FLEN/8, x4, x1, x2)

inst_98042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1603fffffffffff; valaddr_reg:x3; val_offset:294126*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294126*0 + 3*506*FLEN/8, x4, x1, x2)

inst_98043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x1607fffffffffff; valaddr_reg:x3; val_offset:294129*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294129*0 + 3*507*FLEN/8, x4, x1, x2)

inst_98044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x160ffffffffffff; valaddr_reg:x3; val_offset:294132*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294132*0 + 3*508*FLEN/8, x4, x1, x2)

inst_98045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x161ffffffffffff; valaddr_reg:x3; val_offset:294135*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294135*0 + 3*509*FLEN/8, x4, x1, x2)

inst_98046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x163ffffffffffff; valaddr_reg:x3; val_offset:294138*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294138*0 + 3*510*FLEN/8, x4, x1, x2)

inst_98047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x167ffffffffffff; valaddr_reg:x3; val_offset:294141*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294141*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_98048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x168000000000000; valaddr_reg:x3; val_offset:294144*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294144*0 + 3*512*FLEN/8, x4, x1, x2)

inst_98049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16c000000000000; valaddr_reg:x3; val_offset:294147*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294147*0 + 3*513*FLEN/8, x4, x1, x2)

inst_98050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16e000000000000; valaddr_reg:x3; val_offset:294150*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294150*0 + 3*514*FLEN/8, x4, x1, x2)

inst_98051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16f000000000000; valaddr_reg:x3; val_offset:294153*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294153*0 + 3*515*FLEN/8, x4, x1, x2)

inst_98052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16f800000000000; valaddr_reg:x3; val_offset:294156*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294156*0 + 3*516*FLEN/8, x4, x1, x2)

inst_98053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fc00000000000; valaddr_reg:x3; val_offset:294159*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294159*0 + 3*517*FLEN/8, x4, x1, x2)

inst_98054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fe00000000000; valaddr_reg:x3; val_offset:294162*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294162*0 + 3*518*FLEN/8, x4, x1, x2)

inst_98055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ff00000000000; valaddr_reg:x3; val_offset:294165*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294165*0 + 3*519*FLEN/8, x4, x1, x2)

inst_98056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ff80000000000; valaddr_reg:x3; val_offset:294168*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294168*0 + 3*520*FLEN/8, x4, x1, x2)

inst_98057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffc0000000000; valaddr_reg:x3; val_offset:294171*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294171*0 + 3*521*FLEN/8, x4, x1, x2)

inst_98058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffe0000000000; valaddr_reg:x3; val_offset:294174*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294174*0 + 3*522*FLEN/8, x4, x1, x2)

inst_98059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fff0000000000; valaddr_reg:x3; val_offset:294177*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294177*0 + 3*523*FLEN/8, x4, x1, x2)

inst_98060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fff8000000000; valaddr_reg:x3; val_offset:294180*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294180*0 + 3*524*FLEN/8, x4, x1, x2)

inst_98061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffc000000000; valaddr_reg:x3; val_offset:294183*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294183*0 + 3*525*FLEN/8, x4, x1, x2)

inst_98062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffe000000000; valaddr_reg:x3; val_offset:294186*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294186*0 + 3*526*FLEN/8, x4, x1, x2)

inst_98063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffff000000000; valaddr_reg:x3; val_offset:294189*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294189*0 + 3*527*FLEN/8, x4, x1, x2)

inst_98064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffff800000000; valaddr_reg:x3; val_offset:294192*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294192*0 + 3*528*FLEN/8, x4, x1, x2)

inst_98065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffc00000000; valaddr_reg:x3; val_offset:294195*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294195*0 + 3*529*FLEN/8, x4, x1, x2)

inst_98066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffe00000000; valaddr_reg:x3; val_offset:294198*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294198*0 + 3*530*FLEN/8, x4, x1, x2)

inst_98067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffff00000000; valaddr_reg:x3; val_offset:294201*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294201*0 + 3*531*FLEN/8, x4, x1, x2)

inst_98068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffff80000000; valaddr_reg:x3; val_offset:294204*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294204*0 + 3*532*FLEN/8, x4, x1, x2)

inst_98069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffc0000000; valaddr_reg:x3; val_offset:294207*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294207*0 + 3*533*FLEN/8, x4, x1, x2)

inst_98070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffe0000000; valaddr_reg:x3; val_offset:294210*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294210*0 + 3*534*FLEN/8, x4, x1, x2)

inst_98071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffff0000000; valaddr_reg:x3; val_offset:294213*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294213*0 + 3*535*FLEN/8, x4, x1, x2)

inst_98072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffff8000000; valaddr_reg:x3; val_offset:294216*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294216*0 + 3*536*FLEN/8, x4, x1, x2)

inst_98073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffc000000; valaddr_reg:x3; val_offset:294219*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294219*0 + 3*537*FLEN/8, x4, x1, x2)

inst_98074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffe000000; valaddr_reg:x3; val_offset:294222*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294222*0 + 3*538*FLEN/8, x4, x1, x2)

inst_98075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffff000000; valaddr_reg:x3; val_offset:294225*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294225*0 + 3*539*FLEN/8, x4, x1, x2)

inst_98076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffff800000; valaddr_reg:x3; val_offset:294228*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294228*0 + 3*540*FLEN/8, x4, x1, x2)

inst_98077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffc00000; valaddr_reg:x3; val_offset:294231*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294231*0 + 3*541*FLEN/8, x4, x1, x2)

inst_98078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffe00000; valaddr_reg:x3; val_offset:294234*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294234*0 + 3*542*FLEN/8, x4, x1, x2)

inst_98079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffff00000; valaddr_reg:x3; val_offset:294237*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294237*0 + 3*543*FLEN/8, x4, x1, x2)

inst_98080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffff80000; valaddr_reg:x3; val_offset:294240*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294240*0 + 3*544*FLEN/8, x4, x1, x2)

inst_98081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffc0000; valaddr_reg:x3; val_offset:294243*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294243*0 + 3*545*FLEN/8, x4, x1, x2)

inst_98082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffe0000; valaddr_reg:x3; val_offset:294246*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294246*0 + 3*546*FLEN/8, x4, x1, x2)

inst_98083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffff0000; valaddr_reg:x3; val_offset:294249*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294249*0 + 3*547*FLEN/8, x4, x1, x2)

inst_98084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffff8000; valaddr_reg:x3; val_offset:294252*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294252*0 + 3*548*FLEN/8, x4, x1, x2)

inst_98085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffc000; valaddr_reg:x3; val_offset:294255*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294255*0 + 3*549*FLEN/8, x4, x1, x2)

inst_98086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffe000; valaddr_reg:x3; val_offset:294258*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294258*0 + 3*550*FLEN/8, x4, x1, x2)

inst_98087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffff000; valaddr_reg:x3; val_offset:294261*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294261*0 + 3*551*FLEN/8, x4, x1, x2)

inst_98088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffff800; valaddr_reg:x3; val_offset:294264*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294264*0 + 3*552*FLEN/8, x4, x1, x2)

inst_98089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffc00; valaddr_reg:x3; val_offset:294267*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294267*0 + 3*553*FLEN/8, x4, x1, x2)

inst_98090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffe00; valaddr_reg:x3; val_offset:294270*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294270*0 + 3*554*FLEN/8, x4, x1, x2)

inst_98091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffff00; valaddr_reg:x3; val_offset:294273*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294273*0 + 3*555*FLEN/8, x4, x1, x2)

inst_98092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffff80; valaddr_reg:x3; val_offset:294276*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294276*0 + 3*556*FLEN/8, x4, x1, x2)

inst_98093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffffc0; valaddr_reg:x3; val_offset:294279*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294279*0 + 3*557*FLEN/8, x4, x1, x2)

inst_98094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffffe0; valaddr_reg:x3; val_offset:294282*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294282*0 + 3*558*FLEN/8, x4, x1, x2)

inst_98095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffff0; valaddr_reg:x3; val_offset:294285*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294285*0 + 3*559*FLEN/8, x4, x1, x2)

inst_98096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffff8; valaddr_reg:x3; val_offset:294288*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294288*0 + 3*560*FLEN/8, x4, x1, x2)

inst_98097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffffc; valaddr_reg:x3; val_offset:294291*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294291*0 + 3*561*FLEN/8, x4, x1, x2)

inst_98098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16ffffffffffffe; valaddr_reg:x3; val_offset:294294*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294294*0 + 3*562*FLEN/8, x4, x1, x2)

inst_98099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0ec09850bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec0ec09850bdf; op2val:0x0;
op3val:0x16fffffffffffff; valaddr_reg:x3; val_offset:294297*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294297*0 + 3*563*FLEN/8, x4, x1, x2)

inst_98100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:294300*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294300*0 + 3*564*FLEN/8, x4, x1, x2)

inst_98101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:294303*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294303*0 + 3*565*FLEN/8, x4, x1, x2)

inst_98102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:294306*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294306*0 + 3*566*FLEN/8, x4, x1, x2)

inst_98103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:294309*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294309*0 + 3*567*FLEN/8, x4, x1, x2)

inst_98104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:294312*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294312*0 + 3*568*FLEN/8, x4, x1, x2)

inst_98105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:294315*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294315*0 + 3*569*FLEN/8, x4, x1, x2)

inst_98106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:294318*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294318*0 + 3*570*FLEN/8, x4, x1, x2)

inst_98107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:294321*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294321*0 + 3*571*FLEN/8, x4, x1, x2)

inst_98108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:294324*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294324*0 + 3*572*FLEN/8, x4, x1, x2)

inst_98109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:294327*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294327*0 + 3*573*FLEN/8, x4, x1, x2)

inst_98110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:294330*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294330*0 + 3*574*FLEN/8, x4, x1, x2)

inst_98111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:294333*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294333*0 + 3*575*FLEN/8, x4, x1, x2)

inst_98112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:294336*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294336*0 + 3*576*FLEN/8, x4, x1, x2)

inst_98113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:294339*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294339*0 + 3*577*FLEN/8, x4, x1, x2)

inst_98114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:294342*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294342*0 + 3*578*FLEN/8, x4, x1, x2)

inst_98115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:294345*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294345*0 + 3*579*FLEN/8, x4, x1, x2)

inst_98116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:294348*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294348*0 + 3*580*FLEN/8, x4, x1, x2)

inst_98117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:294351*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294351*0 + 3*581*FLEN/8, x4, x1, x2)

inst_98118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:294354*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294354*0 + 3*582*FLEN/8, x4, x1, x2)

inst_98119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:294357*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294357*0 + 3*583*FLEN/8, x4, x1, x2)

inst_98120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:294360*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294360*0 + 3*584*FLEN/8, x4, x1, x2)

inst_98121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:294363*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294363*0 + 3*585*FLEN/8, x4, x1, x2)

inst_98122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:294366*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294366*0 + 3*586*FLEN/8, x4, x1, x2)

inst_98123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:294369*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294369*0 + 3*587*FLEN/8, x4, x1, x2)

inst_98124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:294372*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294372*0 + 3*588*FLEN/8, x4, x1, x2)

inst_98125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:294375*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294375*0 + 3*589*FLEN/8, x4, x1, x2)

inst_98126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:294378*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294378*0 + 3*590*FLEN/8, x4, x1, x2)

inst_98127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:294381*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294381*0 + 3*591*FLEN/8, x4, x1, x2)

inst_98128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:294384*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294384*0 + 3*592*FLEN/8, x4, x1, x2)

inst_98129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:294387*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294387*0 + 3*593*FLEN/8, x4, x1, x2)

inst_98130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:294390*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294390*0 + 3*594*FLEN/8, x4, x1, x2)

inst_98131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:294393*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294393*0 + 3*595*FLEN/8, x4, x1, x2)

inst_98132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:294396*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294396*0 + 3*596*FLEN/8, x4, x1, x2)

inst_98133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:294399*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294399*0 + 3*597*FLEN/8, x4, x1, x2)

inst_98134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:294402*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294402*0 + 3*598*FLEN/8, x4, x1, x2)

inst_98135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:294405*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294405*0 + 3*599*FLEN/8, x4, x1, x2)

inst_98136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:294408*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294408*0 + 3*600*FLEN/8, x4, x1, x2)

inst_98137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:294411*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294411*0 + 3*601*FLEN/8, x4, x1, x2)

inst_98138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:294414*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294414*0 + 3*602*FLEN/8, x4, x1, x2)

inst_98139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:294417*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294417*0 + 3*603*FLEN/8, x4, x1, x2)

inst_98140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:294420*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294420*0 + 3*604*FLEN/8, x4, x1, x2)

inst_98141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:294423*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294423*0 + 3*605*FLEN/8, x4, x1, x2)

inst_98142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:294426*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294426*0 + 3*606*FLEN/8, x4, x1, x2)

inst_98143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:294429*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294429*0 + 3*607*FLEN/8, x4, x1, x2)

inst_98144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:294432*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294432*0 + 3*608*FLEN/8, x4, x1, x2)

inst_98145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:294435*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294435*0 + 3*609*FLEN/8, x4, x1, x2)

inst_98146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:294438*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294438*0 + 3*610*FLEN/8, x4, x1, x2)

inst_98147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:294441*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294441*0 + 3*611*FLEN/8, x4, x1, x2)

inst_98148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:294444*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294444*0 + 3*612*FLEN/8, x4, x1, x2)

inst_98149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:294447*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294447*0 + 3*613*FLEN/8, x4, x1, x2)

inst_98150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:294450*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294450*0 + 3*614*FLEN/8, x4, x1, x2)

inst_98151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:294453*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294453*0 + 3*615*FLEN/8, x4, x1, x2)

inst_98152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:294456*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294456*0 + 3*616*FLEN/8, x4, x1, x2)

inst_98153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:294459*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294459*0 + 3*617*FLEN/8, x4, x1, x2)

inst_98154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:294462*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294462*0 + 3*618*FLEN/8, x4, x1, x2)

inst_98155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:294465*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294465*0 + 3*619*FLEN/8, x4, x1, x2)

inst_98156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:294468*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294468*0 + 3*620*FLEN/8, x4, x1, x2)

inst_98157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:294471*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294471*0 + 3*621*FLEN/8, x4, x1, x2)

inst_98158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:294474*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294474*0 + 3*622*FLEN/8, x4, x1, x2)

inst_98159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:294477*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294477*0 + 3*623*FLEN/8, x4, x1, x2)

inst_98160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:294480*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294480*0 + 3*624*FLEN/8, x4, x1, x2)

inst_98161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:294483*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294483*0 + 3*625*FLEN/8, x4, x1, x2)

inst_98162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:294486*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294486*0 + 3*626*FLEN/8, x4, x1, x2)

inst_98163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:294489*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294489*0 + 3*627*FLEN/8, x4, x1, x2)

inst_98164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:294492*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294492*0 + 3*628*FLEN/8, x4, x1, x2)

inst_98165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:294495*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294495*0 + 3*629*FLEN/8, x4, x1, x2)

inst_98166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:294498*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294498*0 + 3*630*FLEN/8, x4, x1, x2)

inst_98167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:294501*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294501*0 + 3*631*FLEN/8, x4, x1, x2)

inst_98168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:294504*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294504*0 + 3*632*FLEN/8, x4, x1, x2)

inst_98169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:294507*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294507*0 + 3*633*FLEN/8, x4, x1, x2)

inst_98170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:294510*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294510*0 + 3*634*FLEN/8, x4, x1, x2)

inst_98171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:294513*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294513*0 + 3*635*FLEN/8, x4, x1, x2)

inst_98172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:294516*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294516*0 + 3*636*FLEN/8, x4, x1, x2)

inst_98173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:294519*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294519*0 + 3*637*FLEN/8, x4, x1, x2)

inst_98174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:294522*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294522*0 + 3*638*FLEN/8, x4, x1, x2)

inst_98175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:294525*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294525*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_98176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:294528*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294528*0 + 3*640*FLEN/8, x4, x1, x2)

inst_98177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:294531*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294531*0 + 3*641*FLEN/8, x4, x1, x2)

inst_98178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:294534*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294534*0 + 3*642*FLEN/8, x4, x1, x2)

inst_98179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:294537*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294537*0 + 3*643*FLEN/8, x4, x1, x2)

inst_98180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:294540*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294540*0 + 3*644*FLEN/8, x4, x1, x2)

inst_98181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:294543*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294543*0 + 3*645*FLEN/8, x4, x1, x2)

inst_98182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:294546*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294546*0 + 3*646*FLEN/8, x4, x1, x2)

inst_98183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:294549*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294549*0 + 3*647*FLEN/8, x4, x1, x2)

inst_98184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:294552*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294552*0 + 3*648*FLEN/8, x4, x1, x2)

inst_98185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:294555*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294555*0 + 3*649*FLEN/8, x4, x1, x2)

inst_98186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:294558*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294558*0 + 3*650*FLEN/8, x4, x1, x2)

inst_98187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:294561*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294561*0 + 3*651*FLEN/8, x4, x1, x2)

inst_98188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:294564*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294564*0 + 3*652*FLEN/8, x4, x1, x2)

inst_98189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:294567*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294567*0 + 3*653*FLEN/8, x4, x1, x2)

inst_98190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:294570*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294570*0 + 3*654*FLEN/8, x4, x1, x2)

inst_98191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:294573*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294573*0 + 3*655*FLEN/8, x4, x1, x2)

inst_98192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:294576*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294576*0 + 3*656*FLEN/8, x4, x1, x2)

inst_98193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:294579*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294579*0 + 3*657*FLEN/8, x4, x1, x2)

inst_98194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:294582*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294582*0 + 3*658*FLEN/8, x4, x1, x2)

inst_98195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:294585*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294585*0 + 3*659*FLEN/8, x4, x1, x2)

inst_98196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:294588*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294588*0 + 3*660*FLEN/8, x4, x1, x2)

inst_98197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:294591*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294591*0 + 3*661*FLEN/8, x4, x1, x2)

inst_98198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:294594*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294594*0 + 3*662*FLEN/8, x4, x1, x2)

inst_98199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:294597*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294597*0 + 3*663*FLEN/8, x4, x1, x2)

inst_98200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:294600*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294600*0 + 3*664*FLEN/8, x4, x1, x2)

inst_98201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:294603*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294603*0 + 3*665*FLEN/8, x4, x1, x2)

inst_98202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:294606*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294606*0 + 3*666*FLEN/8, x4, x1, x2)

inst_98203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:294609*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294609*0 + 3*667*FLEN/8, x4, x1, x2)

inst_98204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:294612*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294612*0 + 3*668*FLEN/8, x4, x1, x2)

inst_98205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:294615*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294615*0 + 3*669*FLEN/8, x4, x1, x2)

inst_98206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:294618*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294618*0 + 3*670*FLEN/8, x4, x1, x2)

inst_98207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:294621*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294621*0 + 3*671*FLEN/8, x4, x1, x2)

inst_98208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:294624*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294624*0 + 3*672*FLEN/8, x4, x1, x2)

inst_98209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:294627*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294627*0 + 3*673*FLEN/8, x4, x1, x2)

inst_98210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:294630*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294630*0 + 3*674*FLEN/8, x4, x1, x2)

inst_98211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:294633*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294633*0 + 3*675*FLEN/8, x4, x1, x2)

inst_98212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:294636*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294636*0 + 3*676*FLEN/8, x4, x1, x2)

inst_98213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:294639*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294639*0 + 3*677*FLEN/8, x4, x1, x2)

inst_98214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:294642*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294642*0 + 3*678*FLEN/8, x4, x1, x2)

inst_98215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:294645*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294645*0 + 3*679*FLEN/8, x4, x1, x2)

inst_98216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:294648*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294648*0 + 3*680*FLEN/8, x4, x1, x2)

inst_98217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:294651*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294651*0 + 3*681*FLEN/8, x4, x1, x2)

inst_98218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:294654*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294654*0 + 3*682*FLEN/8, x4, x1, x2)

inst_98219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:294657*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294657*0 + 3*683*FLEN/8, x4, x1, x2)

inst_98220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:294660*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294660*0 + 3*684*FLEN/8, x4, x1, x2)

inst_98221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:294663*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294663*0 + 3*685*FLEN/8, x4, x1, x2)

inst_98222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:294666*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294666*0 + 3*686*FLEN/8, x4, x1, x2)

inst_98223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:294669*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294669*0 + 3*687*FLEN/8, x4, x1, x2)

inst_98224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:294672*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294672*0 + 3*688*FLEN/8, x4, x1, x2)

inst_98225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec7e479c877a7; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:294675*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294675*0 + 3*689*FLEN/8, x4, x1, x2)

inst_98226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000000000; valaddr_reg:x3; val_offset:294678*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294678*0 + 3*690*FLEN/8, x4, x1, x2)

inst_98227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000000001; valaddr_reg:x3; val_offset:294681*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294681*0 + 3*691*FLEN/8, x4, x1, x2)

inst_98228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000000003; valaddr_reg:x3; val_offset:294684*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294684*0 + 3*692*FLEN/8, x4, x1, x2)

inst_98229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000000007; valaddr_reg:x3; val_offset:294687*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294687*0 + 3*693*FLEN/8, x4, x1, x2)

inst_98230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000000000f; valaddr_reg:x3; val_offset:294690*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294690*0 + 3*694*FLEN/8, x4, x1, x2)

inst_98231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000000001f; valaddr_reg:x3; val_offset:294693*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294693*0 + 3*695*FLEN/8, x4, x1, x2)

inst_98232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000000003f; valaddr_reg:x3; val_offset:294696*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294696*0 + 3*696*FLEN/8, x4, x1, x2)

inst_98233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000000007f; valaddr_reg:x3; val_offset:294699*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294699*0 + 3*697*FLEN/8, x4, x1, x2)

inst_98234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000000000ff; valaddr_reg:x3; val_offset:294702*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294702*0 + 3*698*FLEN/8, x4, x1, x2)

inst_98235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000000001ff; valaddr_reg:x3; val_offset:294705*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294705*0 + 3*699*FLEN/8, x4, x1, x2)

inst_98236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000000003ff; valaddr_reg:x3; val_offset:294708*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294708*0 + 3*700*FLEN/8, x4, x1, x2)

inst_98237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000000007ff; valaddr_reg:x3; val_offset:294711*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294711*0 + 3*701*FLEN/8, x4, x1, x2)

inst_98238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000000fff; valaddr_reg:x3; val_offset:294714*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294714*0 + 3*702*FLEN/8, x4, x1, x2)

inst_98239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000001fff; valaddr_reg:x3; val_offset:294717*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294717*0 + 3*703*FLEN/8, x4, x1, x2)

inst_98240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000003fff; valaddr_reg:x3; val_offset:294720*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294720*0 + 3*704*FLEN/8, x4, x1, x2)

inst_98241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000007fff; valaddr_reg:x3; val_offset:294723*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294723*0 + 3*705*FLEN/8, x4, x1, x2)

inst_98242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000000ffff; valaddr_reg:x3; val_offset:294726*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294726*0 + 3*706*FLEN/8, x4, x1, x2)

inst_98243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000001ffff; valaddr_reg:x3; val_offset:294729*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294729*0 + 3*707*FLEN/8, x4, x1, x2)

inst_98244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000003ffff; valaddr_reg:x3; val_offset:294732*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294732*0 + 3*708*FLEN/8, x4, x1, x2)

inst_98245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000007ffff; valaddr_reg:x3; val_offset:294735*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294735*0 + 3*709*FLEN/8, x4, x1, x2)

inst_98246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000000fffff; valaddr_reg:x3; val_offset:294738*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294738*0 + 3*710*FLEN/8, x4, x1, x2)

inst_98247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000001fffff; valaddr_reg:x3; val_offset:294741*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294741*0 + 3*711*FLEN/8, x4, x1, x2)

inst_98248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000003fffff; valaddr_reg:x3; val_offset:294744*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294744*0 + 3*712*FLEN/8, x4, x1, x2)

inst_98249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000007fffff; valaddr_reg:x3; val_offset:294747*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294747*0 + 3*713*FLEN/8, x4, x1, x2)

inst_98250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000000ffffff; valaddr_reg:x3; val_offset:294750*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294750*0 + 3*714*FLEN/8, x4, x1, x2)

inst_98251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000001ffffff; valaddr_reg:x3; val_offset:294753*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294753*0 + 3*715*FLEN/8, x4, x1, x2)

inst_98252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000003ffffff; valaddr_reg:x3; val_offset:294756*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294756*0 + 3*716*FLEN/8, x4, x1, x2)

inst_98253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000007ffffff; valaddr_reg:x3; val_offset:294759*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294759*0 + 3*717*FLEN/8, x4, x1, x2)

inst_98254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000000fffffff; valaddr_reg:x3; val_offset:294762*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294762*0 + 3*718*FLEN/8, x4, x1, x2)

inst_98255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000001fffffff; valaddr_reg:x3; val_offset:294765*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294765*0 + 3*719*FLEN/8, x4, x1, x2)

inst_98256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000003fffffff; valaddr_reg:x3; val_offset:294768*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294768*0 + 3*720*FLEN/8, x4, x1, x2)

inst_98257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000007fffffff; valaddr_reg:x3; val_offset:294771*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294771*0 + 3*721*FLEN/8, x4, x1, x2)

inst_98258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900000ffffffff; valaddr_reg:x3; val_offset:294774*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294774*0 + 3*722*FLEN/8, x4, x1, x2)

inst_98259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900001ffffffff; valaddr_reg:x3; val_offset:294777*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294777*0 + 3*723*FLEN/8, x4, x1, x2)

inst_98260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900003ffffffff; valaddr_reg:x3; val_offset:294780*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294780*0 + 3*724*FLEN/8, x4, x1, x2)

inst_98261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900007ffffffff; valaddr_reg:x3; val_offset:294783*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294783*0 + 3*725*FLEN/8, x4, x1, x2)

inst_98262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990000fffffffff; valaddr_reg:x3; val_offset:294786*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294786*0 + 3*726*FLEN/8, x4, x1, x2)

inst_98263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990001fffffffff; valaddr_reg:x3; val_offset:294789*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294789*0 + 3*727*FLEN/8, x4, x1, x2)

inst_98264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990003fffffffff; valaddr_reg:x3; val_offset:294792*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294792*0 + 3*728*FLEN/8, x4, x1, x2)

inst_98265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990007fffffffff; valaddr_reg:x3; val_offset:294795*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294795*0 + 3*729*FLEN/8, x4, x1, x2)

inst_98266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99000ffffffffff; valaddr_reg:x3; val_offset:294798*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294798*0 + 3*730*FLEN/8, x4, x1, x2)

inst_98267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99001ffffffffff; valaddr_reg:x3; val_offset:294801*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294801*0 + 3*731*FLEN/8, x4, x1, x2)

inst_98268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99003ffffffffff; valaddr_reg:x3; val_offset:294804*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294804*0 + 3*732*FLEN/8, x4, x1, x2)

inst_98269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99007ffffffffff; valaddr_reg:x3; val_offset:294807*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294807*0 + 3*733*FLEN/8, x4, x1, x2)

inst_98270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9900fffffffffff; valaddr_reg:x3; val_offset:294810*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294810*0 + 3*734*FLEN/8, x4, x1, x2)

inst_98271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9901fffffffffff; valaddr_reg:x3; val_offset:294813*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294813*0 + 3*735*FLEN/8, x4, x1, x2)

inst_98272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9903fffffffffff; valaddr_reg:x3; val_offset:294816*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294816*0 + 3*736*FLEN/8, x4, x1, x2)

inst_98273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb9907fffffffffff; valaddr_reg:x3; val_offset:294819*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294819*0 + 3*737*FLEN/8, x4, x1, x2)

inst_98274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb990ffffffffffff; valaddr_reg:x3; val_offset:294822*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294822*0 + 3*738*FLEN/8, x4, x1, x2)

inst_98275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb991ffffffffffff; valaddr_reg:x3; val_offset:294825*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294825*0 + 3*739*FLEN/8, x4, x1, x2)

inst_98276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb993ffffffffffff; valaddr_reg:x3; val_offset:294828*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294828*0 + 3*740*FLEN/8, x4, x1, x2)

inst_98277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb997ffffffffffff; valaddr_reg:x3; val_offset:294831*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294831*0 + 3*741*FLEN/8, x4, x1, x2)

inst_98278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb998000000000000; valaddr_reg:x3; val_offset:294834*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294834*0 + 3*742*FLEN/8, x4, x1, x2)

inst_98279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99c000000000000; valaddr_reg:x3; val_offset:294837*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294837*0 + 3*743*FLEN/8, x4, x1, x2)

inst_98280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99e000000000000; valaddr_reg:x3; val_offset:294840*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294840*0 + 3*744*FLEN/8, x4, x1, x2)

inst_98281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99f000000000000; valaddr_reg:x3; val_offset:294843*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294843*0 + 3*745*FLEN/8, x4, x1, x2)

inst_98282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99f800000000000; valaddr_reg:x3; val_offset:294846*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294846*0 + 3*746*FLEN/8, x4, x1, x2)

inst_98283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fc00000000000; valaddr_reg:x3; val_offset:294849*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294849*0 + 3*747*FLEN/8, x4, x1, x2)

inst_98284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fe00000000000; valaddr_reg:x3; val_offset:294852*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294852*0 + 3*748*FLEN/8, x4, x1, x2)

inst_98285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ff00000000000; valaddr_reg:x3; val_offset:294855*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294855*0 + 3*749*FLEN/8, x4, x1, x2)

inst_98286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ff80000000000; valaddr_reg:x3; val_offset:294858*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294858*0 + 3*750*FLEN/8, x4, x1, x2)

inst_98287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffc0000000000; valaddr_reg:x3; val_offset:294861*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294861*0 + 3*751*FLEN/8, x4, x1, x2)

inst_98288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffe0000000000; valaddr_reg:x3; val_offset:294864*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294864*0 + 3*752*FLEN/8, x4, x1, x2)

inst_98289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fff0000000000; valaddr_reg:x3; val_offset:294867*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294867*0 + 3*753*FLEN/8, x4, x1, x2)

inst_98290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fff8000000000; valaddr_reg:x3; val_offset:294870*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294870*0 + 3*754*FLEN/8, x4, x1, x2)

inst_98291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffc000000000; valaddr_reg:x3; val_offset:294873*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294873*0 + 3*755*FLEN/8, x4, x1, x2)

inst_98292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffe000000000; valaddr_reg:x3; val_offset:294876*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294876*0 + 3*756*FLEN/8, x4, x1, x2)

inst_98293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffff000000000; valaddr_reg:x3; val_offset:294879*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294879*0 + 3*757*FLEN/8, x4, x1, x2)

inst_98294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffff800000000; valaddr_reg:x3; val_offset:294882*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294882*0 + 3*758*FLEN/8, x4, x1, x2)

inst_98295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffffc00000000; valaddr_reg:x3; val_offset:294885*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294885*0 + 3*759*FLEN/8, x4, x1, x2)

inst_98296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffffe00000000; valaddr_reg:x3; val_offset:294888*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294888*0 + 3*760*FLEN/8, x4, x1, x2)

inst_98297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffff00000000; valaddr_reg:x3; val_offset:294891*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294891*0 + 3*761*FLEN/8, x4, x1, x2)

inst_98298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffff80000000; valaddr_reg:x3; val_offset:294894*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294894*0 + 3*762*FLEN/8, x4, x1, x2)

inst_98299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffffc0000000; valaddr_reg:x3; val_offset:294897*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294897*0 + 3*763*FLEN/8, x4, x1, x2)

inst_98300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99fffffe0000000; valaddr_reg:x3; val_offset:294900*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294900*0 + 3*764*FLEN/8, x4, x1, x2)

inst_98301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffffff0000000; valaddr_reg:x3; val_offset:294903*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294903*0 + 3*765*FLEN/8, x4, x1, x2)

inst_98302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffffff8000000; valaddr_reg:x3; val_offset:294906*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294906*0 + 3*766*FLEN/8, x4, x1, x2)

inst_98303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec884da30b843 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0a1e56fc72b28 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faec884da30b843; op2val:0x9fc0a1e56fc72b28;
op3val:0xb99ffffffc000000; valaddr_reg:x3; val_offset:294909*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294909*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817061248958726143,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817078841144770559,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817114025516859391,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817184394261037055,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817325131749392383,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13817606606726103039,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13818169556679524351,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13819295456586366975,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13819295456586366976,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13820421356493209600,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13820984306446630912,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821265781423341568,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821406518911696896,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821476887655874560,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821512072027963392,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821529664214007808,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821538460307030016,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821542858353541120,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821545057376796672,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821546156888424448,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821546706644238336,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821546981522145280,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547118961098752,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547187680575488,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547222040313856,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547239220183040,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547247810117632,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547252105084928,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547254252568576,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547255326310400,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547255863181312,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256131616768,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256265834496,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256332943360,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256366497792,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256383275008,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256391663616,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256395857920,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256397955072,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256399003648,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256399527936,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256399790080,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256399921152,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256399986688,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400019456,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400035840,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400044032,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400048128,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400050176,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400051200,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400051712,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400051968,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052096,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052160,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052192,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052208,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052216,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052220,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052222,64,FLEN)
NAN_BOXED(6894630517152586057,64,FLEN)
NAN_BOXED(11511399295696368927,64,FLEN)
NAN_BOXED(13821547256400052223,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6894639789189296306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420544,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420545,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420547,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420551,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420559,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420575,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420607,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420671,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469420799,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469421055,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469421567,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469422591,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469424639,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469428735,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469436927,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469453311,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469486079,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469551615,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469682687,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031469944831,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031470469119,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031471517695,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031473614847,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031477809151,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031486197759,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031502974975,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031536529407,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031603638271,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060031737855999,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060032006291455,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060032543162367,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060033616904191,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060035764387839,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060040059355135,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060048649289727,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060065829158911,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060100188897279,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060168908374015,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060306347327487,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454060581225234431,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454061130981048319,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454062230492676095,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454064429515931647,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454068827562442751,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454077623655464959,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454095215841509375,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454130400213598207,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454200768957775871,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454341506446131199,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4454622981422841855,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4455185931376263167,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4456311831283105791,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4456311831283105792,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4457437731189948416,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458000681143369728,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458282156120080384,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458422893608435712,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458493262352613376,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458528446724702208,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458546038910746624,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458554835003768832,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458559233050279936,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458561432073535488,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458562531585163264,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563081340977152,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563356218884096,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563493657837568,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563562377314304,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563596737052672,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563613916921856,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563622506856448,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563626801823744,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563628949307392,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563630023049216,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563630559920128,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563630828355584,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563630962573312,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631029682176,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631063236608,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631080013824,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631088402432,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631092596736,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631094693888,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631095742464,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096266752,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096528896,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096659968,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096725504,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096758272,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096774656,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096782848,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096786944,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096788992,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096790016,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096790528,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096790784,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096790912,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096790976,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791008,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791024,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791032,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791036,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791038,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4458563631096791039,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894647756218505501,64,FLEN)
NAN_BOXED(2319543078276980503,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446400,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446401,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446403,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446407,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446415,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446431,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446463,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446527,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446655,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633446911,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633447423,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633448447,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633450495,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633454591,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633462783,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633479167,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633511935,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633577471,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633708543,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664633970687,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664634494975,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664635543551,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664637640703,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664641835007,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664650223615,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664667000831,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664700555263,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664767664127,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239664901881855,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239665170317311,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239665707188223,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239666780930047,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239668928413695,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239673223380991,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239681813315583,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239698993184767,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239733352923135,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239802072399871,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053239939511353343,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053240214389260287,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053240764145074175,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053241863656701951,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053244062679957503,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053248460726468607,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053257256819490815,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053274849005535231,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053310033377624063,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053380402121801727,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053521139610157055,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4053802614586867711,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4054365564540289023,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4055491464447131647,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4055491464447131648,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4056617364353974272,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057180314307395584,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057461789284106240,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057602526772461568,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057672895516639232,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057708079888728064,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057725672074772480,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057734468167794688,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057738866214305792,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057741065237561344,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057742164749189120,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057742714505003008,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057742989382909952,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743126821863424,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743195541340160,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743229901078528,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743247080947712,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743255670882304,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743259965849600,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743262113333248,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743263187075072,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743263723945984,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743263992381440,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264126599168,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264193708032,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264227262464,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264244039680,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264252428288,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264256622592,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264258719744,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264259768320,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260292608,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260554752,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260685824,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260751360,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260784128,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260800512,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260808704,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260812800,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260814848,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260815872,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816384,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816640,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816768,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816832,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816864,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816880,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816888,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816892,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816894,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4057743264260816895,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894648320277167226,64,FLEN)
NAN_BOXED(2319542772064137943,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150912,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150913,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150915,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150919,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150927,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150943,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150975,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151039,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151167,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151423,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151935,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802152959,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802155007,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802159103,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802167295,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802183679,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802216447,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802281983,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802413055,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802675199,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191803199487,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191804248063,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191806345215,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191810539519,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191818928127,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191835705343,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191869259775,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191936368639,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192070586367,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192339021823,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192875892735,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079193949634559,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079196097118207,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079200392085503,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079208982020095,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079226161889279,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079260521627647,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079329241104383,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079466680057855,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079741557964799,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99080291313778687,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99081390825406463,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99083589848662015,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99087987895173119,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99096783988195327,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99114376174239743,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99149560546328575,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99219929290506239,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99360666778861567,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99642141755572223,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(100205091708993535,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836159,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836160,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(102456891522678784,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103019841476100096,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103301316452810752,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103442053941166080,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103512422685343744,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103547607057432576,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103565199243476992,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103573995336499200,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103578393383010304,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103580592406265856,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103581691917893632,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582241673707520,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582516551614464,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582653990567936,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582722710044672,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582757069783040,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582774249652224,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582782839586816,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582787134554112,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582789282037760,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790355779584,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790892650496,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791161085952,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791295303680,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791362412544,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791395966976,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791412744192,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791421132800,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791425327104,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791427424256,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428472832,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428997120,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429259264,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429390336,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429455872,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429488640,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429505024,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429513216,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429517312,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429519360,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520384,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520896,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521152,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521280,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521344,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521376,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521392,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521400,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521404,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521406,64,FLEN)
NAN_BOXED(6894660199555337183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521407,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6894667863660459943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002624,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002625,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002627,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002631,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002639,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002655,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002687,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002751,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663002879,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663003135,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663003647,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663004671,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663006719,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663010815,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663019007,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663035391,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663068159,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663133695,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663264767,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293663526911,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293664051199,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293665099775,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293667196927,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293671391231,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293679779839,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293696557055,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293730111487,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293797220351,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187293931438079,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187294199873535,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187294736744447,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187295810486271,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187297957969919,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187302252937215,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187310842871807,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187328022740991,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187362382479359,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187431101956095,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187568540909567,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371187843418816511,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371188393174630399,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371189492686258175,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371191691709513727,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371196089756024831,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371204885849047039,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371222478035091455,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371257662407180287,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371328031151357951,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371468768639713279,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13371750243616423935,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13372313193569845247,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13373439093476687871,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13373439093476687872,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13374564993383530496,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375127943336951808,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375409418313662464,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375550155802017792,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375620524546195456,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375655708918284288,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375673301104328704,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375682097197350912,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375686495243862016,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375688694267117568,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375689793778745344,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690343534559232,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690618412466176,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690755851419648,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690824570896384,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690858930634752,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690876110503936,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690884700438528,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690888995405824,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690891142889472,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690892216631296,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690892753502208,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690893021937664,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690893156155392,64,FLEN)
NAN_BOXED(6894668552472672323,64,FLEN)
NAN_BOXED(11511378654353894184,64,FLEN)
NAN_BOXED(13375690893223264256,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
