
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_51456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0003ffffffffff; valaddr_reg:x3; val_offset:154368*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154368*0 + 3*0*FLEN/8, x4, x1, x2)

inst_51457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0007ffffffffff; valaddr_reg:x3; val_offset:154371*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154371*0 + 3*1*FLEN/8, x4, x1, x2)

inst_51458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000fffffffffff; valaddr_reg:x3; val_offset:154374*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154374*0 + 3*2*FLEN/8, x4, x1, x2)

inst_51459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f001fffffffffff; valaddr_reg:x3; val_offset:154377*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154377*0 + 3*3*FLEN/8, x4, x1, x2)

inst_51460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f003fffffffffff; valaddr_reg:x3; val_offset:154380*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154380*0 + 3*4*FLEN/8, x4, x1, x2)

inst_51461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f007fffffffffff; valaddr_reg:x3; val_offset:154383*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154383*0 + 3*5*FLEN/8, x4, x1, x2)

inst_51462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00ffffffffffff; valaddr_reg:x3; val_offset:154386*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154386*0 + 3*6*FLEN/8, x4, x1, x2)

inst_51463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f01ffffffffffff; valaddr_reg:x3; val_offset:154389*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154389*0 + 3*7*FLEN/8, x4, x1, x2)

inst_51464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f03ffffffffffff; valaddr_reg:x3; val_offset:154392*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154392*0 + 3*8*FLEN/8, x4, x1, x2)

inst_51465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f07ffffffffffff; valaddr_reg:x3; val_offset:154395*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154395*0 + 3*9*FLEN/8, x4, x1, x2)

inst_51466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f08000000000000; valaddr_reg:x3; val_offset:154398*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154398*0 + 3*10*FLEN/8, x4, x1, x2)

inst_51467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0c000000000000; valaddr_reg:x3; val_offset:154401*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154401*0 + 3*11*FLEN/8, x4, x1, x2)

inst_51468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0e000000000000; valaddr_reg:x3; val_offset:154404*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154404*0 + 3*12*FLEN/8, x4, x1, x2)

inst_51469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0f000000000000; valaddr_reg:x3; val_offset:154407*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154407*0 + 3*13*FLEN/8, x4, x1, x2)

inst_51470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0f800000000000; valaddr_reg:x3; val_offset:154410*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154410*0 + 3*14*FLEN/8, x4, x1, x2)

inst_51471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fc00000000000; valaddr_reg:x3; val_offset:154413*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154413*0 + 3*15*FLEN/8, x4, x1, x2)

inst_51472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fe00000000000; valaddr_reg:x3; val_offset:154416*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154416*0 + 3*16*FLEN/8, x4, x1, x2)

inst_51473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ff00000000000; valaddr_reg:x3; val_offset:154419*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154419*0 + 3*17*FLEN/8, x4, x1, x2)

inst_51474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ff80000000000; valaddr_reg:x3; val_offset:154422*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154422*0 + 3*18*FLEN/8, x4, x1, x2)

inst_51475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffc0000000000; valaddr_reg:x3; val_offset:154425*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154425*0 + 3*19*FLEN/8, x4, x1, x2)

inst_51476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffe0000000000; valaddr_reg:x3; val_offset:154428*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154428*0 + 3*20*FLEN/8, x4, x1, x2)

inst_51477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fff0000000000; valaddr_reg:x3; val_offset:154431*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154431*0 + 3*21*FLEN/8, x4, x1, x2)

inst_51478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fff8000000000; valaddr_reg:x3; val_offset:154434*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154434*0 + 3*22*FLEN/8, x4, x1, x2)

inst_51479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffc000000000; valaddr_reg:x3; val_offset:154437*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154437*0 + 3*23*FLEN/8, x4, x1, x2)

inst_51480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffe000000000; valaddr_reg:x3; val_offset:154440*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154440*0 + 3*24*FLEN/8, x4, x1, x2)

inst_51481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffff000000000; valaddr_reg:x3; val_offset:154443*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154443*0 + 3*25*FLEN/8, x4, x1, x2)

inst_51482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffff800000000; valaddr_reg:x3; val_offset:154446*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154446*0 + 3*26*FLEN/8, x4, x1, x2)

inst_51483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffc00000000; valaddr_reg:x3; val_offset:154449*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154449*0 + 3*27*FLEN/8, x4, x1, x2)

inst_51484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffe00000000; valaddr_reg:x3; val_offset:154452*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154452*0 + 3*28*FLEN/8, x4, x1, x2)

inst_51485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffff00000000; valaddr_reg:x3; val_offset:154455*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154455*0 + 3*29*FLEN/8, x4, x1, x2)

inst_51486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffff80000000; valaddr_reg:x3; val_offset:154458*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154458*0 + 3*30*FLEN/8, x4, x1, x2)

inst_51487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffc0000000; valaddr_reg:x3; val_offset:154461*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154461*0 + 3*31*FLEN/8, x4, x1, x2)

inst_51488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffe0000000; valaddr_reg:x3; val_offset:154464*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154464*0 + 3*32*FLEN/8, x4, x1, x2)

inst_51489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffff0000000; valaddr_reg:x3; val_offset:154467*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154467*0 + 3*33*FLEN/8, x4, x1, x2)

inst_51490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffff8000000; valaddr_reg:x3; val_offset:154470*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154470*0 + 3*34*FLEN/8, x4, x1, x2)

inst_51491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffc000000; valaddr_reg:x3; val_offset:154473*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154473*0 + 3*35*FLEN/8, x4, x1, x2)

inst_51492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffe000000; valaddr_reg:x3; val_offset:154476*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154476*0 + 3*36*FLEN/8, x4, x1, x2)

inst_51493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffff000000; valaddr_reg:x3; val_offset:154479*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154479*0 + 3*37*FLEN/8, x4, x1, x2)

inst_51494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffff800000; valaddr_reg:x3; val_offset:154482*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154482*0 + 3*38*FLEN/8, x4, x1, x2)

inst_51495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffc00000; valaddr_reg:x3; val_offset:154485*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154485*0 + 3*39*FLEN/8, x4, x1, x2)

inst_51496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffe00000; valaddr_reg:x3; val_offset:154488*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154488*0 + 3*40*FLEN/8, x4, x1, x2)

inst_51497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffff00000; valaddr_reg:x3; val_offset:154491*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154491*0 + 3*41*FLEN/8, x4, x1, x2)

inst_51498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffff80000; valaddr_reg:x3; val_offset:154494*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154494*0 + 3*42*FLEN/8, x4, x1, x2)

inst_51499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffc0000; valaddr_reg:x3; val_offset:154497*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154497*0 + 3*43*FLEN/8, x4, x1, x2)

inst_51500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffe0000; valaddr_reg:x3; val_offset:154500*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154500*0 + 3*44*FLEN/8, x4, x1, x2)

inst_51501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffff0000; valaddr_reg:x3; val_offset:154503*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154503*0 + 3*45*FLEN/8, x4, x1, x2)

inst_51502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffff8000; valaddr_reg:x3; val_offset:154506*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154506*0 + 3*46*FLEN/8, x4, x1, x2)

inst_51503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffc000; valaddr_reg:x3; val_offset:154509*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154509*0 + 3*47*FLEN/8, x4, x1, x2)

inst_51504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffe000; valaddr_reg:x3; val_offset:154512*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154512*0 + 3*48*FLEN/8, x4, x1, x2)

inst_51505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffff000; valaddr_reg:x3; val_offset:154515*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154515*0 + 3*49*FLEN/8, x4, x1, x2)

inst_51506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffff800; valaddr_reg:x3; val_offset:154518*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154518*0 + 3*50*FLEN/8, x4, x1, x2)

inst_51507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffc00; valaddr_reg:x3; val_offset:154521*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154521*0 + 3*51*FLEN/8, x4, x1, x2)

inst_51508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffe00; valaddr_reg:x3; val_offset:154524*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154524*0 + 3*52*FLEN/8, x4, x1, x2)

inst_51509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffff00; valaddr_reg:x3; val_offset:154527*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154527*0 + 3*53*FLEN/8, x4, x1, x2)

inst_51510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffff80; valaddr_reg:x3; val_offset:154530*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154530*0 + 3*54*FLEN/8, x4, x1, x2)

inst_51511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffffc0; valaddr_reg:x3; val_offset:154533*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154533*0 + 3*55*FLEN/8, x4, x1, x2)

inst_51512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffffe0; valaddr_reg:x3; val_offset:154536*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154536*0 + 3*56*FLEN/8, x4, x1, x2)

inst_51513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffff0; valaddr_reg:x3; val_offset:154539*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154539*0 + 3*57*FLEN/8, x4, x1, x2)

inst_51514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffff8; valaddr_reg:x3; val_offset:154542*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154542*0 + 3*58*FLEN/8, x4, x1, x2)

inst_51515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffffc; valaddr_reg:x3; val_offset:154545*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154545*0 + 3*59*FLEN/8, x4, x1, x2)

inst_51516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0ffffffffffffe; valaddr_reg:x3; val_offset:154548*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154548*0 + 3*60*FLEN/8, x4, x1, x2)

inst_51517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0fffffffffffff; valaddr_reg:x3; val_offset:154551*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154551*0 + 3*61*FLEN/8, x4, x1, x2)

inst_51518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:154554*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154554*0 + 3*62*FLEN/8, x4, x1, x2)

inst_51519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:154557*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154557*0 + 3*63*FLEN/8, x4, x1, x2)

inst_51520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:154560*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154560*0 + 3*64*FLEN/8, x4, x1, x2)

inst_51521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:154563*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154563*0 + 3*65*FLEN/8, x4, x1, x2)

inst_51522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:154566*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154566*0 + 3*66*FLEN/8, x4, x1, x2)

inst_51523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:154569*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154569*0 + 3*67*FLEN/8, x4, x1, x2)

inst_51524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:154572*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154572*0 + 3*68*FLEN/8, x4, x1, x2)

inst_51525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:154575*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154575*0 + 3*69*FLEN/8, x4, x1, x2)

inst_51526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:154578*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154578*0 + 3*70*FLEN/8, x4, x1, x2)

inst_51527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:154581*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154581*0 + 3*71*FLEN/8, x4, x1, x2)

inst_51528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:154584*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154584*0 + 3*72*FLEN/8, x4, x1, x2)

inst_51529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:154587*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154587*0 + 3*73*FLEN/8, x4, x1, x2)

inst_51530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:154590*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154590*0 + 3*74*FLEN/8, x4, x1, x2)

inst_51531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:154593*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154593*0 + 3*75*FLEN/8, x4, x1, x2)

inst_51532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:154596*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154596*0 + 3*76*FLEN/8, x4, x1, x2)

inst_51533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:154599*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154599*0 + 3*77*FLEN/8, x4, x1, x2)

inst_51534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:154602*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154602*0 + 3*78*FLEN/8, x4, x1, x2)

inst_51535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:154605*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154605*0 + 3*79*FLEN/8, x4, x1, x2)

inst_51536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:154608*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154608*0 + 3*80*FLEN/8, x4, x1, x2)

inst_51537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:154611*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154611*0 + 3*81*FLEN/8, x4, x1, x2)

inst_51538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:154614*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154614*0 + 3*82*FLEN/8, x4, x1, x2)

inst_51539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:154617*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154617*0 + 3*83*FLEN/8, x4, x1, x2)

inst_51540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:154620*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154620*0 + 3*84*FLEN/8, x4, x1, x2)

inst_51541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:154623*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154623*0 + 3*85*FLEN/8, x4, x1, x2)

inst_51542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:154626*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154626*0 + 3*86*FLEN/8, x4, x1, x2)

inst_51543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:154629*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154629*0 + 3*87*FLEN/8, x4, x1, x2)

inst_51544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:154632*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154632*0 + 3*88*FLEN/8, x4, x1, x2)

inst_51545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:154635*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154635*0 + 3*89*FLEN/8, x4, x1, x2)

inst_51546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:154638*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154638*0 + 3*90*FLEN/8, x4, x1, x2)

inst_51547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:154641*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154641*0 + 3*91*FLEN/8, x4, x1, x2)

inst_51548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:154644*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154644*0 + 3*92*FLEN/8, x4, x1, x2)

inst_51549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:154647*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154647*0 + 3*93*FLEN/8, x4, x1, x2)

inst_51550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:154650*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154650*0 + 3*94*FLEN/8, x4, x1, x2)

inst_51551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:154653*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154653*0 + 3*95*FLEN/8, x4, x1, x2)

inst_51552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:154656*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154656*0 + 3*96*FLEN/8, x4, x1, x2)

inst_51553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:154659*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154659*0 + 3*97*FLEN/8, x4, x1, x2)

inst_51554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:154662*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154662*0 + 3*98*FLEN/8, x4, x1, x2)

inst_51555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:154665*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154665*0 + 3*99*FLEN/8, x4, x1, x2)

inst_51556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:154668*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154668*0 + 3*100*FLEN/8, x4, x1, x2)

inst_51557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:154671*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154671*0 + 3*101*FLEN/8, x4, x1, x2)

inst_51558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:154674*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154674*0 + 3*102*FLEN/8, x4, x1, x2)

inst_51559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:154677*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154677*0 + 3*103*FLEN/8, x4, x1, x2)

inst_51560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:154680*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154680*0 + 3*104*FLEN/8, x4, x1, x2)

inst_51561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:154683*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154683*0 + 3*105*FLEN/8, x4, x1, x2)

inst_51562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000000000; valaddr_reg:x3; val_offset:154686*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154686*0 + 3*106*FLEN/8, x4, x1, x2)

inst_51563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000000001; valaddr_reg:x3; val_offset:154689*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154689*0 + 3*107*FLEN/8, x4, x1, x2)

inst_51564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000000003; valaddr_reg:x3; val_offset:154692*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154692*0 + 3*108*FLEN/8, x4, x1, x2)

inst_51565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000000007; valaddr_reg:x3; val_offset:154695*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154695*0 + 3*109*FLEN/8, x4, x1, x2)

inst_51566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000000000f; valaddr_reg:x3; val_offset:154698*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154698*0 + 3*110*FLEN/8, x4, x1, x2)

inst_51567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000000001f; valaddr_reg:x3; val_offset:154701*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154701*0 + 3*111*FLEN/8, x4, x1, x2)

inst_51568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000000003f; valaddr_reg:x3; val_offset:154704*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154704*0 + 3*112*FLEN/8, x4, x1, x2)

inst_51569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000000007f; valaddr_reg:x3; val_offset:154707*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154707*0 + 3*113*FLEN/8, x4, x1, x2)

inst_51570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000000000ff; valaddr_reg:x3; val_offset:154710*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154710*0 + 3*114*FLEN/8, x4, x1, x2)

inst_51571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000000001ff; valaddr_reg:x3; val_offset:154713*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154713*0 + 3*115*FLEN/8, x4, x1, x2)

inst_51572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000000003ff; valaddr_reg:x3; val_offset:154716*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154716*0 + 3*116*FLEN/8, x4, x1, x2)

inst_51573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000000007ff; valaddr_reg:x3; val_offset:154719*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154719*0 + 3*117*FLEN/8, x4, x1, x2)

inst_51574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000000fff; valaddr_reg:x3; val_offset:154722*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154722*0 + 3*118*FLEN/8, x4, x1, x2)

inst_51575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000001fff; valaddr_reg:x3; val_offset:154725*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154725*0 + 3*119*FLEN/8, x4, x1, x2)

inst_51576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000003fff; valaddr_reg:x3; val_offset:154728*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154728*0 + 3*120*FLEN/8, x4, x1, x2)

inst_51577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000007fff; valaddr_reg:x3; val_offset:154731*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154731*0 + 3*121*FLEN/8, x4, x1, x2)

inst_51578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000000ffff; valaddr_reg:x3; val_offset:154734*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154734*0 + 3*122*FLEN/8, x4, x1, x2)

inst_51579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000001ffff; valaddr_reg:x3; val_offset:154737*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154737*0 + 3*123*FLEN/8, x4, x1, x2)

inst_51580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000003ffff; valaddr_reg:x3; val_offset:154740*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154740*0 + 3*124*FLEN/8, x4, x1, x2)

inst_51581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000007ffff; valaddr_reg:x3; val_offset:154743*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154743*0 + 3*125*FLEN/8, x4, x1, x2)

inst_51582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000000fffff; valaddr_reg:x3; val_offset:154746*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154746*0 + 3*126*FLEN/8, x4, x1, x2)

inst_51583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000001fffff; valaddr_reg:x3; val_offset:154749*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154749*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_51584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000003fffff; valaddr_reg:x3; val_offset:154752*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154752*0 + 3*128*FLEN/8, x4, x1, x2)

inst_51585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000007fffff; valaddr_reg:x3; val_offset:154755*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154755*0 + 3*129*FLEN/8, x4, x1, x2)

inst_51586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000000ffffff; valaddr_reg:x3; val_offset:154758*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154758*0 + 3*130*FLEN/8, x4, x1, x2)

inst_51587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000001ffffff; valaddr_reg:x3; val_offset:154761*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154761*0 + 3*131*FLEN/8, x4, x1, x2)

inst_51588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000003ffffff; valaddr_reg:x3; val_offset:154764*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154764*0 + 3*132*FLEN/8, x4, x1, x2)

inst_51589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000007ffffff; valaddr_reg:x3; val_offset:154767*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154767*0 + 3*133*FLEN/8, x4, x1, x2)

inst_51590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000000fffffff; valaddr_reg:x3; val_offset:154770*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154770*0 + 3*134*FLEN/8, x4, x1, x2)

inst_51591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000001fffffff; valaddr_reg:x3; val_offset:154773*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154773*0 + 3*135*FLEN/8, x4, x1, x2)

inst_51592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000003fffffff; valaddr_reg:x3; val_offset:154776*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154776*0 + 3*136*FLEN/8, x4, x1, x2)

inst_51593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000007fffffff; valaddr_reg:x3; val_offset:154779*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154779*0 + 3*137*FLEN/8, x4, x1, x2)

inst_51594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700000ffffffff; valaddr_reg:x3; val_offset:154782*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154782*0 + 3*138*FLEN/8, x4, x1, x2)

inst_51595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700001ffffffff; valaddr_reg:x3; val_offset:154785*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154785*0 + 3*139*FLEN/8, x4, x1, x2)

inst_51596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700003ffffffff; valaddr_reg:x3; val_offset:154788*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154788*0 + 3*140*FLEN/8, x4, x1, x2)

inst_51597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700007ffffffff; valaddr_reg:x3; val_offset:154791*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154791*0 + 3*141*FLEN/8, x4, x1, x2)

inst_51598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070000fffffffff; valaddr_reg:x3; val_offset:154794*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154794*0 + 3*142*FLEN/8, x4, x1, x2)

inst_51599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070001fffffffff; valaddr_reg:x3; val_offset:154797*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154797*0 + 3*143*FLEN/8, x4, x1, x2)

inst_51600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070003fffffffff; valaddr_reg:x3; val_offset:154800*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154800*0 + 3*144*FLEN/8, x4, x1, x2)

inst_51601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070007fffffffff; valaddr_reg:x3; val_offset:154803*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154803*0 + 3*145*FLEN/8, x4, x1, x2)

inst_51602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807000ffffffffff; valaddr_reg:x3; val_offset:154806*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154806*0 + 3*146*FLEN/8, x4, x1, x2)

inst_51603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807001ffffffffff; valaddr_reg:x3; val_offset:154809*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154809*0 + 3*147*FLEN/8, x4, x1, x2)

inst_51604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807003ffffffffff; valaddr_reg:x3; val_offset:154812*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154812*0 + 3*148*FLEN/8, x4, x1, x2)

inst_51605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807007ffffffffff; valaddr_reg:x3; val_offset:154815*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154815*0 + 3*149*FLEN/8, x4, x1, x2)

inst_51606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80700fffffffffff; valaddr_reg:x3; val_offset:154818*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154818*0 + 3*150*FLEN/8, x4, x1, x2)

inst_51607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80701fffffffffff; valaddr_reg:x3; val_offset:154821*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154821*0 + 3*151*FLEN/8, x4, x1, x2)

inst_51608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80703fffffffffff; valaddr_reg:x3; val_offset:154824*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154824*0 + 3*152*FLEN/8, x4, x1, x2)

inst_51609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x80707fffffffffff; valaddr_reg:x3; val_offset:154827*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154827*0 + 3*153*FLEN/8, x4, x1, x2)

inst_51610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8070ffffffffffff; valaddr_reg:x3; val_offset:154830*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154830*0 + 3*154*FLEN/8, x4, x1, x2)

inst_51611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8071ffffffffffff; valaddr_reg:x3; val_offset:154833*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154833*0 + 3*155*FLEN/8, x4, x1, x2)

inst_51612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8073ffffffffffff; valaddr_reg:x3; val_offset:154836*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154836*0 + 3*156*FLEN/8, x4, x1, x2)

inst_51613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8077ffffffffffff; valaddr_reg:x3; val_offset:154839*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154839*0 + 3*157*FLEN/8, x4, x1, x2)

inst_51614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x8078000000000000; valaddr_reg:x3; val_offset:154842*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154842*0 + 3*158*FLEN/8, x4, x1, x2)

inst_51615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807c000000000000; valaddr_reg:x3; val_offset:154845*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154845*0 + 3*159*FLEN/8, x4, x1, x2)

inst_51616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807e000000000000; valaddr_reg:x3; val_offset:154848*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154848*0 + 3*160*FLEN/8, x4, x1, x2)

inst_51617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807f000000000000; valaddr_reg:x3; val_offset:154851*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154851*0 + 3*161*FLEN/8, x4, x1, x2)

inst_51618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807f800000000000; valaddr_reg:x3; val_offset:154854*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154854*0 + 3*162*FLEN/8, x4, x1, x2)

inst_51619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fc00000000000; valaddr_reg:x3; val_offset:154857*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154857*0 + 3*163*FLEN/8, x4, x1, x2)

inst_51620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fe00000000000; valaddr_reg:x3; val_offset:154860*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154860*0 + 3*164*FLEN/8, x4, x1, x2)

inst_51621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ff00000000000; valaddr_reg:x3; val_offset:154863*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154863*0 + 3*165*FLEN/8, x4, x1, x2)

inst_51622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ff80000000000; valaddr_reg:x3; val_offset:154866*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154866*0 + 3*166*FLEN/8, x4, x1, x2)

inst_51623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffc0000000000; valaddr_reg:x3; val_offset:154869*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154869*0 + 3*167*FLEN/8, x4, x1, x2)

inst_51624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffe0000000000; valaddr_reg:x3; val_offset:154872*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154872*0 + 3*168*FLEN/8, x4, x1, x2)

inst_51625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fff0000000000; valaddr_reg:x3; val_offset:154875*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154875*0 + 3*169*FLEN/8, x4, x1, x2)

inst_51626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fff8000000000; valaddr_reg:x3; val_offset:154878*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154878*0 + 3*170*FLEN/8, x4, x1, x2)

inst_51627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffc000000000; valaddr_reg:x3; val_offset:154881*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154881*0 + 3*171*FLEN/8, x4, x1, x2)

inst_51628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffe000000000; valaddr_reg:x3; val_offset:154884*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154884*0 + 3*172*FLEN/8, x4, x1, x2)

inst_51629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffff000000000; valaddr_reg:x3; val_offset:154887*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154887*0 + 3*173*FLEN/8, x4, x1, x2)

inst_51630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffff800000000; valaddr_reg:x3; val_offset:154890*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154890*0 + 3*174*FLEN/8, x4, x1, x2)

inst_51631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffc00000000; valaddr_reg:x3; val_offset:154893*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154893*0 + 3*175*FLEN/8, x4, x1, x2)

inst_51632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffe00000000; valaddr_reg:x3; val_offset:154896*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154896*0 + 3*176*FLEN/8, x4, x1, x2)

inst_51633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffff00000000; valaddr_reg:x3; val_offset:154899*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154899*0 + 3*177*FLEN/8, x4, x1, x2)

inst_51634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffff80000000; valaddr_reg:x3; val_offset:154902*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154902*0 + 3*178*FLEN/8, x4, x1, x2)

inst_51635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffc0000000; valaddr_reg:x3; val_offset:154905*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154905*0 + 3*179*FLEN/8, x4, x1, x2)

inst_51636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffe0000000; valaddr_reg:x3; val_offset:154908*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154908*0 + 3*180*FLEN/8, x4, x1, x2)

inst_51637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffff0000000; valaddr_reg:x3; val_offset:154911*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154911*0 + 3*181*FLEN/8, x4, x1, x2)

inst_51638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffff8000000; valaddr_reg:x3; val_offset:154914*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154914*0 + 3*182*FLEN/8, x4, x1, x2)

inst_51639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffc000000; valaddr_reg:x3; val_offset:154917*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154917*0 + 3*183*FLEN/8, x4, x1, x2)

inst_51640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffe000000; valaddr_reg:x3; val_offset:154920*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154920*0 + 3*184*FLEN/8, x4, x1, x2)

inst_51641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffff000000; valaddr_reg:x3; val_offset:154923*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154923*0 + 3*185*FLEN/8, x4, x1, x2)

inst_51642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffff800000; valaddr_reg:x3; val_offset:154926*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154926*0 + 3*186*FLEN/8, x4, x1, x2)

inst_51643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffc00000; valaddr_reg:x3; val_offset:154929*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154929*0 + 3*187*FLEN/8, x4, x1, x2)

inst_51644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffe00000; valaddr_reg:x3; val_offset:154932*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154932*0 + 3*188*FLEN/8, x4, x1, x2)

inst_51645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffff00000; valaddr_reg:x3; val_offset:154935*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154935*0 + 3*189*FLEN/8, x4, x1, x2)

inst_51646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffff80000; valaddr_reg:x3; val_offset:154938*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154938*0 + 3*190*FLEN/8, x4, x1, x2)

inst_51647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffc0000; valaddr_reg:x3; val_offset:154941*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154941*0 + 3*191*FLEN/8, x4, x1, x2)

inst_51648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:154944*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154944*0 + 3*192*FLEN/8, x4, x1, x2)

inst_51649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:154947*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154947*0 + 3*193*FLEN/8, x4, x1, x2)

inst_51650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:154950*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154950*0 + 3*194*FLEN/8, x4, x1, x2)

inst_51651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:154953*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154953*0 + 3*195*FLEN/8, x4, x1, x2)

inst_51652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:154956*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154956*0 + 3*196*FLEN/8, x4, x1, x2)

inst_51653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:154959*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154959*0 + 3*197*FLEN/8, x4, x1, x2)

inst_51654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:154962*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154962*0 + 3*198*FLEN/8, x4, x1, x2)

inst_51655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:154965*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154965*0 + 3*199*FLEN/8, x4, x1, x2)

inst_51656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:154968*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154968*0 + 3*200*FLEN/8, x4, x1, x2)

inst_51657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:154971*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154971*0 + 3*201*FLEN/8, x4, x1, x2)

inst_51658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:154974*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154974*0 + 3*202*FLEN/8, x4, x1, x2)

inst_51659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:154977*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154977*0 + 3*203*FLEN/8, x4, x1, x2)

inst_51660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:154980*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154980*0 + 3*204*FLEN/8, x4, x1, x2)

inst_51661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:154983*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154983*0 + 3*205*FLEN/8, x4, x1, x2)

inst_51662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:154986*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154986*0 + 3*206*FLEN/8, x4, x1, x2)

inst_51663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:154989*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154989*0 + 3*207*FLEN/8, x4, x1, x2)

inst_51664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:154992*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154992*0 + 3*208*FLEN/8, x4, x1, x2)

inst_51665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a3e4c185aa5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a3e4c185aa5; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:154995*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154995*0 + 3*209*FLEN/8, x4, x1, x2)

inst_51666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:154998*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154998*0 + 3*210*FLEN/8, x4, x1, x2)

inst_51667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:155001*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155001*0 + 3*211*FLEN/8, x4, x1, x2)

inst_51668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:155004*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155004*0 + 3*212*FLEN/8, x4, x1, x2)

inst_51669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:155007*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155007*0 + 3*213*FLEN/8, x4, x1, x2)

inst_51670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:155010*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155010*0 + 3*214*FLEN/8, x4, x1, x2)

inst_51671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:155013*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155013*0 + 3*215*FLEN/8, x4, x1, x2)

inst_51672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:155016*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155016*0 + 3*216*FLEN/8, x4, x1, x2)

inst_51673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:155019*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155019*0 + 3*217*FLEN/8, x4, x1, x2)

inst_51674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:155022*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155022*0 + 3*218*FLEN/8, x4, x1, x2)

inst_51675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:155025*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155025*0 + 3*219*FLEN/8, x4, x1, x2)

inst_51676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:155028*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155028*0 + 3*220*FLEN/8, x4, x1, x2)

inst_51677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:155031*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155031*0 + 3*221*FLEN/8, x4, x1, x2)

inst_51678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:155034*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155034*0 + 3*222*FLEN/8, x4, x1, x2)

inst_51679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:155037*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155037*0 + 3*223*FLEN/8, x4, x1, x2)

inst_51680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:155040*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155040*0 + 3*224*FLEN/8, x4, x1, x2)

inst_51681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:155043*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155043*0 + 3*225*FLEN/8, x4, x1, x2)

inst_51682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:155046*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155046*0 + 3*226*FLEN/8, x4, x1, x2)

inst_51683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:155049*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155049*0 + 3*227*FLEN/8, x4, x1, x2)

inst_51684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:155052*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155052*0 + 3*228*FLEN/8, x4, x1, x2)

inst_51685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:155055*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155055*0 + 3*229*FLEN/8, x4, x1, x2)

inst_51686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:155058*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155058*0 + 3*230*FLEN/8, x4, x1, x2)

inst_51687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:155061*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155061*0 + 3*231*FLEN/8, x4, x1, x2)

inst_51688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000000000; valaddr_reg:x3; val_offset:155064*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155064*0 + 3*232*FLEN/8, x4, x1, x2)

inst_51689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000000001; valaddr_reg:x3; val_offset:155067*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155067*0 + 3*233*FLEN/8, x4, x1, x2)

inst_51690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000000003; valaddr_reg:x3; val_offset:155070*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155070*0 + 3*234*FLEN/8, x4, x1, x2)

inst_51691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000000007; valaddr_reg:x3; val_offset:155073*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155073*0 + 3*235*FLEN/8, x4, x1, x2)

inst_51692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000000000f; valaddr_reg:x3; val_offset:155076*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155076*0 + 3*236*FLEN/8, x4, x1, x2)

inst_51693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000000001f; valaddr_reg:x3; val_offset:155079*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155079*0 + 3*237*FLEN/8, x4, x1, x2)

inst_51694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000000003f; valaddr_reg:x3; val_offset:155082*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155082*0 + 3*238*FLEN/8, x4, x1, x2)

inst_51695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000000007f; valaddr_reg:x3; val_offset:155085*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155085*0 + 3*239*FLEN/8, x4, x1, x2)

inst_51696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000000000ff; valaddr_reg:x3; val_offset:155088*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155088*0 + 3*240*FLEN/8, x4, x1, x2)

inst_51697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000000001ff; valaddr_reg:x3; val_offset:155091*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155091*0 + 3*241*FLEN/8, x4, x1, x2)

inst_51698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000000003ff; valaddr_reg:x3; val_offset:155094*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155094*0 + 3*242*FLEN/8, x4, x1, x2)

inst_51699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000000007ff; valaddr_reg:x3; val_offset:155097*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155097*0 + 3*243*FLEN/8, x4, x1, x2)

inst_51700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000000fff; valaddr_reg:x3; val_offset:155100*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155100*0 + 3*244*FLEN/8, x4, x1, x2)

inst_51701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000001fff; valaddr_reg:x3; val_offset:155103*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155103*0 + 3*245*FLEN/8, x4, x1, x2)

inst_51702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000003fff; valaddr_reg:x3; val_offset:155106*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155106*0 + 3*246*FLEN/8, x4, x1, x2)

inst_51703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000007fff; valaddr_reg:x3; val_offset:155109*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155109*0 + 3*247*FLEN/8, x4, x1, x2)

inst_51704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000000ffff; valaddr_reg:x3; val_offset:155112*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155112*0 + 3*248*FLEN/8, x4, x1, x2)

inst_51705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000001ffff; valaddr_reg:x3; val_offset:155115*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155115*0 + 3*249*FLEN/8, x4, x1, x2)

inst_51706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000003ffff; valaddr_reg:x3; val_offset:155118*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155118*0 + 3*250*FLEN/8, x4, x1, x2)

inst_51707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000007ffff; valaddr_reg:x3; val_offset:155121*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155121*0 + 3*251*FLEN/8, x4, x1, x2)

inst_51708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000000fffff; valaddr_reg:x3; val_offset:155124*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155124*0 + 3*252*FLEN/8, x4, x1, x2)

inst_51709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000001fffff; valaddr_reg:x3; val_offset:155127*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155127*0 + 3*253*FLEN/8, x4, x1, x2)

inst_51710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000003fffff; valaddr_reg:x3; val_offset:155130*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155130*0 + 3*254*FLEN/8, x4, x1, x2)

inst_51711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000007fffff; valaddr_reg:x3; val_offset:155133*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155133*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_51712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000000ffffff; valaddr_reg:x3; val_offset:155136*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155136*0 + 3*256*FLEN/8, x4, x1, x2)

inst_51713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000001ffffff; valaddr_reg:x3; val_offset:155139*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155139*0 + 3*257*FLEN/8, x4, x1, x2)

inst_51714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000003ffffff; valaddr_reg:x3; val_offset:155142*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155142*0 + 3*258*FLEN/8, x4, x1, x2)

inst_51715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000007ffffff; valaddr_reg:x3; val_offset:155145*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155145*0 + 3*259*FLEN/8, x4, x1, x2)

inst_51716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000000fffffff; valaddr_reg:x3; val_offset:155148*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155148*0 + 3*260*FLEN/8, x4, x1, x2)

inst_51717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000001fffffff; valaddr_reg:x3; val_offset:155151*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155151*0 + 3*261*FLEN/8, x4, x1, x2)

inst_51718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000003fffffff; valaddr_reg:x3; val_offset:155154*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155154*0 + 3*262*FLEN/8, x4, x1, x2)

inst_51719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000007fffffff; valaddr_reg:x3; val_offset:155157*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155157*0 + 3*263*FLEN/8, x4, x1, x2)

inst_51720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100000ffffffff; valaddr_reg:x3; val_offset:155160*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155160*0 + 3*264*FLEN/8, x4, x1, x2)

inst_51721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100001ffffffff; valaddr_reg:x3; val_offset:155163*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155163*0 + 3*265*FLEN/8, x4, x1, x2)

inst_51722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100003ffffffff; valaddr_reg:x3; val_offset:155166*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155166*0 + 3*266*FLEN/8, x4, x1, x2)

inst_51723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100007ffffffff; valaddr_reg:x3; val_offset:155169*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155169*0 + 3*267*FLEN/8, x4, x1, x2)

inst_51724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210000fffffffff; valaddr_reg:x3; val_offset:155172*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155172*0 + 3*268*FLEN/8, x4, x1, x2)

inst_51725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210001fffffffff; valaddr_reg:x3; val_offset:155175*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155175*0 + 3*269*FLEN/8, x4, x1, x2)

inst_51726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210003fffffffff; valaddr_reg:x3; val_offset:155178*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155178*0 + 3*270*FLEN/8, x4, x1, x2)

inst_51727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210007fffffffff; valaddr_reg:x3; val_offset:155181*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155181*0 + 3*271*FLEN/8, x4, x1, x2)

inst_51728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21000ffffffffff; valaddr_reg:x3; val_offset:155184*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155184*0 + 3*272*FLEN/8, x4, x1, x2)

inst_51729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21001ffffffffff; valaddr_reg:x3; val_offset:155187*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155187*0 + 3*273*FLEN/8, x4, x1, x2)

inst_51730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21003ffffffffff; valaddr_reg:x3; val_offset:155190*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155190*0 + 3*274*FLEN/8, x4, x1, x2)

inst_51731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21007ffffffffff; valaddr_reg:x3; val_offset:155193*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155193*0 + 3*275*FLEN/8, x4, x1, x2)

inst_51732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2100fffffffffff; valaddr_reg:x3; val_offset:155196*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155196*0 + 3*276*FLEN/8, x4, x1, x2)

inst_51733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2101fffffffffff; valaddr_reg:x3; val_offset:155199*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155199*0 + 3*277*FLEN/8, x4, x1, x2)

inst_51734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2103fffffffffff; valaddr_reg:x3; val_offset:155202*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155202*0 + 3*278*FLEN/8, x4, x1, x2)

inst_51735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x2107fffffffffff; valaddr_reg:x3; val_offset:155205*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155205*0 + 3*279*FLEN/8, x4, x1, x2)

inst_51736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x210ffffffffffff; valaddr_reg:x3; val_offset:155208*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155208*0 + 3*280*FLEN/8, x4, x1, x2)

inst_51737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x211ffffffffffff; valaddr_reg:x3; val_offset:155211*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155211*0 + 3*281*FLEN/8, x4, x1, x2)

inst_51738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x213ffffffffffff; valaddr_reg:x3; val_offset:155214*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155214*0 + 3*282*FLEN/8, x4, x1, x2)

inst_51739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x217ffffffffffff; valaddr_reg:x3; val_offset:155217*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155217*0 + 3*283*FLEN/8, x4, x1, x2)

inst_51740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x218000000000000; valaddr_reg:x3; val_offset:155220*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155220*0 + 3*284*FLEN/8, x4, x1, x2)

inst_51741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21c000000000000; valaddr_reg:x3; val_offset:155223*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155223*0 + 3*285*FLEN/8, x4, x1, x2)

inst_51742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21e000000000000; valaddr_reg:x3; val_offset:155226*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155226*0 + 3*286*FLEN/8, x4, x1, x2)

inst_51743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21f000000000000; valaddr_reg:x3; val_offset:155229*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155229*0 + 3*287*FLEN/8, x4, x1, x2)

inst_51744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:155232*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155232*0 + 3*288*FLEN/8, x4, x1, x2)

inst_51745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:155235*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155235*0 + 3*289*FLEN/8, x4, x1, x2)

inst_51746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:155238*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155238*0 + 3*290*FLEN/8, x4, x1, x2)

inst_51747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:155241*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155241*0 + 3*291*FLEN/8, x4, x1, x2)

inst_51748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:155244*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155244*0 + 3*292*FLEN/8, x4, x1, x2)

inst_51749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:155247*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155247*0 + 3*293*FLEN/8, x4, x1, x2)

inst_51750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:155250*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155250*0 + 3*294*FLEN/8, x4, x1, x2)

inst_51751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:155253*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155253*0 + 3*295*FLEN/8, x4, x1, x2)

inst_51752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:155256*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155256*0 + 3*296*FLEN/8, x4, x1, x2)

inst_51753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:155259*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155259*0 + 3*297*FLEN/8, x4, x1, x2)

inst_51754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:155262*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155262*0 + 3*298*FLEN/8, x4, x1, x2)

inst_51755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:155265*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155265*0 + 3*299*FLEN/8, x4, x1, x2)

inst_51756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:155268*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155268*0 + 3*300*FLEN/8, x4, x1, x2)

inst_51757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:155271*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155271*0 + 3*301*FLEN/8, x4, x1, x2)

inst_51758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:155274*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155274*0 + 3*302*FLEN/8, x4, x1, x2)

inst_51759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:155277*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155277*0 + 3*303*FLEN/8, x4, x1, x2)

inst_51760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:155280*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155280*0 + 3*304*FLEN/8, x4, x1, x2)

inst_51761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:155283*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155283*0 + 3*305*FLEN/8, x4, x1, x2)

inst_51762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:155286*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155286*0 + 3*306*FLEN/8, x4, x1, x2)

inst_51763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:155289*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155289*0 + 3*307*FLEN/8, x4, x1, x2)

inst_51764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:155292*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155292*0 + 3*308*FLEN/8, x4, x1, x2)

inst_51765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:155295*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155295*0 + 3*309*FLEN/8, x4, x1, x2)

inst_51766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:155298*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155298*0 + 3*310*FLEN/8, x4, x1, x2)

inst_51767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:155301*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155301*0 + 3*311*FLEN/8, x4, x1, x2)

inst_51768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:155304*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155304*0 + 3*312*FLEN/8, x4, x1, x2)

inst_51769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:155307*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155307*0 + 3*313*FLEN/8, x4, x1, x2)

inst_51770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:155310*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155310*0 + 3*314*FLEN/8, x4, x1, x2)

inst_51771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:155313*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155313*0 + 3*315*FLEN/8, x4, x1, x2)

inst_51772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:155316*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155316*0 + 3*316*FLEN/8, x4, x1, x2)

inst_51773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:155319*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155319*0 + 3*317*FLEN/8, x4, x1, x2)

inst_51774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:155322*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155322*0 + 3*318*FLEN/8, x4, x1, x2)

inst_51775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:155325*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155325*0 + 3*319*FLEN/8, x4, x1, x2)

inst_51776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:155328*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155328*0 + 3*320*FLEN/8, x4, x1, x2)

inst_51777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:155331*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155331*0 + 3*321*FLEN/8, x4, x1, x2)

inst_51778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:155334*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155334*0 + 3*322*FLEN/8, x4, x1, x2)

inst_51779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:155337*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155337*0 + 3*323*FLEN/8, x4, x1, x2)

inst_51780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:155340*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155340*0 + 3*324*FLEN/8, x4, x1, x2)

inst_51781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:155343*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155343*0 + 3*325*FLEN/8, x4, x1, x2)

inst_51782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:155346*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155346*0 + 3*326*FLEN/8, x4, x1, x2)

inst_51783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffff00; valaddr_reg:x3; val_offset:155349*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155349*0 + 3*327*FLEN/8, x4, x1, x2)

inst_51784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffff80; valaddr_reg:x3; val_offset:155352*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155352*0 + 3*328*FLEN/8, x4, x1, x2)

inst_51785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:155355*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155355*0 + 3*329*FLEN/8, x4, x1, x2)

inst_51786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:155358*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155358*0 + 3*330*FLEN/8, x4, x1, x2)

inst_51787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffff0; valaddr_reg:x3; val_offset:155361*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155361*0 + 3*331*FLEN/8, x4, x1, x2)

inst_51788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffff8; valaddr_reg:x3; val_offset:155364*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155364*0 + 3*332*FLEN/8, x4, x1, x2)

inst_51789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:155367*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155367*0 + 3*333*FLEN/8, x4, x1, x2)

inst_51790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:155370*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155370*0 + 3*334*FLEN/8, x4, x1, x2)

inst_51791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4a7b8fe524b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4a7b8fe524b7; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:155373*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155373*0 + 3*335*FLEN/8, x4, x1, x2)

inst_51792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:155376*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155376*0 + 3*336*FLEN/8, x4, x1, x2)

inst_51793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:155379*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155379*0 + 3*337*FLEN/8, x4, x1, x2)

inst_51794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:155382*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155382*0 + 3*338*FLEN/8, x4, x1, x2)

inst_51795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:155385*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155385*0 + 3*339*FLEN/8, x4, x1, x2)

inst_51796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:155388*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155388*0 + 3*340*FLEN/8, x4, x1, x2)

inst_51797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:155391*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155391*0 + 3*341*FLEN/8, x4, x1, x2)

inst_51798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:155394*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155394*0 + 3*342*FLEN/8, x4, x1, x2)

inst_51799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:155397*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155397*0 + 3*343*FLEN/8, x4, x1, x2)

inst_51800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:155400*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155400*0 + 3*344*FLEN/8, x4, x1, x2)

inst_51801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:155403*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155403*0 + 3*345*FLEN/8, x4, x1, x2)

inst_51802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:155406*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155406*0 + 3*346*FLEN/8, x4, x1, x2)

inst_51803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:155409*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155409*0 + 3*347*FLEN/8, x4, x1, x2)

inst_51804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:155412*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155412*0 + 3*348*FLEN/8, x4, x1, x2)

inst_51805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:155415*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155415*0 + 3*349*FLEN/8, x4, x1, x2)

inst_51806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:155418*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155418*0 + 3*350*FLEN/8, x4, x1, x2)

inst_51807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:155421*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155421*0 + 3*351*FLEN/8, x4, x1, x2)

inst_51808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:155424*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155424*0 + 3*352*FLEN/8, x4, x1, x2)

inst_51809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:155427*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155427*0 + 3*353*FLEN/8, x4, x1, x2)

inst_51810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:155430*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155430*0 + 3*354*FLEN/8, x4, x1, x2)

inst_51811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:155433*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155433*0 + 3*355*FLEN/8, x4, x1, x2)

inst_51812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:155436*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155436*0 + 3*356*FLEN/8, x4, x1, x2)

inst_51813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:155439*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155439*0 + 3*357*FLEN/8, x4, x1, x2)

inst_51814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000000000; valaddr_reg:x3; val_offset:155442*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155442*0 + 3*358*FLEN/8, x4, x1, x2)

inst_51815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000000001; valaddr_reg:x3; val_offset:155445*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155445*0 + 3*359*FLEN/8, x4, x1, x2)

inst_51816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000000003; valaddr_reg:x3; val_offset:155448*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155448*0 + 3*360*FLEN/8, x4, x1, x2)

inst_51817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000000007; valaddr_reg:x3; val_offset:155451*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155451*0 + 3*361*FLEN/8, x4, x1, x2)

inst_51818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000000000f; valaddr_reg:x3; val_offset:155454*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155454*0 + 3*362*FLEN/8, x4, x1, x2)

inst_51819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000000001f; valaddr_reg:x3; val_offset:155457*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155457*0 + 3*363*FLEN/8, x4, x1, x2)

inst_51820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000000003f; valaddr_reg:x3; val_offset:155460*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155460*0 + 3*364*FLEN/8, x4, x1, x2)

inst_51821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000000007f; valaddr_reg:x3; val_offset:155463*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155463*0 + 3*365*FLEN/8, x4, x1, x2)

inst_51822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000000000ff; valaddr_reg:x3; val_offset:155466*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155466*0 + 3*366*FLEN/8, x4, x1, x2)

inst_51823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000000001ff; valaddr_reg:x3; val_offset:155469*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155469*0 + 3*367*FLEN/8, x4, x1, x2)

inst_51824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000000003ff; valaddr_reg:x3; val_offset:155472*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155472*0 + 3*368*FLEN/8, x4, x1, x2)

inst_51825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000000007ff; valaddr_reg:x3; val_offset:155475*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155475*0 + 3*369*FLEN/8, x4, x1, x2)

inst_51826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000000fff; valaddr_reg:x3; val_offset:155478*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155478*0 + 3*370*FLEN/8, x4, x1, x2)

inst_51827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000001fff; valaddr_reg:x3; val_offset:155481*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155481*0 + 3*371*FLEN/8, x4, x1, x2)

inst_51828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:155484*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155484*0 + 3*372*FLEN/8, x4, x1, x2)

inst_51829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:155487*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155487*0 + 3*373*FLEN/8, x4, x1, x2)

inst_51830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:155490*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155490*0 + 3*374*FLEN/8, x4, x1, x2)

inst_51831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:155493*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155493*0 + 3*375*FLEN/8, x4, x1, x2)

inst_51832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:155496*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155496*0 + 3*376*FLEN/8, x4, x1, x2)

inst_51833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:155499*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155499*0 + 3*377*FLEN/8, x4, x1, x2)

inst_51834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:155502*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155502*0 + 3*378*FLEN/8, x4, x1, x2)

inst_51835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:155505*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155505*0 + 3*379*FLEN/8, x4, x1, x2)

inst_51836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:155508*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155508*0 + 3*380*FLEN/8, x4, x1, x2)

inst_51837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:155511*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155511*0 + 3*381*FLEN/8, x4, x1, x2)

inst_51838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:155514*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155514*0 + 3*382*FLEN/8, x4, x1, x2)

inst_51839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:155517*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155517*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_51840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:155520*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155520*0 + 3*384*FLEN/8, x4, x1, x2)

inst_51841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:155523*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155523*0 + 3*385*FLEN/8, x4, x1, x2)

inst_51842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:155526*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155526*0 + 3*386*FLEN/8, x4, x1, x2)

inst_51843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:155529*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155529*0 + 3*387*FLEN/8, x4, x1, x2)

inst_51844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:155532*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155532*0 + 3*388*FLEN/8, x4, x1, x2)

inst_51845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:155535*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155535*0 + 3*389*FLEN/8, x4, x1, x2)

inst_51846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:155538*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155538*0 + 3*390*FLEN/8, x4, x1, x2)

inst_51847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:155541*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155541*0 + 3*391*FLEN/8, x4, x1, x2)

inst_51848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:155544*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155544*0 + 3*392*FLEN/8, x4, x1, x2)

inst_51849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:155547*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155547*0 + 3*393*FLEN/8, x4, x1, x2)

inst_51850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:155550*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155550*0 + 3*394*FLEN/8, x4, x1, x2)

inst_51851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:155553*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155553*0 + 3*395*FLEN/8, x4, x1, x2)

inst_51852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:155556*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155556*0 + 3*396*FLEN/8, x4, x1, x2)

inst_51853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:155559*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155559*0 + 3*397*FLEN/8, x4, x1, x2)

inst_51854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:155562*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155562*0 + 3*398*FLEN/8, x4, x1, x2)

inst_51855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:155565*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155565*0 + 3*399*FLEN/8, x4, x1, x2)

inst_51856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:155568*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155568*0 + 3*400*FLEN/8, x4, x1, x2)

inst_51857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:155571*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155571*0 + 3*401*FLEN/8, x4, x1, x2)

inst_51858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:155574*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155574*0 + 3*402*FLEN/8, x4, x1, x2)

inst_51859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:155577*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155577*0 + 3*403*FLEN/8, x4, x1, x2)

inst_51860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:155580*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155580*0 + 3*404*FLEN/8, x4, x1, x2)

inst_51861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:155583*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155583*0 + 3*405*FLEN/8, x4, x1, x2)

inst_51862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:155586*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155586*0 + 3*406*FLEN/8, x4, x1, x2)

inst_51863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:155589*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155589*0 + 3*407*FLEN/8, x4, x1, x2)

inst_51864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:155592*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155592*0 + 3*408*FLEN/8, x4, x1, x2)

inst_51865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:155595*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155595*0 + 3*409*FLEN/8, x4, x1, x2)

inst_51866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:155598*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155598*0 + 3*410*FLEN/8, x4, x1, x2)

inst_51867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:155601*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155601*0 + 3*411*FLEN/8, x4, x1, x2)

inst_51868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:155604*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155604*0 + 3*412*FLEN/8, x4, x1, x2)

inst_51869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:155607*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155607*0 + 3*413*FLEN/8, x4, x1, x2)

inst_51870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:155610*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155610*0 + 3*414*FLEN/8, x4, x1, x2)

inst_51871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:155613*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155613*0 + 3*415*FLEN/8, x4, x1, x2)

inst_51872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:155616*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155616*0 + 3*416*FLEN/8, x4, x1, x2)

inst_51873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:155619*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155619*0 + 3*417*FLEN/8, x4, x1, x2)

inst_51874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:155622*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155622*0 + 3*418*FLEN/8, x4, x1, x2)

inst_51875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:155625*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155625*0 + 3*419*FLEN/8, x4, x1, x2)

inst_51876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:155628*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155628*0 + 3*420*FLEN/8, x4, x1, x2)

inst_51877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:155631*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155631*0 + 3*421*FLEN/8, x4, x1, x2)

inst_51878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:155634*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155634*0 + 3*422*FLEN/8, x4, x1, x2)

inst_51879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:155637*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155637*0 + 3*423*FLEN/8, x4, x1, x2)

inst_51880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:155640*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155640*0 + 3*424*FLEN/8, x4, x1, x2)

inst_51881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:155643*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155643*0 + 3*425*FLEN/8, x4, x1, x2)

inst_51882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:155646*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155646*0 + 3*426*FLEN/8, x4, x1, x2)

inst_51883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:155649*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155649*0 + 3*427*FLEN/8, x4, x1, x2)

inst_51884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:155652*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155652*0 + 3*428*FLEN/8, x4, x1, x2)

inst_51885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:155655*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155655*0 + 3*429*FLEN/8, x4, x1, x2)

inst_51886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:155658*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155658*0 + 3*430*FLEN/8, x4, x1, x2)

inst_51887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:155661*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155661*0 + 3*431*FLEN/8, x4, x1, x2)

inst_51888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:155664*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155664*0 + 3*432*FLEN/8, x4, x1, x2)

inst_51889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:155667*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155667*0 + 3*433*FLEN/8, x4, x1, x2)

inst_51890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:155670*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155670*0 + 3*434*FLEN/8, x4, x1, x2)

inst_51891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:155673*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155673*0 + 3*435*FLEN/8, x4, x1, x2)

inst_51892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:155676*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155676*0 + 3*436*FLEN/8, x4, x1, x2)

inst_51893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:155679*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155679*0 + 3*437*FLEN/8, x4, x1, x2)

inst_51894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:155682*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155682*0 + 3*438*FLEN/8, x4, x1, x2)

inst_51895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:155685*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155685*0 + 3*439*FLEN/8, x4, x1, x2)

inst_51896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:155688*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155688*0 + 3*440*FLEN/8, x4, x1, x2)

inst_51897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:155691*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155691*0 + 3*441*FLEN/8, x4, x1, x2)

inst_51898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:155694*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155694*0 + 3*442*FLEN/8, x4, x1, x2)

inst_51899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:155697*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155697*0 + 3*443*FLEN/8, x4, x1, x2)

inst_51900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:155700*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155700*0 + 3*444*FLEN/8, x4, x1, x2)

inst_51901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:155703*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155703*0 + 3*445*FLEN/8, x4, x1, x2)

inst_51902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:155706*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155706*0 + 3*446*FLEN/8, x4, x1, x2)

inst_51903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:155709*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155709*0 + 3*447*FLEN/8, x4, x1, x2)

inst_51904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:155712*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155712*0 + 3*448*FLEN/8, x4, x1, x2)

inst_51905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:155715*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155715*0 + 3*449*FLEN/8, x4, x1, x2)

inst_51906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:155718*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155718*0 + 3*450*FLEN/8, x4, x1, x2)

inst_51907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:155721*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155721*0 + 3*451*FLEN/8, x4, x1, x2)

inst_51908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:155724*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155724*0 + 3*452*FLEN/8, x4, x1, x2)

inst_51909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:155727*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155727*0 + 3*453*FLEN/8, x4, x1, x2)

inst_51910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:155730*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155730*0 + 3*454*FLEN/8, x4, x1, x2)

inst_51911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:155733*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155733*0 + 3*455*FLEN/8, x4, x1, x2)

inst_51912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:155736*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155736*0 + 3*456*FLEN/8, x4, x1, x2)

inst_51913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:155739*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155739*0 + 3*457*FLEN/8, x4, x1, x2)

inst_51914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:155742*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155742*0 + 3*458*FLEN/8, x4, x1, x2)

inst_51915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:155745*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155745*0 + 3*459*FLEN/8, x4, x1, x2)

inst_51916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:155748*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155748*0 + 3*460*FLEN/8, x4, x1, x2)

inst_51917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f5c635a3b99f3; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:155751*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155751*0 + 3*461*FLEN/8, x4, x1, x2)

inst_51918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:155754*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155754*0 + 3*462*FLEN/8, x4, x1, x2)

inst_51919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:155757*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155757*0 + 3*463*FLEN/8, x4, x1, x2)

inst_51920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:155760*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155760*0 + 3*464*FLEN/8, x4, x1, x2)

inst_51921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:155763*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155763*0 + 3*465*FLEN/8, x4, x1, x2)

inst_51922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:155766*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155766*0 + 3*466*FLEN/8, x4, x1, x2)

inst_51923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:155769*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155769*0 + 3*467*FLEN/8, x4, x1, x2)

inst_51924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:155772*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155772*0 + 3*468*FLEN/8, x4, x1, x2)

inst_51925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:155775*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155775*0 + 3*469*FLEN/8, x4, x1, x2)

inst_51926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:155778*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155778*0 + 3*470*FLEN/8, x4, x1, x2)

inst_51927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:155781*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155781*0 + 3*471*FLEN/8, x4, x1, x2)

inst_51928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:155784*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155784*0 + 3*472*FLEN/8, x4, x1, x2)

inst_51929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:155787*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155787*0 + 3*473*FLEN/8, x4, x1, x2)

inst_51930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:155790*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155790*0 + 3*474*FLEN/8, x4, x1, x2)

inst_51931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:155793*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155793*0 + 3*475*FLEN/8, x4, x1, x2)

inst_51932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:155796*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155796*0 + 3*476*FLEN/8, x4, x1, x2)

inst_51933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:155799*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155799*0 + 3*477*FLEN/8, x4, x1, x2)

inst_51934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:155802*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155802*0 + 3*478*FLEN/8, x4, x1, x2)

inst_51935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:155805*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155805*0 + 3*479*FLEN/8, x4, x1, x2)

inst_51936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:155808*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155808*0 + 3*480*FLEN/8, x4, x1, x2)

inst_51937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:155811*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155811*0 + 3*481*FLEN/8, x4, x1, x2)

inst_51938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:155814*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155814*0 + 3*482*FLEN/8, x4, x1, x2)

inst_51939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:155817*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155817*0 + 3*483*FLEN/8, x4, x1, x2)

inst_51940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:155820*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155820*0 + 3*484*FLEN/8, x4, x1, x2)

inst_51941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:155823*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155823*0 + 3*485*FLEN/8, x4, x1, x2)

inst_51942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:155826*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155826*0 + 3*486*FLEN/8, x4, x1, x2)

inst_51943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:155829*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155829*0 + 3*487*FLEN/8, x4, x1, x2)

inst_51944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:155832*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155832*0 + 3*488*FLEN/8, x4, x1, x2)

inst_51945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:155835*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155835*0 + 3*489*FLEN/8, x4, x1, x2)

inst_51946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:155838*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155838*0 + 3*490*FLEN/8, x4, x1, x2)

inst_51947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:155841*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155841*0 + 3*491*FLEN/8, x4, x1, x2)

inst_51948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:155844*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155844*0 + 3*492*FLEN/8, x4, x1, x2)

inst_51949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:155847*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155847*0 + 3*493*FLEN/8, x4, x1, x2)

inst_51950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:155850*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155850*0 + 3*494*FLEN/8, x4, x1, x2)

inst_51951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:155853*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155853*0 + 3*495*FLEN/8, x4, x1, x2)

inst_51952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:155856*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155856*0 + 3*496*FLEN/8, x4, x1, x2)

inst_51953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:155859*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155859*0 + 3*497*FLEN/8, x4, x1, x2)

inst_51954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:155862*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155862*0 + 3*498*FLEN/8, x4, x1, x2)

inst_51955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:155865*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155865*0 + 3*499*FLEN/8, x4, x1, x2)

inst_51956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:155868*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155868*0 + 3*500*FLEN/8, x4, x1, x2)

inst_51957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:155871*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155871*0 + 3*501*FLEN/8, x4, x1, x2)

inst_51958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:155874*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155874*0 + 3*502*FLEN/8, x4, x1, x2)

inst_51959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:155877*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155877*0 + 3*503*FLEN/8, x4, x1, x2)

inst_51960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:155880*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155880*0 + 3*504*FLEN/8, x4, x1, x2)

inst_51961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:155883*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155883*0 + 3*505*FLEN/8, x4, x1, x2)

inst_51962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:155886*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155886*0 + 3*506*FLEN/8, x4, x1, x2)

inst_51963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:155889*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155889*0 + 3*507*FLEN/8, x4, x1, x2)

inst_51964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:155892*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155892*0 + 3*508*FLEN/8, x4, x1, x2)

inst_51965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:155895*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155895*0 + 3*509*FLEN/8, x4, x1, x2)

inst_51966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:155898*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155898*0 + 3*510*FLEN/8, x4, x1, x2)

inst_51967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:155901*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155901*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_51968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:155904*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155904*0 + 3*512*FLEN/8, x4, x1, x2)

inst_51969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:155907*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155907*0 + 3*513*FLEN/8, x4, x1, x2)

inst_51970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:155910*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155910*0 + 3*514*FLEN/8, x4, x1, x2)

inst_51971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:155913*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155913*0 + 3*515*FLEN/8, x4, x1, x2)

inst_51972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:155916*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155916*0 + 3*516*FLEN/8, x4, x1, x2)

inst_51973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:155919*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155919*0 + 3*517*FLEN/8, x4, x1, x2)

inst_51974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:155922*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155922*0 + 3*518*FLEN/8, x4, x1, x2)

inst_51975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:155925*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155925*0 + 3*519*FLEN/8, x4, x1, x2)

inst_51976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:155928*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155928*0 + 3*520*FLEN/8, x4, x1, x2)

inst_51977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:155931*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155931*0 + 3*521*FLEN/8, x4, x1, x2)

inst_51978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:155934*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155934*0 + 3*522*FLEN/8, x4, x1, x2)

inst_51979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:155937*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155937*0 + 3*523*FLEN/8, x4, x1, x2)

inst_51980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:155940*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155940*0 + 3*524*FLEN/8, x4, x1, x2)

inst_51981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:155943*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155943*0 + 3*525*FLEN/8, x4, x1, x2)

inst_51982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:155946*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155946*0 + 3*526*FLEN/8, x4, x1, x2)

inst_51983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:155949*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155949*0 + 3*527*FLEN/8, x4, x1, x2)

inst_51984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:155952*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155952*0 + 3*528*FLEN/8, x4, x1, x2)

inst_51985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:155955*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155955*0 + 3*529*FLEN/8, x4, x1, x2)

inst_51986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:155958*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155958*0 + 3*530*FLEN/8, x4, x1, x2)

inst_51987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:155961*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155961*0 + 3*531*FLEN/8, x4, x1, x2)

inst_51988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:155964*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155964*0 + 3*532*FLEN/8, x4, x1, x2)

inst_51989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:155967*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155967*0 + 3*533*FLEN/8, x4, x1, x2)

inst_51990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:155970*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155970*0 + 3*534*FLEN/8, x4, x1, x2)

inst_51991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:155973*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155973*0 + 3*535*FLEN/8, x4, x1, x2)

inst_51992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:155976*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155976*0 + 3*536*FLEN/8, x4, x1, x2)

inst_51993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:155979*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155979*0 + 3*537*FLEN/8, x4, x1, x2)

inst_51994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:155982*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155982*0 + 3*538*FLEN/8, x4, x1, x2)

inst_51995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:155985*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155985*0 + 3*539*FLEN/8, x4, x1, x2)

inst_51996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:155988*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155988*0 + 3*540*FLEN/8, x4, x1, x2)

inst_51997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:155991*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155991*0 + 3*541*FLEN/8, x4, x1, x2)

inst_51998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:155994*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155994*0 + 3*542*FLEN/8, x4, x1, x2)

inst_51999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:155997*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155997*0 + 3*543*FLEN/8, x4, x1, x2)

inst_52000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:156000*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156000*0 + 3*544*FLEN/8, x4, x1, x2)

inst_52001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:156003*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156003*0 + 3*545*FLEN/8, x4, x1, x2)

inst_52002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:156006*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156006*0 + 3*546*FLEN/8, x4, x1, x2)

inst_52003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:156009*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156009*0 + 3*547*FLEN/8, x4, x1, x2)

inst_52004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:156012*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156012*0 + 3*548*FLEN/8, x4, x1, x2)

inst_52005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:156015*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156015*0 + 3*549*FLEN/8, x4, x1, x2)

inst_52006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:156018*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156018*0 + 3*550*FLEN/8, x4, x1, x2)

inst_52007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:156021*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156021*0 + 3*551*FLEN/8, x4, x1, x2)

inst_52008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:156024*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156024*0 + 3*552*FLEN/8, x4, x1, x2)

inst_52009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:156027*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156027*0 + 3*553*FLEN/8, x4, x1, x2)

inst_52010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:156030*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156030*0 + 3*554*FLEN/8, x4, x1, x2)

inst_52011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:156033*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156033*0 + 3*555*FLEN/8, x4, x1, x2)

inst_52012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:156036*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156036*0 + 3*556*FLEN/8, x4, x1, x2)

inst_52013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:156039*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156039*0 + 3*557*FLEN/8, x4, x1, x2)

inst_52014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:156042*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156042*0 + 3*558*FLEN/8, x4, x1, x2)

inst_52015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:156045*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156045*0 + 3*559*FLEN/8, x4, x1, x2)

inst_52016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:156048*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156048*0 + 3*560*FLEN/8, x4, x1, x2)

inst_52017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:156051*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156051*0 + 3*561*FLEN/8, x4, x1, x2)

inst_52018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:156054*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156054*0 + 3*562*FLEN/8, x4, x1, x2)

inst_52019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:156057*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156057*0 + 3*563*FLEN/8, x4, x1, x2)

inst_52020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:156060*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156060*0 + 3*564*FLEN/8, x4, x1, x2)

inst_52021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:156063*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156063*0 + 3*565*FLEN/8, x4, x1, x2)

inst_52022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:156066*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156066*0 + 3*566*FLEN/8, x4, x1, x2)

inst_52023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:156069*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156069*0 + 3*567*FLEN/8, x4, x1, x2)

inst_52024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:156072*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156072*0 + 3*568*FLEN/8, x4, x1, x2)

inst_52025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:156075*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156075*0 + 3*569*FLEN/8, x4, x1, x2)

inst_52026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:156078*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156078*0 + 3*570*FLEN/8, x4, x1, x2)

inst_52027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:156081*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156081*0 + 3*571*FLEN/8, x4, x1, x2)

inst_52028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:156084*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156084*0 + 3*572*FLEN/8, x4, x1, x2)

inst_52029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:156087*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156087*0 + 3*573*FLEN/8, x4, x1, x2)

inst_52030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:156090*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156090*0 + 3*574*FLEN/8, x4, x1, x2)

inst_52031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:156093*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156093*0 + 3*575*FLEN/8, x4, x1, x2)

inst_52032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:156096*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156096*0 + 3*576*FLEN/8, x4, x1, x2)

inst_52033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:156099*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156099*0 + 3*577*FLEN/8, x4, x1, x2)

inst_52034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:156102*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156102*0 + 3*578*FLEN/8, x4, x1, x2)

inst_52035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:156105*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156105*0 + 3*579*FLEN/8, x4, x1, x2)

inst_52036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:156108*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156108*0 + 3*580*FLEN/8, x4, x1, x2)

inst_52037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:156111*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156111*0 + 3*581*FLEN/8, x4, x1, x2)

inst_52038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:156114*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156114*0 + 3*582*FLEN/8, x4, x1, x2)

inst_52039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:156117*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156117*0 + 3*583*FLEN/8, x4, x1, x2)

inst_52040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:156120*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156120*0 + 3*584*FLEN/8, x4, x1, x2)

inst_52041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:156123*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156123*0 + 3*585*FLEN/8, x4, x1, x2)

inst_52042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:156126*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156126*0 + 3*586*FLEN/8, x4, x1, x2)

inst_52043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf897534a5a527 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f897534a5a527; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:156129*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156129*0 + 3*587*FLEN/8, x4, x1, x2)

inst_52044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:156132*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156132*0 + 3*588*FLEN/8, x4, x1, x2)

inst_52045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:156135*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156135*0 + 3*589*FLEN/8, x4, x1, x2)

inst_52046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:156138*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156138*0 + 3*590*FLEN/8, x4, x1, x2)

inst_52047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:156141*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156141*0 + 3*591*FLEN/8, x4, x1, x2)

inst_52048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:156144*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156144*0 + 3*592*FLEN/8, x4, x1, x2)

inst_52049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:156147*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156147*0 + 3*593*FLEN/8, x4, x1, x2)

inst_52050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:156150*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156150*0 + 3*594*FLEN/8, x4, x1, x2)

inst_52051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:156153*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156153*0 + 3*595*FLEN/8, x4, x1, x2)

inst_52052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:156156*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156156*0 + 3*596*FLEN/8, x4, x1, x2)

inst_52053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:156159*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156159*0 + 3*597*FLEN/8, x4, x1, x2)

inst_52054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:156162*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156162*0 + 3*598*FLEN/8, x4, x1, x2)

inst_52055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:156165*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156165*0 + 3*599*FLEN/8, x4, x1, x2)

inst_52056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:156168*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156168*0 + 3*600*FLEN/8, x4, x1, x2)

inst_52057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:156171*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156171*0 + 3*601*FLEN/8, x4, x1, x2)

inst_52058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:156174*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156174*0 + 3*602*FLEN/8, x4, x1, x2)

inst_52059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:156177*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156177*0 + 3*603*FLEN/8, x4, x1, x2)

inst_52060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:156180*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156180*0 + 3*604*FLEN/8, x4, x1, x2)

inst_52061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:156183*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156183*0 + 3*605*FLEN/8, x4, x1, x2)

inst_52062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:156186*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156186*0 + 3*606*FLEN/8, x4, x1, x2)

inst_52063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:156189*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156189*0 + 3*607*FLEN/8, x4, x1, x2)

inst_52064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:156192*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156192*0 + 3*608*FLEN/8, x4, x1, x2)

inst_52065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:156195*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156195*0 + 3*609*FLEN/8, x4, x1, x2)

inst_52066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000000000; valaddr_reg:x3; val_offset:156198*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156198*0 + 3*610*FLEN/8, x4, x1, x2)

inst_52067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000000001; valaddr_reg:x3; val_offset:156201*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156201*0 + 3*611*FLEN/8, x4, x1, x2)

inst_52068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000000003; valaddr_reg:x3; val_offset:156204*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156204*0 + 3*612*FLEN/8, x4, x1, x2)

inst_52069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000000007; valaddr_reg:x3; val_offset:156207*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156207*0 + 3*613*FLEN/8, x4, x1, x2)

inst_52070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000000000f; valaddr_reg:x3; val_offset:156210*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156210*0 + 3*614*FLEN/8, x4, x1, x2)

inst_52071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000000001f; valaddr_reg:x3; val_offset:156213*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156213*0 + 3*615*FLEN/8, x4, x1, x2)

inst_52072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000000003f; valaddr_reg:x3; val_offset:156216*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156216*0 + 3*616*FLEN/8, x4, x1, x2)

inst_52073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000000007f; valaddr_reg:x3; val_offset:156219*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156219*0 + 3*617*FLEN/8, x4, x1, x2)

inst_52074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000000000ff; valaddr_reg:x3; val_offset:156222*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156222*0 + 3*618*FLEN/8, x4, x1, x2)

inst_52075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000000001ff; valaddr_reg:x3; val_offset:156225*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156225*0 + 3*619*FLEN/8, x4, x1, x2)

inst_52076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000000003ff; valaddr_reg:x3; val_offset:156228*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156228*0 + 3*620*FLEN/8, x4, x1, x2)

inst_52077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000000007ff; valaddr_reg:x3; val_offset:156231*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156231*0 + 3*621*FLEN/8, x4, x1, x2)

inst_52078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000000fff; valaddr_reg:x3; val_offset:156234*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156234*0 + 3*622*FLEN/8, x4, x1, x2)

inst_52079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000001fff; valaddr_reg:x3; val_offset:156237*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156237*0 + 3*623*FLEN/8, x4, x1, x2)

inst_52080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000003fff; valaddr_reg:x3; val_offset:156240*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156240*0 + 3*624*FLEN/8, x4, x1, x2)

inst_52081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000007fff; valaddr_reg:x3; val_offset:156243*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156243*0 + 3*625*FLEN/8, x4, x1, x2)

inst_52082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000000ffff; valaddr_reg:x3; val_offset:156246*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156246*0 + 3*626*FLEN/8, x4, x1, x2)

inst_52083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000001ffff; valaddr_reg:x3; val_offset:156249*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156249*0 + 3*627*FLEN/8, x4, x1, x2)

inst_52084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000003ffff; valaddr_reg:x3; val_offset:156252*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156252*0 + 3*628*FLEN/8, x4, x1, x2)

inst_52085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000007ffff; valaddr_reg:x3; val_offset:156255*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156255*0 + 3*629*FLEN/8, x4, x1, x2)

inst_52086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000000fffff; valaddr_reg:x3; val_offset:156258*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156258*0 + 3*630*FLEN/8, x4, x1, x2)

inst_52087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000001fffff; valaddr_reg:x3; val_offset:156261*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156261*0 + 3*631*FLEN/8, x4, x1, x2)

inst_52088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000003fffff; valaddr_reg:x3; val_offset:156264*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156264*0 + 3*632*FLEN/8, x4, x1, x2)

inst_52089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000007fffff; valaddr_reg:x3; val_offset:156267*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156267*0 + 3*633*FLEN/8, x4, x1, x2)

inst_52090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000000ffffff; valaddr_reg:x3; val_offset:156270*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156270*0 + 3*634*FLEN/8, x4, x1, x2)

inst_52091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000001ffffff; valaddr_reg:x3; val_offset:156273*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156273*0 + 3*635*FLEN/8, x4, x1, x2)

inst_52092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000003ffffff; valaddr_reg:x3; val_offset:156276*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156276*0 + 3*636*FLEN/8, x4, x1, x2)

inst_52093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000007ffffff; valaddr_reg:x3; val_offset:156279*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156279*0 + 3*637*FLEN/8, x4, x1, x2)

inst_52094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000000fffffff; valaddr_reg:x3; val_offset:156282*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156282*0 + 3*638*FLEN/8, x4, x1, x2)

inst_52095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000001fffffff; valaddr_reg:x3; val_offset:156285*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156285*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_52096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000003fffffff; valaddr_reg:x3; val_offset:156288*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156288*0 + 3*640*FLEN/8, x4, x1, x2)

inst_52097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000007fffffff; valaddr_reg:x3; val_offset:156291*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156291*0 + 3*641*FLEN/8, x4, x1, x2)

inst_52098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300000ffffffff; valaddr_reg:x3; val_offset:156294*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156294*0 + 3*642*FLEN/8, x4, x1, x2)

inst_52099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300001ffffffff; valaddr_reg:x3; val_offset:156297*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156297*0 + 3*643*FLEN/8, x4, x1, x2)

inst_52100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300003ffffffff; valaddr_reg:x3; val_offset:156300*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156300*0 + 3*644*FLEN/8, x4, x1, x2)

inst_52101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300007ffffffff; valaddr_reg:x3; val_offset:156303*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156303*0 + 3*645*FLEN/8, x4, x1, x2)

inst_52102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30000fffffffff; valaddr_reg:x3; val_offset:156306*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156306*0 + 3*646*FLEN/8, x4, x1, x2)

inst_52103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30001fffffffff; valaddr_reg:x3; val_offset:156309*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156309*0 + 3*647*FLEN/8, x4, x1, x2)

inst_52104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30003fffffffff; valaddr_reg:x3; val_offset:156312*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156312*0 + 3*648*FLEN/8, x4, x1, x2)

inst_52105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30007fffffffff; valaddr_reg:x3; val_offset:156315*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156315*0 + 3*649*FLEN/8, x4, x1, x2)

inst_52106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3000ffffffffff; valaddr_reg:x3; val_offset:156318*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156318*0 + 3*650*FLEN/8, x4, x1, x2)

inst_52107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3001ffffffffff; valaddr_reg:x3; val_offset:156321*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156321*0 + 3*651*FLEN/8, x4, x1, x2)

inst_52108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3003ffffffffff; valaddr_reg:x3; val_offset:156324*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156324*0 + 3*652*FLEN/8, x4, x1, x2)

inst_52109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3007ffffffffff; valaddr_reg:x3; val_offset:156327*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156327*0 + 3*653*FLEN/8, x4, x1, x2)

inst_52110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x300fffffffffff; valaddr_reg:x3; val_offset:156330*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156330*0 + 3*654*FLEN/8, x4, x1, x2)

inst_52111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x301fffffffffff; valaddr_reg:x3; val_offset:156333*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156333*0 + 3*655*FLEN/8, x4, x1, x2)

inst_52112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x303fffffffffff; valaddr_reg:x3; val_offset:156336*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156336*0 + 3*656*FLEN/8, x4, x1, x2)

inst_52113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x307fffffffffff; valaddr_reg:x3; val_offset:156339*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156339*0 + 3*657*FLEN/8, x4, x1, x2)

inst_52114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x30ffffffffffff; valaddr_reg:x3; val_offset:156342*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156342*0 + 3*658*FLEN/8, x4, x1, x2)

inst_52115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x31ffffffffffff; valaddr_reg:x3; val_offset:156345*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156345*0 + 3*659*FLEN/8, x4, x1, x2)

inst_52116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x33ffffffffffff; valaddr_reg:x3; val_offset:156348*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156348*0 + 3*660*FLEN/8, x4, x1, x2)

inst_52117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x37ffffffffffff; valaddr_reg:x3; val_offset:156351*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156351*0 + 3*661*FLEN/8, x4, x1, x2)

inst_52118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x38000000000000; valaddr_reg:x3; val_offset:156354*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156354*0 + 3*662*FLEN/8, x4, x1, x2)

inst_52119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3c000000000000; valaddr_reg:x3; val_offset:156357*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156357*0 + 3*663*FLEN/8, x4, x1, x2)

inst_52120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3e000000000000; valaddr_reg:x3; val_offset:156360*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156360*0 + 3*664*FLEN/8, x4, x1, x2)

inst_52121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3f000000000000; valaddr_reg:x3; val_offset:156363*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156363*0 + 3*665*FLEN/8, x4, x1, x2)

inst_52122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3f800000000000; valaddr_reg:x3; val_offset:156366*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156366*0 + 3*666*FLEN/8, x4, x1, x2)

inst_52123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fc00000000000; valaddr_reg:x3; val_offset:156369*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156369*0 + 3*667*FLEN/8, x4, x1, x2)

inst_52124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fe00000000000; valaddr_reg:x3; val_offset:156372*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156372*0 + 3*668*FLEN/8, x4, x1, x2)

inst_52125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ff00000000000; valaddr_reg:x3; val_offset:156375*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156375*0 + 3*669*FLEN/8, x4, x1, x2)

inst_52126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ff80000000000; valaddr_reg:x3; val_offset:156378*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156378*0 + 3*670*FLEN/8, x4, x1, x2)

inst_52127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffc0000000000; valaddr_reg:x3; val_offset:156381*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156381*0 + 3*671*FLEN/8, x4, x1, x2)

inst_52128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffe0000000000; valaddr_reg:x3; val_offset:156384*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156384*0 + 3*672*FLEN/8, x4, x1, x2)

inst_52129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fff0000000000; valaddr_reg:x3; val_offset:156387*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156387*0 + 3*673*FLEN/8, x4, x1, x2)

inst_52130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fff8000000000; valaddr_reg:x3; val_offset:156390*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156390*0 + 3*674*FLEN/8, x4, x1, x2)

inst_52131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffc000000000; valaddr_reg:x3; val_offset:156393*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156393*0 + 3*675*FLEN/8, x4, x1, x2)

inst_52132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffe000000000; valaddr_reg:x3; val_offset:156396*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156396*0 + 3*676*FLEN/8, x4, x1, x2)

inst_52133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffff000000000; valaddr_reg:x3; val_offset:156399*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156399*0 + 3*677*FLEN/8, x4, x1, x2)

inst_52134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffff800000000; valaddr_reg:x3; val_offset:156402*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156402*0 + 3*678*FLEN/8, x4, x1, x2)

inst_52135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffc00000000; valaddr_reg:x3; val_offset:156405*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156405*0 + 3*679*FLEN/8, x4, x1, x2)

inst_52136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffe00000000; valaddr_reg:x3; val_offset:156408*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156408*0 + 3*680*FLEN/8, x4, x1, x2)

inst_52137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffff00000000; valaddr_reg:x3; val_offset:156411*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156411*0 + 3*681*FLEN/8, x4, x1, x2)

inst_52138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffff80000000; valaddr_reg:x3; val_offset:156414*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156414*0 + 3*682*FLEN/8, x4, x1, x2)

inst_52139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffc0000000; valaddr_reg:x3; val_offset:156417*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156417*0 + 3*683*FLEN/8, x4, x1, x2)

inst_52140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffe0000000; valaddr_reg:x3; val_offset:156420*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156420*0 + 3*684*FLEN/8, x4, x1, x2)

inst_52141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffff0000000; valaddr_reg:x3; val_offset:156423*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156423*0 + 3*685*FLEN/8, x4, x1, x2)

inst_52142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffff8000000; valaddr_reg:x3; val_offset:156426*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156426*0 + 3*686*FLEN/8, x4, x1, x2)

inst_52143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffc000000; valaddr_reg:x3; val_offset:156429*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156429*0 + 3*687*FLEN/8, x4, x1, x2)

inst_52144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffe000000; valaddr_reg:x3; val_offset:156432*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156432*0 + 3*688*FLEN/8, x4, x1, x2)

inst_52145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffff000000; valaddr_reg:x3; val_offset:156435*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156435*0 + 3*689*FLEN/8, x4, x1, x2)

inst_52146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffff800000; valaddr_reg:x3; val_offset:156438*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156438*0 + 3*690*FLEN/8, x4, x1, x2)

inst_52147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffc00000; valaddr_reg:x3; val_offset:156441*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156441*0 + 3*691*FLEN/8, x4, x1, x2)

inst_52148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffe00000; valaddr_reg:x3; val_offset:156444*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156444*0 + 3*692*FLEN/8, x4, x1, x2)

inst_52149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffff00000; valaddr_reg:x3; val_offset:156447*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156447*0 + 3*693*FLEN/8, x4, x1, x2)

inst_52150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffff80000; valaddr_reg:x3; val_offset:156450*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156450*0 + 3*694*FLEN/8, x4, x1, x2)

inst_52151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffc0000; valaddr_reg:x3; val_offset:156453*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156453*0 + 3*695*FLEN/8, x4, x1, x2)

inst_52152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffe0000; valaddr_reg:x3; val_offset:156456*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156456*0 + 3*696*FLEN/8, x4, x1, x2)

inst_52153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffff0000; valaddr_reg:x3; val_offset:156459*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156459*0 + 3*697*FLEN/8, x4, x1, x2)

inst_52154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffff8000; valaddr_reg:x3; val_offset:156462*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156462*0 + 3*698*FLEN/8, x4, x1, x2)

inst_52155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffc000; valaddr_reg:x3; val_offset:156465*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156465*0 + 3*699*FLEN/8, x4, x1, x2)

inst_52156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffe000; valaddr_reg:x3; val_offset:156468*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156468*0 + 3*700*FLEN/8, x4, x1, x2)

inst_52157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffff000; valaddr_reg:x3; val_offset:156471*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156471*0 + 3*701*FLEN/8, x4, x1, x2)

inst_52158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffff800; valaddr_reg:x3; val_offset:156474*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156474*0 + 3*702*FLEN/8, x4, x1, x2)

inst_52159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffc00; valaddr_reg:x3; val_offset:156477*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156477*0 + 3*703*FLEN/8, x4, x1, x2)

inst_52160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffe00; valaddr_reg:x3; val_offset:156480*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156480*0 + 3*704*FLEN/8, x4, x1, x2)

inst_52161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffff00; valaddr_reg:x3; val_offset:156483*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156483*0 + 3*705*FLEN/8, x4, x1, x2)

inst_52162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffff80; valaddr_reg:x3; val_offset:156486*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156486*0 + 3*706*FLEN/8, x4, x1, x2)

inst_52163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffffc0; valaddr_reg:x3; val_offset:156489*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156489*0 + 3*707*FLEN/8, x4, x1, x2)

inst_52164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffffe0; valaddr_reg:x3; val_offset:156492*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156492*0 + 3*708*FLEN/8, x4, x1, x2)

inst_52165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffff0; valaddr_reg:x3; val_offset:156495*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156495*0 + 3*709*FLEN/8, x4, x1, x2)

inst_52166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffff8; valaddr_reg:x3; val_offset:156498*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156498*0 + 3*710*FLEN/8, x4, x1, x2)

inst_52167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffffc; valaddr_reg:x3; val_offset:156501*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156501*0 + 3*711*FLEN/8, x4, x1, x2)

inst_52168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3ffffffffffffe; valaddr_reg:x3; val_offset:156504*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156504*0 + 3*712*FLEN/8, x4, x1, x2)

inst_52169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfd86923893bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fd86923893bfd; op2val:0x0;
op3val:0x3fffffffffffff; valaddr_reg:x3; val_offset:156507*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156507*0 + 3*713*FLEN/8, x4, x1, x2)

inst_52170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000000000; valaddr_reg:x3; val_offset:156510*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156510*0 + 3*714*FLEN/8, x4, x1, x2)

inst_52171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000000001; valaddr_reg:x3; val_offset:156513*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156513*0 + 3*715*FLEN/8, x4, x1, x2)

inst_52172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000000003; valaddr_reg:x3; val_offset:156516*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156516*0 + 3*716*FLEN/8, x4, x1, x2)

inst_52173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000000007; valaddr_reg:x3; val_offset:156519*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156519*0 + 3*717*FLEN/8, x4, x1, x2)

inst_52174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000000000f; valaddr_reg:x3; val_offset:156522*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156522*0 + 3*718*FLEN/8, x4, x1, x2)

inst_52175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000000001f; valaddr_reg:x3; val_offset:156525*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156525*0 + 3*719*FLEN/8, x4, x1, x2)

inst_52176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000000003f; valaddr_reg:x3; val_offset:156528*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156528*0 + 3*720*FLEN/8, x4, x1, x2)

inst_52177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000000007f; valaddr_reg:x3; val_offset:156531*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156531*0 + 3*721*FLEN/8, x4, x1, x2)

inst_52178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000000000ff; valaddr_reg:x3; val_offset:156534*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156534*0 + 3*722*FLEN/8, x4, x1, x2)

inst_52179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000000001ff; valaddr_reg:x3; val_offset:156537*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156537*0 + 3*723*FLEN/8, x4, x1, x2)

inst_52180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000000003ff; valaddr_reg:x3; val_offset:156540*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156540*0 + 3*724*FLEN/8, x4, x1, x2)

inst_52181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000000007ff; valaddr_reg:x3; val_offset:156543*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156543*0 + 3*725*FLEN/8, x4, x1, x2)

inst_52182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000000fff; valaddr_reg:x3; val_offset:156546*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156546*0 + 3*726*FLEN/8, x4, x1, x2)

inst_52183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000001fff; valaddr_reg:x3; val_offset:156549*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156549*0 + 3*727*FLEN/8, x4, x1, x2)

inst_52184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000003fff; valaddr_reg:x3; val_offset:156552*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156552*0 + 3*728*FLEN/8, x4, x1, x2)

inst_52185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000007fff; valaddr_reg:x3; val_offset:156555*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156555*0 + 3*729*FLEN/8, x4, x1, x2)

inst_52186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000000ffff; valaddr_reg:x3; val_offset:156558*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156558*0 + 3*730*FLEN/8, x4, x1, x2)

inst_52187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000001ffff; valaddr_reg:x3; val_offset:156561*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156561*0 + 3*731*FLEN/8, x4, x1, x2)

inst_52188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000003ffff; valaddr_reg:x3; val_offset:156564*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156564*0 + 3*732*FLEN/8, x4, x1, x2)

inst_52189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000007ffff; valaddr_reg:x3; val_offset:156567*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156567*0 + 3*733*FLEN/8, x4, x1, x2)

inst_52190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000000fffff; valaddr_reg:x3; val_offset:156570*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156570*0 + 3*734*FLEN/8, x4, x1, x2)

inst_52191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000001fffff; valaddr_reg:x3; val_offset:156573*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156573*0 + 3*735*FLEN/8, x4, x1, x2)

inst_52192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000003fffff; valaddr_reg:x3; val_offset:156576*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156576*0 + 3*736*FLEN/8, x4, x1, x2)

inst_52193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000007fffff; valaddr_reg:x3; val_offset:156579*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156579*0 + 3*737*FLEN/8, x4, x1, x2)

inst_52194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000000ffffff; valaddr_reg:x3; val_offset:156582*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156582*0 + 3*738*FLEN/8, x4, x1, x2)

inst_52195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000001ffffff; valaddr_reg:x3; val_offset:156585*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156585*0 + 3*739*FLEN/8, x4, x1, x2)

inst_52196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000003ffffff; valaddr_reg:x3; val_offset:156588*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156588*0 + 3*740*FLEN/8, x4, x1, x2)

inst_52197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000007ffffff; valaddr_reg:x3; val_offset:156591*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156591*0 + 3*741*FLEN/8, x4, x1, x2)

inst_52198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000000fffffff; valaddr_reg:x3; val_offset:156594*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156594*0 + 3*742*FLEN/8, x4, x1, x2)

inst_52199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000001fffffff; valaddr_reg:x3; val_offset:156597*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156597*0 + 3*743*FLEN/8, x4, x1, x2)

inst_52200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000003fffffff; valaddr_reg:x3; val_offset:156600*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156600*0 + 3*744*FLEN/8, x4, x1, x2)

inst_52201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000007fffffff; valaddr_reg:x3; val_offset:156603*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156603*0 + 3*745*FLEN/8, x4, x1, x2)

inst_52202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300000ffffffff; valaddr_reg:x3; val_offset:156606*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156606*0 + 3*746*FLEN/8, x4, x1, x2)

inst_52203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300001ffffffff; valaddr_reg:x3; val_offset:156609*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156609*0 + 3*747*FLEN/8, x4, x1, x2)

inst_52204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300003ffffffff; valaddr_reg:x3; val_offset:156612*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156612*0 + 3*748*FLEN/8, x4, x1, x2)

inst_52205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300007ffffffff; valaddr_reg:x3; val_offset:156615*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156615*0 + 3*749*FLEN/8, x4, x1, x2)

inst_52206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30000fffffffff; valaddr_reg:x3; val_offset:156618*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156618*0 + 3*750*FLEN/8, x4, x1, x2)

inst_52207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30001fffffffff; valaddr_reg:x3; val_offset:156621*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156621*0 + 3*751*FLEN/8, x4, x1, x2)

inst_52208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30003fffffffff; valaddr_reg:x3; val_offset:156624*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156624*0 + 3*752*FLEN/8, x4, x1, x2)

inst_52209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30007fffffffff; valaddr_reg:x3; val_offset:156627*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156627*0 + 3*753*FLEN/8, x4, x1, x2)

inst_52210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3000ffffffffff; valaddr_reg:x3; val_offset:156630*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156630*0 + 3*754*FLEN/8, x4, x1, x2)

inst_52211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3001ffffffffff; valaddr_reg:x3; val_offset:156633*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156633*0 + 3*755*FLEN/8, x4, x1, x2)

inst_52212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3003ffffffffff; valaddr_reg:x3; val_offset:156636*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156636*0 + 3*756*FLEN/8, x4, x1, x2)

inst_52213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3007ffffffffff; valaddr_reg:x3; val_offset:156639*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156639*0 + 3*757*FLEN/8, x4, x1, x2)

inst_52214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e300fffffffffff; valaddr_reg:x3; val_offset:156642*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156642*0 + 3*758*FLEN/8, x4, x1, x2)

inst_52215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e301fffffffffff; valaddr_reg:x3; val_offset:156645*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156645*0 + 3*759*FLEN/8, x4, x1, x2)

inst_52216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e303fffffffffff; valaddr_reg:x3; val_offset:156648*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156648*0 + 3*760*FLEN/8, x4, x1, x2)

inst_52217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e307fffffffffff; valaddr_reg:x3; val_offset:156651*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156651*0 + 3*761*FLEN/8, x4, x1, x2)

inst_52218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e30ffffffffffff; valaddr_reg:x3; val_offset:156654*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156654*0 + 3*762*FLEN/8, x4, x1, x2)

inst_52219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e31ffffffffffff; valaddr_reg:x3; val_offset:156657*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156657*0 + 3*763*FLEN/8, x4, x1, x2)

inst_52220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e33ffffffffffff; valaddr_reg:x3; val_offset:156660*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156660*0 + 3*764*FLEN/8, x4, x1, x2)

inst_52221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e37ffffffffffff; valaddr_reg:x3; val_offset:156663*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156663*0 + 3*765*FLEN/8, x4, x1, x2)

inst_52222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e38000000000000; valaddr_reg:x3; val_offset:156666*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156666*0 + 3*766*FLEN/8, x4, x1, x2)

inst_52223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x010dddff044ac and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fde67aa537639; op2val:0x204010dddff044ac;
op3val:0x3e3c000000000000; valaddr_reg:x3; val_offset:156669*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156669*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539632822435971071,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539637220482482175,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539646016575504383,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539663608761548799,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539698793133637631,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539769161877815295,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539909899366170623,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4540191374342881279,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4540754324296302591,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4541880224203145215,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4541880224203145216,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4543006124109987840,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4543569074063409152,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4543850549040119808,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4543991286528475136,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544061655272652800,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544096839644741632,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544114431830786048,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544123227923808256,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544127625970319360,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544129824993574912,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544130924505202688,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544131474261016576,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544131749138923520,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544131886577876992,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544131955297353728,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544131989657092096,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132006836961280,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132015426895872,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132019721863168,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132021869346816,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132022943088640,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132023479959552,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132023748395008,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132023882612736,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132023949721600,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132023983276032,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024000053248,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024008441856,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024012636160,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024014733312,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024015781888,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016306176,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016568320,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016699392,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016764928,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016797696,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016814080,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016822272,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016826368,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016828416,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016829440,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016829952,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830208,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830336,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830400,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830432,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830448,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830456,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830460,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830462,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4544132024016830463,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369280,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369281,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369283,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369287,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369295,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369311,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369343,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369407,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369535,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369791,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246370303,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246371327,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246373375,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246377471,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246385663,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246402047,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246434815,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246500351,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246631423,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246893567,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234247417855,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234248466431,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234250563583,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234254757887,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234263146495,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234279923711,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234313478143,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234380587007,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234514804735,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234783240191,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897235320111103,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897236393852927,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897238541336575,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897242836303871,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897251426238463,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897268606107647,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897302965846015,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897371685322751,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897509124276223,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897784002183167,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254898333757997055,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254899433269624831,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254901632292880383,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254906030339391487,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254914826432413695,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254932418618458111,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254967602990546943,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255037971734724607,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255178709223079935,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255460184199790591,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9256023134153211903,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054527,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054528,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258274933966897152,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258837883920318464,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259119358897029120,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259260096385384448,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259330465129562112,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259365649501650944,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259383241687695360,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259392037780717568,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259396435827228672,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259398634850484224,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259399734362112000,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400284117925888,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400558995832832,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400696434786304,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400765154263040,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400799514001408,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400816693870592,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400825283805184,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400829578772480,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400831726256128,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400832799997952,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833336868864,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833605304320,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833739522048,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833806630912,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833840185344,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833856962560,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833865351168,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833869545472,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833871642624,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833872691200,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873215488,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873477632,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6890307586325240485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226368,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226369,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226371,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226375,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226383,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226399,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226431,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226495,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226623,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226879,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703227391,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703228415,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703230463,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703234559,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703242751,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703259135,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703291903,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703357439,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703488511,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703750655,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787704274943,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787705323519,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787707420671,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787711614975,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787720003583,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787736780799,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787770335231,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787837444095,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787971661823,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788240097279,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788776968191,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618789850710015,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618791998193663,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618796293160959,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618804883095551,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618822062964735,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618856422703103,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618925142179839,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619062581133311,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619337459040255,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619887214854143,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148620986726481919,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148623185749737471,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148627583796248575,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148636379889270783,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148653972075315199,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148689156447404031,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148759525191581695,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148900262679937023,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149181737656647679,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149744687610068991,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911615,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911616,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(151996487423754240,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152559437377175552,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152840912353886208,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152981649842241536,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153052018586419200,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153087202958508032,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153104795144552448,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153113591237574656,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153117989284085760,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153120188307341312,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121287818969088,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121837574782976,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122112452689920,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122249891643392,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122318611120128,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122352970858496,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122370150727680,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122378740662272,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122383035629568,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122385183113216,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386256855040,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386793725952,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387062161408,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387196379136,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387263488000,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387297042432,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387313819648,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387322208256,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387326402560,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387328499712,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387329548288,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330072576,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330334720,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330465792,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330531328,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330564096,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330580480,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330588672,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330592768,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330594816,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330595840,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596352,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596608,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596736,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596800,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596832,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596848,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596856,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596860,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596862,64,FLEN)
NAN_BOXED(6890307849455740087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596863,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413312,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413313,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413315,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413319,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413327,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413343,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413375,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413439,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413567,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413823,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486414335,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486415359,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486417407,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486421503,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6890327536685521395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6890377091387598119,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111488,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111489,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111491,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111495,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111503,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111519,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111551,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111615,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111743,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111999,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882112511,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882113535,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882115583,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882119679,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882127871,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882144255,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882177023,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882242559,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882373631,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882635775,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798883160063,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798884208639,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798886305791,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798890500095,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798898888703,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798915665919,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798949220351,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799016329215,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799150546943,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799418982399,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799955853311,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510801029595135,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510803177078783,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510807472046079,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510816061980671,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510833241849855,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510867601588223,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510936321064959,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511073760018431,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511348637925375,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511898393739263,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13512997905367039,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13515196928622591,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13519594975133695,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13528391068155903,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13545983254200319,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13581167626289151,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13651536370466815,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13792273858822143,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14073748835532799,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14636698788954111,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796735,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796736,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16888498602639360,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17451448556060672,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17732923532771328,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17873661021126656,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17944029765304320,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17979214137393152,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17996806323437568,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18005602416459776,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18010000462970880,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18012199486226432,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013298997854208,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013848753668096,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014123631575040,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014261070528512,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014329790005248,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014364149743616,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014381329612800,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014389919547392,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014394214514688,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014396361998336,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397435740160,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397972611072,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398241046528,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398375264256,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398442373120,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398475927552,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398492704768,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398501093376,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398505287680,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398507384832,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508433408,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508957696,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509219840,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509350912,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509416448,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509449216,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509465600,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509473792,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509477888,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509479936,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509480960,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481472,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481728,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481856,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481920,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481952,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481968,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481976,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481980,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481982,64,FLEN)
NAN_BOXED(6890463900979510269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481983,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643520,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643521,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643523,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643527,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643535,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643551,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643583,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643647,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233643775,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233644031,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233644543,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233645567,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233647615,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233651711,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233659903,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233676287,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233709055,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233774591,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629233905663,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629234167807,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629234692095,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629235740671,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629237837823,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629242032127,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629250420735,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629267197951,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629300752383,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629367861247,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629502078975,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081629770514431,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081630307385343,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081631381127167,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081633528610815,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081637823578111,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081646413512703,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081663593381887,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081697953120255,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081766672596991,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481081904111550463,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481082178989457407,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481082728745271295,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481083828256899071,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481086027280154623,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481090425326665727,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481099221419687935,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481116813605732351,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481151997977821183,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481222366721998847,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481363104210354175,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4481644579187064831,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4482207529140486143,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4483333429047328767,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4483333429047328768,64,FLEN)
NAN_BOXED(6890470491720742457,64,FLEN)
NAN_BOXED(2323875952854058156,64,FLEN)
NAN_BOXED(4484459328954171392,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
