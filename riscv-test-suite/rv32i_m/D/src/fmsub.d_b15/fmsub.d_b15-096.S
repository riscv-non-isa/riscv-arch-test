
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_72960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:218880*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218880*0 + 3*0*FLEN/8, x4, x1, x2)

inst_72961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:218883*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218883*0 + 3*1*FLEN/8, x4, x1, x2)

inst_72962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:218886*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218886*0 + 3*2*FLEN/8, x4, x1, x2)

inst_72963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:218889*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218889*0 + 3*3*FLEN/8, x4, x1, x2)

inst_72964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:218892*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218892*0 + 3*4*FLEN/8, x4, x1, x2)

inst_72965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:218895*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218895*0 + 3*5*FLEN/8, x4, x1, x2)

inst_72966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:218898*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218898*0 + 3*6*FLEN/8, x4, x1, x2)

inst_72967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:218901*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218901*0 + 3*7*FLEN/8, x4, x1, x2)

inst_72968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:218904*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218904*0 + 3*8*FLEN/8, x4, x1, x2)

inst_72969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:218907*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218907*0 + 3*9*FLEN/8, x4, x1, x2)

inst_72970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000000000; valaddr_reg:x3; val_offset:218910*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218910*0 + 3*10*FLEN/8, x4, x1, x2)

inst_72971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000000001; valaddr_reg:x3; val_offset:218913*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218913*0 + 3*11*FLEN/8, x4, x1, x2)

inst_72972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000000003; valaddr_reg:x3; val_offset:218916*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218916*0 + 3*12*FLEN/8, x4, x1, x2)

inst_72973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000000007; valaddr_reg:x3; val_offset:218919*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218919*0 + 3*13*FLEN/8, x4, x1, x2)

inst_72974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000000000f; valaddr_reg:x3; val_offset:218922*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218922*0 + 3*14*FLEN/8, x4, x1, x2)

inst_72975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000000001f; valaddr_reg:x3; val_offset:218925*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218925*0 + 3*15*FLEN/8, x4, x1, x2)

inst_72976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000000003f; valaddr_reg:x3; val_offset:218928*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218928*0 + 3*16*FLEN/8, x4, x1, x2)

inst_72977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000000007f; valaddr_reg:x3; val_offset:218931*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218931*0 + 3*17*FLEN/8, x4, x1, x2)

inst_72978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000000000ff; valaddr_reg:x3; val_offset:218934*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218934*0 + 3*18*FLEN/8, x4, x1, x2)

inst_72979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000000001ff; valaddr_reg:x3; val_offset:218937*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218937*0 + 3*19*FLEN/8, x4, x1, x2)

inst_72980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000000003ff; valaddr_reg:x3; val_offset:218940*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218940*0 + 3*20*FLEN/8, x4, x1, x2)

inst_72981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000000007ff; valaddr_reg:x3; val_offset:218943*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218943*0 + 3*21*FLEN/8, x4, x1, x2)

inst_72982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000000fff; valaddr_reg:x3; val_offset:218946*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218946*0 + 3*22*FLEN/8, x4, x1, x2)

inst_72983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000001fff; valaddr_reg:x3; val_offset:218949*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218949*0 + 3*23*FLEN/8, x4, x1, x2)

inst_72984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000003fff; valaddr_reg:x3; val_offset:218952*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218952*0 + 3*24*FLEN/8, x4, x1, x2)

inst_72985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000007fff; valaddr_reg:x3; val_offset:218955*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218955*0 + 3*25*FLEN/8, x4, x1, x2)

inst_72986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000000ffff; valaddr_reg:x3; val_offset:218958*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218958*0 + 3*26*FLEN/8, x4, x1, x2)

inst_72987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000001ffff; valaddr_reg:x3; val_offset:218961*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218961*0 + 3*27*FLEN/8, x4, x1, x2)

inst_72988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000003ffff; valaddr_reg:x3; val_offset:218964*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218964*0 + 3*28*FLEN/8, x4, x1, x2)

inst_72989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000007ffff; valaddr_reg:x3; val_offset:218967*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218967*0 + 3*29*FLEN/8, x4, x1, x2)

inst_72990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000000fffff; valaddr_reg:x3; val_offset:218970*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218970*0 + 3*30*FLEN/8, x4, x1, x2)

inst_72991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000001fffff; valaddr_reg:x3; val_offset:218973*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218973*0 + 3*31*FLEN/8, x4, x1, x2)

inst_72992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000003fffff; valaddr_reg:x3; val_offset:218976*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218976*0 + 3*32*FLEN/8, x4, x1, x2)

inst_72993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000007fffff; valaddr_reg:x3; val_offset:218979*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218979*0 + 3*33*FLEN/8, x4, x1, x2)

inst_72994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000000ffffff; valaddr_reg:x3; val_offset:218982*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218982*0 + 3*34*FLEN/8, x4, x1, x2)

inst_72995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000001ffffff; valaddr_reg:x3; val_offset:218985*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218985*0 + 3*35*FLEN/8, x4, x1, x2)

inst_72996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000003ffffff; valaddr_reg:x3; val_offset:218988*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218988*0 + 3*36*FLEN/8, x4, x1, x2)

inst_72997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000007ffffff; valaddr_reg:x3; val_offset:218991*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218991*0 + 3*37*FLEN/8, x4, x1, x2)

inst_72998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000000fffffff; valaddr_reg:x3; val_offset:218994*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218994*0 + 3*38*FLEN/8, x4, x1, x2)

inst_72999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000001fffffff; valaddr_reg:x3; val_offset:218997*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218997*0 + 3*39*FLEN/8, x4, x1, x2)

inst_73000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000003fffffff; valaddr_reg:x3; val_offset:219000*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219000*0 + 3*40*FLEN/8, x4, x1, x2)

inst_73001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000007fffffff; valaddr_reg:x3; val_offset:219003*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219003*0 + 3*41*FLEN/8, x4, x1, x2)

inst_73002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000000ffffffff; valaddr_reg:x3; val_offset:219006*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219006*0 + 3*42*FLEN/8, x4, x1, x2)

inst_73003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000001ffffffff; valaddr_reg:x3; val_offset:219009*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219009*0 + 3*43*FLEN/8, x4, x1, x2)

inst_73004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000003ffffffff; valaddr_reg:x3; val_offset:219012*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219012*0 + 3*44*FLEN/8, x4, x1, x2)

inst_73005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000007ffffffff; valaddr_reg:x3; val_offset:219015*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219015*0 + 3*45*FLEN/8, x4, x1, x2)

inst_73006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400000fffffffff; valaddr_reg:x3; val_offset:219018*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219018*0 + 3*46*FLEN/8, x4, x1, x2)

inst_73007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400001fffffffff; valaddr_reg:x3; val_offset:219021*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219021*0 + 3*47*FLEN/8, x4, x1, x2)

inst_73008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400003fffffffff; valaddr_reg:x3; val_offset:219024*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219024*0 + 3*48*FLEN/8, x4, x1, x2)

inst_73009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400007fffffffff; valaddr_reg:x3; val_offset:219027*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219027*0 + 3*49*FLEN/8, x4, x1, x2)

inst_73010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840000ffffffffff; valaddr_reg:x3; val_offset:219030*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219030*0 + 3*50*FLEN/8, x4, x1, x2)

inst_73011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840001ffffffffff; valaddr_reg:x3; val_offset:219033*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219033*0 + 3*51*FLEN/8, x4, x1, x2)

inst_73012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840003ffffffffff; valaddr_reg:x3; val_offset:219036*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219036*0 + 3*52*FLEN/8, x4, x1, x2)

inst_73013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840007ffffffffff; valaddr_reg:x3; val_offset:219039*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219039*0 + 3*53*FLEN/8, x4, x1, x2)

inst_73014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84000fffffffffff; valaddr_reg:x3; val_offset:219042*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219042*0 + 3*54*FLEN/8, x4, x1, x2)

inst_73015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84001fffffffffff; valaddr_reg:x3; val_offset:219045*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219045*0 + 3*55*FLEN/8, x4, x1, x2)

inst_73016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84003fffffffffff; valaddr_reg:x3; val_offset:219048*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219048*0 + 3*56*FLEN/8, x4, x1, x2)

inst_73017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x84007fffffffffff; valaddr_reg:x3; val_offset:219051*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219051*0 + 3*57*FLEN/8, x4, x1, x2)

inst_73018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8400ffffffffffff; valaddr_reg:x3; val_offset:219054*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219054*0 + 3*58*FLEN/8, x4, x1, x2)

inst_73019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8401ffffffffffff; valaddr_reg:x3; val_offset:219057*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219057*0 + 3*59*FLEN/8, x4, x1, x2)

inst_73020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8403ffffffffffff; valaddr_reg:x3; val_offset:219060*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219060*0 + 3*60*FLEN/8, x4, x1, x2)

inst_73021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8407ffffffffffff; valaddr_reg:x3; val_offset:219063*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219063*0 + 3*61*FLEN/8, x4, x1, x2)

inst_73022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x8408000000000000; valaddr_reg:x3; val_offset:219066*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219066*0 + 3*62*FLEN/8, x4, x1, x2)

inst_73023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840c000000000000; valaddr_reg:x3; val_offset:219069*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219069*0 + 3*63*FLEN/8, x4, x1, x2)

inst_73024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840e000000000000; valaddr_reg:x3; val_offset:219072*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219072*0 + 3*64*FLEN/8, x4, x1, x2)

inst_73025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840f000000000000; valaddr_reg:x3; val_offset:219075*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219075*0 + 3*65*FLEN/8, x4, x1, x2)

inst_73026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840f800000000000; valaddr_reg:x3; val_offset:219078*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219078*0 + 3*66*FLEN/8, x4, x1, x2)

inst_73027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fc00000000000; valaddr_reg:x3; val_offset:219081*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219081*0 + 3*67*FLEN/8, x4, x1, x2)

inst_73028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fe00000000000; valaddr_reg:x3; val_offset:219084*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219084*0 + 3*68*FLEN/8, x4, x1, x2)

inst_73029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ff00000000000; valaddr_reg:x3; val_offset:219087*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219087*0 + 3*69*FLEN/8, x4, x1, x2)

inst_73030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ff80000000000; valaddr_reg:x3; val_offset:219090*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219090*0 + 3*70*FLEN/8, x4, x1, x2)

inst_73031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffc0000000000; valaddr_reg:x3; val_offset:219093*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219093*0 + 3*71*FLEN/8, x4, x1, x2)

inst_73032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffe0000000000; valaddr_reg:x3; val_offset:219096*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219096*0 + 3*72*FLEN/8, x4, x1, x2)

inst_73033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fff0000000000; valaddr_reg:x3; val_offset:219099*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219099*0 + 3*73*FLEN/8, x4, x1, x2)

inst_73034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fff8000000000; valaddr_reg:x3; val_offset:219102*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219102*0 + 3*74*FLEN/8, x4, x1, x2)

inst_73035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffc000000000; valaddr_reg:x3; val_offset:219105*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219105*0 + 3*75*FLEN/8, x4, x1, x2)

inst_73036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffe000000000; valaddr_reg:x3; val_offset:219108*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219108*0 + 3*76*FLEN/8, x4, x1, x2)

inst_73037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffff000000000; valaddr_reg:x3; val_offset:219111*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219111*0 + 3*77*FLEN/8, x4, x1, x2)

inst_73038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffff800000000; valaddr_reg:x3; val_offset:219114*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219114*0 + 3*78*FLEN/8, x4, x1, x2)

inst_73039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffc00000000; valaddr_reg:x3; val_offset:219117*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219117*0 + 3*79*FLEN/8, x4, x1, x2)

inst_73040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffe00000000; valaddr_reg:x3; val_offset:219120*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219120*0 + 3*80*FLEN/8, x4, x1, x2)

inst_73041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffff00000000; valaddr_reg:x3; val_offset:219123*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219123*0 + 3*81*FLEN/8, x4, x1, x2)

inst_73042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffff80000000; valaddr_reg:x3; val_offset:219126*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219126*0 + 3*82*FLEN/8, x4, x1, x2)

inst_73043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffc0000000; valaddr_reg:x3; val_offset:219129*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219129*0 + 3*83*FLEN/8, x4, x1, x2)

inst_73044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffe0000000; valaddr_reg:x3; val_offset:219132*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219132*0 + 3*84*FLEN/8, x4, x1, x2)

inst_73045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffff0000000; valaddr_reg:x3; val_offset:219135*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219135*0 + 3*85*FLEN/8, x4, x1, x2)

inst_73046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffff8000000; valaddr_reg:x3; val_offset:219138*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219138*0 + 3*86*FLEN/8, x4, x1, x2)

inst_73047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffc000000; valaddr_reg:x3; val_offset:219141*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219141*0 + 3*87*FLEN/8, x4, x1, x2)

inst_73048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffe000000; valaddr_reg:x3; val_offset:219144*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219144*0 + 3*88*FLEN/8, x4, x1, x2)

inst_73049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffff000000; valaddr_reg:x3; val_offset:219147*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219147*0 + 3*89*FLEN/8, x4, x1, x2)

inst_73050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffff800000; valaddr_reg:x3; val_offset:219150*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219150*0 + 3*90*FLEN/8, x4, x1, x2)

inst_73051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffc00000; valaddr_reg:x3; val_offset:219153*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219153*0 + 3*91*FLEN/8, x4, x1, x2)

inst_73052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffe00000; valaddr_reg:x3; val_offset:219156*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219156*0 + 3*92*FLEN/8, x4, x1, x2)

inst_73053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffff00000; valaddr_reg:x3; val_offset:219159*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219159*0 + 3*93*FLEN/8, x4, x1, x2)

inst_73054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffff80000; valaddr_reg:x3; val_offset:219162*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219162*0 + 3*94*FLEN/8, x4, x1, x2)

inst_73055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffc0000; valaddr_reg:x3; val_offset:219165*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219165*0 + 3*95*FLEN/8, x4, x1, x2)

inst_73056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffe0000; valaddr_reg:x3; val_offset:219168*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219168*0 + 3*96*FLEN/8, x4, x1, x2)

inst_73057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffff0000; valaddr_reg:x3; val_offset:219171*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219171*0 + 3*97*FLEN/8, x4, x1, x2)

inst_73058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffff8000; valaddr_reg:x3; val_offset:219174*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219174*0 + 3*98*FLEN/8, x4, x1, x2)

inst_73059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffc000; valaddr_reg:x3; val_offset:219177*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219177*0 + 3*99*FLEN/8, x4, x1, x2)

inst_73060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffe000; valaddr_reg:x3; val_offset:219180*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219180*0 + 3*100*FLEN/8, x4, x1, x2)

inst_73061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffff000; valaddr_reg:x3; val_offset:219183*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219183*0 + 3*101*FLEN/8, x4, x1, x2)

inst_73062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffff800; valaddr_reg:x3; val_offset:219186*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219186*0 + 3*102*FLEN/8, x4, x1, x2)

inst_73063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffc00; valaddr_reg:x3; val_offset:219189*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219189*0 + 3*103*FLEN/8, x4, x1, x2)

inst_73064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffe00; valaddr_reg:x3; val_offset:219192*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219192*0 + 3*104*FLEN/8, x4, x1, x2)

inst_73065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffff00; valaddr_reg:x3; val_offset:219195*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219195*0 + 3*105*FLEN/8, x4, x1, x2)

inst_73066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffff80; valaddr_reg:x3; val_offset:219198*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219198*0 + 3*106*FLEN/8, x4, x1, x2)

inst_73067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffffc0; valaddr_reg:x3; val_offset:219201*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219201*0 + 3*107*FLEN/8, x4, x1, x2)

inst_73068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffffe0; valaddr_reg:x3; val_offset:219204*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219204*0 + 3*108*FLEN/8, x4, x1, x2)

inst_73069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffff0; valaddr_reg:x3; val_offset:219207*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219207*0 + 3*109*FLEN/8, x4, x1, x2)

inst_73070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffff8; valaddr_reg:x3; val_offset:219210*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219210*0 + 3*110*FLEN/8, x4, x1, x2)

inst_73071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffffc; valaddr_reg:x3; val_offset:219213*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219213*0 + 3*111*FLEN/8, x4, x1, x2)

inst_73072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840ffffffffffffe; valaddr_reg:x3; val_offset:219216*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219216*0 + 3*112*FLEN/8, x4, x1, x2)

inst_73073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5ff24c143e5b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5ff24c143e5b2; op2val:0x8000;
op3val:0x840fffffffffffff; valaddr_reg:x3; val_offset:219219*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219219*0 + 3*113*FLEN/8, x4, x1, x2)

inst_73074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:219222*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219222*0 + 3*114*FLEN/8, x4, x1, x2)

inst_73075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:219225*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219225*0 + 3*115*FLEN/8, x4, x1, x2)

inst_73076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:219228*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219228*0 + 3*116*FLEN/8, x4, x1, x2)

inst_73077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:219231*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219231*0 + 3*117*FLEN/8, x4, x1, x2)

inst_73078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:219234*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219234*0 + 3*118*FLEN/8, x4, x1, x2)

inst_73079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:219237*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219237*0 + 3*119*FLEN/8, x4, x1, x2)

inst_73080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:219240*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219240*0 + 3*120*FLEN/8, x4, x1, x2)

inst_73081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:219243*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219243*0 + 3*121*FLEN/8, x4, x1, x2)

inst_73082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:219246*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219246*0 + 3*122*FLEN/8, x4, x1, x2)

inst_73083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:219249*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219249*0 + 3*123*FLEN/8, x4, x1, x2)

inst_73084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:219252*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219252*0 + 3*124*FLEN/8, x4, x1, x2)

inst_73085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:219255*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219255*0 + 3*125*FLEN/8, x4, x1, x2)

inst_73086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:219258*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219258*0 + 3*126*FLEN/8, x4, x1, x2)

inst_73087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:219261*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219261*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_73088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:219264*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219264*0 + 3*128*FLEN/8, x4, x1, x2)

inst_73089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:219267*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219267*0 + 3*129*FLEN/8, x4, x1, x2)

inst_73090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:219270*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219270*0 + 3*130*FLEN/8, x4, x1, x2)

inst_73091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:219273*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219273*0 + 3*131*FLEN/8, x4, x1, x2)

inst_73092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:219276*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219276*0 + 3*132*FLEN/8, x4, x1, x2)

inst_73093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:219279*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219279*0 + 3*133*FLEN/8, x4, x1, x2)

inst_73094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:219282*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219282*0 + 3*134*FLEN/8, x4, x1, x2)

inst_73095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:219285*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219285*0 + 3*135*FLEN/8, x4, x1, x2)

inst_73096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:219288*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219288*0 + 3*136*FLEN/8, x4, x1, x2)

inst_73097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:219291*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219291*0 + 3*137*FLEN/8, x4, x1, x2)

inst_73098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:219294*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219294*0 + 3*138*FLEN/8, x4, x1, x2)

inst_73099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:219297*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219297*0 + 3*139*FLEN/8, x4, x1, x2)

inst_73100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:219300*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219300*0 + 3*140*FLEN/8, x4, x1, x2)

inst_73101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:219303*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219303*0 + 3*141*FLEN/8, x4, x1, x2)

inst_73102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:219306*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219306*0 + 3*142*FLEN/8, x4, x1, x2)

inst_73103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:219309*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219309*0 + 3*143*FLEN/8, x4, x1, x2)

inst_73104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:219312*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219312*0 + 3*144*FLEN/8, x4, x1, x2)

inst_73105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:219315*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219315*0 + 3*145*FLEN/8, x4, x1, x2)

inst_73106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:219318*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219318*0 + 3*146*FLEN/8, x4, x1, x2)

inst_73107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:219321*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219321*0 + 3*147*FLEN/8, x4, x1, x2)

inst_73108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:219324*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219324*0 + 3*148*FLEN/8, x4, x1, x2)

inst_73109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:219327*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219327*0 + 3*149*FLEN/8, x4, x1, x2)

inst_73110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:219330*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219330*0 + 3*150*FLEN/8, x4, x1, x2)

inst_73111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:219333*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219333*0 + 3*151*FLEN/8, x4, x1, x2)

inst_73112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:219336*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219336*0 + 3*152*FLEN/8, x4, x1, x2)

inst_73113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:219339*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219339*0 + 3*153*FLEN/8, x4, x1, x2)

inst_73114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:219342*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219342*0 + 3*154*FLEN/8, x4, x1, x2)

inst_73115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:219345*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219345*0 + 3*155*FLEN/8, x4, x1, x2)

inst_73116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:219348*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219348*0 + 3*156*FLEN/8, x4, x1, x2)

inst_73117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:219351*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219351*0 + 3*157*FLEN/8, x4, x1, x2)

inst_73118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:219354*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219354*0 + 3*158*FLEN/8, x4, x1, x2)

inst_73119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:219357*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219357*0 + 3*159*FLEN/8, x4, x1, x2)

inst_73120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:219360*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219360*0 + 3*160*FLEN/8, x4, x1, x2)

inst_73121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:219363*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219363*0 + 3*161*FLEN/8, x4, x1, x2)

inst_73122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:219366*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219366*0 + 3*162*FLEN/8, x4, x1, x2)

inst_73123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:219369*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219369*0 + 3*163*FLEN/8, x4, x1, x2)

inst_73124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:219372*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219372*0 + 3*164*FLEN/8, x4, x1, x2)

inst_73125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:219375*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219375*0 + 3*165*FLEN/8, x4, x1, x2)

inst_73126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:219378*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219378*0 + 3*166*FLEN/8, x4, x1, x2)

inst_73127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:219381*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219381*0 + 3*167*FLEN/8, x4, x1, x2)

inst_73128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:219384*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219384*0 + 3*168*FLEN/8, x4, x1, x2)

inst_73129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:219387*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219387*0 + 3*169*FLEN/8, x4, x1, x2)

inst_73130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:219390*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219390*0 + 3*170*FLEN/8, x4, x1, x2)

inst_73131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:219393*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219393*0 + 3*171*FLEN/8, x4, x1, x2)

inst_73132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:219396*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219396*0 + 3*172*FLEN/8, x4, x1, x2)

inst_73133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:219399*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219399*0 + 3*173*FLEN/8, x4, x1, x2)

inst_73134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:219402*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219402*0 + 3*174*FLEN/8, x4, x1, x2)

inst_73135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:219405*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219405*0 + 3*175*FLEN/8, x4, x1, x2)

inst_73136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:219408*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219408*0 + 3*176*FLEN/8, x4, x1, x2)

inst_73137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:219411*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219411*0 + 3*177*FLEN/8, x4, x1, x2)

inst_73138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:219414*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219414*0 + 3*178*FLEN/8, x4, x1, x2)

inst_73139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:219417*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219417*0 + 3*179*FLEN/8, x4, x1, x2)

inst_73140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:219420*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219420*0 + 3*180*FLEN/8, x4, x1, x2)

inst_73141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:219423*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219423*0 + 3*181*FLEN/8, x4, x1, x2)

inst_73142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:219426*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219426*0 + 3*182*FLEN/8, x4, x1, x2)

inst_73143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:219429*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219429*0 + 3*183*FLEN/8, x4, x1, x2)

inst_73144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:219432*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219432*0 + 3*184*FLEN/8, x4, x1, x2)

inst_73145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:219435*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219435*0 + 3*185*FLEN/8, x4, x1, x2)

inst_73146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:219438*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219438*0 + 3*186*FLEN/8, x4, x1, x2)

inst_73147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:219441*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219441*0 + 3*187*FLEN/8, x4, x1, x2)

inst_73148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:219444*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219444*0 + 3*188*FLEN/8, x4, x1, x2)

inst_73149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:219447*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219447*0 + 3*189*FLEN/8, x4, x1, x2)

inst_73150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:219450*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219450*0 + 3*190*FLEN/8, x4, x1, x2)

inst_73151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:219453*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219453*0 + 3*191*FLEN/8, x4, x1, x2)

inst_73152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:219456*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219456*0 + 3*192*FLEN/8, x4, x1, x2)

inst_73153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:219459*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219459*0 + 3*193*FLEN/8, x4, x1, x2)

inst_73154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:219462*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219462*0 + 3*194*FLEN/8, x4, x1, x2)

inst_73155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:219465*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219465*0 + 3*195*FLEN/8, x4, x1, x2)

inst_73156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:219468*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219468*0 + 3*196*FLEN/8, x4, x1, x2)

inst_73157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:219471*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219471*0 + 3*197*FLEN/8, x4, x1, x2)

inst_73158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:219474*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219474*0 + 3*198*FLEN/8, x4, x1, x2)

inst_73159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:219477*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219477*0 + 3*199*FLEN/8, x4, x1, x2)

inst_73160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:219480*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219480*0 + 3*200*FLEN/8, x4, x1, x2)

inst_73161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:219483*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219483*0 + 3*201*FLEN/8, x4, x1, x2)

inst_73162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:219486*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219486*0 + 3*202*FLEN/8, x4, x1, x2)

inst_73163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:219489*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219489*0 + 3*203*FLEN/8, x4, x1, x2)

inst_73164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:219492*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219492*0 + 3*204*FLEN/8, x4, x1, x2)

inst_73165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:219495*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219495*0 + 3*205*FLEN/8, x4, x1, x2)

inst_73166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:219498*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219498*0 + 3*206*FLEN/8, x4, x1, x2)

inst_73167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:219501*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219501*0 + 3*207*FLEN/8, x4, x1, x2)

inst_73168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:219504*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219504*0 + 3*208*FLEN/8, x4, x1, x2)

inst_73169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:219507*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219507*0 + 3*209*FLEN/8, x4, x1, x2)

inst_73170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:219510*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219510*0 + 3*210*FLEN/8, x4, x1, x2)

inst_73171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:219513*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219513*0 + 3*211*FLEN/8, x4, x1, x2)

inst_73172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:219516*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219516*0 + 3*212*FLEN/8, x4, x1, x2)

inst_73173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:219519*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219519*0 + 3*213*FLEN/8, x4, x1, x2)

inst_73174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:219522*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219522*0 + 3*214*FLEN/8, x4, x1, x2)

inst_73175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:219525*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219525*0 + 3*215*FLEN/8, x4, x1, x2)

inst_73176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:219528*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219528*0 + 3*216*FLEN/8, x4, x1, x2)

inst_73177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:219531*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219531*0 + 3*217*FLEN/8, x4, x1, x2)

inst_73178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:219534*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219534*0 + 3*218*FLEN/8, x4, x1, x2)

inst_73179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:219537*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219537*0 + 3*219*FLEN/8, x4, x1, x2)

inst_73180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:219540*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219540*0 + 3*220*FLEN/8, x4, x1, x2)

inst_73181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:219543*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219543*0 + 3*221*FLEN/8, x4, x1, x2)

inst_73182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:219546*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219546*0 + 3*222*FLEN/8, x4, x1, x2)

inst_73183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:219549*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219549*0 + 3*223*FLEN/8, x4, x1, x2)

inst_73184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:219552*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219552*0 + 3*224*FLEN/8, x4, x1, x2)

inst_73185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:219555*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219555*0 + 3*225*FLEN/8, x4, x1, x2)

inst_73186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:219558*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219558*0 + 3*226*FLEN/8, x4, x1, x2)

inst_73187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:219561*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219561*0 + 3*227*FLEN/8, x4, x1, x2)

inst_73188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:219564*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219564*0 + 3*228*FLEN/8, x4, x1, x2)

inst_73189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:219567*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219567*0 + 3*229*FLEN/8, x4, x1, x2)

inst_73190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:219570*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219570*0 + 3*230*FLEN/8, x4, x1, x2)

inst_73191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:219573*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219573*0 + 3*231*FLEN/8, x4, x1, x2)

inst_73192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:219576*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219576*0 + 3*232*FLEN/8, x4, x1, x2)

inst_73193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:219579*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219579*0 + 3*233*FLEN/8, x4, x1, x2)

inst_73194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffffe0; valaddr_reg:x3; val_offset:219582*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219582*0 + 3*234*FLEN/8, x4, x1, x2)

inst_73195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffff0; valaddr_reg:x3; val_offset:219585*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219585*0 + 3*235*FLEN/8, x4, x1, x2)

inst_73196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffff8; valaddr_reg:x3; val_offset:219588*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219588*0 + 3*236*FLEN/8, x4, x1, x2)

inst_73197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffffc; valaddr_reg:x3; val_offset:219591*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219591*0 + 3*237*FLEN/8, x4, x1, x2)

inst_73198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36ffffffffffffe; valaddr_reg:x3; val_offset:219594*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219594*0 + 3*238*FLEN/8, x4, x1, x2)

inst_73199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x60c90b4c895fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa60c90b4c895fd; op2val:0x0;
op3val:0x36fffffffffffff; valaddr_reg:x3; val_offset:219597*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219597*0 + 3*239*FLEN/8, x4, x1, x2)

inst_73200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000000000; valaddr_reg:x3; val_offset:219600*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219600*0 + 3*240*FLEN/8, x4, x1, x2)

inst_73201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000000001; valaddr_reg:x3; val_offset:219603*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219603*0 + 3*241*FLEN/8, x4, x1, x2)

inst_73202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000000003; valaddr_reg:x3; val_offset:219606*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219606*0 + 3*242*FLEN/8, x4, x1, x2)

inst_73203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000000007; valaddr_reg:x3; val_offset:219609*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219609*0 + 3*243*FLEN/8, x4, x1, x2)

inst_73204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000000000f; valaddr_reg:x3; val_offset:219612*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219612*0 + 3*244*FLEN/8, x4, x1, x2)

inst_73205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000000001f; valaddr_reg:x3; val_offset:219615*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219615*0 + 3*245*FLEN/8, x4, x1, x2)

inst_73206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000000003f; valaddr_reg:x3; val_offset:219618*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219618*0 + 3*246*FLEN/8, x4, x1, x2)

inst_73207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000000007f; valaddr_reg:x3; val_offset:219621*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219621*0 + 3*247*FLEN/8, x4, x1, x2)

inst_73208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000000000ff; valaddr_reg:x3; val_offset:219624*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219624*0 + 3*248*FLEN/8, x4, x1, x2)

inst_73209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000000001ff; valaddr_reg:x3; val_offset:219627*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219627*0 + 3*249*FLEN/8, x4, x1, x2)

inst_73210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000000003ff; valaddr_reg:x3; val_offset:219630*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219630*0 + 3*250*FLEN/8, x4, x1, x2)

inst_73211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000000007ff; valaddr_reg:x3; val_offset:219633*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219633*0 + 3*251*FLEN/8, x4, x1, x2)

inst_73212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000000fff; valaddr_reg:x3; val_offset:219636*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219636*0 + 3*252*FLEN/8, x4, x1, x2)

inst_73213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000001fff; valaddr_reg:x3; val_offset:219639*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219639*0 + 3*253*FLEN/8, x4, x1, x2)

inst_73214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000003fff; valaddr_reg:x3; val_offset:219642*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219642*0 + 3*254*FLEN/8, x4, x1, x2)

inst_73215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000007fff; valaddr_reg:x3; val_offset:219645*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219645*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_73216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000000ffff; valaddr_reg:x3; val_offset:219648*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219648*0 + 3*256*FLEN/8, x4, x1, x2)

inst_73217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000001ffff; valaddr_reg:x3; val_offset:219651*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219651*0 + 3*257*FLEN/8, x4, x1, x2)

inst_73218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000003ffff; valaddr_reg:x3; val_offset:219654*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219654*0 + 3*258*FLEN/8, x4, x1, x2)

inst_73219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000007ffff; valaddr_reg:x3; val_offset:219657*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219657*0 + 3*259*FLEN/8, x4, x1, x2)

inst_73220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000000fffff; valaddr_reg:x3; val_offset:219660*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219660*0 + 3*260*FLEN/8, x4, x1, x2)

inst_73221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000001fffff; valaddr_reg:x3; val_offset:219663*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219663*0 + 3*261*FLEN/8, x4, x1, x2)

inst_73222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000003fffff; valaddr_reg:x3; val_offset:219666*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219666*0 + 3*262*FLEN/8, x4, x1, x2)

inst_73223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000007fffff; valaddr_reg:x3; val_offset:219669*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219669*0 + 3*263*FLEN/8, x4, x1, x2)

inst_73224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000000ffffff; valaddr_reg:x3; val_offset:219672*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219672*0 + 3*264*FLEN/8, x4, x1, x2)

inst_73225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000001ffffff; valaddr_reg:x3; val_offset:219675*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219675*0 + 3*265*FLEN/8, x4, x1, x2)

inst_73226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000003ffffff; valaddr_reg:x3; val_offset:219678*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219678*0 + 3*266*FLEN/8, x4, x1, x2)

inst_73227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000007ffffff; valaddr_reg:x3; val_offset:219681*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219681*0 + 3*267*FLEN/8, x4, x1, x2)

inst_73228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000000fffffff; valaddr_reg:x3; val_offset:219684*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219684*0 + 3*268*FLEN/8, x4, x1, x2)

inst_73229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000001fffffff; valaddr_reg:x3; val_offset:219687*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219687*0 + 3*269*FLEN/8, x4, x1, x2)

inst_73230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000003fffffff; valaddr_reg:x3; val_offset:219690*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219690*0 + 3*270*FLEN/8, x4, x1, x2)

inst_73231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000007fffffff; valaddr_reg:x3; val_offset:219693*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219693*0 + 3*271*FLEN/8, x4, x1, x2)

inst_73232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00000ffffffff; valaddr_reg:x3; val_offset:219696*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219696*0 + 3*272*FLEN/8, x4, x1, x2)

inst_73233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00001ffffffff; valaddr_reg:x3; val_offset:219699*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219699*0 + 3*273*FLEN/8, x4, x1, x2)

inst_73234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00003ffffffff; valaddr_reg:x3; val_offset:219702*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219702*0 + 3*274*FLEN/8, x4, x1, x2)

inst_73235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00007ffffffff; valaddr_reg:x3; val_offset:219705*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219705*0 + 3*275*FLEN/8, x4, x1, x2)

inst_73236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0000fffffffff; valaddr_reg:x3; val_offset:219708*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219708*0 + 3*276*FLEN/8, x4, x1, x2)

inst_73237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0001fffffffff; valaddr_reg:x3; val_offset:219711*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219711*0 + 3*277*FLEN/8, x4, x1, x2)

inst_73238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0003fffffffff; valaddr_reg:x3; val_offset:219714*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219714*0 + 3*278*FLEN/8, x4, x1, x2)

inst_73239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0007fffffffff; valaddr_reg:x3; val_offset:219717*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219717*0 + 3*279*FLEN/8, x4, x1, x2)

inst_73240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de000ffffffffff; valaddr_reg:x3; val_offset:219720*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219720*0 + 3*280*FLEN/8, x4, x1, x2)

inst_73241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de001ffffffffff; valaddr_reg:x3; val_offset:219723*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219723*0 + 3*281*FLEN/8, x4, x1, x2)

inst_73242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de003ffffffffff; valaddr_reg:x3; val_offset:219726*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219726*0 + 3*282*FLEN/8, x4, x1, x2)

inst_73243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de007ffffffffff; valaddr_reg:x3; val_offset:219729*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219729*0 + 3*283*FLEN/8, x4, x1, x2)

inst_73244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de00fffffffffff; valaddr_reg:x3; val_offset:219732*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219732*0 + 3*284*FLEN/8, x4, x1, x2)

inst_73245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de01fffffffffff; valaddr_reg:x3; val_offset:219735*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219735*0 + 3*285*FLEN/8, x4, x1, x2)

inst_73246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de03fffffffffff; valaddr_reg:x3; val_offset:219738*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219738*0 + 3*286*FLEN/8, x4, x1, x2)

inst_73247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de07fffffffffff; valaddr_reg:x3; val_offset:219741*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219741*0 + 3*287*FLEN/8, x4, x1, x2)

inst_73248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de0ffffffffffff; valaddr_reg:x3; val_offset:219744*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219744*0 + 3*288*FLEN/8, x4, x1, x2)

inst_73249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de1ffffffffffff; valaddr_reg:x3; val_offset:219747*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219747*0 + 3*289*FLEN/8, x4, x1, x2)

inst_73250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de3ffffffffffff; valaddr_reg:x3; val_offset:219750*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219750*0 + 3*290*FLEN/8, x4, x1, x2)

inst_73251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de7ffffffffffff; valaddr_reg:x3; val_offset:219753*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219753*0 + 3*291*FLEN/8, x4, x1, x2)

inst_73252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3de8000000000000; valaddr_reg:x3; val_offset:219756*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219756*0 + 3*292*FLEN/8, x4, x1, x2)

inst_73253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3dec000000000000; valaddr_reg:x3; val_offset:219759*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219759*0 + 3*293*FLEN/8, x4, x1, x2)

inst_73254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3dee000000000000; valaddr_reg:x3; val_offset:219762*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219762*0 + 3*294*FLEN/8, x4, x1, x2)

inst_73255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3def000000000000; valaddr_reg:x3; val_offset:219765*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219765*0 + 3*295*FLEN/8, x4, x1, x2)

inst_73256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3def800000000000; valaddr_reg:x3; val_offset:219768*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219768*0 + 3*296*FLEN/8, x4, x1, x2)

inst_73257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defc00000000000; valaddr_reg:x3; val_offset:219771*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219771*0 + 3*297*FLEN/8, x4, x1, x2)

inst_73258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defe00000000000; valaddr_reg:x3; val_offset:219774*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219774*0 + 3*298*FLEN/8, x4, x1, x2)

inst_73259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deff00000000000; valaddr_reg:x3; val_offset:219777*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219777*0 + 3*299*FLEN/8, x4, x1, x2)

inst_73260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deff80000000000; valaddr_reg:x3; val_offset:219780*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219780*0 + 3*300*FLEN/8, x4, x1, x2)

inst_73261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffc0000000000; valaddr_reg:x3; val_offset:219783*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219783*0 + 3*301*FLEN/8, x4, x1, x2)

inst_73262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffe0000000000; valaddr_reg:x3; val_offset:219786*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219786*0 + 3*302*FLEN/8, x4, x1, x2)

inst_73263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defff0000000000; valaddr_reg:x3; val_offset:219789*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219789*0 + 3*303*FLEN/8, x4, x1, x2)

inst_73264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defff8000000000; valaddr_reg:x3; val_offset:219792*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219792*0 + 3*304*FLEN/8, x4, x1, x2)

inst_73265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffc000000000; valaddr_reg:x3; val_offset:219795*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219795*0 + 3*305*FLEN/8, x4, x1, x2)

inst_73266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffe000000000; valaddr_reg:x3; val_offset:219798*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219798*0 + 3*306*FLEN/8, x4, x1, x2)

inst_73267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffff000000000; valaddr_reg:x3; val_offset:219801*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219801*0 + 3*307*FLEN/8, x4, x1, x2)

inst_73268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffff800000000; valaddr_reg:x3; val_offset:219804*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219804*0 + 3*308*FLEN/8, x4, x1, x2)

inst_73269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffc00000000; valaddr_reg:x3; val_offset:219807*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219807*0 + 3*309*FLEN/8, x4, x1, x2)

inst_73270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffe00000000; valaddr_reg:x3; val_offset:219810*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219810*0 + 3*310*FLEN/8, x4, x1, x2)

inst_73271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffff00000000; valaddr_reg:x3; val_offset:219813*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219813*0 + 3*311*FLEN/8, x4, x1, x2)

inst_73272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffff80000000; valaddr_reg:x3; val_offset:219816*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219816*0 + 3*312*FLEN/8, x4, x1, x2)

inst_73273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffc0000000; valaddr_reg:x3; val_offset:219819*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219819*0 + 3*313*FLEN/8, x4, x1, x2)

inst_73274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffe0000000; valaddr_reg:x3; val_offset:219822*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219822*0 + 3*314*FLEN/8, x4, x1, x2)

inst_73275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffff0000000; valaddr_reg:x3; val_offset:219825*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219825*0 + 3*315*FLEN/8, x4, x1, x2)

inst_73276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffff8000000; valaddr_reg:x3; val_offset:219828*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219828*0 + 3*316*FLEN/8, x4, x1, x2)

inst_73277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffc000000; valaddr_reg:x3; val_offset:219831*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219831*0 + 3*317*FLEN/8, x4, x1, x2)

inst_73278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffe000000; valaddr_reg:x3; val_offset:219834*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219834*0 + 3*318*FLEN/8, x4, x1, x2)

inst_73279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffff000000; valaddr_reg:x3; val_offset:219837*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219837*0 + 3*319*FLEN/8, x4, x1, x2)

inst_73280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffff800000; valaddr_reg:x3; val_offset:219840*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219840*0 + 3*320*FLEN/8, x4, x1, x2)

inst_73281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffc00000; valaddr_reg:x3; val_offset:219843*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219843*0 + 3*321*FLEN/8, x4, x1, x2)

inst_73282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffe00000; valaddr_reg:x3; val_offset:219846*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219846*0 + 3*322*FLEN/8, x4, x1, x2)

inst_73283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffff00000; valaddr_reg:x3; val_offset:219849*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219849*0 + 3*323*FLEN/8, x4, x1, x2)

inst_73284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffff80000; valaddr_reg:x3; val_offset:219852*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219852*0 + 3*324*FLEN/8, x4, x1, x2)

inst_73285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffc0000; valaddr_reg:x3; val_offset:219855*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219855*0 + 3*325*FLEN/8, x4, x1, x2)

inst_73286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffe0000; valaddr_reg:x3; val_offset:219858*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219858*0 + 3*326*FLEN/8, x4, x1, x2)

inst_73287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffff0000; valaddr_reg:x3; val_offset:219861*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219861*0 + 3*327*FLEN/8, x4, x1, x2)

inst_73288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffff8000; valaddr_reg:x3; val_offset:219864*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219864*0 + 3*328*FLEN/8, x4, x1, x2)

inst_73289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffc000; valaddr_reg:x3; val_offset:219867*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219867*0 + 3*329*FLEN/8, x4, x1, x2)

inst_73290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffe000; valaddr_reg:x3; val_offset:219870*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219870*0 + 3*330*FLEN/8, x4, x1, x2)

inst_73291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffff000; valaddr_reg:x3; val_offset:219873*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219873*0 + 3*331*FLEN/8, x4, x1, x2)

inst_73292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffff800; valaddr_reg:x3; val_offset:219876*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219876*0 + 3*332*FLEN/8, x4, x1, x2)

inst_73293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffc00; valaddr_reg:x3; val_offset:219879*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219879*0 + 3*333*FLEN/8, x4, x1, x2)

inst_73294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffe00; valaddr_reg:x3; val_offset:219882*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219882*0 + 3*334*FLEN/8, x4, x1, x2)

inst_73295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffff00; valaddr_reg:x3; val_offset:219885*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219885*0 + 3*335*FLEN/8, x4, x1, x2)

inst_73296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffff80; valaddr_reg:x3; val_offset:219888*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219888*0 + 3*336*FLEN/8, x4, x1, x2)

inst_73297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffffc0; valaddr_reg:x3; val_offset:219891*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219891*0 + 3*337*FLEN/8, x4, x1, x2)

inst_73298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffffe0; valaddr_reg:x3; val_offset:219894*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219894*0 + 3*338*FLEN/8, x4, x1, x2)

inst_73299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffff0; valaddr_reg:x3; val_offset:219897*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219897*0 + 3*339*FLEN/8, x4, x1, x2)

inst_73300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffff8; valaddr_reg:x3; val_offset:219900*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219900*0 + 3*340*FLEN/8, x4, x1, x2)

inst_73301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffffc; valaddr_reg:x3; val_offset:219903*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219903*0 + 3*341*FLEN/8, x4, x1, x2)

inst_73302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3deffffffffffffe; valaddr_reg:x3; val_offset:219906*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219906*0 + 3*342*FLEN/8, x4, x1, x2)

inst_73303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3defffffffffffff; valaddr_reg:x3; val_offset:219909*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219909*0 + 3*343*FLEN/8, x4, x1, x2)

inst_73304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:219912*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219912*0 + 3*344*FLEN/8, x4, x1, x2)

inst_73305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:219915*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219915*0 + 3*345*FLEN/8, x4, x1, x2)

inst_73306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:219918*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219918*0 + 3*346*FLEN/8, x4, x1, x2)

inst_73307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:219921*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219921*0 + 3*347*FLEN/8, x4, x1, x2)

inst_73308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:219924*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219924*0 + 3*348*FLEN/8, x4, x1, x2)

inst_73309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:219927*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219927*0 + 3*349*FLEN/8, x4, x1, x2)

inst_73310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:219930*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219930*0 + 3*350*FLEN/8, x4, x1, x2)

inst_73311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:219933*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219933*0 + 3*351*FLEN/8, x4, x1, x2)

inst_73312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:219936*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219936*0 + 3*352*FLEN/8, x4, x1, x2)

inst_73313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:219939*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219939*0 + 3*353*FLEN/8, x4, x1, x2)

inst_73314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:219942*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219942*0 + 3*354*FLEN/8, x4, x1, x2)

inst_73315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:219945*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219945*0 + 3*355*FLEN/8, x4, x1, x2)

inst_73316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:219948*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219948*0 + 3*356*FLEN/8, x4, x1, x2)

inst_73317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:219951*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219951*0 + 3*357*FLEN/8, x4, x1, x2)

inst_73318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:219954*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219954*0 + 3*358*FLEN/8, x4, x1, x2)

inst_73319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:219957*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219957*0 + 3*359*FLEN/8, x4, x1, x2)

inst_73320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:219960*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219960*0 + 3*360*FLEN/8, x4, x1, x2)

inst_73321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:219963*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219963*0 + 3*361*FLEN/8, x4, x1, x2)

inst_73322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:219966*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219966*0 + 3*362*FLEN/8, x4, x1, x2)

inst_73323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:219969*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219969*0 + 3*363*FLEN/8, x4, x1, x2)

inst_73324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:219972*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219972*0 + 3*364*FLEN/8, x4, x1, x2)

inst_73325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x7197fb1078d84 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62a35ac6bee41; op2val:0x2037197fb1078d84;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:219975*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219975*0 + 3*365*FLEN/8, x4, x1, x2)

inst_73326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:219978*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219978*0 + 3*366*FLEN/8, x4, x1, x2)

inst_73327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:219981*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219981*0 + 3*367*FLEN/8, x4, x1, x2)

inst_73328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:219984*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219984*0 + 3*368*FLEN/8, x4, x1, x2)

inst_73329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:219987*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219987*0 + 3*369*FLEN/8, x4, x1, x2)

inst_73330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:219990*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219990*0 + 3*370*FLEN/8, x4, x1, x2)

inst_73331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:219993*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219993*0 + 3*371*FLEN/8, x4, x1, x2)

inst_73332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:219996*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219996*0 + 3*372*FLEN/8, x4, x1, x2)

inst_73333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:219999*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219999*0 + 3*373*FLEN/8, x4, x1, x2)

inst_73334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:220002*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220002*0 + 3*374*FLEN/8, x4, x1, x2)

inst_73335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:220005*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220005*0 + 3*375*FLEN/8, x4, x1, x2)

inst_73336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:220008*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220008*0 + 3*376*FLEN/8, x4, x1, x2)

inst_73337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:220011*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220011*0 + 3*377*FLEN/8, x4, x1, x2)

inst_73338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:220014*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220014*0 + 3*378*FLEN/8, x4, x1, x2)

inst_73339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:220017*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220017*0 + 3*379*FLEN/8, x4, x1, x2)

inst_73340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:220020*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220020*0 + 3*380*FLEN/8, x4, x1, x2)

inst_73341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:220023*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220023*0 + 3*381*FLEN/8, x4, x1, x2)

inst_73342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:220026*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220026*0 + 3*382*FLEN/8, x4, x1, x2)

inst_73343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:220029*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220029*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_73344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:220032*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220032*0 + 3*384*FLEN/8, x4, x1, x2)

inst_73345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:220035*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220035*0 + 3*385*FLEN/8, x4, x1, x2)

inst_73346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:220038*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220038*0 + 3*386*FLEN/8, x4, x1, x2)

inst_73347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:220041*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220041*0 + 3*387*FLEN/8, x4, x1, x2)

inst_73348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:220044*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220044*0 + 3*388*FLEN/8, x4, x1, x2)

inst_73349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:220047*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220047*0 + 3*389*FLEN/8, x4, x1, x2)

inst_73350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:220050*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220050*0 + 3*390*FLEN/8, x4, x1, x2)

inst_73351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:220053*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220053*0 + 3*391*FLEN/8, x4, x1, x2)

inst_73352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:220056*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220056*0 + 3*392*FLEN/8, x4, x1, x2)

inst_73353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:220059*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220059*0 + 3*393*FLEN/8, x4, x1, x2)

inst_73354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:220062*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220062*0 + 3*394*FLEN/8, x4, x1, x2)

inst_73355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:220065*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220065*0 + 3*395*FLEN/8, x4, x1, x2)

inst_73356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:220068*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220068*0 + 3*396*FLEN/8, x4, x1, x2)

inst_73357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:220071*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220071*0 + 3*397*FLEN/8, x4, x1, x2)

inst_73358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:220074*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220074*0 + 3*398*FLEN/8, x4, x1, x2)

inst_73359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:220077*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220077*0 + 3*399*FLEN/8, x4, x1, x2)

inst_73360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:220080*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220080*0 + 3*400*FLEN/8, x4, x1, x2)

inst_73361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:220083*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220083*0 + 3*401*FLEN/8, x4, x1, x2)

inst_73362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:220086*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220086*0 + 3*402*FLEN/8, x4, x1, x2)

inst_73363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:220089*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220089*0 + 3*403*FLEN/8, x4, x1, x2)

inst_73364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:220092*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220092*0 + 3*404*FLEN/8, x4, x1, x2)

inst_73365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:220095*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220095*0 + 3*405*FLEN/8, x4, x1, x2)

inst_73366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:220098*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220098*0 + 3*406*FLEN/8, x4, x1, x2)

inst_73367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:220101*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220101*0 + 3*407*FLEN/8, x4, x1, x2)

inst_73368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:220104*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220104*0 + 3*408*FLEN/8, x4, x1, x2)

inst_73369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:220107*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220107*0 + 3*409*FLEN/8, x4, x1, x2)

inst_73370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:220110*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220110*0 + 3*410*FLEN/8, x4, x1, x2)

inst_73371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:220113*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220113*0 + 3*411*FLEN/8, x4, x1, x2)

inst_73372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:220116*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220116*0 + 3*412*FLEN/8, x4, x1, x2)

inst_73373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:220119*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220119*0 + 3*413*FLEN/8, x4, x1, x2)

inst_73374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:220122*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220122*0 + 3*414*FLEN/8, x4, x1, x2)

inst_73375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:220125*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220125*0 + 3*415*FLEN/8, x4, x1, x2)

inst_73376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:220128*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220128*0 + 3*416*FLEN/8, x4, x1, x2)

inst_73377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:220131*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220131*0 + 3*417*FLEN/8, x4, x1, x2)

inst_73378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:220134*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220134*0 + 3*418*FLEN/8, x4, x1, x2)

inst_73379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:220137*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220137*0 + 3*419*FLEN/8, x4, x1, x2)

inst_73380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:220140*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220140*0 + 3*420*FLEN/8, x4, x1, x2)

inst_73381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:220143*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220143*0 + 3*421*FLEN/8, x4, x1, x2)

inst_73382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:220146*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220146*0 + 3*422*FLEN/8, x4, x1, x2)

inst_73383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:220149*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220149*0 + 3*423*FLEN/8, x4, x1, x2)

inst_73384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:220152*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220152*0 + 3*424*FLEN/8, x4, x1, x2)

inst_73385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:220155*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220155*0 + 3*425*FLEN/8, x4, x1, x2)

inst_73386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:220158*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220158*0 + 3*426*FLEN/8, x4, x1, x2)

inst_73387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:220161*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220161*0 + 3*427*FLEN/8, x4, x1, x2)

inst_73388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:220164*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220164*0 + 3*428*FLEN/8, x4, x1, x2)

inst_73389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:220167*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220167*0 + 3*429*FLEN/8, x4, x1, x2)

inst_73390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:220170*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220170*0 + 3*430*FLEN/8, x4, x1, x2)

inst_73391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:220173*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220173*0 + 3*431*FLEN/8, x4, x1, x2)

inst_73392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:220176*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220176*0 + 3*432*FLEN/8, x4, x1, x2)

inst_73393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:220179*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220179*0 + 3*433*FLEN/8, x4, x1, x2)

inst_73394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:220182*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220182*0 + 3*434*FLEN/8, x4, x1, x2)

inst_73395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:220185*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220185*0 + 3*435*FLEN/8, x4, x1, x2)

inst_73396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:220188*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220188*0 + 3*436*FLEN/8, x4, x1, x2)

inst_73397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:220191*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220191*0 + 3*437*FLEN/8, x4, x1, x2)

inst_73398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:220194*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220194*0 + 3*438*FLEN/8, x4, x1, x2)

inst_73399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:220197*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220197*0 + 3*439*FLEN/8, x4, x1, x2)

inst_73400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:220200*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220200*0 + 3*440*FLEN/8, x4, x1, x2)

inst_73401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:220203*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220203*0 + 3*441*FLEN/8, x4, x1, x2)

inst_73402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:220206*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220206*0 + 3*442*FLEN/8, x4, x1, x2)

inst_73403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:220209*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220209*0 + 3*443*FLEN/8, x4, x1, x2)

inst_73404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:220212*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220212*0 + 3*444*FLEN/8, x4, x1, x2)

inst_73405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:220215*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220215*0 + 3*445*FLEN/8, x4, x1, x2)

inst_73406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:220218*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220218*0 + 3*446*FLEN/8, x4, x1, x2)

inst_73407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:220221*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220221*0 + 3*447*FLEN/8, x4, x1, x2)

inst_73408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:220224*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220224*0 + 3*448*FLEN/8, x4, x1, x2)

inst_73409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:220227*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220227*0 + 3*449*FLEN/8, x4, x1, x2)

inst_73410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:220230*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220230*0 + 3*450*FLEN/8, x4, x1, x2)

inst_73411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:220233*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220233*0 + 3*451*FLEN/8, x4, x1, x2)

inst_73412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:220236*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220236*0 + 3*452*FLEN/8, x4, x1, x2)

inst_73413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:220239*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220239*0 + 3*453*FLEN/8, x4, x1, x2)

inst_73414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:220242*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220242*0 + 3*454*FLEN/8, x4, x1, x2)

inst_73415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:220245*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220245*0 + 3*455*FLEN/8, x4, x1, x2)

inst_73416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:220248*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220248*0 + 3*456*FLEN/8, x4, x1, x2)

inst_73417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:220251*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220251*0 + 3*457*FLEN/8, x4, x1, x2)

inst_73418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:220254*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220254*0 + 3*458*FLEN/8, x4, x1, x2)

inst_73419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:220257*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220257*0 + 3*459*FLEN/8, x4, x1, x2)

inst_73420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:220260*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220260*0 + 3*460*FLEN/8, x4, x1, x2)

inst_73421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:220263*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220263*0 + 3*461*FLEN/8, x4, x1, x2)

inst_73422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:220266*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220266*0 + 3*462*FLEN/8, x4, x1, x2)

inst_73423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:220269*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220269*0 + 3*463*FLEN/8, x4, x1, x2)

inst_73424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:220272*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220272*0 + 3*464*FLEN/8, x4, x1, x2)

inst_73425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:220275*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220275*0 + 3*465*FLEN/8, x4, x1, x2)

inst_73426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:220278*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220278*0 + 3*466*FLEN/8, x4, x1, x2)

inst_73427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:220281*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220281*0 + 3*467*FLEN/8, x4, x1, x2)

inst_73428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:220284*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220284*0 + 3*468*FLEN/8, x4, x1, x2)

inst_73429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:220287*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220287*0 + 3*469*FLEN/8, x4, x1, x2)

inst_73430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:220290*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220290*0 + 3*470*FLEN/8, x4, x1, x2)

inst_73431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:220293*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220293*0 + 3*471*FLEN/8, x4, x1, x2)

inst_73432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:220296*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220296*0 + 3*472*FLEN/8, x4, x1, x2)

inst_73433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:220299*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220299*0 + 3*473*FLEN/8, x4, x1, x2)

inst_73434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:220302*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220302*0 + 3*474*FLEN/8, x4, x1, x2)

inst_73435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:220305*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220305*0 + 3*475*FLEN/8, x4, x1, x2)

inst_73436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:220308*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220308*0 + 3*476*FLEN/8, x4, x1, x2)

inst_73437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:220311*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220311*0 + 3*477*FLEN/8, x4, x1, x2)

inst_73438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:220314*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220314*0 + 3*478*FLEN/8, x4, x1, x2)

inst_73439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:220317*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220317*0 + 3*479*FLEN/8, x4, x1, x2)

inst_73440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:220320*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220320*0 + 3*480*FLEN/8, x4, x1, x2)

inst_73441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:220323*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220323*0 + 3*481*FLEN/8, x4, x1, x2)

inst_73442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:220326*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220326*0 + 3*482*FLEN/8, x4, x1, x2)

inst_73443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:220329*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220329*0 + 3*483*FLEN/8, x4, x1, x2)

inst_73444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:220332*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220332*0 + 3*484*FLEN/8, x4, x1, x2)

inst_73445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:220335*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220335*0 + 3*485*FLEN/8, x4, x1, x2)

inst_73446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:220338*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220338*0 + 3*486*FLEN/8, x4, x1, x2)

inst_73447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:220341*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220341*0 + 3*487*FLEN/8, x4, x1, x2)

inst_73448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:220344*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220344*0 + 3*488*FLEN/8, x4, x1, x2)

inst_73449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:220347*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220347*0 + 3*489*FLEN/8, x4, x1, x2)

inst_73450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:220350*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220350*0 + 3*490*FLEN/8, x4, x1, x2)

inst_73451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62f7fb8aee959 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa62f7fb8aee959; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:220353*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220353*0 + 3*491*FLEN/8, x4, x1, x2)

inst_73452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:220356*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220356*0 + 3*492*FLEN/8, x4, x1, x2)

inst_73453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:220359*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220359*0 + 3*493*FLEN/8, x4, x1, x2)

inst_73454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:220362*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220362*0 + 3*494*FLEN/8, x4, x1, x2)

inst_73455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:220365*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220365*0 + 3*495*FLEN/8, x4, x1, x2)

inst_73456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:220368*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220368*0 + 3*496*FLEN/8, x4, x1, x2)

inst_73457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:220371*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220371*0 + 3*497*FLEN/8, x4, x1, x2)

inst_73458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:220374*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220374*0 + 3*498*FLEN/8, x4, x1, x2)

inst_73459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:220377*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220377*0 + 3*499*FLEN/8, x4, x1, x2)

inst_73460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:220380*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220380*0 + 3*500*FLEN/8, x4, x1, x2)

inst_73461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:220383*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220383*0 + 3*501*FLEN/8, x4, x1, x2)

inst_73462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:220386*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220386*0 + 3*502*FLEN/8, x4, x1, x2)

inst_73463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:220389*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220389*0 + 3*503*FLEN/8, x4, x1, x2)

inst_73464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:220392*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220392*0 + 3*504*FLEN/8, x4, x1, x2)

inst_73465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:220395*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220395*0 + 3*505*FLEN/8, x4, x1, x2)

inst_73466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:220398*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220398*0 + 3*506*FLEN/8, x4, x1, x2)

inst_73467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:220401*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220401*0 + 3*507*FLEN/8, x4, x1, x2)

inst_73468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:220404*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220404*0 + 3*508*FLEN/8, x4, x1, x2)

inst_73469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:220407*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220407*0 + 3*509*FLEN/8, x4, x1, x2)

inst_73470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:220410*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220410*0 + 3*510*FLEN/8, x4, x1, x2)

inst_73471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:220413*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220413*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_73472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:220416*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220416*0 + 3*512*FLEN/8, x4, x1, x2)

inst_73473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:220419*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220419*0 + 3*513*FLEN/8, x4, x1, x2)

inst_73474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:220422*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220422*0 + 3*514*FLEN/8, x4, x1, x2)

inst_73475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:220425*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220425*0 + 3*515*FLEN/8, x4, x1, x2)

inst_73476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:220428*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220428*0 + 3*516*FLEN/8, x4, x1, x2)

inst_73477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:220431*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220431*0 + 3*517*FLEN/8, x4, x1, x2)

inst_73478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:220434*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220434*0 + 3*518*FLEN/8, x4, x1, x2)

inst_73479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:220437*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220437*0 + 3*519*FLEN/8, x4, x1, x2)

inst_73480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:220440*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220440*0 + 3*520*FLEN/8, x4, x1, x2)

inst_73481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:220443*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220443*0 + 3*521*FLEN/8, x4, x1, x2)

inst_73482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:220446*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220446*0 + 3*522*FLEN/8, x4, x1, x2)

inst_73483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:220449*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220449*0 + 3*523*FLEN/8, x4, x1, x2)

inst_73484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:220452*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220452*0 + 3*524*FLEN/8, x4, x1, x2)

inst_73485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:220455*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220455*0 + 3*525*FLEN/8, x4, x1, x2)

inst_73486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:220458*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220458*0 + 3*526*FLEN/8, x4, x1, x2)

inst_73487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:220461*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220461*0 + 3*527*FLEN/8, x4, x1, x2)

inst_73488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:220464*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220464*0 + 3*528*FLEN/8, x4, x1, x2)

inst_73489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:220467*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220467*0 + 3*529*FLEN/8, x4, x1, x2)

inst_73490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:220470*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220470*0 + 3*530*FLEN/8, x4, x1, x2)

inst_73491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:220473*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220473*0 + 3*531*FLEN/8, x4, x1, x2)

inst_73492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:220476*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220476*0 + 3*532*FLEN/8, x4, x1, x2)

inst_73493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:220479*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220479*0 + 3*533*FLEN/8, x4, x1, x2)

inst_73494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:220482*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220482*0 + 3*534*FLEN/8, x4, x1, x2)

inst_73495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:220485*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220485*0 + 3*535*FLEN/8, x4, x1, x2)

inst_73496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:220488*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220488*0 + 3*536*FLEN/8, x4, x1, x2)

inst_73497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:220491*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220491*0 + 3*537*FLEN/8, x4, x1, x2)

inst_73498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:220494*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220494*0 + 3*538*FLEN/8, x4, x1, x2)

inst_73499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:220497*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220497*0 + 3*539*FLEN/8, x4, x1, x2)

inst_73500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:220500*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220500*0 + 3*540*FLEN/8, x4, x1, x2)

inst_73501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:220503*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220503*0 + 3*541*FLEN/8, x4, x1, x2)

inst_73502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:220506*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220506*0 + 3*542*FLEN/8, x4, x1, x2)

inst_73503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:220509*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220509*0 + 3*543*FLEN/8, x4, x1, x2)

inst_73504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:220512*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220512*0 + 3*544*FLEN/8, x4, x1, x2)

inst_73505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:220515*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220515*0 + 3*545*FLEN/8, x4, x1, x2)

inst_73506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:220518*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220518*0 + 3*546*FLEN/8, x4, x1, x2)

inst_73507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:220521*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220521*0 + 3*547*FLEN/8, x4, x1, x2)

inst_73508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:220524*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220524*0 + 3*548*FLEN/8, x4, x1, x2)

inst_73509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:220527*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220527*0 + 3*549*FLEN/8, x4, x1, x2)

inst_73510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:220530*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220530*0 + 3*550*FLEN/8, x4, x1, x2)

inst_73511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:220533*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220533*0 + 3*551*FLEN/8, x4, x1, x2)

inst_73512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390003fffffffff; valaddr_reg:x3; val_offset:220536*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220536*0 + 3*552*FLEN/8, x4, x1, x2)

inst_73513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390007fffffffff; valaddr_reg:x3; val_offset:220539*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220539*0 + 3*553*FLEN/8, x4, x1, x2)

inst_73514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39000ffffffffff; valaddr_reg:x3; val_offset:220542*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220542*0 + 3*554*FLEN/8, x4, x1, x2)

inst_73515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39001ffffffffff; valaddr_reg:x3; val_offset:220545*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220545*0 + 3*555*FLEN/8, x4, x1, x2)

inst_73516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39003ffffffffff; valaddr_reg:x3; val_offset:220548*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220548*0 + 3*556*FLEN/8, x4, x1, x2)

inst_73517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39007ffffffffff; valaddr_reg:x3; val_offset:220551*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220551*0 + 3*557*FLEN/8, x4, x1, x2)

inst_73518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3900fffffffffff; valaddr_reg:x3; val_offset:220554*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220554*0 + 3*558*FLEN/8, x4, x1, x2)

inst_73519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3901fffffffffff; valaddr_reg:x3; val_offset:220557*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220557*0 + 3*559*FLEN/8, x4, x1, x2)

inst_73520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3903fffffffffff; valaddr_reg:x3; val_offset:220560*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220560*0 + 3*560*FLEN/8, x4, x1, x2)

inst_73521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x3907fffffffffff; valaddr_reg:x3; val_offset:220563*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220563*0 + 3*561*FLEN/8, x4, x1, x2)

inst_73522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x390ffffffffffff; valaddr_reg:x3; val_offset:220566*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220566*0 + 3*562*FLEN/8, x4, x1, x2)

inst_73523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x391ffffffffffff; valaddr_reg:x3; val_offset:220569*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220569*0 + 3*563*FLEN/8, x4, x1, x2)

inst_73524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x393ffffffffffff; valaddr_reg:x3; val_offset:220572*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220572*0 + 3*564*FLEN/8, x4, x1, x2)

inst_73525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x397ffffffffffff; valaddr_reg:x3; val_offset:220575*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220575*0 + 3*565*FLEN/8, x4, x1, x2)

inst_73526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x398000000000000; valaddr_reg:x3; val_offset:220578*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220578*0 + 3*566*FLEN/8, x4, x1, x2)

inst_73527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39c000000000000; valaddr_reg:x3; val_offset:220581*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220581*0 + 3*567*FLEN/8, x4, x1, x2)

inst_73528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39e000000000000; valaddr_reg:x3; val_offset:220584*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220584*0 + 3*568*FLEN/8, x4, x1, x2)

inst_73529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39f000000000000; valaddr_reg:x3; val_offset:220587*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220587*0 + 3*569*FLEN/8, x4, x1, x2)

inst_73530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39f800000000000; valaddr_reg:x3; val_offset:220590*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220590*0 + 3*570*FLEN/8, x4, x1, x2)

inst_73531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fc00000000000; valaddr_reg:x3; val_offset:220593*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220593*0 + 3*571*FLEN/8, x4, x1, x2)

inst_73532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fe00000000000; valaddr_reg:x3; val_offset:220596*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220596*0 + 3*572*FLEN/8, x4, x1, x2)

inst_73533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ff00000000000; valaddr_reg:x3; val_offset:220599*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220599*0 + 3*573*FLEN/8, x4, x1, x2)

inst_73534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ff80000000000; valaddr_reg:x3; val_offset:220602*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220602*0 + 3*574*FLEN/8, x4, x1, x2)

inst_73535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffc0000000000; valaddr_reg:x3; val_offset:220605*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220605*0 + 3*575*FLEN/8, x4, x1, x2)

inst_73536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffe0000000000; valaddr_reg:x3; val_offset:220608*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220608*0 + 3*576*FLEN/8, x4, x1, x2)

inst_73537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fff0000000000; valaddr_reg:x3; val_offset:220611*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220611*0 + 3*577*FLEN/8, x4, x1, x2)

inst_73538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fff8000000000; valaddr_reg:x3; val_offset:220614*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220614*0 + 3*578*FLEN/8, x4, x1, x2)

inst_73539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffc000000000; valaddr_reg:x3; val_offset:220617*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220617*0 + 3*579*FLEN/8, x4, x1, x2)

inst_73540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffe000000000; valaddr_reg:x3; val_offset:220620*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220620*0 + 3*580*FLEN/8, x4, x1, x2)

inst_73541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffff000000000; valaddr_reg:x3; val_offset:220623*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220623*0 + 3*581*FLEN/8, x4, x1, x2)

inst_73542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffff800000000; valaddr_reg:x3; val_offset:220626*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220626*0 + 3*582*FLEN/8, x4, x1, x2)

inst_73543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffc00000000; valaddr_reg:x3; val_offset:220629*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220629*0 + 3*583*FLEN/8, x4, x1, x2)

inst_73544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffe00000000; valaddr_reg:x3; val_offset:220632*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220632*0 + 3*584*FLEN/8, x4, x1, x2)

inst_73545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffff00000000; valaddr_reg:x3; val_offset:220635*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220635*0 + 3*585*FLEN/8, x4, x1, x2)

inst_73546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffff80000000; valaddr_reg:x3; val_offset:220638*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220638*0 + 3*586*FLEN/8, x4, x1, x2)

inst_73547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffc0000000; valaddr_reg:x3; val_offset:220641*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220641*0 + 3*587*FLEN/8, x4, x1, x2)

inst_73548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffe0000000; valaddr_reg:x3; val_offset:220644*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220644*0 + 3*588*FLEN/8, x4, x1, x2)

inst_73549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffff0000000; valaddr_reg:x3; val_offset:220647*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220647*0 + 3*589*FLEN/8, x4, x1, x2)

inst_73550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffff8000000; valaddr_reg:x3; val_offset:220650*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220650*0 + 3*590*FLEN/8, x4, x1, x2)

inst_73551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffc000000; valaddr_reg:x3; val_offset:220653*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220653*0 + 3*591*FLEN/8, x4, x1, x2)

inst_73552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffe000000; valaddr_reg:x3; val_offset:220656*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220656*0 + 3*592*FLEN/8, x4, x1, x2)

inst_73553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffff000000; valaddr_reg:x3; val_offset:220659*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220659*0 + 3*593*FLEN/8, x4, x1, x2)

inst_73554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffff800000; valaddr_reg:x3; val_offset:220662*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220662*0 + 3*594*FLEN/8, x4, x1, x2)

inst_73555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffc00000; valaddr_reg:x3; val_offset:220665*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220665*0 + 3*595*FLEN/8, x4, x1, x2)

inst_73556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffe00000; valaddr_reg:x3; val_offset:220668*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220668*0 + 3*596*FLEN/8, x4, x1, x2)

inst_73557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffff00000; valaddr_reg:x3; val_offset:220671*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220671*0 + 3*597*FLEN/8, x4, x1, x2)

inst_73558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffff80000; valaddr_reg:x3; val_offset:220674*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220674*0 + 3*598*FLEN/8, x4, x1, x2)

inst_73559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffc0000; valaddr_reg:x3; val_offset:220677*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220677*0 + 3*599*FLEN/8, x4, x1, x2)

inst_73560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffe0000; valaddr_reg:x3; val_offset:220680*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220680*0 + 3*600*FLEN/8, x4, x1, x2)

inst_73561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffff0000; valaddr_reg:x3; val_offset:220683*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220683*0 + 3*601*FLEN/8, x4, x1, x2)

inst_73562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffff8000; valaddr_reg:x3; val_offset:220686*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220686*0 + 3*602*FLEN/8, x4, x1, x2)

inst_73563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffc000; valaddr_reg:x3; val_offset:220689*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220689*0 + 3*603*FLEN/8, x4, x1, x2)

inst_73564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffe000; valaddr_reg:x3; val_offset:220692*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220692*0 + 3*604*FLEN/8, x4, x1, x2)

inst_73565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffff000; valaddr_reg:x3; val_offset:220695*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220695*0 + 3*605*FLEN/8, x4, x1, x2)

inst_73566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffff800; valaddr_reg:x3; val_offset:220698*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220698*0 + 3*606*FLEN/8, x4, x1, x2)

inst_73567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffc00; valaddr_reg:x3; val_offset:220701*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220701*0 + 3*607*FLEN/8, x4, x1, x2)

inst_73568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffe00; valaddr_reg:x3; val_offset:220704*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220704*0 + 3*608*FLEN/8, x4, x1, x2)

inst_73569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffff00; valaddr_reg:x3; val_offset:220707*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220707*0 + 3*609*FLEN/8, x4, x1, x2)

inst_73570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffff80; valaddr_reg:x3; val_offset:220710*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220710*0 + 3*610*FLEN/8, x4, x1, x2)

inst_73571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffffc0; valaddr_reg:x3; val_offset:220713*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220713*0 + 3*611*FLEN/8, x4, x1, x2)

inst_73572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffffe0; valaddr_reg:x3; val_offset:220716*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220716*0 + 3*612*FLEN/8, x4, x1, x2)

inst_73573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffff0; valaddr_reg:x3; val_offset:220719*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220719*0 + 3*613*FLEN/8, x4, x1, x2)

inst_73574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffff8; valaddr_reg:x3; val_offset:220722*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220722*0 + 3*614*FLEN/8, x4, x1, x2)

inst_73575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffffc; valaddr_reg:x3; val_offset:220725*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220725*0 + 3*615*FLEN/8, x4, x1, x2)

inst_73576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39ffffffffffffe; valaddr_reg:x3; val_offset:220728*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220728*0 + 3*616*FLEN/8, x4, x1, x2)

inst_73577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6342f322d581b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6342f322d581b; op2val:0x0;
op3val:0x39fffffffffffff; valaddr_reg:x3; val_offset:220731*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220731*0 + 3*617*FLEN/8, x4, x1, x2)

inst_73578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:220734*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220734*0 + 3*618*FLEN/8, x4, x1, x2)

inst_73579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:220737*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220737*0 + 3*619*FLEN/8, x4, x1, x2)

inst_73580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:220740*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220740*0 + 3*620*FLEN/8, x4, x1, x2)

inst_73581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:220743*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220743*0 + 3*621*FLEN/8, x4, x1, x2)

inst_73582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:220746*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220746*0 + 3*622*FLEN/8, x4, x1, x2)

inst_73583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:220749*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220749*0 + 3*623*FLEN/8, x4, x1, x2)

inst_73584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:220752*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220752*0 + 3*624*FLEN/8, x4, x1, x2)

inst_73585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:220755*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220755*0 + 3*625*FLEN/8, x4, x1, x2)

inst_73586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:220758*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220758*0 + 3*626*FLEN/8, x4, x1, x2)

inst_73587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:220761*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220761*0 + 3*627*FLEN/8, x4, x1, x2)

inst_73588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:220764*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220764*0 + 3*628*FLEN/8, x4, x1, x2)

inst_73589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:220767*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220767*0 + 3*629*FLEN/8, x4, x1, x2)

inst_73590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:220770*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220770*0 + 3*630*FLEN/8, x4, x1, x2)

inst_73591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:220773*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220773*0 + 3*631*FLEN/8, x4, x1, x2)

inst_73592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:220776*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220776*0 + 3*632*FLEN/8, x4, x1, x2)

inst_73593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:220779*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220779*0 + 3*633*FLEN/8, x4, x1, x2)

inst_73594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:220782*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220782*0 + 3*634*FLEN/8, x4, x1, x2)

inst_73595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:220785*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220785*0 + 3*635*FLEN/8, x4, x1, x2)

inst_73596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:220788*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220788*0 + 3*636*FLEN/8, x4, x1, x2)

inst_73597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:220791*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220791*0 + 3*637*FLEN/8, x4, x1, x2)

inst_73598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:220794*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220794*0 + 3*638*FLEN/8, x4, x1, x2)

inst_73599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:220797*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220797*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_73600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000000000; valaddr_reg:x3; val_offset:220800*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220800*0 + 3*640*FLEN/8, x4, x1, x2)

inst_73601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000000001; valaddr_reg:x3; val_offset:220803*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220803*0 + 3*641*FLEN/8, x4, x1, x2)

inst_73602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000000003; valaddr_reg:x3; val_offset:220806*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220806*0 + 3*642*FLEN/8, x4, x1, x2)

inst_73603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000000007; valaddr_reg:x3; val_offset:220809*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220809*0 + 3*643*FLEN/8, x4, x1, x2)

inst_73604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000000000f; valaddr_reg:x3; val_offset:220812*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220812*0 + 3*644*FLEN/8, x4, x1, x2)

inst_73605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000000001f; valaddr_reg:x3; val_offset:220815*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220815*0 + 3*645*FLEN/8, x4, x1, x2)

inst_73606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000000003f; valaddr_reg:x3; val_offset:220818*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220818*0 + 3*646*FLEN/8, x4, x1, x2)

inst_73607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000000007f; valaddr_reg:x3; val_offset:220821*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220821*0 + 3*647*FLEN/8, x4, x1, x2)

inst_73608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000000000ff; valaddr_reg:x3; val_offset:220824*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220824*0 + 3*648*FLEN/8, x4, x1, x2)

inst_73609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000000001ff; valaddr_reg:x3; val_offset:220827*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220827*0 + 3*649*FLEN/8, x4, x1, x2)

inst_73610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000000003ff; valaddr_reg:x3; val_offset:220830*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220830*0 + 3*650*FLEN/8, x4, x1, x2)

inst_73611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000000007ff; valaddr_reg:x3; val_offset:220833*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220833*0 + 3*651*FLEN/8, x4, x1, x2)

inst_73612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000000fff; valaddr_reg:x3; val_offset:220836*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220836*0 + 3*652*FLEN/8, x4, x1, x2)

inst_73613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000001fff; valaddr_reg:x3; val_offset:220839*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220839*0 + 3*653*FLEN/8, x4, x1, x2)

inst_73614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000003fff; valaddr_reg:x3; val_offset:220842*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220842*0 + 3*654*FLEN/8, x4, x1, x2)

inst_73615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000007fff; valaddr_reg:x3; val_offset:220845*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220845*0 + 3*655*FLEN/8, x4, x1, x2)

inst_73616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000000ffff; valaddr_reg:x3; val_offset:220848*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220848*0 + 3*656*FLEN/8, x4, x1, x2)

inst_73617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000001ffff; valaddr_reg:x3; val_offset:220851*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220851*0 + 3*657*FLEN/8, x4, x1, x2)

inst_73618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000003ffff; valaddr_reg:x3; val_offset:220854*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220854*0 + 3*658*FLEN/8, x4, x1, x2)

inst_73619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000007ffff; valaddr_reg:x3; val_offset:220857*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220857*0 + 3*659*FLEN/8, x4, x1, x2)

inst_73620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000000fffff; valaddr_reg:x3; val_offset:220860*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220860*0 + 3*660*FLEN/8, x4, x1, x2)

inst_73621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000001fffff; valaddr_reg:x3; val_offset:220863*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220863*0 + 3*661*FLEN/8, x4, x1, x2)

inst_73622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000003fffff; valaddr_reg:x3; val_offset:220866*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220866*0 + 3*662*FLEN/8, x4, x1, x2)

inst_73623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000007fffff; valaddr_reg:x3; val_offset:220869*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220869*0 + 3*663*FLEN/8, x4, x1, x2)

inst_73624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000000ffffff; valaddr_reg:x3; val_offset:220872*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220872*0 + 3*664*FLEN/8, x4, x1, x2)

inst_73625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000001ffffff; valaddr_reg:x3; val_offset:220875*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220875*0 + 3*665*FLEN/8, x4, x1, x2)

inst_73626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000003ffffff; valaddr_reg:x3; val_offset:220878*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220878*0 + 3*666*FLEN/8, x4, x1, x2)

inst_73627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000007ffffff; valaddr_reg:x3; val_offset:220881*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220881*0 + 3*667*FLEN/8, x4, x1, x2)

inst_73628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000000fffffff; valaddr_reg:x3; val_offset:220884*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220884*0 + 3*668*FLEN/8, x4, x1, x2)

inst_73629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000001fffffff; valaddr_reg:x3; val_offset:220887*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220887*0 + 3*669*FLEN/8, x4, x1, x2)

inst_73630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000003fffffff; valaddr_reg:x3; val_offset:220890*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220890*0 + 3*670*FLEN/8, x4, x1, x2)

inst_73631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000007fffffff; valaddr_reg:x3; val_offset:220893*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220893*0 + 3*671*FLEN/8, x4, x1, x2)

inst_73632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00000ffffffff; valaddr_reg:x3; val_offset:220896*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220896*0 + 3*672*FLEN/8, x4, x1, x2)

inst_73633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00001ffffffff; valaddr_reg:x3; val_offset:220899*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220899*0 + 3*673*FLEN/8, x4, x1, x2)

inst_73634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00003ffffffff; valaddr_reg:x3; val_offset:220902*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220902*0 + 3*674*FLEN/8, x4, x1, x2)

inst_73635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00007ffffffff; valaddr_reg:x3; val_offset:220905*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220905*0 + 3*675*FLEN/8, x4, x1, x2)

inst_73636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0000fffffffff; valaddr_reg:x3; val_offset:220908*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220908*0 + 3*676*FLEN/8, x4, x1, x2)

inst_73637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0001fffffffff; valaddr_reg:x3; val_offset:220911*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220911*0 + 3*677*FLEN/8, x4, x1, x2)

inst_73638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0003fffffffff; valaddr_reg:x3; val_offset:220914*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220914*0 + 3*678*FLEN/8, x4, x1, x2)

inst_73639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0007fffffffff; valaddr_reg:x3; val_offset:220917*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220917*0 + 3*679*FLEN/8, x4, x1, x2)

inst_73640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d000ffffffffff; valaddr_reg:x3; val_offset:220920*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220920*0 + 3*680*FLEN/8, x4, x1, x2)

inst_73641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d001ffffffffff; valaddr_reg:x3; val_offset:220923*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220923*0 + 3*681*FLEN/8, x4, x1, x2)

inst_73642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d003ffffffffff; valaddr_reg:x3; val_offset:220926*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220926*0 + 3*682*FLEN/8, x4, x1, x2)

inst_73643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d007ffffffffff; valaddr_reg:x3; val_offset:220929*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220929*0 + 3*683*FLEN/8, x4, x1, x2)

inst_73644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d00fffffffffff; valaddr_reg:x3; val_offset:220932*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220932*0 + 3*684*FLEN/8, x4, x1, x2)

inst_73645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d01fffffffffff; valaddr_reg:x3; val_offset:220935*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220935*0 + 3*685*FLEN/8, x4, x1, x2)

inst_73646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d03fffffffffff; valaddr_reg:x3; val_offset:220938*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220938*0 + 3*686*FLEN/8, x4, x1, x2)

inst_73647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d07fffffffffff; valaddr_reg:x3; val_offset:220941*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220941*0 + 3*687*FLEN/8, x4, x1, x2)

inst_73648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d0ffffffffffff; valaddr_reg:x3; val_offset:220944*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220944*0 + 3*688*FLEN/8, x4, x1, x2)

inst_73649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d1ffffffffffff; valaddr_reg:x3; val_offset:220947*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220947*0 + 3*689*FLEN/8, x4, x1, x2)

inst_73650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d3ffffffffffff; valaddr_reg:x3; val_offset:220950*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220950*0 + 3*690*FLEN/8, x4, x1, x2)

inst_73651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d7ffffffffffff; valaddr_reg:x3; val_offset:220953*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220953*0 + 3*691*FLEN/8, x4, x1, x2)

inst_73652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3d8000000000000; valaddr_reg:x3; val_offset:220956*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220956*0 + 3*692*FLEN/8, x4, x1, x2)

inst_73653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dc000000000000; valaddr_reg:x3; val_offset:220959*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220959*0 + 3*693*FLEN/8, x4, x1, x2)

inst_73654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3de000000000000; valaddr_reg:x3; val_offset:220962*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220962*0 + 3*694*FLEN/8, x4, x1, x2)

inst_73655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3df000000000000; valaddr_reg:x3; val_offset:220965*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220965*0 + 3*695*FLEN/8, x4, x1, x2)

inst_73656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3df800000000000; valaddr_reg:x3; val_offset:220968*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220968*0 + 3*696*FLEN/8, x4, x1, x2)

inst_73657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfc00000000000; valaddr_reg:x3; val_offset:220971*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220971*0 + 3*697*FLEN/8, x4, x1, x2)

inst_73658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfe00000000000; valaddr_reg:x3; val_offset:220974*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220974*0 + 3*698*FLEN/8, x4, x1, x2)

inst_73659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dff00000000000; valaddr_reg:x3; val_offset:220977*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220977*0 + 3*699*FLEN/8, x4, x1, x2)

inst_73660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dff80000000000; valaddr_reg:x3; val_offset:220980*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220980*0 + 3*700*FLEN/8, x4, x1, x2)

inst_73661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffc0000000000; valaddr_reg:x3; val_offset:220983*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220983*0 + 3*701*FLEN/8, x4, x1, x2)

inst_73662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffe0000000000; valaddr_reg:x3; val_offset:220986*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220986*0 + 3*702*FLEN/8, x4, x1, x2)

inst_73663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfff0000000000; valaddr_reg:x3; val_offset:220989*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220989*0 + 3*703*FLEN/8, x4, x1, x2)

inst_73664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfff8000000000; valaddr_reg:x3; val_offset:220992*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220992*0 + 3*704*FLEN/8, x4, x1, x2)

inst_73665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffc000000000; valaddr_reg:x3; val_offset:220995*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220995*0 + 3*705*FLEN/8, x4, x1, x2)

inst_73666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffe000000000; valaddr_reg:x3; val_offset:220998*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 220998*0 + 3*706*FLEN/8, x4, x1, x2)

inst_73667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffff000000000; valaddr_reg:x3; val_offset:221001*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221001*0 + 3*707*FLEN/8, x4, x1, x2)

inst_73668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffff800000000; valaddr_reg:x3; val_offset:221004*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221004*0 + 3*708*FLEN/8, x4, x1, x2)

inst_73669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffc00000000; valaddr_reg:x3; val_offset:221007*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221007*0 + 3*709*FLEN/8, x4, x1, x2)

inst_73670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffe00000000; valaddr_reg:x3; val_offset:221010*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221010*0 + 3*710*FLEN/8, x4, x1, x2)

inst_73671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffff00000000; valaddr_reg:x3; val_offset:221013*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221013*0 + 3*711*FLEN/8, x4, x1, x2)

inst_73672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffff80000000; valaddr_reg:x3; val_offset:221016*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221016*0 + 3*712*FLEN/8, x4, x1, x2)

inst_73673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffc0000000; valaddr_reg:x3; val_offset:221019*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221019*0 + 3*713*FLEN/8, x4, x1, x2)

inst_73674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffe0000000; valaddr_reg:x3; val_offset:221022*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221022*0 + 3*714*FLEN/8, x4, x1, x2)

inst_73675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffff0000000; valaddr_reg:x3; val_offset:221025*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221025*0 + 3*715*FLEN/8, x4, x1, x2)

inst_73676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffff8000000; valaddr_reg:x3; val_offset:221028*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221028*0 + 3*716*FLEN/8, x4, x1, x2)

inst_73677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffc000000; valaddr_reg:x3; val_offset:221031*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221031*0 + 3*717*FLEN/8, x4, x1, x2)

inst_73678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffe000000; valaddr_reg:x3; val_offset:221034*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221034*0 + 3*718*FLEN/8, x4, x1, x2)

inst_73679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffff000000; valaddr_reg:x3; val_offset:221037*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221037*0 + 3*719*FLEN/8, x4, x1, x2)

inst_73680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffff800000; valaddr_reg:x3; val_offset:221040*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221040*0 + 3*720*FLEN/8, x4, x1, x2)

inst_73681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffc00000; valaddr_reg:x3; val_offset:221043*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221043*0 + 3*721*FLEN/8, x4, x1, x2)

inst_73682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffe00000; valaddr_reg:x3; val_offset:221046*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221046*0 + 3*722*FLEN/8, x4, x1, x2)

inst_73683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffff00000; valaddr_reg:x3; val_offset:221049*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221049*0 + 3*723*FLEN/8, x4, x1, x2)

inst_73684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffff80000; valaddr_reg:x3; val_offset:221052*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221052*0 + 3*724*FLEN/8, x4, x1, x2)

inst_73685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffc0000; valaddr_reg:x3; val_offset:221055*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221055*0 + 3*725*FLEN/8, x4, x1, x2)

inst_73686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffe0000; valaddr_reg:x3; val_offset:221058*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221058*0 + 3*726*FLEN/8, x4, x1, x2)

inst_73687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffff0000; valaddr_reg:x3; val_offset:221061*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221061*0 + 3*727*FLEN/8, x4, x1, x2)

inst_73688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffff8000; valaddr_reg:x3; val_offset:221064*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221064*0 + 3*728*FLEN/8, x4, x1, x2)

inst_73689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffc000; valaddr_reg:x3; val_offset:221067*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221067*0 + 3*729*FLEN/8, x4, x1, x2)

inst_73690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffe000; valaddr_reg:x3; val_offset:221070*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221070*0 + 3*730*FLEN/8, x4, x1, x2)

inst_73691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffff000; valaddr_reg:x3; val_offset:221073*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221073*0 + 3*731*FLEN/8, x4, x1, x2)

inst_73692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffff800; valaddr_reg:x3; val_offset:221076*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221076*0 + 3*732*FLEN/8, x4, x1, x2)

inst_73693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffc00; valaddr_reg:x3; val_offset:221079*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221079*0 + 3*733*FLEN/8, x4, x1, x2)

inst_73694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffe00; valaddr_reg:x3; val_offset:221082*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221082*0 + 3*734*FLEN/8, x4, x1, x2)

inst_73695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffff00; valaddr_reg:x3; val_offset:221085*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221085*0 + 3*735*FLEN/8, x4, x1, x2)

inst_73696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffff80; valaddr_reg:x3; val_offset:221088*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221088*0 + 3*736*FLEN/8, x4, x1, x2)

inst_73697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffffc0; valaddr_reg:x3; val_offset:221091*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221091*0 + 3*737*FLEN/8, x4, x1, x2)

inst_73698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffffe0; valaddr_reg:x3; val_offset:221094*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221094*0 + 3*738*FLEN/8, x4, x1, x2)

inst_73699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffff0; valaddr_reg:x3; val_offset:221097*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221097*0 + 3*739*FLEN/8, x4, x1, x2)

inst_73700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffff8; valaddr_reg:x3; val_offset:221100*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221100*0 + 3*740*FLEN/8, x4, x1, x2)

inst_73701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffffc; valaddr_reg:x3; val_offset:221103*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221103*0 + 3*741*FLEN/8, x4, x1, x2)

inst_73702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dffffffffffffe; valaddr_reg:x3; val_offset:221106*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221106*0 + 3*742*FLEN/8, x4, x1, x2)

inst_73703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa662e40f571128; op2val:0x0;
op3val:0x3dfffffffffffff; valaddr_reg:x3; val_offset:221109*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221109*0 + 3*743*FLEN/8, x4, x1, x2)

inst_73704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:221112*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221112*0 + 3*744*FLEN/8, x4, x1, x2)

inst_73705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:221115*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221115*0 + 3*745*FLEN/8, x4, x1, x2)

inst_73706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:221118*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221118*0 + 3*746*FLEN/8, x4, x1, x2)

inst_73707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:221121*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221121*0 + 3*747*FLEN/8, x4, x1, x2)

inst_73708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:221124*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221124*0 + 3*748*FLEN/8, x4, x1, x2)

inst_73709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:221127*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221127*0 + 3*749*FLEN/8, x4, x1, x2)

inst_73710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:221130*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221130*0 + 3*750*FLEN/8, x4, x1, x2)

inst_73711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:221133*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221133*0 + 3*751*FLEN/8, x4, x1, x2)

inst_73712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:221136*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221136*0 + 3*752*FLEN/8, x4, x1, x2)

inst_73713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:221139*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221139*0 + 3*753*FLEN/8, x4, x1, x2)

inst_73714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:221142*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221142*0 + 3*754*FLEN/8, x4, x1, x2)

inst_73715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:221145*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221145*0 + 3*755*FLEN/8, x4, x1, x2)

inst_73716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:221148*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221148*0 + 3*756*FLEN/8, x4, x1, x2)

inst_73717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:221151*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221151*0 + 3*757*FLEN/8, x4, x1, x2)

inst_73718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:221154*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221154*0 + 3*758*FLEN/8, x4, x1, x2)

inst_73719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:221157*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221157*0 + 3*759*FLEN/8, x4, x1, x2)

inst_73720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:221160*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221160*0 + 3*760*FLEN/8, x4, x1, x2)

inst_73721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:221163*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221163*0 + 3*761*FLEN/8, x4, x1, x2)

inst_73722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:221166*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221166*0 + 3*762*FLEN/8, x4, x1, x2)

inst_73723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:221169*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221169*0 + 3*763*FLEN/8, x4, x1, x2)

inst_73724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:221172*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221172*0 + 3*764*FLEN/8, x4, x1, x2)

inst_73725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:221175*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221175*0 + 3*765*FLEN/8, x4, x1, x2)

inst_73726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x18d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x98d0000000000000; valaddr_reg:x3; val_offset:221178*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221178*0 + 3*766*FLEN/8, x4, x1, x2)

inst_73727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66e102b47af11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x18d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66e102b47af11; op2val:0x8000;
op3val:0x98d0000000000001; valaddr_reg:x3; val_offset:221181*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221181*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487552,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487553,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487555,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487559,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487567,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487583,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487615,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487679,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487807,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488063,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488575,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006489599,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006491647,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006495743,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006503935,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006520319,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006553087,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006618623,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006749695,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007011839,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007536127,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413008584703,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413010681855,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413014876159,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413023264767,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413040041983,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413073596415,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413140705279,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413274923007,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413543358463,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602414080229375,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602415153971199,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602417301454847,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602421596422143,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602430186356735,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602447366225919,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602481725964287,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602550445441023,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602687884394495,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602962762301439,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511603512518115327,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511604612029743103,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511606811052998655,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511611209099509759,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511620005192531967,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511637597378576383,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511672781750665215,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511743150494842879,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511883887983198207,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512165362959908863,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512728312913330175,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172799,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172800,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9514980112727015424,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515543062680436736,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515824537657147392,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515965275145502720,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516035643889680384,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516070828261769216,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516088420447813632,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516097216540835840,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516101614587346944,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516103813610602496,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516104913122230272,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105462878044160,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105737755951104,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105875194904576,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105943914381312,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105978274119680,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105995453988864,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106004043923456,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106008338890752,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106010486374400,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106011560116224,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012096987136,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012365422592,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012499640320,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012566749184,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012600303616,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012617080832,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012625469440,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012629663744,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012631760896,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012632809472,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633333760,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633595904,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633726976,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633792512,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633825280,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633841664,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633849856,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633853952,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633856000,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857024,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857536,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857792,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857920,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857984,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858016,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858032,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858040,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858044,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858046,64,FLEN)
NAN_BOXED(6892195338086770098,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858047,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377248,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377264,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377272,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377276,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377278,64,FLEN)
NAN_BOXED(6892210095384991229,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377279,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791040,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791041,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791043,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791047,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791055,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791071,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791103,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791167,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791295,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096791551,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096792063,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096793087,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096795135,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096799231,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096807423,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096823807,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096856575,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631096922111,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631097053183,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631097315327,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631097839615,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631098888191,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631100985343,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631105179647,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631113568255,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631130345471,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631163899903,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631231008767,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631365226495,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563631633661951,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563632170532863,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563633244274687,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563635391758335,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563639686725631,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563648276660223,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563665456529407,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563699816267775,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563768535744511,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458563905974697983,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458564180852604927,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458564730608418815,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458565830120046591,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458568029143302143,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458572427189813247,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458581223282835455,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458598815468879871,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458633999840968703,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458704368585146367,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4458845106073501695,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4459126581050212351,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4459689531003633663,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4460815430910476287,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4460815430910476288,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4461941330817318912,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4462504280770740224,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4462785755747450880,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4462926493235806208,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4462996861979983872,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463032046352072704,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463049638538117120,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463058434631139328,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463062832677650432,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463065031700905984,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463066131212533760,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463066680968347648,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463066955846254592,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067093285208064,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067162004684800,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067196364423168,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067213544292352,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067222134226944,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067226429194240,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067228576677888,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067229650419712,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230187290624,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230455726080,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230589943808,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230657052672,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230690607104,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230707384320,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230715772928,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230719967232,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230722064384,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230723112960,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230723637248,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230723899392,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724030464,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724096000,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724128768,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724145152,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724153344,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724157440,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724159488,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724160512,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161024,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161280,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161408,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161472,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161504,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161520,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161528,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161532,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161534,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4463067230724161535,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892242689751510593,64,FLEN)
NAN_BOXED(2321352169154383236,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6892248505342945625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705453638025215,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705728515932159,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256706278271746047,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256707377783373823,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256709576806629375,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256713974853140479,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256722770946162687,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256740363132207103,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256775547504295935,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256845916248473599,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256986653736828927,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257268128713539583,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257831078666960895,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803519,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803520,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260082878480646144,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260645828434067456,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260927303410778112,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261068040899133440,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261138409643311104,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261173594015399936,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261191186201444352,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261199982294466560,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261204380340977664,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261206579364233216,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261207678875860992,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208228631674880,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208503509581824,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208640948535296,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208709668012032,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208744027750400,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208761207619584,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208769797554176,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208774092521472,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208776240005120,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777313746944,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777850617856,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778119053312,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778253271040,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778320379904,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778353934336,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778370711552,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778379100160,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778383294464,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778385391616,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386440192,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386964480,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387226624,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387357696,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387423232,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387456000,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387472384,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387480576,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387484672,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387486720,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387487744,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488256,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488512,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488640,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488704,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488736,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488752,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488760,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488764,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488766,64,FLEN)
NAN_BOXED(6892253657047062555,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488767,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600256,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600257,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600259,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600263,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600271,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600287,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600319,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600383,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600511,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600767,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269601279,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269602303,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269604351,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269608447,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269616639,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269633023,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269665791,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269731327,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269862399,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270124543,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270648831,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577271697407,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577273794559,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577277988863,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577286377471,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577303154687,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577336709119,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577403817983,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577538035711,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577806471167,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719578343342079,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719579417083903,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719581564567551,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719585859534847,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719594449469439,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719611629338623,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719645989076991,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719714708553727,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719852147507199,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720127025414143,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720676781228031,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274721776292855807,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274723975316111359,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274728373362622463,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274737169455644671,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274754761641689087,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274789946013777919,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274860314757955583,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275001052246310911,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275282527223021567,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275845477176442879,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285503,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285504,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278097276990128128,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278660226943549440,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278941701920260096,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279082439408615424,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279152808152793088,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279187992524881920,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279205584710926336,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279214380803948544,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279218778850459648,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279220977873715200,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222077385342976,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222627141156864,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222902019063808,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223039458017280,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223108177494016,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223142537232384,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223159717101568,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223168307036160,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223172602003456,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223174749487104,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223175823228928,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176360099840,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176628535296,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176762753024,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176829861888,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176863416320,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176880193536,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176888582144,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176892776448,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176894873600,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176895922176,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896446464,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896708608,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896839680,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896905216,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896937984,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896954368,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896962560,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896966656,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896968704,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896969728,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970240,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970496,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970624,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970688,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970720,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970736,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970744,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970748,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970750,64,FLEN)
NAN_BOXED(6892305011386552616,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970751,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(11011301088920862720,64,FLEN)
NAN_BOXED(6892317295461773073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(11011301088920862721,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
