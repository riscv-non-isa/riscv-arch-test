
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_82176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:246528*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246528*0 + 3*0*FLEN/8, x4, x1, x2)

inst_82177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:246531*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246531*0 + 3*1*FLEN/8, x4, x1, x2)

inst_82178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:246534*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246534*0 + 3*2*FLEN/8, x4, x1, x2)

inst_82179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:246537*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246537*0 + 3*3*FLEN/8, x4, x1, x2)

inst_82180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:246540*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246540*0 + 3*4*FLEN/8, x4, x1, x2)

inst_82181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:246543*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246543*0 + 3*5*FLEN/8, x4, x1, x2)

inst_82182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:246546*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246546*0 + 3*6*FLEN/8, x4, x1, x2)

inst_82183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:246549*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246549*0 + 3*7*FLEN/8, x4, x1, x2)

inst_82184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:246552*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246552*0 + 3*8*FLEN/8, x4, x1, x2)

inst_82185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:246555*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246555*0 + 3*9*FLEN/8, x4, x1, x2)

inst_82186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:246558*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246558*0 + 3*10*FLEN/8, x4, x1, x2)

inst_82187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:246561*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246561*0 + 3*11*FLEN/8, x4, x1, x2)

inst_82188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:246564*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246564*0 + 3*12*FLEN/8, x4, x1, x2)

inst_82189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:246567*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246567*0 + 3*13*FLEN/8, x4, x1, x2)

inst_82190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:246570*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246570*0 + 3*14*FLEN/8, x4, x1, x2)

inst_82191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:246573*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246573*0 + 3*15*FLEN/8, x4, x1, x2)

inst_82192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:246576*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246576*0 + 3*16*FLEN/8, x4, x1, x2)

inst_82193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:246579*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246579*0 + 3*17*FLEN/8, x4, x1, x2)

inst_82194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:246582*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246582*0 + 3*18*FLEN/8, x4, x1, x2)

inst_82195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:246585*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246585*0 + 3*19*FLEN/8, x4, x1, x2)

inst_82196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:246588*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246588*0 + 3*20*FLEN/8, x4, x1, x2)

inst_82197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:246591*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246591*0 + 3*21*FLEN/8, x4, x1, x2)

inst_82198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:246594*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246594*0 + 3*22*FLEN/8, x4, x1, x2)

inst_82199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:246597*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246597*0 + 3*23*FLEN/8, x4, x1, x2)

inst_82200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:246600*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246600*0 + 3*24*FLEN/8, x4, x1, x2)

inst_82201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:246603*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246603*0 + 3*25*FLEN/8, x4, x1, x2)

inst_82202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:246606*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246606*0 + 3*26*FLEN/8, x4, x1, x2)

inst_82203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:246609*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246609*0 + 3*27*FLEN/8, x4, x1, x2)

inst_82204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:246612*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246612*0 + 3*28*FLEN/8, x4, x1, x2)

inst_82205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:246615*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246615*0 + 3*29*FLEN/8, x4, x1, x2)

inst_82206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:246618*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246618*0 + 3*30*FLEN/8, x4, x1, x2)

inst_82207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:246621*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246621*0 + 3*31*FLEN/8, x4, x1, x2)

inst_82208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:246624*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246624*0 + 3*32*FLEN/8, x4, x1, x2)

inst_82209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:246627*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246627*0 + 3*33*FLEN/8, x4, x1, x2)

inst_82210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:246630*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246630*0 + 3*34*FLEN/8, x4, x1, x2)

inst_82211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:246633*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246633*0 + 3*35*FLEN/8, x4, x1, x2)

inst_82212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:246636*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246636*0 + 3*36*FLEN/8, x4, x1, x2)

inst_82213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:246639*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246639*0 + 3*37*FLEN/8, x4, x1, x2)

inst_82214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:246642*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246642*0 + 3*38*FLEN/8, x4, x1, x2)

inst_82215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:246645*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246645*0 + 3*39*FLEN/8, x4, x1, x2)

inst_82216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:246648*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246648*0 + 3*40*FLEN/8, x4, x1, x2)

inst_82217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:246651*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246651*0 + 3*41*FLEN/8, x4, x1, x2)

inst_82218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:246654*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246654*0 + 3*42*FLEN/8, x4, x1, x2)

inst_82219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:246657*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246657*0 + 3*43*FLEN/8, x4, x1, x2)

inst_82220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:246660*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246660*0 + 3*44*FLEN/8, x4, x1, x2)

inst_82221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:246663*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246663*0 + 3*45*FLEN/8, x4, x1, x2)

inst_82222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:246666*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246666*0 + 3*46*FLEN/8, x4, x1, x2)

inst_82223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:246669*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246669*0 + 3*47*FLEN/8, x4, x1, x2)

inst_82224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:246672*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246672*0 + 3*48*FLEN/8, x4, x1, x2)

inst_82225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:246675*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246675*0 + 3*49*FLEN/8, x4, x1, x2)

inst_82226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:246678*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246678*0 + 3*50*FLEN/8, x4, x1, x2)

inst_82227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:246681*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246681*0 + 3*51*FLEN/8, x4, x1, x2)

inst_82228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:246684*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246684*0 + 3*52*FLEN/8, x4, x1, x2)

inst_82229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:246687*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246687*0 + 3*53*FLEN/8, x4, x1, x2)

inst_82230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:246690*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246690*0 + 3*54*FLEN/8, x4, x1, x2)

inst_82231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:246693*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246693*0 + 3*55*FLEN/8, x4, x1, x2)

inst_82232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:246696*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246696*0 + 3*56*FLEN/8, x4, x1, x2)

inst_82233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:246699*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246699*0 + 3*57*FLEN/8, x4, x1, x2)

inst_82234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:246702*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246702*0 + 3*58*FLEN/8, x4, x1, x2)

inst_82235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:246705*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246705*0 + 3*59*FLEN/8, x4, x1, x2)

inst_82236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:246708*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246708*0 + 3*60*FLEN/8, x4, x1, x2)

inst_82237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:246711*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246711*0 + 3*61*FLEN/8, x4, x1, x2)

inst_82238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:246714*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246714*0 + 3*62*FLEN/8, x4, x1, x2)

inst_82239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:246717*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246717*0 + 3*63*FLEN/8, x4, x1, x2)

inst_82240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:246720*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246720*0 + 3*64*FLEN/8, x4, x1, x2)

inst_82241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:246723*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246723*0 + 3*65*FLEN/8, x4, x1, x2)

inst_82242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:246726*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246726*0 + 3*66*FLEN/8, x4, x1, x2)

inst_82243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:246729*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246729*0 + 3*67*FLEN/8, x4, x1, x2)

inst_82244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:246732*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246732*0 + 3*68*FLEN/8, x4, x1, x2)

inst_82245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:246735*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246735*0 + 3*69*FLEN/8, x4, x1, x2)

inst_82246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:246738*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246738*0 + 3*70*FLEN/8, x4, x1, x2)

inst_82247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:246741*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246741*0 + 3*71*FLEN/8, x4, x1, x2)

inst_82248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:246744*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246744*0 + 3*72*FLEN/8, x4, x1, x2)

inst_82249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:246747*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246747*0 + 3*73*FLEN/8, x4, x1, x2)

inst_82250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:246750*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246750*0 + 3*74*FLEN/8, x4, x1, x2)

inst_82251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:246753*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246753*0 + 3*75*FLEN/8, x4, x1, x2)

inst_82252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:246756*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246756*0 + 3*76*FLEN/8, x4, x1, x2)

inst_82253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:246759*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246759*0 + 3*77*FLEN/8, x4, x1, x2)

inst_82254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:246762*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246762*0 + 3*78*FLEN/8, x4, x1, x2)

inst_82255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:246765*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246765*0 + 3*79*FLEN/8, x4, x1, x2)

inst_82256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:246768*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246768*0 + 3*80*FLEN/8, x4, x1, x2)

inst_82257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:246771*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246771*0 + 3*81*FLEN/8, x4, x1, x2)

inst_82258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:246774*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246774*0 + 3*82*FLEN/8, x4, x1, x2)

inst_82259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:246777*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246777*0 + 3*83*FLEN/8, x4, x1, x2)

inst_82260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:246780*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246780*0 + 3*84*FLEN/8, x4, x1, x2)

inst_82261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:246783*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246783*0 + 3*85*FLEN/8, x4, x1, x2)

inst_82262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:246786*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246786*0 + 3*86*FLEN/8, x4, x1, x2)

inst_82263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:246789*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246789*0 + 3*87*FLEN/8, x4, x1, x2)

inst_82264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:246792*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246792*0 + 3*88*FLEN/8, x4, x1, x2)

inst_82265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:246795*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246795*0 + 3*89*FLEN/8, x4, x1, x2)

inst_82266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:246798*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246798*0 + 3*90*FLEN/8, x4, x1, x2)

inst_82267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:246801*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246801*0 + 3*91*FLEN/8, x4, x1, x2)

inst_82268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:246804*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246804*0 + 3*92*FLEN/8, x4, x1, x2)

inst_82269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:246807*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246807*0 + 3*93*FLEN/8, x4, x1, x2)

inst_82270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:246810*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246810*0 + 3*94*FLEN/8, x4, x1, x2)

inst_82271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x93b1947a9dbea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa93b1947a9dbea; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:246813*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246813*0 + 3*95*FLEN/8, x4, x1, x2)

inst_82272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:246816*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246816*0 + 3*96*FLEN/8, x4, x1, x2)

inst_82273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:246819*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246819*0 + 3*97*FLEN/8, x4, x1, x2)

inst_82274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:246822*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246822*0 + 3*98*FLEN/8, x4, x1, x2)

inst_82275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:246825*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246825*0 + 3*99*FLEN/8, x4, x1, x2)

inst_82276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:246828*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246828*0 + 3*100*FLEN/8, x4, x1, x2)

inst_82277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:246831*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246831*0 + 3*101*FLEN/8, x4, x1, x2)

inst_82278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:246834*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246834*0 + 3*102*FLEN/8, x4, x1, x2)

inst_82279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:246837*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246837*0 + 3*103*FLEN/8, x4, x1, x2)

inst_82280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:246840*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246840*0 + 3*104*FLEN/8, x4, x1, x2)

inst_82281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:246843*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246843*0 + 3*105*FLEN/8, x4, x1, x2)

inst_82282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:246846*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246846*0 + 3*106*FLEN/8, x4, x1, x2)

inst_82283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:246849*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246849*0 + 3*107*FLEN/8, x4, x1, x2)

inst_82284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:246852*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246852*0 + 3*108*FLEN/8, x4, x1, x2)

inst_82285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:246855*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246855*0 + 3*109*FLEN/8, x4, x1, x2)

inst_82286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:246858*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246858*0 + 3*110*FLEN/8, x4, x1, x2)

inst_82287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:246861*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246861*0 + 3*111*FLEN/8, x4, x1, x2)

inst_82288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:246864*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246864*0 + 3*112*FLEN/8, x4, x1, x2)

inst_82289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:246867*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246867*0 + 3*113*FLEN/8, x4, x1, x2)

inst_82290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:246870*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246870*0 + 3*114*FLEN/8, x4, x1, x2)

inst_82291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:246873*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246873*0 + 3*115*FLEN/8, x4, x1, x2)

inst_82292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:246876*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246876*0 + 3*116*FLEN/8, x4, x1, x2)

inst_82293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:246879*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246879*0 + 3*117*FLEN/8, x4, x1, x2)

inst_82294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:246882*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246882*0 + 3*118*FLEN/8, x4, x1, x2)

inst_82295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:246885*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246885*0 + 3*119*FLEN/8, x4, x1, x2)

inst_82296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:246888*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246888*0 + 3*120*FLEN/8, x4, x1, x2)

inst_82297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:246891*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246891*0 + 3*121*FLEN/8, x4, x1, x2)

inst_82298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:246894*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246894*0 + 3*122*FLEN/8, x4, x1, x2)

inst_82299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:246897*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246897*0 + 3*123*FLEN/8, x4, x1, x2)

inst_82300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:246900*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246900*0 + 3*124*FLEN/8, x4, x1, x2)

inst_82301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:246903*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246903*0 + 3*125*FLEN/8, x4, x1, x2)

inst_82302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:246906*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246906*0 + 3*126*FLEN/8, x4, x1, x2)

inst_82303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:246909*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246909*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_82304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:246912*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246912*0 + 3*128*FLEN/8, x4, x1, x2)

inst_82305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:246915*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246915*0 + 3*129*FLEN/8, x4, x1, x2)

inst_82306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:246918*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246918*0 + 3*130*FLEN/8, x4, x1, x2)

inst_82307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:246921*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246921*0 + 3*131*FLEN/8, x4, x1, x2)

inst_82308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:246924*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246924*0 + 3*132*FLEN/8, x4, x1, x2)

inst_82309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:246927*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246927*0 + 3*133*FLEN/8, x4, x1, x2)

inst_82310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:246930*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246930*0 + 3*134*FLEN/8, x4, x1, x2)

inst_82311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:246933*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246933*0 + 3*135*FLEN/8, x4, x1, x2)

inst_82312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:246936*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246936*0 + 3*136*FLEN/8, x4, x1, x2)

inst_82313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:246939*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246939*0 + 3*137*FLEN/8, x4, x1, x2)

inst_82314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:246942*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246942*0 + 3*138*FLEN/8, x4, x1, x2)

inst_82315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:246945*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246945*0 + 3*139*FLEN/8, x4, x1, x2)

inst_82316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:246948*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246948*0 + 3*140*FLEN/8, x4, x1, x2)

inst_82317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:246951*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246951*0 + 3*141*FLEN/8, x4, x1, x2)

inst_82318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:246954*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246954*0 + 3*142*FLEN/8, x4, x1, x2)

inst_82319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:246957*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246957*0 + 3*143*FLEN/8, x4, x1, x2)

inst_82320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:246960*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246960*0 + 3*144*FLEN/8, x4, x1, x2)

inst_82321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:246963*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246963*0 + 3*145*FLEN/8, x4, x1, x2)

inst_82322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:246966*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246966*0 + 3*146*FLEN/8, x4, x1, x2)

inst_82323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:246969*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246969*0 + 3*147*FLEN/8, x4, x1, x2)

inst_82324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:246972*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246972*0 + 3*148*FLEN/8, x4, x1, x2)

inst_82325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:246975*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246975*0 + 3*149*FLEN/8, x4, x1, x2)

inst_82326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:246978*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246978*0 + 3*150*FLEN/8, x4, x1, x2)

inst_82327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:246981*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246981*0 + 3*151*FLEN/8, x4, x1, x2)

inst_82328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:246984*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246984*0 + 3*152*FLEN/8, x4, x1, x2)

inst_82329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:246987*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246987*0 + 3*153*FLEN/8, x4, x1, x2)

inst_82330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:246990*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246990*0 + 3*154*FLEN/8, x4, x1, x2)

inst_82331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:246993*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246993*0 + 3*155*FLEN/8, x4, x1, x2)

inst_82332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:246996*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246996*0 + 3*156*FLEN/8, x4, x1, x2)

inst_82333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:246999*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246999*0 + 3*157*FLEN/8, x4, x1, x2)

inst_82334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:247002*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247002*0 + 3*158*FLEN/8, x4, x1, x2)

inst_82335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:247005*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247005*0 + 3*159*FLEN/8, x4, x1, x2)

inst_82336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:247008*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247008*0 + 3*160*FLEN/8, x4, x1, x2)

inst_82337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:247011*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247011*0 + 3*161*FLEN/8, x4, x1, x2)

inst_82338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:247014*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247014*0 + 3*162*FLEN/8, x4, x1, x2)

inst_82339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:247017*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247017*0 + 3*163*FLEN/8, x4, x1, x2)

inst_82340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:247020*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247020*0 + 3*164*FLEN/8, x4, x1, x2)

inst_82341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:247023*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247023*0 + 3*165*FLEN/8, x4, x1, x2)

inst_82342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:247026*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247026*0 + 3*166*FLEN/8, x4, x1, x2)

inst_82343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:247029*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247029*0 + 3*167*FLEN/8, x4, x1, x2)

inst_82344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:247032*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247032*0 + 3*168*FLEN/8, x4, x1, x2)

inst_82345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:247035*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247035*0 + 3*169*FLEN/8, x4, x1, x2)

inst_82346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:247038*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247038*0 + 3*170*FLEN/8, x4, x1, x2)

inst_82347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:247041*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247041*0 + 3*171*FLEN/8, x4, x1, x2)

inst_82348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:247044*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247044*0 + 3*172*FLEN/8, x4, x1, x2)

inst_82349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:247047*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247047*0 + 3*173*FLEN/8, x4, x1, x2)

inst_82350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:247050*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247050*0 + 3*174*FLEN/8, x4, x1, x2)

inst_82351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:247053*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247053*0 + 3*175*FLEN/8, x4, x1, x2)

inst_82352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:247056*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247056*0 + 3*176*FLEN/8, x4, x1, x2)

inst_82353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:247059*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247059*0 + 3*177*FLEN/8, x4, x1, x2)

inst_82354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:247062*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247062*0 + 3*178*FLEN/8, x4, x1, x2)

inst_82355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:247065*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247065*0 + 3*179*FLEN/8, x4, x1, x2)

inst_82356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:247068*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247068*0 + 3*180*FLEN/8, x4, x1, x2)

inst_82357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:247071*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247071*0 + 3*181*FLEN/8, x4, x1, x2)

inst_82358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:247074*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247074*0 + 3*182*FLEN/8, x4, x1, x2)

inst_82359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:247077*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247077*0 + 3*183*FLEN/8, x4, x1, x2)

inst_82360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:247080*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247080*0 + 3*184*FLEN/8, x4, x1, x2)

inst_82361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:247083*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247083*0 + 3*185*FLEN/8, x4, x1, x2)

inst_82362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:247086*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247086*0 + 3*186*FLEN/8, x4, x1, x2)

inst_82363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:247089*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247089*0 + 3*187*FLEN/8, x4, x1, x2)

inst_82364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:247092*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247092*0 + 3*188*FLEN/8, x4, x1, x2)

inst_82365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:247095*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247095*0 + 3*189*FLEN/8, x4, x1, x2)

inst_82366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:247098*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247098*0 + 3*190*FLEN/8, x4, x1, x2)

inst_82367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:247101*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247101*0 + 3*191*FLEN/8, x4, x1, x2)

inst_82368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:247104*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247104*0 + 3*192*FLEN/8, x4, x1, x2)

inst_82369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:247107*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247107*0 + 3*193*FLEN/8, x4, x1, x2)

inst_82370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:247110*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247110*0 + 3*194*FLEN/8, x4, x1, x2)

inst_82371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:247113*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247113*0 + 3*195*FLEN/8, x4, x1, x2)

inst_82372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:247116*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247116*0 + 3*196*FLEN/8, x4, x1, x2)

inst_82373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:247119*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247119*0 + 3*197*FLEN/8, x4, x1, x2)

inst_82374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:247122*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247122*0 + 3*198*FLEN/8, x4, x1, x2)

inst_82375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:247125*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247125*0 + 3*199*FLEN/8, x4, x1, x2)

inst_82376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:247128*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247128*0 + 3*200*FLEN/8, x4, x1, x2)

inst_82377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:247131*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247131*0 + 3*201*FLEN/8, x4, x1, x2)

inst_82378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:247134*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247134*0 + 3*202*FLEN/8, x4, x1, x2)

inst_82379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:247137*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247137*0 + 3*203*FLEN/8, x4, x1, x2)

inst_82380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:247140*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247140*0 + 3*204*FLEN/8, x4, x1, x2)

inst_82381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:247143*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247143*0 + 3*205*FLEN/8, x4, x1, x2)

inst_82382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:247146*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247146*0 + 3*206*FLEN/8, x4, x1, x2)

inst_82383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:247149*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247149*0 + 3*207*FLEN/8, x4, x1, x2)

inst_82384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:247152*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247152*0 + 3*208*FLEN/8, x4, x1, x2)

inst_82385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:247155*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247155*0 + 3*209*FLEN/8, x4, x1, x2)

inst_82386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:247158*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247158*0 + 3*210*FLEN/8, x4, x1, x2)

inst_82387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:247161*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247161*0 + 3*211*FLEN/8, x4, x1, x2)

inst_82388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:247164*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247164*0 + 3*212*FLEN/8, x4, x1, x2)

inst_82389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:247167*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247167*0 + 3*213*FLEN/8, x4, x1, x2)

inst_82390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:247170*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247170*0 + 3*214*FLEN/8, x4, x1, x2)

inst_82391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:247173*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247173*0 + 3*215*FLEN/8, x4, x1, x2)

inst_82392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:247176*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247176*0 + 3*216*FLEN/8, x4, x1, x2)

inst_82393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:247179*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247179*0 + 3*217*FLEN/8, x4, x1, x2)

inst_82394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:247182*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247182*0 + 3*218*FLEN/8, x4, x1, x2)

inst_82395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:247185*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247185*0 + 3*219*FLEN/8, x4, x1, x2)

inst_82396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:247188*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247188*0 + 3*220*FLEN/8, x4, x1, x2)

inst_82397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9459cd65fbaac; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:247191*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247191*0 + 3*221*FLEN/8, x4, x1, x2)

inst_82398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:247194*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247194*0 + 3*222*FLEN/8, x4, x1, x2)

inst_82399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:247197*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247197*0 + 3*223*FLEN/8, x4, x1, x2)

inst_82400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:247200*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247200*0 + 3*224*FLEN/8, x4, x1, x2)

inst_82401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:247203*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247203*0 + 3*225*FLEN/8, x4, x1, x2)

inst_82402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:247206*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247206*0 + 3*226*FLEN/8, x4, x1, x2)

inst_82403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:247209*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247209*0 + 3*227*FLEN/8, x4, x1, x2)

inst_82404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:247212*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247212*0 + 3*228*FLEN/8, x4, x1, x2)

inst_82405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:247215*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247215*0 + 3*229*FLEN/8, x4, x1, x2)

inst_82406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:247218*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247218*0 + 3*230*FLEN/8, x4, x1, x2)

inst_82407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:247221*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247221*0 + 3*231*FLEN/8, x4, x1, x2)

inst_82408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:247224*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247224*0 + 3*232*FLEN/8, x4, x1, x2)

inst_82409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:247227*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247227*0 + 3*233*FLEN/8, x4, x1, x2)

inst_82410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:247230*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247230*0 + 3*234*FLEN/8, x4, x1, x2)

inst_82411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:247233*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247233*0 + 3*235*FLEN/8, x4, x1, x2)

inst_82412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:247236*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247236*0 + 3*236*FLEN/8, x4, x1, x2)

inst_82413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:247239*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247239*0 + 3*237*FLEN/8, x4, x1, x2)

inst_82414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:247242*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247242*0 + 3*238*FLEN/8, x4, x1, x2)

inst_82415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:247245*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247245*0 + 3*239*FLEN/8, x4, x1, x2)

inst_82416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:247248*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247248*0 + 3*240*FLEN/8, x4, x1, x2)

inst_82417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:247251*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247251*0 + 3*241*FLEN/8, x4, x1, x2)

inst_82418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:247254*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247254*0 + 3*242*FLEN/8, x4, x1, x2)

inst_82419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:247257*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247257*0 + 3*243*FLEN/8, x4, x1, x2)

inst_82420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:247260*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247260*0 + 3*244*FLEN/8, x4, x1, x2)

inst_82421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:247263*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247263*0 + 3*245*FLEN/8, x4, x1, x2)

inst_82422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:247266*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247266*0 + 3*246*FLEN/8, x4, x1, x2)

inst_82423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:247269*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247269*0 + 3*247*FLEN/8, x4, x1, x2)

inst_82424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:247272*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247272*0 + 3*248*FLEN/8, x4, x1, x2)

inst_82425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:247275*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247275*0 + 3*249*FLEN/8, x4, x1, x2)

inst_82426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:247278*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247278*0 + 3*250*FLEN/8, x4, x1, x2)

inst_82427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:247281*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247281*0 + 3*251*FLEN/8, x4, x1, x2)

inst_82428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:247284*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247284*0 + 3*252*FLEN/8, x4, x1, x2)

inst_82429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:247287*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247287*0 + 3*253*FLEN/8, x4, x1, x2)

inst_82430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:247290*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247290*0 + 3*254*FLEN/8, x4, x1, x2)

inst_82431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:247293*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247293*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_82432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:247296*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247296*0 + 3*256*FLEN/8, x4, x1, x2)

inst_82433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:247299*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247299*0 + 3*257*FLEN/8, x4, x1, x2)

inst_82434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:247302*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247302*0 + 3*258*FLEN/8, x4, x1, x2)

inst_82435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:247305*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247305*0 + 3*259*FLEN/8, x4, x1, x2)

inst_82436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:247308*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247308*0 + 3*260*FLEN/8, x4, x1, x2)

inst_82437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:247311*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247311*0 + 3*261*FLEN/8, x4, x1, x2)

inst_82438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:247314*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247314*0 + 3*262*FLEN/8, x4, x1, x2)

inst_82439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:247317*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247317*0 + 3*263*FLEN/8, x4, x1, x2)

inst_82440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:247320*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247320*0 + 3*264*FLEN/8, x4, x1, x2)

inst_82441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:247323*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247323*0 + 3*265*FLEN/8, x4, x1, x2)

inst_82442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:247326*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247326*0 + 3*266*FLEN/8, x4, x1, x2)

inst_82443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:247329*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247329*0 + 3*267*FLEN/8, x4, x1, x2)

inst_82444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:247332*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247332*0 + 3*268*FLEN/8, x4, x1, x2)

inst_82445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:247335*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247335*0 + 3*269*FLEN/8, x4, x1, x2)

inst_82446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:247338*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247338*0 + 3*270*FLEN/8, x4, x1, x2)

inst_82447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:247341*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247341*0 + 3*271*FLEN/8, x4, x1, x2)

inst_82448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:247344*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247344*0 + 3*272*FLEN/8, x4, x1, x2)

inst_82449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:247347*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247347*0 + 3*273*FLEN/8, x4, x1, x2)

inst_82450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:247350*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247350*0 + 3*274*FLEN/8, x4, x1, x2)

inst_82451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:247353*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247353*0 + 3*275*FLEN/8, x4, x1, x2)

inst_82452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:247356*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247356*0 + 3*276*FLEN/8, x4, x1, x2)

inst_82453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:247359*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247359*0 + 3*277*FLEN/8, x4, x1, x2)

inst_82454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:247362*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247362*0 + 3*278*FLEN/8, x4, x1, x2)

inst_82455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:247365*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247365*0 + 3*279*FLEN/8, x4, x1, x2)

inst_82456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:247368*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247368*0 + 3*280*FLEN/8, x4, x1, x2)

inst_82457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:247371*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247371*0 + 3*281*FLEN/8, x4, x1, x2)

inst_82458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:247374*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247374*0 + 3*282*FLEN/8, x4, x1, x2)

inst_82459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:247377*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247377*0 + 3*283*FLEN/8, x4, x1, x2)

inst_82460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:247380*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247380*0 + 3*284*FLEN/8, x4, x1, x2)

inst_82461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:247383*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247383*0 + 3*285*FLEN/8, x4, x1, x2)

inst_82462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:247386*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247386*0 + 3*286*FLEN/8, x4, x1, x2)

inst_82463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:247389*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247389*0 + 3*287*FLEN/8, x4, x1, x2)

inst_82464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:247392*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247392*0 + 3*288*FLEN/8, x4, x1, x2)

inst_82465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:247395*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247395*0 + 3*289*FLEN/8, x4, x1, x2)

inst_82466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:247398*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247398*0 + 3*290*FLEN/8, x4, x1, x2)

inst_82467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:247401*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247401*0 + 3*291*FLEN/8, x4, x1, x2)

inst_82468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:247404*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247404*0 + 3*292*FLEN/8, x4, x1, x2)

inst_82469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:247407*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247407*0 + 3*293*FLEN/8, x4, x1, x2)

inst_82470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:247410*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247410*0 + 3*294*FLEN/8, x4, x1, x2)

inst_82471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:247413*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247413*0 + 3*295*FLEN/8, x4, x1, x2)

inst_82472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:247416*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247416*0 + 3*296*FLEN/8, x4, x1, x2)

inst_82473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:247419*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247419*0 + 3*297*FLEN/8, x4, x1, x2)

inst_82474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:247422*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247422*0 + 3*298*FLEN/8, x4, x1, x2)

inst_82475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:247425*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247425*0 + 3*299*FLEN/8, x4, x1, x2)

inst_82476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:247428*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247428*0 + 3*300*FLEN/8, x4, x1, x2)

inst_82477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:247431*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247431*0 + 3*301*FLEN/8, x4, x1, x2)

inst_82478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:247434*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247434*0 + 3*302*FLEN/8, x4, x1, x2)

inst_82479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:247437*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247437*0 + 3*303*FLEN/8, x4, x1, x2)

inst_82480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:247440*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247440*0 + 3*304*FLEN/8, x4, x1, x2)

inst_82481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:247443*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247443*0 + 3*305*FLEN/8, x4, x1, x2)

inst_82482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:247446*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247446*0 + 3*306*FLEN/8, x4, x1, x2)

inst_82483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:247449*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247449*0 + 3*307*FLEN/8, x4, x1, x2)

inst_82484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:247452*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247452*0 + 3*308*FLEN/8, x4, x1, x2)

inst_82485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:247455*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247455*0 + 3*309*FLEN/8, x4, x1, x2)

inst_82486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:247458*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247458*0 + 3*310*FLEN/8, x4, x1, x2)

inst_82487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:247461*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247461*0 + 3*311*FLEN/8, x4, x1, x2)

inst_82488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:247464*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247464*0 + 3*312*FLEN/8, x4, x1, x2)

inst_82489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:247467*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247467*0 + 3*313*FLEN/8, x4, x1, x2)

inst_82490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:247470*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247470*0 + 3*314*FLEN/8, x4, x1, x2)

inst_82491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:247473*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247473*0 + 3*315*FLEN/8, x4, x1, x2)

inst_82492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:247476*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247476*0 + 3*316*FLEN/8, x4, x1, x2)

inst_82493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:247479*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247479*0 + 3*317*FLEN/8, x4, x1, x2)

inst_82494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:247482*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247482*0 + 3*318*FLEN/8, x4, x1, x2)

inst_82495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:247485*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247485*0 + 3*319*FLEN/8, x4, x1, x2)

inst_82496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:247488*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247488*0 + 3*320*FLEN/8, x4, x1, x2)

inst_82497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:247491*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247491*0 + 3*321*FLEN/8, x4, x1, x2)

inst_82498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:247494*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247494*0 + 3*322*FLEN/8, x4, x1, x2)

inst_82499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:247497*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247497*0 + 3*323*FLEN/8, x4, x1, x2)

inst_82500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:247500*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247500*0 + 3*324*FLEN/8, x4, x1, x2)

inst_82501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:247503*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247503*0 + 3*325*FLEN/8, x4, x1, x2)

inst_82502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:247506*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247506*0 + 3*326*FLEN/8, x4, x1, x2)

inst_82503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:247509*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247509*0 + 3*327*FLEN/8, x4, x1, x2)

inst_82504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:247512*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247512*0 + 3*328*FLEN/8, x4, x1, x2)

inst_82505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:247515*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247515*0 + 3*329*FLEN/8, x4, x1, x2)

inst_82506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:247518*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247518*0 + 3*330*FLEN/8, x4, x1, x2)

inst_82507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:247521*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247521*0 + 3*331*FLEN/8, x4, x1, x2)

inst_82508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:247524*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247524*0 + 3*332*FLEN/8, x4, x1, x2)

inst_82509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:247527*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247527*0 + 3*333*FLEN/8, x4, x1, x2)

inst_82510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:247530*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247530*0 + 3*334*FLEN/8, x4, x1, x2)

inst_82511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:247533*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247533*0 + 3*335*FLEN/8, x4, x1, x2)

inst_82512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:247536*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247536*0 + 3*336*FLEN/8, x4, x1, x2)

inst_82513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:247539*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247539*0 + 3*337*FLEN/8, x4, x1, x2)

inst_82514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:247542*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247542*0 + 3*338*FLEN/8, x4, x1, x2)

inst_82515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:247545*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247545*0 + 3*339*FLEN/8, x4, x1, x2)

inst_82516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:247548*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247548*0 + 3*340*FLEN/8, x4, x1, x2)

inst_82517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:247551*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247551*0 + 3*341*FLEN/8, x4, x1, x2)

inst_82518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:247554*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247554*0 + 3*342*FLEN/8, x4, x1, x2)

inst_82519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:247557*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247557*0 + 3*343*FLEN/8, x4, x1, x2)

inst_82520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:247560*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247560*0 + 3*344*FLEN/8, x4, x1, x2)

inst_82521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:247563*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247563*0 + 3*345*FLEN/8, x4, x1, x2)

inst_82522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:247566*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247566*0 + 3*346*FLEN/8, x4, x1, x2)

inst_82523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x94c731cba3bb6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa94c731cba3bb6; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:247569*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247569*0 + 3*347*FLEN/8, x4, x1, x2)

inst_82524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:247572*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247572*0 + 3*348*FLEN/8, x4, x1, x2)

inst_82525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:247575*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247575*0 + 3*349*FLEN/8, x4, x1, x2)

inst_82526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:247578*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247578*0 + 3*350*FLEN/8, x4, x1, x2)

inst_82527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:247581*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247581*0 + 3*351*FLEN/8, x4, x1, x2)

inst_82528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:247584*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247584*0 + 3*352*FLEN/8, x4, x1, x2)

inst_82529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:247587*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247587*0 + 3*353*FLEN/8, x4, x1, x2)

inst_82530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:247590*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247590*0 + 3*354*FLEN/8, x4, x1, x2)

inst_82531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:247593*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247593*0 + 3*355*FLEN/8, x4, x1, x2)

inst_82532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:247596*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247596*0 + 3*356*FLEN/8, x4, x1, x2)

inst_82533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:247599*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247599*0 + 3*357*FLEN/8, x4, x1, x2)

inst_82534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:247602*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247602*0 + 3*358*FLEN/8, x4, x1, x2)

inst_82535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:247605*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247605*0 + 3*359*FLEN/8, x4, x1, x2)

inst_82536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:247608*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247608*0 + 3*360*FLEN/8, x4, x1, x2)

inst_82537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:247611*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247611*0 + 3*361*FLEN/8, x4, x1, x2)

inst_82538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:247614*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247614*0 + 3*362*FLEN/8, x4, x1, x2)

inst_82539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:247617*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247617*0 + 3*363*FLEN/8, x4, x1, x2)

inst_82540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:247620*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247620*0 + 3*364*FLEN/8, x4, x1, x2)

inst_82541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:247623*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247623*0 + 3*365*FLEN/8, x4, x1, x2)

inst_82542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:247626*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247626*0 + 3*366*FLEN/8, x4, x1, x2)

inst_82543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:247629*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247629*0 + 3*367*FLEN/8, x4, x1, x2)

inst_82544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:247632*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247632*0 + 3*368*FLEN/8, x4, x1, x2)

inst_82545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:247635*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247635*0 + 3*369*FLEN/8, x4, x1, x2)

inst_82546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000000000; valaddr_reg:x3; val_offset:247638*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247638*0 + 3*370*FLEN/8, x4, x1, x2)

inst_82547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000000001; valaddr_reg:x3; val_offset:247641*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247641*0 + 3*371*FLEN/8, x4, x1, x2)

inst_82548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000000003; valaddr_reg:x3; val_offset:247644*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247644*0 + 3*372*FLEN/8, x4, x1, x2)

inst_82549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000000007; valaddr_reg:x3; val_offset:247647*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247647*0 + 3*373*FLEN/8, x4, x1, x2)

inst_82550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000000000f; valaddr_reg:x3; val_offset:247650*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247650*0 + 3*374*FLEN/8, x4, x1, x2)

inst_82551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000000001f; valaddr_reg:x3; val_offset:247653*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247653*0 + 3*375*FLEN/8, x4, x1, x2)

inst_82552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000000003f; valaddr_reg:x3; val_offset:247656*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247656*0 + 3*376*FLEN/8, x4, x1, x2)

inst_82553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000000007f; valaddr_reg:x3; val_offset:247659*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247659*0 + 3*377*FLEN/8, x4, x1, x2)

inst_82554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000000000ff; valaddr_reg:x3; val_offset:247662*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247662*0 + 3*378*FLEN/8, x4, x1, x2)

inst_82555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000000001ff; valaddr_reg:x3; val_offset:247665*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247665*0 + 3*379*FLEN/8, x4, x1, x2)

inst_82556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000000003ff; valaddr_reg:x3; val_offset:247668*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247668*0 + 3*380*FLEN/8, x4, x1, x2)

inst_82557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000000007ff; valaddr_reg:x3; val_offset:247671*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247671*0 + 3*381*FLEN/8, x4, x1, x2)

inst_82558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000000fff; valaddr_reg:x3; val_offset:247674*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247674*0 + 3*382*FLEN/8, x4, x1, x2)

inst_82559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000001fff; valaddr_reg:x3; val_offset:247677*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247677*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_82560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000003fff; valaddr_reg:x3; val_offset:247680*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247680*0 + 3*384*FLEN/8, x4, x1, x2)

inst_82561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000007fff; valaddr_reg:x3; val_offset:247683*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247683*0 + 3*385*FLEN/8, x4, x1, x2)

inst_82562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000000ffff; valaddr_reg:x3; val_offset:247686*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247686*0 + 3*386*FLEN/8, x4, x1, x2)

inst_82563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000001ffff; valaddr_reg:x3; val_offset:247689*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247689*0 + 3*387*FLEN/8, x4, x1, x2)

inst_82564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000003ffff; valaddr_reg:x3; val_offset:247692*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247692*0 + 3*388*FLEN/8, x4, x1, x2)

inst_82565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000007ffff; valaddr_reg:x3; val_offset:247695*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247695*0 + 3*389*FLEN/8, x4, x1, x2)

inst_82566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000000fffff; valaddr_reg:x3; val_offset:247698*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247698*0 + 3*390*FLEN/8, x4, x1, x2)

inst_82567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000001fffff; valaddr_reg:x3; val_offset:247701*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247701*0 + 3*391*FLEN/8, x4, x1, x2)

inst_82568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000003fffff; valaddr_reg:x3; val_offset:247704*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247704*0 + 3*392*FLEN/8, x4, x1, x2)

inst_82569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000007fffff; valaddr_reg:x3; val_offset:247707*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247707*0 + 3*393*FLEN/8, x4, x1, x2)

inst_82570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000000ffffff; valaddr_reg:x3; val_offset:247710*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247710*0 + 3*394*FLEN/8, x4, x1, x2)

inst_82571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000001ffffff; valaddr_reg:x3; val_offset:247713*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247713*0 + 3*395*FLEN/8, x4, x1, x2)

inst_82572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000003ffffff; valaddr_reg:x3; val_offset:247716*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247716*0 + 3*396*FLEN/8, x4, x1, x2)

inst_82573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000007ffffff; valaddr_reg:x3; val_offset:247719*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247719*0 + 3*397*FLEN/8, x4, x1, x2)

inst_82574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000000fffffff; valaddr_reg:x3; val_offset:247722*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247722*0 + 3*398*FLEN/8, x4, x1, x2)

inst_82575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000001fffffff; valaddr_reg:x3; val_offset:247725*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247725*0 + 3*399*FLEN/8, x4, x1, x2)

inst_82576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000003fffffff; valaddr_reg:x3; val_offset:247728*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247728*0 + 3*400*FLEN/8, x4, x1, x2)

inst_82577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000007fffffff; valaddr_reg:x3; val_offset:247731*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247731*0 + 3*401*FLEN/8, x4, x1, x2)

inst_82578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00000ffffffff; valaddr_reg:x3; val_offset:247734*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247734*0 + 3*402*FLEN/8, x4, x1, x2)

inst_82579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00001ffffffff; valaddr_reg:x3; val_offset:247737*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247737*0 + 3*403*FLEN/8, x4, x1, x2)

inst_82580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00003ffffffff; valaddr_reg:x3; val_offset:247740*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247740*0 + 3*404*FLEN/8, x4, x1, x2)

inst_82581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00007ffffffff; valaddr_reg:x3; val_offset:247743*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247743*0 + 3*405*FLEN/8, x4, x1, x2)

inst_82582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0000fffffffff; valaddr_reg:x3; val_offset:247746*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247746*0 + 3*406*FLEN/8, x4, x1, x2)

inst_82583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0001fffffffff; valaddr_reg:x3; val_offset:247749*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247749*0 + 3*407*FLEN/8, x4, x1, x2)

inst_82584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0003fffffffff; valaddr_reg:x3; val_offset:247752*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247752*0 + 3*408*FLEN/8, x4, x1, x2)

inst_82585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0007fffffffff; valaddr_reg:x3; val_offset:247755*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247755*0 + 3*409*FLEN/8, x4, x1, x2)

inst_82586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d000ffffffffff; valaddr_reg:x3; val_offset:247758*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247758*0 + 3*410*FLEN/8, x4, x1, x2)

inst_82587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d001ffffffffff; valaddr_reg:x3; val_offset:247761*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247761*0 + 3*411*FLEN/8, x4, x1, x2)

inst_82588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d003ffffffffff; valaddr_reg:x3; val_offset:247764*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247764*0 + 3*412*FLEN/8, x4, x1, x2)

inst_82589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d007ffffffffff; valaddr_reg:x3; val_offset:247767*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247767*0 + 3*413*FLEN/8, x4, x1, x2)

inst_82590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d00fffffffffff; valaddr_reg:x3; val_offset:247770*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247770*0 + 3*414*FLEN/8, x4, x1, x2)

inst_82591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d01fffffffffff; valaddr_reg:x3; val_offset:247773*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247773*0 + 3*415*FLEN/8, x4, x1, x2)

inst_82592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d03fffffffffff; valaddr_reg:x3; val_offset:247776*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247776*0 + 3*416*FLEN/8, x4, x1, x2)

inst_82593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d07fffffffffff; valaddr_reg:x3; val_offset:247779*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247779*0 + 3*417*FLEN/8, x4, x1, x2)

inst_82594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d0ffffffffffff; valaddr_reg:x3; val_offset:247782*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247782*0 + 3*418*FLEN/8, x4, x1, x2)

inst_82595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d1ffffffffffff; valaddr_reg:x3; val_offset:247785*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247785*0 + 3*419*FLEN/8, x4, x1, x2)

inst_82596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d3ffffffffffff; valaddr_reg:x3; val_offset:247788*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247788*0 + 3*420*FLEN/8, x4, x1, x2)

inst_82597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d7ffffffffffff; valaddr_reg:x3; val_offset:247791*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247791*0 + 3*421*FLEN/8, x4, x1, x2)

inst_82598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82d8000000000000; valaddr_reg:x3; val_offset:247794*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247794*0 + 3*422*FLEN/8, x4, x1, x2)

inst_82599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dc000000000000; valaddr_reg:x3; val_offset:247797*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247797*0 + 3*423*FLEN/8, x4, x1, x2)

inst_82600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82de000000000000; valaddr_reg:x3; val_offset:247800*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247800*0 + 3*424*FLEN/8, x4, x1, x2)

inst_82601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82df000000000000; valaddr_reg:x3; val_offset:247803*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247803*0 + 3*425*FLEN/8, x4, x1, x2)

inst_82602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82df800000000000; valaddr_reg:x3; val_offset:247806*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247806*0 + 3*426*FLEN/8, x4, x1, x2)

inst_82603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfc00000000000; valaddr_reg:x3; val_offset:247809*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247809*0 + 3*427*FLEN/8, x4, x1, x2)

inst_82604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfe00000000000; valaddr_reg:x3; val_offset:247812*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247812*0 + 3*428*FLEN/8, x4, x1, x2)

inst_82605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dff00000000000; valaddr_reg:x3; val_offset:247815*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247815*0 + 3*429*FLEN/8, x4, x1, x2)

inst_82606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dff80000000000; valaddr_reg:x3; val_offset:247818*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247818*0 + 3*430*FLEN/8, x4, x1, x2)

inst_82607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffc0000000000; valaddr_reg:x3; val_offset:247821*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247821*0 + 3*431*FLEN/8, x4, x1, x2)

inst_82608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffe0000000000; valaddr_reg:x3; val_offset:247824*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247824*0 + 3*432*FLEN/8, x4, x1, x2)

inst_82609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfff0000000000; valaddr_reg:x3; val_offset:247827*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247827*0 + 3*433*FLEN/8, x4, x1, x2)

inst_82610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfff8000000000; valaddr_reg:x3; val_offset:247830*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247830*0 + 3*434*FLEN/8, x4, x1, x2)

inst_82611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffc000000000; valaddr_reg:x3; val_offset:247833*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247833*0 + 3*435*FLEN/8, x4, x1, x2)

inst_82612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffe000000000; valaddr_reg:x3; val_offset:247836*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247836*0 + 3*436*FLEN/8, x4, x1, x2)

inst_82613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffff000000000; valaddr_reg:x3; val_offset:247839*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247839*0 + 3*437*FLEN/8, x4, x1, x2)

inst_82614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffff800000000; valaddr_reg:x3; val_offset:247842*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247842*0 + 3*438*FLEN/8, x4, x1, x2)

inst_82615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffc00000000; valaddr_reg:x3; val_offset:247845*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247845*0 + 3*439*FLEN/8, x4, x1, x2)

inst_82616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffe00000000; valaddr_reg:x3; val_offset:247848*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247848*0 + 3*440*FLEN/8, x4, x1, x2)

inst_82617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffff00000000; valaddr_reg:x3; val_offset:247851*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247851*0 + 3*441*FLEN/8, x4, x1, x2)

inst_82618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffff80000000; valaddr_reg:x3; val_offset:247854*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247854*0 + 3*442*FLEN/8, x4, x1, x2)

inst_82619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffc0000000; valaddr_reg:x3; val_offset:247857*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247857*0 + 3*443*FLEN/8, x4, x1, x2)

inst_82620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffe0000000; valaddr_reg:x3; val_offset:247860*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247860*0 + 3*444*FLEN/8, x4, x1, x2)

inst_82621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffff0000000; valaddr_reg:x3; val_offset:247863*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247863*0 + 3*445*FLEN/8, x4, x1, x2)

inst_82622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffff8000000; valaddr_reg:x3; val_offset:247866*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247866*0 + 3*446*FLEN/8, x4, x1, x2)

inst_82623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffc000000; valaddr_reg:x3; val_offset:247869*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247869*0 + 3*447*FLEN/8, x4, x1, x2)

inst_82624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffe000000; valaddr_reg:x3; val_offset:247872*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247872*0 + 3*448*FLEN/8, x4, x1, x2)

inst_82625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffff000000; valaddr_reg:x3; val_offset:247875*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247875*0 + 3*449*FLEN/8, x4, x1, x2)

inst_82626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffff800000; valaddr_reg:x3; val_offset:247878*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247878*0 + 3*450*FLEN/8, x4, x1, x2)

inst_82627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffc00000; valaddr_reg:x3; val_offset:247881*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247881*0 + 3*451*FLEN/8, x4, x1, x2)

inst_82628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffe00000; valaddr_reg:x3; val_offset:247884*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247884*0 + 3*452*FLEN/8, x4, x1, x2)

inst_82629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffff00000; valaddr_reg:x3; val_offset:247887*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247887*0 + 3*453*FLEN/8, x4, x1, x2)

inst_82630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffff80000; valaddr_reg:x3; val_offset:247890*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247890*0 + 3*454*FLEN/8, x4, x1, x2)

inst_82631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffc0000; valaddr_reg:x3; val_offset:247893*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247893*0 + 3*455*FLEN/8, x4, x1, x2)

inst_82632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffe0000; valaddr_reg:x3; val_offset:247896*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247896*0 + 3*456*FLEN/8, x4, x1, x2)

inst_82633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffff0000; valaddr_reg:x3; val_offset:247899*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247899*0 + 3*457*FLEN/8, x4, x1, x2)

inst_82634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffff8000; valaddr_reg:x3; val_offset:247902*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247902*0 + 3*458*FLEN/8, x4, x1, x2)

inst_82635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffc000; valaddr_reg:x3; val_offset:247905*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247905*0 + 3*459*FLEN/8, x4, x1, x2)

inst_82636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffe000; valaddr_reg:x3; val_offset:247908*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247908*0 + 3*460*FLEN/8, x4, x1, x2)

inst_82637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffff000; valaddr_reg:x3; val_offset:247911*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247911*0 + 3*461*FLEN/8, x4, x1, x2)

inst_82638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffff800; valaddr_reg:x3; val_offset:247914*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247914*0 + 3*462*FLEN/8, x4, x1, x2)

inst_82639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffc00; valaddr_reg:x3; val_offset:247917*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247917*0 + 3*463*FLEN/8, x4, x1, x2)

inst_82640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffe00; valaddr_reg:x3; val_offset:247920*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247920*0 + 3*464*FLEN/8, x4, x1, x2)

inst_82641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffff00; valaddr_reg:x3; val_offset:247923*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247923*0 + 3*465*FLEN/8, x4, x1, x2)

inst_82642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffff80; valaddr_reg:x3; val_offset:247926*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247926*0 + 3*466*FLEN/8, x4, x1, x2)

inst_82643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffffc0; valaddr_reg:x3; val_offset:247929*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247929*0 + 3*467*FLEN/8, x4, x1, x2)

inst_82644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffffe0; valaddr_reg:x3; val_offset:247932*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247932*0 + 3*468*FLEN/8, x4, x1, x2)

inst_82645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffff0; valaddr_reg:x3; val_offset:247935*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247935*0 + 3*469*FLEN/8, x4, x1, x2)

inst_82646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffff8; valaddr_reg:x3; val_offset:247938*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247938*0 + 3*470*FLEN/8, x4, x1, x2)

inst_82647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffffc; valaddr_reg:x3; val_offset:247941*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247941*0 + 3*471*FLEN/8, x4, x1, x2)

inst_82648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dffffffffffffe; valaddr_reg:x3; val_offset:247944*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247944*0 + 3*472*FLEN/8, x4, x1, x2)

inst_82649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x969bddff5c2f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa969bddff5c2f6; op2val:0x8000;
op3val:0x82dfffffffffffff; valaddr_reg:x3; val_offset:247947*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247947*0 + 3*473*FLEN/8, x4, x1, x2)

inst_82650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000000000; valaddr_reg:x3; val_offset:247950*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247950*0 + 3*474*FLEN/8, x4, x1, x2)

inst_82651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000000001; valaddr_reg:x3; val_offset:247953*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247953*0 + 3*475*FLEN/8, x4, x1, x2)

inst_82652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000000003; valaddr_reg:x3; val_offset:247956*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247956*0 + 3*476*FLEN/8, x4, x1, x2)

inst_82653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000000007; valaddr_reg:x3; val_offset:247959*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247959*0 + 3*477*FLEN/8, x4, x1, x2)

inst_82654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000000000f; valaddr_reg:x3; val_offset:247962*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247962*0 + 3*478*FLEN/8, x4, x1, x2)

inst_82655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000000001f; valaddr_reg:x3; val_offset:247965*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247965*0 + 3*479*FLEN/8, x4, x1, x2)

inst_82656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000000003f; valaddr_reg:x3; val_offset:247968*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247968*0 + 3*480*FLEN/8, x4, x1, x2)

inst_82657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000000007f; valaddr_reg:x3; val_offset:247971*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247971*0 + 3*481*FLEN/8, x4, x1, x2)

inst_82658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000000000ff; valaddr_reg:x3; val_offset:247974*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247974*0 + 3*482*FLEN/8, x4, x1, x2)

inst_82659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000000001ff; valaddr_reg:x3; val_offset:247977*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247977*0 + 3*483*FLEN/8, x4, x1, x2)

inst_82660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000000003ff; valaddr_reg:x3; val_offset:247980*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247980*0 + 3*484*FLEN/8, x4, x1, x2)

inst_82661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000000007ff; valaddr_reg:x3; val_offset:247983*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247983*0 + 3*485*FLEN/8, x4, x1, x2)

inst_82662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000000fff; valaddr_reg:x3; val_offset:247986*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247986*0 + 3*486*FLEN/8, x4, x1, x2)

inst_82663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000001fff; valaddr_reg:x3; val_offset:247989*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247989*0 + 3*487*FLEN/8, x4, x1, x2)

inst_82664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000003fff; valaddr_reg:x3; val_offset:247992*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247992*0 + 3*488*FLEN/8, x4, x1, x2)

inst_82665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000007fff; valaddr_reg:x3; val_offset:247995*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247995*0 + 3*489*FLEN/8, x4, x1, x2)

inst_82666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000000ffff; valaddr_reg:x3; val_offset:247998*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 247998*0 + 3*490*FLEN/8, x4, x1, x2)

inst_82667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000001ffff; valaddr_reg:x3; val_offset:248001*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248001*0 + 3*491*FLEN/8, x4, x1, x2)

inst_82668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000003ffff; valaddr_reg:x3; val_offset:248004*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248004*0 + 3*492*FLEN/8, x4, x1, x2)

inst_82669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000007ffff; valaddr_reg:x3; val_offset:248007*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248007*0 + 3*493*FLEN/8, x4, x1, x2)

inst_82670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000000fffff; valaddr_reg:x3; val_offset:248010*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248010*0 + 3*494*FLEN/8, x4, x1, x2)

inst_82671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000001fffff; valaddr_reg:x3; val_offset:248013*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248013*0 + 3*495*FLEN/8, x4, x1, x2)

inst_82672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000003fffff; valaddr_reg:x3; val_offset:248016*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248016*0 + 3*496*FLEN/8, x4, x1, x2)

inst_82673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000007fffff; valaddr_reg:x3; val_offset:248019*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248019*0 + 3*497*FLEN/8, x4, x1, x2)

inst_82674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000000ffffff; valaddr_reg:x3; val_offset:248022*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248022*0 + 3*498*FLEN/8, x4, x1, x2)

inst_82675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000001ffffff; valaddr_reg:x3; val_offset:248025*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248025*0 + 3*499*FLEN/8, x4, x1, x2)

inst_82676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000003ffffff; valaddr_reg:x3; val_offset:248028*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248028*0 + 3*500*FLEN/8, x4, x1, x2)

inst_82677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000007ffffff; valaddr_reg:x3; val_offset:248031*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248031*0 + 3*501*FLEN/8, x4, x1, x2)

inst_82678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000000fffffff; valaddr_reg:x3; val_offset:248034*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248034*0 + 3*502*FLEN/8, x4, x1, x2)

inst_82679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000001fffffff; valaddr_reg:x3; val_offset:248037*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248037*0 + 3*503*FLEN/8, x4, x1, x2)

inst_82680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000003fffffff; valaddr_reg:x3; val_offset:248040*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248040*0 + 3*504*FLEN/8, x4, x1, x2)

inst_82681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000007fffffff; valaddr_reg:x3; val_offset:248043*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248043*0 + 3*505*FLEN/8, x4, x1, x2)

inst_82682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00000ffffffff; valaddr_reg:x3; val_offset:248046*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248046*0 + 3*506*FLEN/8, x4, x1, x2)

inst_82683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00001ffffffff; valaddr_reg:x3; val_offset:248049*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248049*0 + 3*507*FLEN/8, x4, x1, x2)

inst_82684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00003ffffffff; valaddr_reg:x3; val_offset:248052*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248052*0 + 3*508*FLEN/8, x4, x1, x2)

inst_82685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00007ffffffff; valaddr_reg:x3; val_offset:248055*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248055*0 + 3*509*FLEN/8, x4, x1, x2)

inst_82686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0000fffffffff; valaddr_reg:x3; val_offset:248058*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248058*0 + 3*510*FLEN/8, x4, x1, x2)

inst_82687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0001fffffffff; valaddr_reg:x3; val_offset:248061*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248061*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_82688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0003fffffffff; valaddr_reg:x3; val_offset:248064*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248064*0 + 3*512*FLEN/8, x4, x1, x2)

inst_82689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0007fffffffff; valaddr_reg:x3; val_offset:248067*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248067*0 + 3*513*FLEN/8, x4, x1, x2)

inst_82690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec000ffffffffff; valaddr_reg:x3; val_offset:248070*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248070*0 + 3*514*FLEN/8, x4, x1, x2)

inst_82691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec001ffffffffff; valaddr_reg:x3; val_offset:248073*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248073*0 + 3*515*FLEN/8, x4, x1, x2)

inst_82692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec003ffffffffff; valaddr_reg:x3; val_offset:248076*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248076*0 + 3*516*FLEN/8, x4, x1, x2)

inst_82693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec007ffffffffff; valaddr_reg:x3; val_offset:248079*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248079*0 + 3*517*FLEN/8, x4, x1, x2)

inst_82694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec00fffffffffff; valaddr_reg:x3; val_offset:248082*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248082*0 + 3*518*FLEN/8, x4, x1, x2)

inst_82695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec01fffffffffff; valaddr_reg:x3; val_offset:248085*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248085*0 + 3*519*FLEN/8, x4, x1, x2)

inst_82696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec03fffffffffff; valaddr_reg:x3; val_offset:248088*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248088*0 + 3*520*FLEN/8, x4, x1, x2)

inst_82697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec07fffffffffff; valaddr_reg:x3; val_offset:248091*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248091*0 + 3*521*FLEN/8, x4, x1, x2)

inst_82698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec0ffffffffffff; valaddr_reg:x3; val_offset:248094*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248094*0 + 3*522*FLEN/8, x4, x1, x2)

inst_82699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec1ffffffffffff; valaddr_reg:x3; val_offset:248097*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248097*0 + 3*523*FLEN/8, x4, x1, x2)

inst_82700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec3ffffffffffff; valaddr_reg:x3; val_offset:248100*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248100*0 + 3*524*FLEN/8, x4, x1, x2)

inst_82701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec7ffffffffffff; valaddr_reg:x3; val_offset:248103*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248103*0 + 3*525*FLEN/8, x4, x1, x2)

inst_82702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbec8000000000000; valaddr_reg:x3; val_offset:248106*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248106*0 + 3*526*FLEN/8, x4, x1, x2)

inst_82703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecc000000000000; valaddr_reg:x3; val_offset:248109*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248109*0 + 3*527*FLEN/8, x4, x1, x2)

inst_82704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbece000000000000; valaddr_reg:x3; val_offset:248112*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248112*0 + 3*528*FLEN/8, x4, x1, x2)

inst_82705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecf000000000000; valaddr_reg:x3; val_offset:248115*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248115*0 + 3*529*FLEN/8, x4, x1, x2)

inst_82706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecf800000000000; valaddr_reg:x3; val_offset:248118*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248118*0 + 3*530*FLEN/8, x4, x1, x2)

inst_82707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfc00000000000; valaddr_reg:x3; val_offset:248121*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248121*0 + 3*531*FLEN/8, x4, x1, x2)

inst_82708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfe00000000000; valaddr_reg:x3; val_offset:248124*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248124*0 + 3*532*FLEN/8, x4, x1, x2)

inst_82709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecff00000000000; valaddr_reg:x3; val_offset:248127*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248127*0 + 3*533*FLEN/8, x4, x1, x2)

inst_82710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecff80000000000; valaddr_reg:x3; val_offset:248130*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248130*0 + 3*534*FLEN/8, x4, x1, x2)

inst_82711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffc0000000000; valaddr_reg:x3; val_offset:248133*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248133*0 + 3*535*FLEN/8, x4, x1, x2)

inst_82712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffe0000000000; valaddr_reg:x3; val_offset:248136*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248136*0 + 3*536*FLEN/8, x4, x1, x2)

inst_82713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfff0000000000; valaddr_reg:x3; val_offset:248139*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248139*0 + 3*537*FLEN/8, x4, x1, x2)

inst_82714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfff8000000000; valaddr_reg:x3; val_offset:248142*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248142*0 + 3*538*FLEN/8, x4, x1, x2)

inst_82715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffc000000000; valaddr_reg:x3; val_offset:248145*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248145*0 + 3*539*FLEN/8, x4, x1, x2)

inst_82716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffe000000000; valaddr_reg:x3; val_offset:248148*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248148*0 + 3*540*FLEN/8, x4, x1, x2)

inst_82717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffff000000000; valaddr_reg:x3; val_offset:248151*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248151*0 + 3*541*FLEN/8, x4, x1, x2)

inst_82718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffff800000000; valaddr_reg:x3; val_offset:248154*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248154*0 + 3*542*FLEN/8, x4, x1, x2)

inst_82719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffc00000000; valaddr_reg:x3; val_offset:248157*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248157*0 + 3*543*FLEN/8, x4, x1, x2)

inst_82720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffe00000000; valaddr_reg:x3; val_offset:248160*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248160*0 + 3*544*FLEN/8, x4, x1, x2)

inst_82721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffff00000000; valaddr_reg:x3; val_offset:248163*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248163*0 + 3*545*FLEN/8, x4, x1, x2)

inst_82722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffff80000000; valaddr_reg:x3; val_offset:248166*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248166*0 + 3*546*FLEN/8, x4, x1, x2)

inst_82723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffc0000000; valaddr_reg:x3; val_offset:248169*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248169*0 + 3*547*FLEN/8, x4, x1, x2)

inst_82724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffe0000000; valaddr_reg:x3; val_offset:248172*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248172*0 + 3*548*FLEN/8, x4, x1, x2)

inst_82725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffff0000000; valaddr_reg:x3; val_offset:248175*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248175*0 + 3*549*FLEN/8, x4, x1, x2)

inst_82726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffff8000000; valaddr_reg:x3; val_offset:248178*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248178*0 + 3*550*FLEN/8, x4, x1, x2)

inst_82727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffc000000; valaddr_reg:x3; val_offset:248181*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248181*0 + 3*551*FLEN/8, x4, x1, x2)

inst_82728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffe000000; valaddr_reg:x3; val_offset:248184*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248184*0 + 3*552*FLEN/8, x4, x1, x2)

inst_82729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffff000000; valaddr_reg:x3; val_offset:248187*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248187*0 + 3*553*FLEN/8, x4, x1, x2)

inst_82730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffff800000; valaddr_reg:x3; val_offset:248190*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248190*0 + 3*554*FLEN/8, x4, x1, x2)

inst_82731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffc00000; valaddr_reg:x3; val_offset:248193*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248193*0 + 3*555*FLEN/8, x4, x1, x2)

inst_82732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffe00000; valaddr_reg:x3; val_offset:248196*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248196*0 + 3*556*FLEN/8, x4, x1, x2)

inst_82733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffff00000; valaddr_reg:x3; val_offset:248199*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248199*0 + 3*557*FLEN/8, x4, x1, x2)

inst_82734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffff80000; valaddr_reg:x3; val_offset:248202*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248202*0 + 3*558*FLEN/8, x4, x1, x2)

inst_82735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffc0000; valaddr_reg:x3; val_offset:248205*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248205*0 + 3*559*FLEN/8, x4, x1, x2)

inst_82736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffe0000; valaddr_reg:x3; val_offset:248208*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248208*0 + 3*560*FLEN/8, x4, x1, x2)

inst_82737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffff0000; valaddr_reg:x3; val_offset:248211*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248211*0 + 3*561*FLEN/8, x4, x1, x2)

inst_82738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffff8000; valaddr_reg:x3; val_offset:248214*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248214*0 + 3*562*FLEN/8, x4, x1, x2)

inst_82739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffc000; valaddr_reg:x3; val_offset:248217*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248217*0 + 3*563*FLEN/8, x4, x1, x2)

inst_82740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffe000; valaddr_reg:x3; val_offset:248220*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248220*0 + 3*564*FLEN/8, x4, x1, x2)

inst_82741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffff000; valaddr_reg:x3; val_offset:248223*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248223*0 + 3*565*FLEN/8, x4, x1, x2)

inst_82742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffff800; valaddr_reg:x3; val_offset:248226*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248226*0 + 3*566*FLEN/8, x4, x1, x2)

inst_82743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffc00; valaddr_reg:x3; val_offset:248229*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248229*0 + 3*567*FLEN/8, x4, x1, x2)

inst_82744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffe00; valaddr_reg:x3; val_offset:248232*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248232*0 + 3*568*FLEN/8, x4, x1, x2)

inst_82745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffff00; valaddr_reg:x3; val_offset:248235*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248235*0 + 3*569*FLEN/8, x4, x1, x2)

inst_82746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffff80; valaddr_reg:x3; val_offset:248238*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248238*0 + 3*570*FLEN/8, x4, x1, x2)

inst_82747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffffc0; valaddr_reg:x3; val_offset:248241*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248241*0 + 3*571*FLEN/8, x4, x1, x2)

inst_82748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffffe0; valaddr_reg:x3; val_offset:248244*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248244*0 + 3*572*FLEN/8, x4, x1, x2)

inst_82749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffff0; valaddr_reg:x3; val_offset:248247*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248247*0 + 3*573*FLEN/8, x4, x1, x2)

inst_82750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffff8; valaddr_reg:x3; val_offset:248250*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248250*0 + 3*574*FLEN/8, x4, x1, x2)

inst_82751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffffc; valaddr_reg:x3; val_offset:248253*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248253*0 + 3*575*FLEN/8, x4, x1, x2)

inst_82752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecffffffffffffe; valaddr_reg:x3; val_offset:248256*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248256*0 + 3*576*FLEN/8, x4, x1, x2)

inst_82753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbecfffffffffffff; valaddr_reg:x3; val_offset:248259*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248259*0 + 3*577*FLEN/8, x4, x1, x2)

inst_82754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:248262*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248262*0 + 3*578*FLEN/8, x4, x1, x2)

inst_82755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:248265*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248265*0 + 3*579*FLEN/8, x4, x1, x2)

inst_82756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:248268*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248268*0 + 3*580*FLEN/8, x4, x1, x2)

inst_82757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:248271*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248271*0 + 3*581*FLEN/8, x4, x1, x2)

inst_82758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:248274*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248274*0 + 3*582*FLEN/8, x4, x1, x2)

inst_82759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:248277*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248277*0 + 3*583*FLEN/8, x4, x1, x2)

inst_82760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:248280*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248280*0 + 3*584*FLEN/8, x4, x1, x2)

inst_82761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:248283*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248283*0 + 3*585*FLEN/8, x4, x1, x2)

inst_82762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:248286*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248286*0 + 3*586*FLEN/8, x4, x1, x2)

inst_82763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:248289*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248289*0 + 3*587*FLEN/8, x4, x1, x2)

inst_82764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:248292*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248292*0 + 3*588*FLEN/8, x4, x1, x2)

inst_82765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:248295*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248295*0 + 3*589*FLEN/8, x4, x1, x2)

inst_82766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:248298*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248298*0 + 3*590*FLEN/8, x4, x1, x2)

inst_82767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:248301*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248301*0 + 3*591*FLEN/8, x4, x1, x2)

inst_82768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:248304*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248304*0 + 3*592*FLEN/8, x4, x1, x2)

inst_82769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:248307*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248307*0 + 3*593*FLEN/8, x4, x1, x2)

inst_82770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:248310*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248310*0 + 3*594*FLEN/8, x4, x1, x2)

inst_82771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:248313*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248313*0 + 3*595*FLEN/8, x4, x1, x2)

inst_82772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:248316*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248316*0 + 3*596*FLEN/8, x4, x1, x2)

inst_82773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:248319*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248319*0 + 3*597*FLEN/8, x4, x1, x2)

inst_82774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:248322*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248322*0 + 3*598*FLEN/8, x4, x1, x2)

inst_82775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x41ac1bf41f4bb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97787813faa38; op2val:0x9fc41ac1bf41f4bb;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:248325*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248325*0 + 3*599*FLEN/8, x4, x1, x2)

inst_82776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:248328*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248328*0 + 3*600*FLEN/8, x4, x1, x2)

inst_82777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:248331*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248331*0 + 3*601*FLEN/8, x4, x1, x2)

inst_82778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:248334*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248334*0 + 3*602*FLEN/8, x4, x1, x2)

inst_82779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:248337*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248337*0 + 3*603*FLEN/8, x4, x1, x2)

inst_82780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:248340*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248340*0 + 3*604*FLEN/8, x4, x1, x2)

inst_82781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:248343*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248343*0 + 3*605*FLEN/8, x4, x1, x2)

inst_82782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:248346*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248346*0 + 3*606*FLEN/8, x4, x1, x2)

inst_82783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:248349*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248349*0 + 3*607*FLEN/8, x4, x1, x2)

inst_82784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:248352*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248352*0 + 3*608*FLEN/8, x4, x1, x2)

inst_82785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:248355*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248355*0 + 3*609*FLEN/8, x4, x1, x2)

inst_82786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:248358*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248358*0 + 3*610*FLEN/8, x4, x1, x2)

inst_82787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:248361*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248361*0 + 3*611*FLEN/8, x4, x1, x2)

inst_82788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:248364*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248364*0 + 3*612*FLEN/8, x4, x1, x2)

inst_82789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:248367*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248367*0 + 3*613*FLEN/8, x4, x1, x2)

inst_82790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:248370*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248370*0 + 3*614*FLEN/8, x4, x1, x2)

inst_82791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:248373*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248373*0 + 3*615*FLEN/8, x4, x1, x2)

inst_82792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:248376*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248376*0 + 3*616*FLEN/8, x4, x1, x2)

inst_82793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:248379*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248379*0 + 3*617*FLEN/8, x4, x1, x2)

inst_82794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:248382*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248382*0 + 3*618*FLEN/8, x4, x1, x2)

inst_82795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:248385*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248385*0 + 3*619*FLEN/8, x4, x1, x2)

inst_82796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:248388*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248388*0 + 3*620*FLEN/8, x4, x1, x2)

inst_82797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:248391*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248391*0 + 3*621*FLEN/8, x4, x1, x2)

inst_82798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:248394*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248394*0 + 3*622*FLEN/8, x4, x1, x2)

inst_82799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:248397*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248397*0 + 3*623*FLEN/8, x4, x1, x2)

inst_82800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:248400*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248400*0 + 3*624*FLEN/8, x4, x1, x2)

inst_82801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:248403*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248403*0 + 3*625*FLEN/8, x4, x1, x2)

inst_82802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:248406*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248406*0 + 3*626*FLEN/8, x4, x1, x2)

inst_82803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:248409*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248409*0 + 3*627*FLEN/8, x4, x1, x2)

inst_82804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:248412*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248412*0 + 3*628*FLEN/8, x4, x1, x2)

inst_82805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:248415*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248415*0 + 3*629*FLEN/8, x4, x1, x2)

inst_82806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:248418*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248418*0 + 3*630*FLEN/8, x4, x1, x2)

inst_82807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:248421*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248421*0 + 3*631*FLEN/8, x4, x1, x2)

inst_82808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:248424*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248424*0 + 3*632*FLEN/8, x4, x1, x2)

inst_82809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:248427*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248427*0 + 3*633*FLEN/8, x4, x1, x2)

inst_82810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:248430*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248430*0 + 3*634*FLEN/8, x4, x1, x2)

inst_82811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:248433*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248433*0 + 3*635*FLEN/8, x4, x1, x2)

inst_82812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:248436*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248436*0 + 3*636*FLEN/8, x4, x1, x2)

inst_82813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:248439*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248439*0 + 3*637*FLEN/8, x4, x1, x2)

inst_82814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:248442*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248442*0 + 3*638*FLEN/8, x4, x1, x2)

inst_82815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:248445*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248445*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_82816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:248448*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248448*0 + 3*640*FLEN/8, x4, x1, x2)

inst_82817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:248451*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248451*0 + 3*641*FLEN/8, x4, x1, x2)

inst_82818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:248454*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248454*0 + 3*642*FLEN/8, x4, x1, x2)

inst_82819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:248457*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248457*0 + 3*643*FLEN/8, x4, x1, x2)

inst_82820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:248460*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248460*0 + 3*644*FLEN/8, x4, x1, x2)

inst_82821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:248463*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248463*0 + 3*645*FLEN/8, x4, x1, x2)

inst_82822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:248466*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248466*0 + 3*646*FLEN/8, x4, x1, x2)

inst_82823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:248469*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248469*0 + 3*647*FLEN/8, x4, x1, x2)

inst_82824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:248472*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248472*0 + 3*648*FLEN/8, x4, x1, x2)

inst_82825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:248475*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248475*0 + 3*649*FLEN/8, x4, x1, x2)

inst_82826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:248478*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248478*0 + 3*650*FLEN/8, x4, x1, x2)

inst_82827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:248481*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248481*0 + 3*651*FLEN/8, x4, x1, x2)

inst_82828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:248484*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248484*0 + 3*652*FLEN/8, x4, x1, x2)

inst_82829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:248487*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248487*0 + 3*653*FLEN/8, x4, x1, x2)

inst_82830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:248490*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248490*0 + 3*654*FLEN/8, x4, x1, x2)

inst_82831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:248493*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248493*0 + 3*655*FLEN/8, x4, x1, x2)

inst_82832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:248496*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248496*0 + 3*656*FLEN/8, x4, x1, x2)

inst_82833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:248499*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248499*0 + 3*657*FLEN/8, x4, x1, x2)

inst_82834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:248502*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248502*0 + 3*658*FLEN/8, x4, x1, x2)

inst_82835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:248505*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248505*0 + 3*659*FLEN/8, x4, x1, x2)

inst_82836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:248508*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248508*0 + 3*660*FLEN/8, x4, x1, x2)

inst_82837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:248511*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248511*0 + 3*661*FLEN/8, x4, x1, x2)

inst_82838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:248514*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248514*0 + 3*662*FLEN/8, x4, x1, x2)

inst_82839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:248517*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248517*0 + 3*663*FLEN/8, x4, x1, x2)

inst_82840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:248520*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248520*0 + 3*664*FLEN/8, x4, x1, x2)

inst_82841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:248523*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248523*0 + 3*665*FLEN/8, x4, x1, x2)

inst_82842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:248526*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248526*0 + 3*666*FLEN/8, x4, x1, x2)

inst_82843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:248529*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248529*0 + 3*667*FLEN/8, x4, x1, x2)

inst_82844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:248532*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248532*0 + 3*668*FLEN/8, x4, x1, x2)

inst_82845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:248535*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248535*0 + 3*669*FLEN/8, x4, x1, x2)

inst_82846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:248538*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248538*0 + 3*670*FLEN/8, x4, x1, x2)

inst_82847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:248541*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248541*0 + 3*671*FLEN/8, x4, x1, x2)

inst_82848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:248544*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248544*0 + 3*672*FLEN/8, x4, x1, x2)

inst_82849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:248547*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248547*0 + 3*673*FLEN/8, x4, x1, x2)

inst_82850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:248550*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248550*0 + 3*674*FLEN/8, x4, x1, x2)

inst_82851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:248553*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248553*0 + 3*675*FLEN/8, x4, x1, x2)

inst_82852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:248556*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248556*0 + 3*676*FLEN/8, x4, x1, x2)

inst_82853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:248559*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248559*0 + 3*677*FLEN/8, x4, x1, x2)

inst_82854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:248562*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248562*0 + 3*678*FLEN/8, x4, x1, x2)

inst_82855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:248565*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248565*0 + 3*679*FLEN/8, x4, x1, x2)

inst_82856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:248568*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248568*0 + 3*680*FLEN/8, x4, x1, x2)

inst_82857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:248571*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248571*0 + 3*681*FLEN/8, x4, x1, x2)

inst_82858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:248574*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248574*0 + 3*682*FLEN/8, x4, x1, x2)

inst_82859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:248577*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248577*0 + 3*683*FLEN/8, x4, x1, x2)

inst_82860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:248580*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248580*0 + 3*684*FLEN/8, x4, x1, x2)

inst_82861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:248583*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248583*0 + 3*685*FLEN/8, x4, x1, x2)

inst_82862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:248586*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248586*0 + 3*686*FLEN/8, x4, x1, x2)

inst_82863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:248589*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248589*0 + 3*687*FLEN/8, x4, x1, x2)

inst_82864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:248592*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248592*0 + 3*688*FLEN/8, x4, x1, x2)

inst_82865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:248595*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248595*0 + 3*689*FLEN/8, x4, x1, x2)

inst_82866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:248598*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248598*0 + 3*690*FLEN/8, x4, x1, x2)

inst_82867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:248601*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248601*0 + 3*691*FLEN/8, x4, x1, x2)

inst_82868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:248604*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248604*0 + 3*692*FLEN/8, x4, x1, x2)

inst_82869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:248607*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248607*0 + 3*693*FLEN/8, x4, x1, x2)

inst_82870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:248610*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248610*0 + 3*694*FLEN/8, x4, x1, x2)

inst_82871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:248613*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248613*0 + 3*695*FLEN/8, x4, x1, x2)

inst_82872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:248616*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248616*0 + 3*696*FLEN/8, x4, x1, x2)

inst_82873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:248619*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248619*0 + 3*697*FLEN/8, x4, x1, x2)

inst_82874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:248622*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248622*0 + 3*698*FLEN/8, x4, x1, x2)

inst_82875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:248625*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248625*0 + 3*699*FLEN/8, x4, x1, x2)

inst_82876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:248628*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248628*0 + 3*700*FLEN/8, x4, x1, x2)

inst_82877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:248631*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248631*0 + 3*701*FLEN/8, x4, x1, x2)

inst_82878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:248634*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248634*0 + 3*702*FLEN/8, x4, x1, x2)

inst_82879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:248637*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248637*0 + 3*703*FLEN/8, x4, x1, x2)

inst_82880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:248640*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248640*0 + 3*704*FLEN/8, x4, x1, x2)

inst_82881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:248643*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248643*0 + 3*705*FLEN/8, x4, x1, x2)

inst_82882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:248646*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248646*0 + 3*706*FLEN/8, x4, x1, x2)

inst_82883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:248649*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248649*0 + 3*707*FLEN/8, x4, x1, x2)

inst_82884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:248652*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248652*0 + 3*708*FLEN/8, x4, x1, x2)

inst_82885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:248655*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248655*0 + 3*709*FLEN/8, x4, x1, x2)

inst_82886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:248658*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248658*0 + 3*710*FLEN/8, x4, x1, x2)

inst_82887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:248661*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248661*0 + 3*711*FLEN/8, x4, x1, x2)

inst_82888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:248664*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248664*0 + 3*712*FLEN/8, x4, x1, x2)

inst_82889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:248667*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248667*0 + 3*713*FLEN/8, x4, x1, x2)

inst_82890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:248670*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248670*0 + 3*714*FLEN/8, x4, x1, x2)

inst_82891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:248673*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248673*0 + 3*715*FLEN/8, x4, x1, x2)

inst_82892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:248676*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248676*0 + 3*716*FLEN/8, x4, x1, x2)

inst_82893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:248679*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248679*0 + 3*717*FLEN/8, x4, x1, x2)

inst_82894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:248682*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248682*0 + 3*718*FLEN/8, x4, x1, x2)

inst_82895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:248685*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248685*0 + 3*719*FLEN/8, x4, x1, x2)

inst_82896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:248688*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248688*0 + 3*720*FLEN/8, x4, x1, x2)

inst_82897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:248691*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248691*0 + 3*721*FLEN/8, x4, x1, x2)

inst_82898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:248694*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248694*0 + 3*722*FLEN/8, x4, x1, x2)

inst_82899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:248697*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248697*0 + 3*723*FLEN/8, x4, x1, x2)

inst_82900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:248700*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248700*0 + 3*724*FLEN/8, x4, x1, x2)

inst_82901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa97f0ea9a89f82; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:248703*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248703*0 + 3*725*FLEN/8, x4, x1, x2)

inst_82902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000000000; valaddr_reg:x3; val_offset:248706*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248706*0 + 3*726*FLEN/8, x4, x1, x2)

inst_82903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000000001; valaddr_reg:x3; val_offset:248709*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248709*0 + 3*727*FLEN/8, x4, x1, x2)

inst_82904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000000003; valaddr_reg:x3; val_offset:248712*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248712*0 + 3*728*FLEN/8, x4, x1, x2)

inst_82905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000000007; valaddr_reg:x3; val_offset:248715*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248715*0 + 3*729*FLEN/8, x4, x1, x2)

inst_82906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000000000f; valaddr_reg:x3; val_offset:248718*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248718*0 + 3*730*FLEN/8, x4, x1, x2)

inst_82907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000000001f; valaddr_reg:x3; val_offset:248721*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248721*0 + 3*731*FLEN/8, x4, x1, x2)

inst_82908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000000003f; valaddr_reg:x3; val_offset:248724*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248724*0 + 3*732*FLEN/8, x4, x1, x2)

inst_82909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000000007f; valaddr_reg:x3; val_offset:248727*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248727*0 + 3*733*FLEN/8, x4, x1, x2)

inst_82910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000000000ff; valaddr_reg:x3; val_offset:248730*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248730*0 + 3*734*FLEN/8, x4, x1, x2)

inst_82911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000000001ff; valaddr_reg:x3; val_offset:248733*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248733*0 + 3*735*FLEN/8, x4, x1, x2)

inst_82912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000000003ff; valaddr_reg:x3; val_offset:248736*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248736*0 + 3*736*FLEN/8, x4, x1, x2)

inst_82913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000000007ff; valaddr_reg:x3; val_offset:248739*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248739*0 + 3*737*FLEN/8, x4, x1, x2)

inst_82914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000000fff; valaddr_reg:x3; val_offset:248742*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248742*0 + 3*738*FLEN/8, x4, x1, x2)

inst_82915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000001fff; valaddr_reg:x3; val_offset:248745*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248745*0 + 3*739*FLEN/8, x4, x1, x2)

inst_82916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000003fff; valaddr_reg:x3; val_offset:248748*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248748*0 + 3*740*FLEN/8, x4, x1, x2)

inst_82917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000007fff; valaddr_reg:x3; val_offset:248751*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248751*0 + 3*741*FLEN/8, x4, x1, x2)

inst_82918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000000ffff; valaddr_reg:x3; val_offset:248754*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248754*0 + 3*742*FLEN/8, x4, x1, x2)

inst_82919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000001ffff; valaddr_reg:x3; val_offset:248757*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248757*0 + 3*743*FLEN/8, x4, x1, x2)

inst_82920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000003ffff; valaddr_reg:x3; val_offset:248760*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248760*0 + 3*744*FLEN/8, x4, x1, x2)

inst_82921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000007ffff; valaddr_reg:x3; val_offset:248763*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248763*0 + 3*745*FLEN/8, x4, x1, x2)

inst_82922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000000fffff; valaddr_reg:x3; val_offset:248766*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248766*0 + 3*746*FLEN/8, x4, x1, x2)

inst_82923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000001fffff; valaddr_reg:x3; val_offset:248769*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248769*0 + 3*747*FLEN/8, x4, x1, x2)

inst_82924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000003fffff; valaddr_reg:x3; val_offset:248772*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248772*0 + 3*748*FLEN/8, x4, x1, x2)

inst_82925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000007fffff; valaddr_reg:x3; val_offset:248775*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248775*0 + 3*749*FLEN/8, x4, x1, x2)

inst_82926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000000ffffff; valaddr_reg:x3; val_offset:248778*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248778*0 + 3*750*FLEN/8, x4, x1, x2)

inst_82927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000001ffffff; valaddr_reg:x3; val_offset:248781*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248781*0 + 3*751*FLEN/8, x4, x1, x2)

inst_82928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000003ffffff; valaddr_reg:x3; val_offset:248784*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248784*0 + 3*752*FLEN/8, x4, x1, x2)

inst_82929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000007ffffff; valaddr_reg:x3; val_offset:248787*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248787*0 + 3*753*FLEN/8, x4, x1, x2)

inst_82930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000000fffffff; valaddr_reg:x3; val_offset:248790*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248790*0 + 3*754*FLEN/8, x4, x1, x2)

inst_82931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000001fffffff; valaddr_reg:x3; val_offset:248793*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248793*0 + 3*755*FLEN/8, x4, x1, x2)

inst_82932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000003fffffff; valaddr_reg:x3; val_offset:248796*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248796*0 + 3*756*FLEN/8, x4, x1, x2)

inst_82933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000007fffffff; valaddr_reg:x3; val_offset:248799*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248799*0 + 3*757*FLEN/8, x4, x1, x2)

inst_82934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500000ffffffff; valaddr_reg:x3; val_offset:248802*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248802*0 + 3*758*FLEN/8, x4, x1, x2)

inst_82935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500001ffffffff; valaddr_reg:x3; val_offset:248805*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248805*0 + 3*759*FLEN/8, x4, x1, x2)

inst_82936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500003ffffffff; valaddr_reg:x3; val_offset:248808*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248808*0 + 3*760*FLEN/8, x4, x1, x2)

inst_82937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf500007ffffffff; valaddr_reg:x3; val_offset:248811*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248811*0 + 3*761*FLEN/8, x4, x1, x2)

inst_82938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50000fffffffff; valaddr_reg:x3; val_offset:248814*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248814*0 + 3*762*FLEN/8, x4, x1, x2)

inst_82939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50001fffffffff; valaddr_reg:x3; val_offset:248817*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248817*0 + 3*763*FLEN/8, x4, x1, x2)

inst_82940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50003fffffffff; valaddr_reg:x3; val_offset:248820*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248820*0 + 3*764*FLEN/8, x4, x1, x2)

inst_82941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf50007fffffffff; valaddr_reg:x3; val_offset:248823*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248823*0 + 3*765*FLEN/8, x4, x1, x2)

inst_82942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5000ffffffffff; valaddr_reg:x3; val_offset:248826*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248826*0 + 3*766*FLEN/8, x4, x1, x2)

inst_82943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x40db38a88c1b2 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9881bee04c84c; op2val:0x9fc40db38a88c1b2;
op3val:0xbf5001ffffffffff; valaddr_reg:x3; val_offset:248829*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248829*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893105684429790186,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6893117244581067436,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6893124761954171830,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448128,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448129,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448131,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448135,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448143,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448159,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448191,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448255,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448383,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448639,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086449151,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086450175,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086452223,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086456319,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086464511,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086480895,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086513663,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086579199,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086710271,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086972415,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020087496703,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020088545279,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020090642431,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020094836735,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020103225343,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020120002559,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020153556991,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020220665855,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020354883583,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020623319039,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034021160189951,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034022233931775,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034024381415423,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034028676382719,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034037266317311,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034054446186495,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034088805924863,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034157525401599,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034294964355071,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034569842262015,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426035119598075903,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426036219109703679,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426038418132959231,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426042816179470335,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426051612272492543,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426069204458536959,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426104388830625791,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426174757574803455,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426315495063158783,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426596970039869439,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9427159919993290751,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133375,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133376,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429411719806976000,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429974669760397312,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430256144737107968,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430396882225463296,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430467250969640960,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430502435341729792,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430520027527774208,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430528823620796416,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430533221667307520,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430535420690563072,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430536520202190848,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537069958004736,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537344835911680,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537482274865152,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537550994341888,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537585354080256,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537602533949440,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537611123884032,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537615418851328,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537617566334976,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537618640076800,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619176947712,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619445383168,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619579600896,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619646709760,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619680264192,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619697041408,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619705430016,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619709624320,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619711721472,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619712770048,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713294336,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713556480,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713687552,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713753088,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713785856,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713802240,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713810432,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713814528,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713816576,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713817600,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818112,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818368,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818496,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818560,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818592,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818608,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818616,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818620,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818622,64,FLEN)
NAN_BOXED(6893156968894415606,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818623,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753792,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753793,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753795,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753799,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753807,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753823,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753855,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734753919,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734754047,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734754303,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734754815,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734755839,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734757887,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734761983,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734770175,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734786559,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734819327,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062734884863,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062735015935,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062735278079,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062735802367,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062736850943,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062738948095,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062743142399,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062751531007,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062768308223,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062801862655,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986062868971519,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986063003189247,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986063271624703,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986063808495615,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986064882237439,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986067029721087,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986071324688383,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986079914622975,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986097094492159,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986131454230527,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986200173707263,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986337612660735,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744986612490567679,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744987162246381567,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744988261758009343,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744990460781264895,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13744994858827775999,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745003654920798207,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745021247106842623,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745056431478931455,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745126800223109119,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745267537711464447,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13745549012688175103,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13746111962641596415,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13747237862548439039,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13747237862548439040,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13748363762455281664,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13748926712408702976,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749208187385413632,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749348924873768960,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749419293617946624,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749454477990035456,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749472070176079872,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749480866269102080,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749485264315613184,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749487463338868736,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749488562850496512,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489112606310400,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489387484217344,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489524923170816,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489593642647552,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489628002385920,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489645182255104,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489653772189696,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489658067156992,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489660214640640,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489661288382464,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489661825253376,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662093688832,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662227906560,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662295015424,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662328569856,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662345347072,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662353735680,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662357929984,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662360027136,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662361075712,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662361600000,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662361862144,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662361993216,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362058752,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362091520,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362107904,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362116096,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362120192,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362122240,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362123264,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362123776,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124032,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124160,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124224,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124256,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124272,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124280,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124284,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124286,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13749489662362124287,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893172128539978296,64,FLEN)
NAN_BOXED(11512355966905611451,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6893180405619924866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088256,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088257,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088259,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088263,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088271,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088287,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088319,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088383,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088511,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381088767,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381089279,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381090303,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381092351,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381096447,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381104639,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381121023,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381153791,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381219327,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381350399,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459381612543,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459382136831,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459383185407,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459385282559,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459389476863,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459397865471,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459414642687,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459448197119,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459515305983,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459649523711,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518459917959167,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518460454830079,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518461528571903,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518463676055551,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518467971022847,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518476560957439,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518493740826623,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518528100564991,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518596820041727,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785518734258995199,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785519009136902143,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785519558892716031,64,FLEN)
NAN_BOXED(6893190358206040140,64,FLEN)
NAN_BOXED(11512341612240355762,64,FLEN)
NAN_BOXED(13785520658404343807,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
