
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_4608:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2c3ffffffffffff; valaddr_reg:x3; val_offset:13824*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13824*0 + 3*0*FLEN/8, x4, x1, x2)

inst_4609:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2c7ffffffffffff; valaddr_reg:x3; val_offset:13827*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13827*0 + 3*1*FLEN/8, x4, x1, x2)

inst_4610:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2c8000000000000; valaddr_reg:x3; val_offset:13830*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13830*0 + 3*2*FLEN/8, x4, x1, x2)

inst_4611:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cc000000000000; valaddr_reg:x3; val_offset:13833*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13833*0 + 3*3*FLEN/8, x4, x1, x2)

inst_4612:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2ce000000000000; valaddr_reg:x3; val_offset:13836*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13836*0 + 3*4*FLEN/8, x4, x1, x2)

inst_4613:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cf000000000000; valaddr_reg:x3; val_offset:13839*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13839*0 + 3*5*FLEN/8, x4, x1, x2)

inst_4614:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cf800000000000; valaddr_reg:x3; val_offset:13842*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13842*0 + 3*6*FLEN/8, x4, x1, x2)

inst_4615:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfc00000000000; valaddr_reg:x3; val_offset:13845*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13845*0 + 3*7*FLEN/8, x4, x1, x2)

inst_4616:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfe00000000000; valaddr_reg:x3; val_offset:13848*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13848*0 + 3*8*FLEN/8, x4, x1, x2)

inst_4617:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cff00000000000; valaddr_reg:x3; val_offset:13851*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13851*0 + 3*9*FLEN/8, x4, x1, x2)

inst_4618:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cff80000000000; valaddr_reg:x3; val_offset:13854*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13854*0 + 3*10*FLEN/8, x4, x1, x2)

inst_4619:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffc0000000000; valaddr_reg:x3; val_offset:13857*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13857*0 + 3*11*FLEN/8, x4, x1, x2)

inst_4620:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffe0000000000; valaddr_reg:x3; val_offset:13860*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13860*0 + 3*12*FLEN/8, x4, x1, x2)

inst_4621:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfff0000000000; valaddr_reg:x3; val_offset:13863*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13863*0 + 3*13*FLEN/8, x4, x1, x2)

inst_4622:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfff8000000000; valaddr_reg:x3; val_offset:13866*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13866*0 + 3*14*FLEN/8, x4, x1, x2)

inst_4623:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffc000000000; valaddr_reg:x3; val_offset:13869*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13869*0 + 3*15*FLEN/8, x4, x1, x2)

inst_4624:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffe000000000; valaddr_reg:x3; val_offset:13872*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13872*0 + 3*16*FLEN/8, x4, x1, x2)

inst_4625:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffff000000000; valaddr_reg:x3; val_offset:13875*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13875*0 + 3*17*FLEN/8, x4, x1, x2)

inst_4626:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffff800000000; valaddr_reg:x3; val_offset:13878*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13878*0 + 3*18*FLEN/8, x4, x1, x2)

inst_4627:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffc00000000; valaddr_reg:x3; val_offset:13881*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13881*0 + 3*19*FLEN/8, x4, x1, x2)

inst_4628:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffe00000000; valaddr_reg:x3; val_offset:13884*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13884*0 + 3*20*FLEN/8, x4, x1, x2)

inst_4629:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffff00000000; valaddr_reg:x3; val_offset:13887*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13887*0 + 3*21*FLEN/8, x4, x1, x2)

inst_4630:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffff80000000; valaddr_reg:x3; val_offset:13890*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13890*0 + 3*22*FLEN/8, x4, x1, x2)

inst_4631:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffc0000000; valaddr_reg:x3; val_offset:13893*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13893*0 + 3*23*FLEN/8, x4, x1, x2)

inst_4632:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffe0000000; valaddr_reg:x3; val_offset:13896*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13896*0 + 3*24*FLEN/8, x4, x1, x2)

inst_4633:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffff0000000; valaddr_reg:x3; val_offset:13899*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13899*0 + 3*25*FLEN/8, x4, x1, x2)

inst_4634:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffff8000000; valaddr_reg:x3; val_offset:13902*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13902*0 + 3*26*FLEN/8, x4, x1, x2)

inst_4635:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffc000000; valaddr_reg:x3; val_offset:13905*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13905*0 + 3*27*FLEN/8, x4, x1, x2)

inst_4636:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffe000000; valaddr_reg:x3; val_offset:13908*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13908*0 + 3*28*FLEN/8, x4, x1, x2)

inst_4637:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffff000000; valaddr_reg:x3; val_offset:13911*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13911*0 + 3*29*FLEN/8, x4, x1, x2)

inst_4638:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffff800000; valaddr_reg:x3; val_offset:13914*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13914*0 + 3*30*FLEN/8, x4, x1, x2)

inst_4639:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffc00000; valaddr_reg:x3; val_offset:13917*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13917*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4640:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffe00000; valaddr_reg:x3; val_offset:13920*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13920*0 + 3*32*FLEN/8, x4, x1, x2)

inst_4641:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffff00000; valaddr_reg:x3; val_offset:13923*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13923*0 + 3*33*FLEN/8, x4, x1, x2)

inst_4642:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffff80000; valaddr_reg:x3; val_offset:13926*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13926*0 + 3*34*FLEN/8, x4, x1, x2)

inst_4643:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffc0000; valaddr_reg:x3; val_offset:13929*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13929*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4644:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffe0000; valaddr_reg:x3; val_offset:13932*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13932*0 + 3*36*FLEN/8, x4, x1, x2)

inst_4645:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffff0000; valaddr_reg:x3; val_offset:13935*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13935*0 + 3*37*FLEN/8, x4, x1, x2)

inst_4646:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffff8000; valaddr_reg:x3; val_offset:13938*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13938*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4647:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffc000; valaddr_reg:x3; val_offset:13941*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13941*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4648:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffe000; valaddr_reg:x3; val_offset:13944*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13944*0 + 3*40*FLEN/8, x4, x1, x2)

inst_4649:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffff000; valaddr_reg:x3; val_offset:13947*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13947*0 + 3*41*FLEN/8, x4, x1, x2)

inst_4650:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffff800; valaddr_reg:x3; val_offset:13950*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13950*0 + 3*42*FLEN/8, x4, x1, x2)

inst_4651:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffc00; valaddr_reg:x3; val_offset:13953*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13953*0 + 3*43*FLEN/8, x4, x1, x2)

inst_4652:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffe00; valaddr_reg:x3; val_offset:13956*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13956*0 + 3*44*FLEN/8, x4, x1, x2)

inst_4653:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffff00; valaddr_reg:x3; val_offset:13959*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13959*0 + 3*45*FLEN/8, x4, x1, x2)

inst_4654:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffff80; valaddr_reg:x3; val_offset:13962*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13962*0 + 3*46*FLEN/8, x4, x1, x2)

inst_4655:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffffc0; valaddr_reg:x3; val_offset:13965*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13965*0 + 3*47*FLEN/8, x4, x1, x2)

inst_4656:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffffe0; valaddr_reg:x3; val_offset:13968*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13968*0 + 3*48*FLEN/8, x4, x1, x2)

inst_4657:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffff0; valaddr_reg:x3; val_offset:13971*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13971*0 + 3*49*FLEN/8, x4, x1, x2)

inst_4658:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffff8; valaddr_reg:x3; val_offset:13974*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13974*0 + 3*50*FLEN/8, x4, x1, x2)

inst_4659:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffffc; valaddr_reg:x3; val_offset:13977*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13977*0 + 3*51*FLEN/8, x4, x1, x2)

inst_4660:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cffffffffffffe; valaddr_reg:x3; val_offset:13980*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13980*0 + 3*52*FLEN/8, x4, x1, x2)

inst_4661:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x56025c846e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f656025c846e37f; op2val:0x0;
op3val:0x2cfffffffffffff; valaddr_reg:x3; val_offset:13983*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13983*0 + 3*53*FLEN/8, x4, x1, x2)

inst_4662:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:13986*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13986*0 + 3*54*FLEN/8, x4, x1, x2)

inst_4663:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:13989*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13989*0 + 3*55*FLEN/8, x4, x1, x2)

inst_4664:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:13992*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13992*0 + 3*56*FLEN/8, x4, x1, x2)

inst_4665:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:13995*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13995*0 + 3*57*FLEN/8, x4, x1, x2)

inst_4666:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:13998*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13998*0 + 3*58*FLEN/8, x4, x1, x2)

inst_4667:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:14001*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14001*0 + 3*59*FLEN/8, x4, x1, x2)

inst_4668:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:14004*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14004*0 + 3*60*FLEN/8, x4, x1, x2)

inst_4669:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:14007*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14007*0 + 3*61*FLEN/8, x4, x1, x2)

inst_4670:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:14010*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14010*0 + 3*62*FLEN/8, x4, x1, x2)

inst_4671:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:14013*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14013*0 + 3*63*FLEN/8, x4, x1, x2)

inst_4672:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:14016*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14016*0 + 3*64*FLEN/8, x4, x1, x2)

inst_4673:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:14019*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14019*0 + 3*65*FLEN/8, x4, x1, x2)

inst_4674:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:14022*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14022*0 + 3*66*FLEN/8, x4, x1, x2)

inst_4675:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:14025*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14025*0 + 3*67*FLEN/8, x4, x1, x2)

inst_4676:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:14028*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14028*0 + 3*68*FLEN/8, x4, x1, x2)

inst_4677:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:14031*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14031*0 + 3*69*FLEN/8, x4, x1, x2)

inst_4678:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:14034*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14034*0 + 3*70*FLEN/8, x4, x1, x2)

inst_4679:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:14037*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14037*0 + 3*71*FLEN/8, x4, x1, x2)

inst_4680:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:14040*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14040*0 + 3*72*FLEN/8, x4, x1, x2)

inst_4681:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:14043*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14043*0 + 3*73*FLEN/8, x4, x1, x2)

inst_4682:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:14046*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14046*0 + 3*74*FLEN/8, x4, x1, x2)

inst_4683:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:14049*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14049*0 + 3*75*FLEN/8, x4, x1, x2)

inst_4684:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000000000; valaddr_reg:x3; val_offset:14052*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14052*0 + 3*76*FLEN/8, x4, x1, x2)

inst_4685:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000000001; valaddr_reg:x3; val_offset:14055*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14055*0 + 3*77*FLEN/8, x4, x1, x2)

inst_4686:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000000003; valaddr_reg:x3; val_offset:14058*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14058*0 + 3*78*FLEN/8, x4, x1, x2)

inst_4687:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000000007; valaddr_reg:x3; val_offset:14061*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14061*0 + 3*79*FLEN/8, x4, x1, x2)

inst_4688:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000000000f; valaddr_reg:x3; val_offset:14064*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14064*0 + 3*80*FLEN/8, x4, x1, x2)

inst_4689:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000000001f; valaddr_reg:x3; val_offset:14067*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14067*0 + 3*81*FLEN/8, x4, x1, x2)

inst_4690:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000000003f; valaddr_reg:x3; val_offset:14070*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14070*0 + 3*82*FLEN/8, x4, x1, x2)

inst_4691:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000000007f; valaddr_reg:x3; val_offset:14073*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14073*0 + 3*83*FLEN/8, x4, x1, x2)

inst_4692:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000000000ff; valaddr_reg:x3; val_offset:14076*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14076*0 + 3*84*FLEN/8, x4, x1, x2)

inst_4693:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000000001ff; valaddr_reg:x3; val_offset:14079*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14079*0 + 3*85*FLEN/8, x4, x1, x2)

inst_4694:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000000003ff; valaddr_reg:x3; val_offset:14082*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14082*0 + 3*86*FLEN/8, x4, x1, x2)

inst_4695:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000000007ff; valaddr_reg:x3; val_offset:14085*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14085*0 + 3*87*FLEN/8, x4, x1, x2)

inst_4696:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000000fff; valaddr_reg:x3; val_offset:14088*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14088*0 + 3*88*FLEN/8, x4, x1, x2)

inst_4697:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000001fff; valaddr_reg:x3; val_offset:14091*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14091*0 + 3*89*FLEN/8, x4, x1, x2)

inst_4698:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000003fff; valaddr_reg:x3; val_offset:14094*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14094*0 + 3*90*FLEN/8, x4, x1, x2)

inst_4699:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000007fff; valaddr_reg:x3; val_offset:14097*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14097*0 + 3*91*FLEN/8, x4, x1, x2)

inst_4700:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000000ffff; valaddr_reg:x3; val_offset:14100*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14100*0 + 3*92*FLEN/8, x4, x1, x2)

inst_4701:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000001ffff; valaddr_reg:x3; val_offset:14103*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14103*0 + 3*93*FLEN/8, x4, x1, x2)

inst_4702:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000003ffff; valaddr_reg:x3; val_offset:14106*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14106*0 + 3*94*FLEN/8, x4, x1, x2)

inst_4703:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000007ffff; valaddr_reg:x3; val_offset:14109*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14109*0 + 3*95*FLEN/8, x4, x1, x2)

inst_4704:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000000fffff; valaddr_reg:x3; val_offset:14112*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14112*0 + 3*96*FLEN/8, x4, x1, x2)

inst_4705:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000001fffff; valaddr_reg:x3; val_offset:14115*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14115*0 + 3*97*FLEN/8, x4, x1, x2)

inst_4706:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000003fffff; valaddr_reg:x3; val_offset:14118*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14118*0 + 3*98*FLEN/8, x4, x1, x2)

inst_4707:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000007fffff; valaddr_reg:x3; val_offset:14121*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14121*0 + 3*99*FLEN/8, x4, x1, x2)

inst_4708:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000000ffffff; valaddr_reg:x3; val_offset:14124*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14124*0 + 3*100*FLEN/8, x4, x1, x2)

inst_4709:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000001ffffff; valaddr_reg:x3; val_offset:14127*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14127*0 + 3*101*FLEN/8, x4, x1, x2)

inst_4710:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000003ffffff; valaddr_reg:x3; val_offset:14130*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14130*0 + 3*102*FLEN/8, x4, x1, x2)

inst_4711:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000007ffffff; valaddr_reg:x3; val_offset:14133*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14133*0 + 3*103*FLEN/8, x4, x1, x2)

inst_4712:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000000fffffff; valaddr_reg:x3; val_offset:14136*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14136*0 + 3*104*FLEN/8, x4, x1, x2)

inst_4713:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000001fffffff; valaddr_reg:x3; val_offset:14139*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14139*0 + 3*105*FLEN/8, x4, x1, x2)

inst_4714:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000003fffffff; valaddr_reg:x3; val_offset:14142*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14142*0 + 3*106*FLEN/8, x4, x1, x2)

inst_4715:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000007fffffff; valaddr_reg:x3; val_offset:14145*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14145*0 + 3*107*FLEN/8, x4, x1, x2)

inst_4716:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500000ffffffff; valaddr_reg:x3; val_offset:14148*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14148*0 + 3*108*FLEN/8, x4, x1, x2)

inst_4717:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500001ffffffff; valaddr_reg:x3; val_offset:14151*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14151*0 + 3*109*FLEN/8, x4, x1, x2)

inst_4718:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500003ffffffff; valaddr_reg:x3; val_offset:14154*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14154*0 + 3*110*FLEN/8, x4, x1, x2)

inst_4719:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500007ffffffff; valaddr_reg:x3; val_offset:14157*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14157*0 + 3*111*FLEN/8, x4, x1, x2)

inst_4720:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150000fffffffff; valaddr_reg:x3; val_offset:14160*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14160*0 + 3*112*FLEN/8, x4, x1, x2)

inst_4721:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150001fffffffff; valaddr_reg:x3; val_offset:14163*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14163*0 + 3*113*FLEN/8, x4, x1, x2)

inst_4722:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150003fffffffff; valaddr_reg:x3; val_offset:14166*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14166*0 + 3*114*FLEN/8, x4, x1, x2)

inst_4723:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150007fffffffff; valaddr_reg:x3; val_offset:14169*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14169*0 + 3*115*FLEN/8, x4, x1, x2)

inst_4724:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815000ffffffffff; valaddr_reg:x3; val_offset:14172*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14172*0 + 3*116*FLEN/8, x4, x1, x2)

inst_4725:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815001ffffffffff; valaddr_reg:x3; val_offset:14175*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14175*0 + 3*117*FLEN/8, x4, x1, x2)

inst_4726:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815003ffffffffff; valaddr_reg:x3; val_offset:14178*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14178*0 + 3*118*FLEN/8, x4, x1, x2)

inst_4727:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815007ffffffffff; valaddr_reg:x3; val_offset:14181*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14181*0 + 3*119*FLEN/8, x4, x1, x2)

inst_4728:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81500fffffffffff; valaddr_reg:x3; val_offset:14184*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14184*0 + 3*120*FLEN/8, x4, x1, x2)

inst_4729:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81501fffffffffff; valaddr_reg:x3; val_offset:14187*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14187*0 + 3*121*FLEN/8, x4, x1, x2)

inst_4730:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81503fffffffffff; valaddr_reg:x3; val_offset:14190*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14190*0 + 3*122*FLEN/8, x4, x1, x2)

inst_4731:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x81507fffffffffff; valaddr_reg:x3; val_offset:14193*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14193*0 + 3*123*FLEN/8, x4, x1, x2)

inst_4732:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8150ffffffffffff; valaddr_reg:x3; val_offset:14196*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14196*0 + 3*124*FLEN/8, x4, x1, x2)

inst_4733:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8151ffffffffffff; valaddr_reg:x3; val_offset:14199*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14199*0 + 3*125*FLEN/8, x4, x1, x2)

inst_4734:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8153ffffffffffff; valaddr_reg:x3; val_offset:14202*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14202*0 + 3*126*FLEN/8, x4, x1, x2)

inst_4735:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8157ffffffffffff; valaddr_reg:x3; val_offset:14205*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14205*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_4736:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x8158000000000000; valaddr_reg:x3; val_offset:14208*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14208*0 + 3*128*FLEN/8, x4, x1, x2)

inst_4737:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815c000000000000; valaddr_reg:x3; val_offset:14211*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14211*0 + 3*129*FLEN/8, x4, x1, x2)

inst_4738:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815e000000000000; valaddr_reg:x3; val_offset:14214*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14214*0 + 3*130*FLEN/8, x4, x1, x2)

inst_4739:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815f000000000000; valaddr_reg:x3; val_offset:14217*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14217*0 + 3*131*FLEN/8, x4, x1, x2)

inst_4740:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815f800000000000; valaddr_reg:x3; val_offset:14220*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14220*0 + 3*132*FLEN/8, x4, x1, x2)

inst_4741:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fc00000000000; valaddr_reg:x3; val_offset:14223*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14223*0 + 3*133*FLEN/8, x4, x1, x2)

inst_4742:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fe00000000000; valaddr_reg:x3; val_offset:14226*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14226*0 + 3*134*FLEN/8, x4, x1, x2)

inst_4743:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ff00000000000; valaddr_reg:x3; val_offset:14229*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14229*0 + 3*135*FLEN/8, x4, x1, x2)

inst_4744:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ff80000000000; valaddr_reg:x3; val_offset:14232*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14232*0 + 3*136*FLEN/8, x4, x1, x2)

inst_4745:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffc0000000000; valaddr_reg:x3; val_offset:14235*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14235*0 + 3*137*FLEN/8, x4, x1, x2)

inst_4746:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffe0000000000; valaddr_reg:x3; val_offset:14238*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14238*0 + 3*138*FLEN/8, x4, x1, x2)

inst_4747:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fff0000000000; valaddr_reg:x3; val_offset:14241*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14241*0 + 3*139*FLEN/8, x4, x1, x2)

inst_4748:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fff8000000000; valaddr_reg:x3; val_offset:14244*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14244*0 + 3*140*FLEN/8, x4, x1, x2)

inst_4749:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffc000000000; valaddr_reg:x3; val_offset:14247*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14247*0 + 3*141*FLEN/8, x4, x1, x2)

inst_4750:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffe000000000; valaddr_reg:x3; val_offset:14250*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14250*0 + 3*142*FLEN/8, x4, x1, x2)

inst_4751:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffff000000000; valaddr_reg:x3; val_offset:14253*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14253*0 + 3*143*FLEN/8, x4, x1, x2)

inst_4752:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffff800000000; valaddr_reg:x3; val_offset:14256*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14256*0 + 3*144*FLEN/8, x4, x1, x2)

inst_4753:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffc00000000; valaddr_reg:x3; val_offset:14259*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14259*0 + 3*145*FLEN/8, x4, x1, x2)

inst_4754:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffe00000000; valaddr_reg:x3; val_offset:14262*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14262*0 + 3*146*FLEN/8, x4, x1, x2)

inst_4755:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffff00000000; valaddr_reg:x3; val_offset:14265*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14265*0 + 3*147*FLEN/8, x4, x1, x2)

inst_4756:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffff80000000; valaddr_reg:x3; val_offset:14268*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14268*0 + 3*148*FLEN/8, x4, x1, x2)

inst_4757:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffc0000000; valaddr_reg:x3; val_offset:14271*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14271*0 + 3*149*FLEN/8, x4, x1, x2)

inst_4758:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffe0000000; valaddr_reg:x3; val_offset:14274*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14274*0 + 3*150*FLEN/8, x4, x1, x2)

inst_4759:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffff0000000; valaddr_reg:x3; val_offset:14277*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14277*0 + 3*151*FLEN/8, x4, x1, x2)

inst_4760:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffff8000000; valaddr_reg:x3; val_offset:14280*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14280*0 + 3*152*FLEN/8, x4, x1, x2)

inst_4761:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffc000000; valaddr_reg:x3; val_offset:14283*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14283*0 + 3*153*FLEN/8, x4, x1, x2)

inst_4762:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffe000000; valaddr_reg:x3; val_offset:14286*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14286*0 + 3*154*FLEN/8, x4, x1, x2)

inst_4763:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffff000000; valaddr_reg:x3; val_offset:14289*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14289*0 + 3*155*FLEN/8, x4, x1, x2)

inst_4764:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffff800000; valaddr_reg:x3; val_offset:14292*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14292*0 + 3*156*FLEN/8, x4, x1, x2)

inst_4765:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffc00000; valaddr_reg:x3; val_offset:14295*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14295*0 + 3*157*FLEN/8, x4, x1, x2)

inst_4766:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffe00000; valaddr_reg:x3; val_offset:14298*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14298*0 + 3*158*FLEN/8, x4, x1, x2)

inst_4767:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffff00000; valaddr_reg:x3; val_offset:14301*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14301*0 + 3*159*FLEN/8, x4, x1, x2)

inst_4768:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffff80000; valaddr_reg:x3; val_offset:14304*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14304*0 + 3*160*FLEN/8, x4, x1, x2)

inst_4769:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffc0000; valaddr_reg:x3; val_offset:14307*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14307*0 + 3*161*FLEN/8, x4, x1, x2)

inst_4770:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffe0000; valaddr_reg:x3; val_offset:14310*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14310*0 + 3*162*FLEN/8, x4, x1, x2)

inst_4771:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffff0000; valaddr_reg:x3; val_offset:14313*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14313*0 + 3*163*FLEN/8, x4, x1, x2)

inst_4772:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffff8000; valaddr_reg:x3; val_offset:14316*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14316*0 + 3*164*FLEN/8, x4, x1, x2)

inst_4773:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffc000; valaddr_reg:x3; val_offset:14319*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14319*0 + 3*165*FLEN/8, x4, x1, x2)

inst_4774:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffe000; valaddr_reg:x3; val_offset:14322*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14322*0 + 3*166*FLEN/8, x4, x1, x2)

inst_4775:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffff000; valaddr_reg:x3; val_offset:14325*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14325*0 + 3*167*FLEN/8, x4, x1, x2)

inst_4776:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffff800; valaddr_reg:x3; val_offset:14328*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14328*0 + 3*168*FLEN/8, x4, x1, x2)

inst_4777:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffc00; valaddr_reg:x3; val_offset:14331*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14331*0 + 3*169*FLEN/8, x4, x1, x2)

inst_4778:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffe00; valaddr_reg:x3; val_offset:14334*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14334*0 + 3*170*FLEN/8, x4, x1, x2)

inst_4779:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffff00; valaddr_reg:x3; val_offset:14337*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14337*0 + 3*171*FLEN/8, x4, x1, x2)

inst_4780:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffff80; valaddr_reg:x3; val_offset:14340*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14340*0 + 3*172*FLEN/8, x4, x1, x2)

inst_4781:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffffc0; valaddr_reg:x3; val_offset:14343*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14343*0 + 3*173*FLEN/8, x4, x1, x2)

inst_4782:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffffe0; valaddr_reg:x3; val_offset:14346*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14346*0 + 3*174*FLEN/8, x4, x1, x2)

inst_4783:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffff0; valaddr_reg:x3; val_offset:14349*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14349*0 + 3*175*FLEN/8, x4, x1, x2)

inst_4784:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffff8; valaddr_reg:x3; val_offset:14352*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14352*0 + 3*176*FLEN/8, x4, x1, x2)

inst_4785:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffffc; valaddr_reg:x3; val_offset:14355*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14355*0 + 3*177*FLEN/8, x4, x1, x2)

inst_4786:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815ffffffffffffe; valaddr_reg:x3; val_offset:14358*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14358*0 + 3*178*FLEN/8, x4, x1, x2)

inst_4787:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7083441047bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67083441047bef; op2val:0x8000;
op3val:0x815fffffffffffff; valaddr_reg:x3; val_offset:14361*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14361*0 + 3*179*FLEN/8, x4, x1, x2)

inst_4788:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:14364*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14364*0 + 3*180*FLEN/8, x4, x1, x2)

inst_4789:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:14367*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14367*0 + 3*181*FLEN/8, x4, x1, x2)

inst_4790:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:14370*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14370*0 + 3*182*FLEN/8, x4, x1, x2)

inst_4791:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:14373*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14373*0 + 3*183*FLEN/8, x4, x1, x2)

inst_4792:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:14376*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14376*0 + 3*184*FLEN/8, x4, x1, x2)

inst_4793:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:14379*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14379*0 + 3*185*FLEN/8, x4, x1, x2)

inst_4794:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:14382*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14382*0 + 3*186*FLEN/8, x4, x1, x2)

inst_4795:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:14385*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14385*0 + 3*187*FLEN/8, x4, x1, x2)

inst_4796:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:14388*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14388*0 + 3*188*FLEN/8, x4, x1, x2)

inst_4797:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:14391*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14391*0 + 3*189*FLEN/8, x4, x1, x2)

inst_4798:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:14394*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14394*0 + 3*190*FLEN/8, x4, x1, x2)

inst_4799:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:14397*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14397*0 + 3*191*FLEN/8, x4, x1, x2)

inst_4800:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:14400*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14400*0 + 3*192*FLEN/8, x4, x1, x2)

inst_4801:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:14403*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14403*0 + 3*193*FLEN/8, x4, x1, x2)

inst_4802:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:14406*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14406*0 + 3*194*FLEN/8, x4, x1, x2)

inst_4803:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:14409*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14409*0 + 3*195*FLEN/8, x4, x1, x2)

inst_4804:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:14412*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14412*0 + 3*196*FLEN/8, x4, x1, x2)

inst_4805:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:14415*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14415*0 + 3*197*FLEN/8, x4, x1, x2)

inst_4806:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:14418*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14418*0 + 3*198*FLEN/8, x4, x1, x2)

inst_4807:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:14421*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14421*0 + 3*199*FLEN/8, x4, x1, x2)

inst_4808:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:14424*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14424*0 + 3*200*FLEN/8, x4, x1, x2)

inst_4809:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:14427*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14427*0 + 3*201*FLEN/8, x4, x1, x2)

inst_4810:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000000000; valaddr_reg:x3; val_offset:14430*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14430*0 + 3*202*FLEN/8, x4, x1, x2)

inst_4811:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000000001; valaddr_reg:x3; val_offset:14433*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14433*0 + 3*203*FLEN/8, x4, x1, x2)

inst_4812:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000000003; valaddr_reg:x3; val_offset:14436*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14436*0 + 3*204*FLEN/8, x4, x1, x2)

inst_4813:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000000007; valaddr_reg:x3; val_offset:14439*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14439*0 + 3*205*FLEN/8, x4, x1, x2)

inst_4814:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000000000f; valaddr_reg:x3; val_offset:14442*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14442*0 + 3*206*FLEN/8, x4, x1, x2)

inst_4815:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000000001f; valaddr_reg:x3; val_offset:14445*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14445*0 + 3*207*FLEN/8, x4, x1, x2)

inst_4816:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000000003f; valaddr_reg:x3; val_offset:14448*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14448*0 + 3*208*FLEN/8, x4, x1, x2)

inst_4817:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000000007f; valaddr_reg:x3; val_offset:14451*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14451*0 + 3*209*FLEN/8, x4, x1, x2)

inst_4818:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000000000ff; valaddr_reg:x3; val_offset:14454*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14454*0 + 3*210*FLEN/8, x4, x1, x2)

inst_4819:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000000001ff; valaddr_reg:x3; val_offset:14457*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14457*0 + 3*211*FLEN/8, x4, x1, x2)

inst_4820:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000000003ff; valaddr_reg:x3; val_offset:14460*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14460*0 + 3*212*FLEN/8, x4, x1, x2)

inst_4821:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000000007ff; valaddr_reg:x3; val_offset:14463*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14463*0 + 3*213*FLEN/8, x4, x1, x2)

inst_4822:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000000fff; valaddr_reg:x3; val_offset:14466*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14466*0 + 3*214*FLEN/8, x4, x1, x2)

inst_4823:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000001fff; valaddr_reg:x3; val_offset:14469*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14469*0 + 3*215*FLEN/8, x4, x1, x2)

inst_4824:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000003fff; valaddr_reg:x3; val_offset:14472*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14472*0 + 3*216*FLEN/8, x4, x1, x2)

inst_4825:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000007fff; valaddr_reg:x3; val_offset:14475*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14475*0 + 3*217*FLEN/8, x4, x1, x2)

inst_4826:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000000ffff; valaddr_reg:x3; val_offset:14478*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14478*0 + 3*218*FLEN/8, x4, x1, x2)

inst_4827:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000001ffff; valaddr_reg:x3; val_offset:14481*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14481*0 + 3*219*FLEN/8, x4, x1, x2)

inst_4828:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000003ffff; valaddr_reg:x3; val_offset:14484*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14484*0 + 3*220*FLEN/8, x4, x1, x2)

inst_4829:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000007ffff; valaddr_reg:x3; val_offset:14487*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14487*0 + 3*221*FLEN/8, x4, x1, x2)

inst_4830:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000000fffff; valaddr_reg:x3; val_offset:14490*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14490*0 + 3*222*FLEN/8, x4, x1, x2)

inst_4831:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000001fffff; valaddr_reg:x3; val_offset:14493*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14493*0 + 3*223*FLEN/8, x4, x1, x2)

inst_4832:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000003fffff; valaddr_reg:x3; val_offset:14496*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14496*0 + 3*224*FLEN/8, x4, x1, x2)

inst_4833:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000007fffff; valaddr_reg:x3; val_offset:14499*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14499*0 + 3*225*FLEN/8, x4, x1, x2)

inst_4834:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000000ffffff; valaddr_reg:x3; val_offset:14502*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14502*0 + 3*226*FLEN/8, x4, x1, x2)

inst_4835:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000001ffffff; valaddr_reg:x3; val_offset:14505*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14505*0 + 3*227*FLEN/8, x4, x1, x2)

inst_4836:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000003ffffff; valaddr_reg:x3; val_offset:14508*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14508*0 + 3*228*FLEN/8, x4, x1, x2)

inst_4837:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000007ffffff; valaddr_reg:x3; val_offset:14511*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14511*0 + 3*229*FLEN/8, x4, x1, x2)

inst_4838:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000000fffffff; valaddr_reg:x3; val_offset:14514*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14514*0 + 3*230*FLEN/8, x4, x1, x2)

inst_4839:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000001fffffff; valaddr_reg:x3; val_offset:14517*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14517*0 + 3*231*FLEN/8, x4, x1, x2)

inst_4840:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000003fffffff; valaddr_reg:x3; val_offset:14520*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14520*0 + 3*232*FLEN/8, x4, x1, x2)

inst_4841:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000007fffffff; valaddr_reg:x3; val_offset:14523*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14523*0 + 3*233*FLEN/8, x4, x1, x2)

inst_4842:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900000ffffffff; valaddr_reg:x3; val_offset:14526*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14526*0 + 3*234*FLEN/8, x4, x1, x2)

inst_4843:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900001ffffffff; valaddr_reg:x3; val_offset:14529*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14529*0 + 3*235*FLEN/8, x4, x1, x2)

inst_4844:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900003ffffffff; valaddr_reg:x3; val_offset:14532*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14532*0 + 3*236*FLEN/8, x4, x1, x2)

inst_4845:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900007ffffffff; valaddr_reg:x3; val_offset:14535*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14535*0 + 3*237*FLEN/8, x4, x1, x2)

inst_4846:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390000fffffffff; valaddr_reg:x3; val_offset:14538*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14538*0 + 3*238*FLEN/8, x4, x1, x2)

inst_4847:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390001fffffffff; valaddr_reg:x3; val_offset:14541*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14541*0 + 3*239*FLEN/8, x4, x1, x2)

inst_4848:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390003fffffffff; valaddr_reg:x3; val_offset:14544*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14544*0 + 3*240*FLEN/8, x4, x1, x2)

inst_4849:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390007fffffffff; valaddr_reg:x3; val_offset:14547*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14547*0 + 3*241*FLEN/8, x4, x1, x2)

inst_4850:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839000ffffffffff; valaddr_reg:x3; val_offset:14550*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14550*0 + 3*242*FLEN/8, x4, x1, x2)

inst_4851:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839001ffffffffff; valaddr_reg:x3; val_offset:14553*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14553*0 + 3*243*FLEN/8, x4, x1, x2)

inst_4852:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839003ffffffffff; valaddr_reg:x3; val_offset:14556*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14556*0 + 3*244*FLEN/8, x4, x1, x2)

inst_4853:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839007ffffffffff; valaddr_reg:x3; val_offset:14559*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14559*0 + 3*245*FLEN/8, x4, x1, x2)

inst_4854:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83900fffffffffff; valaddr_reg:x3; val_offset:14562*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14562*0 + 3*246*FLEN/8, x4, x1, x2)

inst_4855:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83901fffffffffff; valaddr_reg:x3; val_offset:14565*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14565*0 + 3*247*FLEN/8, x4, x1, x2)

inst_4856:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83903fffffffffff; valaddr_reg:x3; val_offset:14568*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14568*0 + 3*248*FLEN/8, x4, x1, x2)

inst_4857:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x83907fffffffffff; valaddr_reg:x3; val_offset:14571*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14571*0 + 3*249*FLEN/8, x4, x1, x2)

inst_4858:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8390ffffffffffff; valaddr_reg:x3; val_offset:14574*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14574*0 + 3*250*FLEN/8, x4, x1, x2)

inst_4859:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8391ffffffffffff; valaddr_reg:x3; val_offset:14577*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14577*0 + 3*251*FLEN/8, x4, x1, x2)

inst_4860:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8393ffffffffffff; valaddr_reg:x3; val_offset:14580*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14580*0 + 3*252*FLEN/8, x4, x1, x2)

inst_4861:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8397ffffffffffff; valaddr_reg:x3; val_offset:14583*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14583*0 + 3*253*FLEN/8, x4, x1, x2)

inst_4862:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x8398000000000000; valaddr_reg:x3; val_offset:14586*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14586*0 + 3*254*FLEN/8, x4, x1, x2)

inst_4863:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839c000000000000; valaddr_reg:x3; val_offset:14589*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14589*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_4864:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839e000000000000; valaddr_reg:x3; val_offset:14592*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14592*0 + 3*256*FLEN/8, x4, x1, x2)

inst_4865:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839f000000000000; valaddr_reg:x3; val_offset:14595*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14595*0 + 3*257*FLEN/8, x4, x1, x2)

inst_4866:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839f800000000000; valaddr_reg:x3; val_offset:14598*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14598*0 + 3*258*FLEN/8, x4, x1, x2)

inst_4867:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fc00000000000; valaddr_reg:x3; val_offset:14601*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14601*0 + 3*259*FLEN/8, x4, x1, x2)

inst_4868:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fe00000000000; valaddr_reg:x3; val_offset:14604*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14604*0 + 3*260*FLEN/8, x4, x1, x2)

inst_4869:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ff00000000000; valaddr_reg:x3; val_offset:14607*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14607*0 + 3*261*FLEN/8, x4, x1, x2)

inst_4870:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ff80000000000; valaddr_reg:x3; val_offset:14610*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14610*0 + 3*262*FLEN/8, x4, x1, x2)

inst_4871:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffc0000000000; valaddr_reg:x3; val_offset:14613*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14613*0 + 3*263*FLEN/8, x4, x1, x2)

inst_4872:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffe0000000000; valaddr_reg:x3; val_offset:14616*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14616*0 + 3*264*FLEN/8, x4, x1, x2)

inst_4873:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fff0000000000; valaddr_reg:x3; val_offset:14619*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14619*0 + 3*265*FLEN/8, x4, x1, x2)

inst_4874:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fff8000000000; valaddr_reg:x3; val_offset:14622*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14622*0 + 3*266*FLEN/8, x4, x1, x2)

inst_4875:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffc000000000; valaddr_reg:x3; val_offset:14625*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14625*0 + 3*267*FLEN/8, x4, x1, x2)

inst_4876:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffe000000000; valaddr_reg:x3; val_offset:14628*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14628*0 + 3*268*FLEN/8, x4, x1, x2)

inst_4877:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffff000000000; valaddr_reg:x3; val_offset:14631*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14631*0 + 3*269*FLEN/8, x4, x1, x2)

inst_4878:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffff800000000; valaddr_reg:x3; val_offset:14634*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14634*0 + 3*270*FLEN/8, x4, x1, x2)

inst_4879:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffc00000000; valaddr_reg:x3; val_offset:14637*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14637*0 + 3*271*FLEN/8, x4, x1, x2)

inst_4880:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffe00000000; valaddr_reg:x3; val_offset:14640*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14640*0 + 3*272*FLEN/8, x4, x1, x2)

inst_4881:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffff00000000; valaddr_reg:x3; val_offset:14643*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14643*0 + 3*273*FLEN/8, x4, x1, x2)

inst_4882:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffff80000000; valaddr_reg:x3; val_offset:14646*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14646*0 + 3*274*FLEN/8, x4, x1, x2)

inst_4883:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffc0000000; valaddr_reg:x3; val_offset:14649*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14649*0 + 3*275*FLEN/8, x4, x1, x2)

inst_4884:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffe0000000; valaddr_reg:x3; val_offset:14652*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14652*0 + 3*276*FLEN/8, x4, x1, x2)

inst_4885:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffff0000000; valaddr_reg:x3; val_offset:14655*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14655*0 + 3*277*FLEN/8, x4, x1, x2)

inst_4886:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffff8000000; valaddr_reg:x3; val_offset:14658*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14658*0 + 3*278*FLEN/8, x4, x1, x2)

inst_4887:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffc000000; valaddr_reg:x3; val_offset:14661*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14661*0 + 3*279*FLEN/8, x4, x1, x2)

inst_4888:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffe000000; valaddr_reg:x3; val_offset:14664*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14664*0 + 3*280*FLEN/8, x4, x1, x2)

inst_4889:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffff000000; valaddr_reg:x3; val_offset:14667*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14667*0 + 3*281*FLEN/8, x4, x1, x2)

inst_4890:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffff800000; valaddr_reg:x3; val_offset:14670*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14670*0 + 3*282*FLEN/8, x4, x1, x2)

inst_4891:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffc00000; valaddr_reg:x3; val_offset:14673*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14673*0 + 3*283*FLEN/8, x4, x1, x2)

inst_4892:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffe00000; valaddr_reg:x3; val_offset:14676*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14676*0 + 3*284*FLEN/8, x4, x1, x2)

inst_4893:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffff00000; valaddr_reg:x3; val_offset:14679*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14679*0 + 3*285*FLEN/8, x4, x1, x2)

inst_4894:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffff80000; valaddr_reg:x3; val_offset:14682*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14682*0 + 3*286*FLEN/8, x4, x1, x2)

inst_4895:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffc0000; valaddr_reg:x3; val_offset:14685*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14685*0 + 3*287*FLEN/8, x4, x1, x2)

inst_4896:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffe0000; valaddr_reg:x3; val_offset:14688*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14688*0 + 3*288*FLEN/8, x4, x1, x2)

inst_4897:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffff0000; valaddr_reg:x3; val_offset:14691*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14691*0 + 3*289*FLEN/8, x4, x1, x2)

inst_4898:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffff8000; valaddr_reg:x3; val_offset:14694*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14694*0 + 3*290*FLEN/8, x4, x1, x2)

inst_4899:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffc000; valaddr_reg:x3; val_offset:14697*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14697*0 + 3*291*FLEN/8, x4, x1, x2)

inst_4900:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffe000; valaddr_reg:x3; val_offset:14700*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14700*0 + 3*292*FLEN/8, x4, x1, x2)

inst_4901:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffff000; valaddr_reg:x3; val_offset:14703*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14703*0 + 3*293*FLEN/8, x4, x1, x2)

inst_4902:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffff800; valaddr_reg:x3; val_offset:14706*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14706*0 + 3*294*FLEN/8, x4, x1, x2)

inst_4903:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffc00; valaddr_reg:x3; val_offset:14709*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14709*0 + 3*295*FLEN/8, x4, x1, x2)

inst_4904:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffe00; valaddr_reg:x3; val_offset:14712*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14712*0 + 3*296*FLEN/8, x4, x1, x2)

inst_4905:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffff00; valaddr_reg:x3; val_offset:14715*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14715*0 + 3*297*FLEN/8, x4, x1, x2)

inst_4906:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffff80; valaddr_reg:x3; val_offset:14718*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14718*0 + 3*298*FLEN/8, x4, x1, x2)

inst_4907:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffffc0; valaddr_reg:x3; val_offset:14721*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14721*0 + 3*299*FLEN/8, x4, x1, x2)

inst_4908:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffffe0; valaddr_reg:x3; val_offset:14724*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14724*0 + 3*300*FLEN/8, x4, x1, x2)

inst_4909:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffff0; valaddr_reg:x3; val_offset:14727*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14727*0 + 3*301*FLEN/8, x4, x1, x2)

inst_4910:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffff8; valaddr_reg:x3; val_offset:14730*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14730*0 + 3*302*FLEN/8, x4, x1, x2)

inst_4911:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffffc; valaddr_reg:x3; val_offset:14733*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14733*0 + 3*303*FLEN/8, x4, x1, x2)

inst_4912:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839ffffffffffffe; valaddr_reg:x3; val_offset:14736*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14736*0 + 3*304*FLEN/8, x4, x1, x2)

inst_4913:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x76f7cf9bab2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f676f7cf9bab2bf; op2val:0x8000;
op3val:0x839fffffffffffff; valaddr_reg:x3; val_offset:14739*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14739*0 + 3*305*FLEN/8, x4, x1, x2)

inst_4914:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:14742*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14742*0 + 3*306*FLEN/8, x4, x1, x2)

inst_4915:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:14745*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14745*0 + 3*307*FLEN/8, x4, x1, x2)

inst_4916:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:14748*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14748*0 + 3*308*FLEN/8, x4, x1, x2)

inst_4917:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:14751*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14751*0 + 3*309*FLEN/8, x4, x1, x2)

inst_4918:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:14754*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14754*0 + 3*310*FLEN/8, x4, x1, x2)

inst_4919:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:14757*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14757*0 + 3*311*FLEN/8, x4, x1, x2)

inst_4920:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:14760*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14760*0 + 3*312*FLEN/8, x4, x1, x2)

inst_4921:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:14763*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14763*0 + 3*313*FLEN/8, x4, x1, x2)

inst_4922:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:14766*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14766*0 + 3*314*FLEN/8, x4, x1, x2)

inst_4923:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:14769*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14769*0 + 3*315*FLEN/8, x4, x1, x2)

inst_4924:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:14772*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14772*0 + 3*316*FLEN/8, x4, x1, x2)

inst_4925:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:14775*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14775*0 + 3*317*FLEN/8, x4, x1, x2)

inst_4926:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:14778*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14778*0 + 3*318*FLEN/8, x4, x1, x2)

inst_4927:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:14781*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14781*0 + 3*319*FLEN/8, x4, x1, x2)

inst_4928:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:14784*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14784*0 + 3*320*FLEN/8, x4, x1, x2)

inst_4929:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:14787*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14787*0 + 3*321*FLEN/8, x4, x1, x2)

inst_4930:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:14790*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14790*0 + 3*322*FLEN/8, x4, x1, x2)

inst_4931:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:14793*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14793*0 + 3*323*FLEN/8, x4, x1, x2)

inst_4932:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:14796*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14796*0 + 3*324*FLEN/8, x4, x1, x2)

inst_4933:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:14799*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14799*0 + 3*325*FLEN/8, x4, x1, x2)

inst_4934:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:14802*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14802*0 + 3*326*FLEN/8, x4, x1, x2)

inst_4935:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:14805*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14805*0 + 3*327*FLEN/8, x4, x1, x2)

inst_4936:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000000000; valaddr_reg:x3; val_offset:14808*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14808*0 + 3*328*FLEN/8, x4, x1, x2)

inst_4937:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000000001; valaddr_reg:x3; val_offset:14811*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14811*0 + 3*329*FLEN/8, x4, x1, x2)

inst_4938:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000000003; valaddr_reg:x3; val_offset:14814*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14814*0 + 3*330*FLEN/8, x4, x1, x2)

inst_4939:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000000007; valaddr_reg:x3; val_offset:14817*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14817*0 + 3*331*FLEN/8, x4, x1, x2)

inst_4940:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000000000f; valaddr_reg:x3; val_offset:14820*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14820*0 + 3*332*FLEN/8, x4, x1, x2)

inst_4941:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000000001f; valaddr_reg:x3; val_offset:14823*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14823*0 + 3*333*FLEN/8, x4, x1, x2)

inst_4942:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000000003f; valaddr_reg:x3; val_offset:14826*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14826*0 + 3*334*FLEN/8, x4, x1, x2)

inst_4943:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000000007f; valaddr_reg:x3; val_offset:14829*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14829*0 + 3*335*FLEN/8, x4, x1, x2)

inst_4944:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000000000ff; valaddr_reg:x3; val_offset:14832*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14832*0 + 3*336*FLEN/8, x4, x1, x2)

inst_4945:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000000001ff; valaddr_reg:x3; val_offset:14835*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14835*0 + 3*337*FLEN/8, x4, x1, x2)

inst_4946:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000000003ff; valaddr_reg:x3; val_offset:14838*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14838*0 + 3*338*FLEN/8, x4, x1, x2)

inst_4947:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000000007ff; valaddr_reg:x3; val_offset:14841*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14841*0 + 3*339*FLEN/8, x4, x1, x2)

inst_4948:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000000fff; valaddr_reg:x3; val_offset:14844*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14844*0 + 3*340*FLEN/8, x4, x1, x2)

inst_4949:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000001fff; valaddr_reg:x3; val_offset:14847*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14847*0 + 3*341*FLEN/8, x4, x1, x2)

inst_4950:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000003fff; valaddr_reg:x3; val_offset:14850*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14850*0 + 3*342*FLEN/8, x4, x1, x2)

inst_4951:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000007fff; valaddr_reg:x3; val_offset:14853*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14853*0 + 3*343*FLEN/8, x4, x1, x2)

inst_4952:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000000ffff; valaddr_reg:x3; val_offset:14856*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14856*0 + 3*344*FLEN/8, x4, x1, x2)

inst_4953:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000001ffff; valaddr_reg:x3; val_offset:14859*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14859*0 + 3*345*FLEN/8, x4, x1, x2)

inst_4954:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000003ffff; valaddr_reg:x3; val_offset:14862*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14862*0 + 3*346*FLEN/8, x4, x1, x2)

inst_4955:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000007ffff; valaddr_reg:x3; val_offset:14865*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14865*0 + 3*347*FLEN/8, x4, x1, x2)

inst_4956:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000000fffff; valaddr_reg:x3; val_offset:14868*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14868*0 + 3*348*FLEN/8, x4, x1, x2)

inst_4957:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000001fffff; valaddr_reg:x3; val_offset:14871*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14871*0 + 3*349*FLEN/8, x4, x1, x2)

inst_4958:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000003fffff; valaddr_reg:x3; val_offset:14874*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14874*0 + 3*350*FLEN/8, x4, x1, x2)

inst_4959:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000007fffff; valaddr_reg:x3; val_offset:14877*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14877*0 + 3*351*FLEN/8, x4, x1, x2)

inst_4960:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000000ffffff; valaddr_reg:x3; val_offset:14880*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14880*0 + 3*352*FLEN/8, x4, x1, x2)

inst_4961:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000001ffffff; valaddr_reg:x3; val_offset:14883*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14883*0 + 3*353*FLEN/8, x4, x1, x2)

inst_4962:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000003ffffff; valaddr_reg:x3; val_offset:14886*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14886*0 + 3*354*FLEN/8, x4, x1, x2)

inst_4963:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000007ffffff; valaddr_reg:x3; val_offset:14889*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14889*0 + 3*355*FLEN/8, x4, x1, x2)

inst_4964:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000000fffffff; valaddr_reg:x3; val_offset:14892*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14892*0 + 3*356*FLEN/8, x4, x1, x2)

inst_4965:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000001fffffff; valaddr_reg:x3; val_offset:14895*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14895*0 + 3*357*FLEN/8, x4, x1, x2)

inst_4966:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000003fffffff; valaddr_reg:x3; val_offset:14898*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14898*0 + 3*358*FLEN/8, x4, x1, x2)

inst_4967:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000007fffffff; valaddr_reg:x3; val_offset:14901*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14901*0 + 3*359*FLEN/8, x4, x1, x2)

inst_4968:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500000ffffffff; valaddr_reg:x3; val_offset:14904*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14904*0 + 3*360*FLEN/8, x4, x1, x2)

inst_4969:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500001ffffffff; valaddr_reg:x3; val_offset:14907*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14907*0 + 3*361*FLEN/8, x4, x1, x2)

inst_4970:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500003ffffffff; valaddr_reg:x3; val_offset:14910*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14910*0 + 3*362*FLEN/8, x4, x1, x2)

inst_4971:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500007ffffffff; valaddr_reg:x3; val_offset:14913*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14913*0 + 3*363*FLEN/8, x4, x1, x2)

inst_4972:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250000fffffffff; valaddr_reg:x3; val_offset:14916*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14916*0 + 3*364*FLEN/8, x4, x1, x2)

inst_4973:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250001fffffffff; valaddr_reg:x3; val_offset:14919*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14919*0 + 3*365*FLEN/8, x4, x1, x2)

inst_4974:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250003fffffffff; valaddr_reg:x3; val_offset:14922*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14922*0 + 3*366*FLEN/8, x4, x1, x2)

inst_4975:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250007fffffffff; valaddr_reg:x3; val_offset:14925*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14925*0 + 3*367*FLEN/8, x4, x1, x2)

inst_4976:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825000ffffffffff; valaddr_reg:x3; val_offset:14928*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14928*0 + 3*368*FLEN/8, x4, x1, x2)

inst_4977:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825001ffffffffff; valaddr_reg:x3; val_offset:14931*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14931*0 + 3*369*FLEN/8, x4, x1, x2)

inst_4978:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825003ffffffffff; valaddr_reg:x3; val_offset:14934*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14934*0 + 3*370*FLEN/8, x4, x1, x2)

inst_4979:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825007ffffffffff; valaddr_reg:x3; val_offset:14937*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14937*0 + 3*371*FLEN/8, x4, x1, x2)

inst_4980:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82500fffffffffff; valaddr_reg:x3; val_offset:14940*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14940*0 + 3*372*FLEN/8, x4, x1, x2)

inst_4981:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82501fffffffffff; valaddr_reg:x3; val_offset:14943*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14943*0 + 3*373*FLEN/8, x4, x1, x2)

inst_4982:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82503fffffffffff; valaddr_reg:x3; val_offset:14946*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14946*0 + 3*374*FLEN/8, x4, x1, x2)

inst_4983:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x82507fffffffffff; valaddr_reg:x3; val_offset:14949*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14949*0 + 3*375*FLEN/8, x4, x1, x2)

inst_4984:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8250ffffffffffff; valaddr_reg:x3; val_offset:14952*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14952*0 + 3*376*FLEN/8, x4, x1, x2)

inst_4985:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8251ffffffffffff; valaddr_reg:x3; val_offset:14955*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14955*0 + 3*377*FLEN/8, x4, x1, x2)

inst_4986:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8253ffffffffffff; valaddr_reg:x3; val_offset:14958*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14958*0 + 3*378*FLEN/8, x4, x1, x2)

inst_4987:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8257ffffffffffff; valaddr_reg:x3; val_offset:14961*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14961*0 + 3*379*FLEN/8, x4, x1, x2)

inst_4988:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x8258000000000000; valaddr_reg:x3; val_offset:14964*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14964*0 + 3*380*FLEN/8, x4, x1, x2)

inst_4989:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825c000000000000; valaddr_reg:x3; val_offset:14967*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14967*0 + 3*381*FLEN/8, x4, x1, x2)

inst_4990:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825e000000000000; valaddr_reg:x3; val_offset:14970*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14970*0 + 3*382*FLEN/8, x4, x1, x2)

inst_4991:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825f000000000000; valaddr_reg:x3; val_offset:14973*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14973*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_4992:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825f800000000000; valaddr_reg:x3; val_offset:14976*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14976*0 + 3*384*FLEN/8, x4, x1, x2)

inst_4993:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fc00000000000; valaddr_reg:x3; val_offset:14979*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14979*0 + 3*385*FLEN/8, x4, x1, x2)

inst_4994:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fe00000000000; valaddr_reg:x3; val_offset:14982*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14982*0 + 3*386*FLEN/8, x4, x1, x2)

inst_4995:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ff00000000000; valaddr_reg:x3; val_offset:14985*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14985*0 + 3*387*FLEN/8, x4, x1, x2)

inst_4996:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ff80000000000; valaddr_reg:x3; val_offset:14988*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14988*0 + 3*388*FLEN/8, x4, x1, x2)

inst_4997:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffc0000000000; valaddr_reg:x3; val_offset:14991*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14991*0 + 3*389*FLEN/8, x4, x1, x2)

inst_4998:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffe0000000000; valaddr_reg:x3; val_offset:14994*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14994*0 + 3*390*FLEN/8, x4, x1, x2)

inst_4999:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fff0000000000; valaddr_reg:x3; val_offset:14997*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14997*0 + 3*391*FLEN/8, x4, x1, x2)

inst_5000:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fff8000000000; valaddr_reg:x3; val_offset:15000*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15000*0 + 3*392*FLEN/8, x4, x1, x2)

inst_5001:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffc000000000; valaddr_reg:x3; val_offset:15003*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15003*0 + 3*393*FLEN/8, x4, x1, x2)

inst_5002:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffe000000000; valaddr_reg:x3; val_offset:15006*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15006*0 + 3*394*FLEN/8, x4, x1, x2)

inst_5003:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffff000000000; valaddr_reg:x3; val_offset:15009*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15009*0 + 3*395*FLEN/8, x4, x1, x2)

inst_5004:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffff800000000; valaddr_reg:x3; val_offset:15012*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15012*0 + 3*396*FLEN/8, x4, x1, x2)

inst_5005:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffc00000000; valaddr_reg:x3; val_offset:15015*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15015*0 + 3*397*FLEN/8, x4, x1, x2)

inst_5006:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffe00000000; valaddr_reg:x3; val_offset:15018*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15018*0 + 3*398*FLEN/8, x4, x1, x2)

inst_5007:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffff00000000; valaddr_reg:x3; val_offset:15021*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15021*0 + 3*399*FLEN/8, x4, x1, x2)

inst_5008:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffff80000000; valaddr_reg:x3; val_offset:15024*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15024*0 + 3*400*FLEN/8, x4, x1, x2)

inst_5009:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffc0000000; valaddr_reg:x3; val_offset:15027*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15027*0 + 3*401*FLEN/8, x4, x1, x2)

inst_5010:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffe0000000; valaddr_reg:x3; val_offset:15030*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15030*0 + 3*402*FLEN/8, x4, x1, x2)

inst_5011:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffff0000000; valaddr_reg:x3; val_offset:15033*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15033*0 + 3*403*FLEN/8, x4, x1, x2)

inst_5012:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffff8000000; valaddr_reg:x3; val_offset:15036*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15036*0 + 3*404*FLEN/8, x4, x1, x2)

inst_5013:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffc000000; valaddr_reg:x3; val_offset:15039*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15039*0 + 3*405*FLEN/8, x4, x1, x2)

inst_5014:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffe000000; valaddr_reg:x3; val_offset:15042*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15042*0 + 3*406*FLEN/8, x4, x1, x2)

inst_5015:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffff000000; valaddr_reg:x3; val_offset:15045*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15045*0 + 3*407*FLEN/8, x4, x1, x2)

inst_5016:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffff800000; valaddr_reg:x3; val_offset:15048*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15048*0 + 3*408*FLEN/8, x4, x1, x2)

inst_5017:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffc00000; valaddr_reg:x3; val_offset:15051*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15051*0 + 3*409*FLEN/8, x4, x1, x2)

inst_5018:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffe00000; valaddr_reg:x3; val_offset:15054*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15054*0 + 3*410*FLEN/8, x4, x1, x2)

inst_5019:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffff00000; valaddr_reg:x3; val_offset:15057*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15057*0 + 3*411*FLEN/8, x4, x1, x2)

inst_5020:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffff80000; valaddr_reg:x3; val_offset:15060*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15060*0 + 3*412*FLEN/8, x4, x1, x2)

inst_5021:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffc0000; valaddr_reg:x3; val_offset:15063*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15063*0 + 3*413*FLEN/8, x4, x1, x2)

inst_5022:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffe0000; valaddr_reg:x3; val_offset:15066*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15066*0 + 3*414*FLEN/8, x4, x1, x2)

inst_5023:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffff0000; valaddr_reg:x3; val_offset:15069*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15069*0 + 3*415*FLEN/8, x4, x1, x2)

inst_5024:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffff8000; valaddr_reg:x3; val_offset:15072*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15072*0 + 3*416*FLEN/8, x4, x1, x2)

inst_5025:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffc000; valaddr_reg:x3; val_offset:15075*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15075*0 + 3*417*FLEN/8, x4, x1, x2)

inst_5026:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffe000; valaddr_reg:x3; val_offset:15078*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15078*0 + 3*418*FLEN/8, x4, x1, x2)

inst_5027:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffff000; valaddr_reg:x3; val_offset:15081*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15081*0 + 3*419*FLEN/8, x4, x1, x2)

inst_5028:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffff800; valaddr_reg:x3; val_offset:15084*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15084*0 + 3*420*FLEN/8, x4, x1, x2)

inst_5029:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffc00; valaddr_reg:x3; val_offset:15087*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15087*0 + 3*421*FLEN/8, x4, x1, x2)

inst_5030:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffe00; valaddr_reg:x3; val_offset:15090*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15090*0 + 3*422*FLEN/8, x4, x1, x2)

inst_5031:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffff00; valaddr_reg:x3; val_offset:15093*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15093*0 + 3*423*FLEN/8, x4, x1, x2)

inst_5032:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffff80; valaddr_reg:x3; val_offset:15096*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15096*0 + 3*424*FLEN/8, x4, x1, x2)

inst_5033:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffffc0; valaddr_reg:x3; val_offset:15099*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15099*0 + 3*425*FLEN/8, x4, x1, x2)

inst_5034:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffffe0; valaddr_reg:x3; val_offset:15102*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15102*0 + 3*426*FLEN/8, x4, x1, x2)

inst_5035:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffff0; valaddr_reg:x3; val_offset:15105*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15105*0 + 3*427*FLEN/8, x4, x1, x2)

inst_5036:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffff8; valaddr_reg:x3; val_offset:15108*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15108*0 + 3*428*FLEN/8, x4, x1, x2)

inst_5037:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffffc; valaddr_reg:x3; val_offset:15111*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15111*0 + 3*429*FLEN/8, x4, x1, x2)

inst_5038:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825ffffffffffffe; valaddr_reg:x3; val_offset:15114*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15114*0 + 3*430*FLEN/8, x4, x1, x2)

inst_5039:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f67a1eff83f19af; op2val:0x8000;
op3val:0x825fffffffffffff; valaddr_reg:x3; val_offset:15117*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15117*0 + 3*431*FLEN/8, x4, x1, x2)

inst_5040:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:15120*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15120*0 + 3*432*FLEN/8, x4, x1, x2)

inst_5041:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:15123*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15123*0 + 3*433*FLEN/8, x4, x1, x2)

inst_5042:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:15126*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15126*0 + 3*434*FLEN/8, x4, x1, x2)

inst_5043:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:15129*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15129*0 + 3*435*FLEN/8, x4, x1, x2)

inst_5044:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:15132*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15132*0 + 3*436*FLEN/8, x4, x1, x2)

inst_5045:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:15135*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15135*0 + 3*437*FLEN/8, x4, x1, x2)

inst_5046:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:15138*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15138*0 + 3*438*FLEN/8, x4, x1, x2)

inst_5047:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:15141*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15141*0 + 3*439*FLEN/8, x4, x1, x2)

inst_5048:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:15144*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15144*0 + 3*440*FLEN/8, x4, x1, x2)

inst_5049:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:15147*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15147*0 + 3*441*FLEN/8, x4, x1, x2)

inst_5050:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:15150*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15150*0 + 3*442*FLEN/8, x4, x1, x2)

inst_5051:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:15153*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15153*0 + 3*443*FLEN/8, x4, x1, x2)

inst_5052:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:15156*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15156*0 + 3*444*FLEN/8, x4, x1, x2)

inst_5053:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:15159*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15159*0 + 3*445*FLEN/8, x4, x1, x2)

inst_5054:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:15162*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15162*0 + 3*446*FLEN/8, x4, x1, x2)

inst_5055:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:15165*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15165*0 + 3*447*FLEN/8, x4, x1, x2)

inst_5056:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:15168*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15168*0 + 3*448*FLEN/8, x4, x1, x2)

inst_5057:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:15171*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15171*0 + 3*449*FLEN/8, x4, x1, x2)

inst_5058:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:15174*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15174*0 + 3*450*FLEN/8, x4, x1, x2)

inst_5059:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:15177*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15177*0 + 3*451*FLEN/8, x4, x1, x2)

inst_5060:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:15180*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15180*0 + 3*452*FLEN/8, x4, x1, x2)

inst_5061:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:15183*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15183*0 + 3*453*FLEN/8, x4, x1, x2)

inst_5062:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000000000; valaddr_reg:x3; val_offset:15186*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15186*0 + 3*454*FLEN/8, x4, x1, x2)

inst_5063:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000000001; valaddr_reg:x3; val_offset:15189*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15189*0 + 3*455*FLEN/8, x4, x1, x2)

inst_5064:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000000003; valaddr_reg:x3; val_offset:15192*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15192*0 + 3*456*FLEN/8, x4, x1, x2)

inst_5065:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000000007; valaddr_reg:x3; val_offset:15195*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15195*0 + 3*457*FLEN/8, x4, x1, x2)

inst_5066:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000000000f; valaddr_reg:x3; val_offset:15198*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15198*0 + 3*458*FLEN/8, x4, x1, x2)

inst_5067:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000000001f; valaddr_reg:x3; val_offset:15201*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15201*0 + 3*459*FLEN/8, x4, x1, x2)

inst_5068:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000000003f; valaddr_reg:x3; val_offset:15204*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15204*0 + 3*460*FLEN/8, x4, x1, x2)

inst_5069:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000000007f; valaddr_reg:x3; val_offset:15207*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15207*0 + 3*461*FLEN/8, x4, x1, x2)

inst_5070:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000000000ff; valaddr_reg:x3; val_offset:15210*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15210*0 + 3*462*FLEN/8, x4, x1, x2)

inst_5071:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000000001ff; valaddr_reg:x3; val_offset:15213*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15213*0 + 3*463*FLEN/8, x4, x1, x2)

inst_5072:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000000003ff; valaddr_reg:x3; val_offset:15216*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15216*0 + 3*464*FLEN/8, x4, x1, x2)

inst_5073:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000000007ff; valaddr_reg:x3; val_offset:15219*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15219*0 + 3*465*FLEN/8, x4, x1, x2)

inst_5074:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000000fff; valaddr_reg:x3; val_offset:15222*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15222*0 + 3*466*FLEN/8, x4, x1, x2)

inst_5075:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000001fff; valaddr_reg:x3; val_offset:15225*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15225*0 + 3*467*FLEN/8, x4, x1, x2)

inst_5076:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000003fff; valaddr_reg:x3; val_offset:15228*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15228*0 + 3*468*FLEN/8, x4, x1, x2)

inst_5077:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000007fff; valaddr_reg:x3; val_offset:15231*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15231*0 + 3*469*FLEN/8, x4, x1, x2)

inst_5078:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000000ffff; valaddr_reg:x3; val_offset:15234*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15234*0 + 3*470*FLEN/8, x4, x1, x2)

inst_5079:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000001ffff; valaddr_reg:x3; val_offset:15237*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15237*0 + 3*471*FLEN/8, x4, x1, x2)

inst_5080:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000003ffff; valaddr_reg:x3; val_offset:15240*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15240*0 + 3*472*FLEN/8, x4, x1, x2)

inst_5081:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000007ffff; valaddr_reg:x3; val_offset:15243*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15243*0 + 3*473*FLEN/8, x4, x1, x2)

inst_5082:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000000fffff; valaddr_reg:x3; val_offset:15246*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15246*0 + 3*474*FLEN/8, x4, x1, x2)

inst_5083:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000001fffff; valaddr_reg:x3; val_offset:15249*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15249*0 + 3*475*FLEN/8, x4, x1, x2)

inst_5084:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000003fffff; valaddr_reg:x3; val_offset:15252*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15252*0 + 3*476*FLEN/8, x4, x1, x2)

inst_5085:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000007fffff; valaddr_reg:x3; val_offset:15255*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15255*0 + 3*477*FLEN/8, x4, x1, x2)

inst_5086:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000000ffffff; valaddr_reg:x3; val_offset:15258*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15258*0 + 3*478*FLEN/8, x4, x1, x2)

inst_5087:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000001ffffff; valaddr_reg:x3; val_offset:15261*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15261*0 + 3*479*FLEN/8, x4, x1, x2)

inst_5088:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000003ffffff; valaddr_reg:x3; val_offset:15264*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15264*0 + 3*480*FLEN/8, x4, x1, x2)

inst_5089:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000007ffffff; valaddr_reg:x3; val_offset:15267*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15267*0 + 3*481*FLEN/8, x4, x1, x2)

inst_5090:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000000fffffff; valaddr_reg:x3; val_offset:15270*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15270*0 + 3*482*FLEN/8, x4, x1, x2)

inst_5091:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000001fffffff; valaddr_reg:x3; val_offset:15273*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15273*0 + 3*483*FLEN/8, x4, x1, x2)

inst_5092:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000003fffffff; valaddr_reg:x3; val_offset:15276*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15276*0 + 3*484*FLEN/8, x4, x1, x2)

inst_5093:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000007fffffff; valaddr_reg:x3; val_offset:15279*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15279*0 + 3*485*FLEN/8, x4, x1, x2)

inst_5094:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00000ffffffff; valaddr_reg:x3; val_offset:15282*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15282*0 + 3*486*FLEN/8, x4, x1, x2)

inst_5095:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00001ffffffff; valaddr_reg:x3; val_offset:15285*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15285*0 + 3*487*FLEN/8, x4, x1, x2)

inst_5096:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00003ffffffff; valaddr_reg:x3; val_offset:15288*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15288*0 + 3*488*FLEN/8, x4, x1, x2)

inst_5097:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00007ffffffff; valaddr_reg:x3; val_offset:15291*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15291*0 + 3*489*FLEN/8, x4, x1, x2)

inst_5098:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0000fffffffff; valaddr_reg:x3; val_offset:15294*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15294*0 + 3*490*FLEN/8, x4, x1, x2)

inst_5099:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0001fffffffff; valaddr_reg:x3; val_offset:15297*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15297*0 + 3*491*FLEN/8, x4, x1, x2)

inst_5100:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0003fffffffff; valaddr_reg:x3; val_offset:15300*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15300*0 + 3*492*FLEN/8, x4, x1, x2)

inst_5101:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0007fffffffff; valaddr_reg:x3; val_offset:15303*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15303*0 + 3*493*FLEN/8, x4, x1, x2)

inst_5102:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c000ffffffffff; valaddr_reg:x3; val_offset:15306*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15306*0 + 3*494*FLEN/8, x4, x1, x2)

inst_5103:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c001ffffffffff; valaddr_reg:x3; val_offset:15309*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15309*0 + 3*495*FLEN/8, x4, x1, x2)

inst_5104:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c003ffffffffff; valaddr_reg:x3; val_offset:15312*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15312*0 + 3*496*FLEN/8, x4, x1, x2)

inst_5105:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c007ffffffffff; valaddr_reg:x3; val_offset:15315*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15315*0 + 3*497*FLEN/8, x4, x1, x2)

inst_5106:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c00fffffffffff; valaddr_reg:x3; val_offset:15318*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15318*0 + 3*498*FLEN/8, x4, x1, x2)

inst_5107:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c01fffffffffff; valaddr_reg:x3; val_offset:15321*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15321*0 + 3*499*FLEN/8, x4, x1, x2)

inst_5108:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c03fffffffffff; valaddr_reg:x3; val_offset:15324*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15324*0 + 3*500*FLEN/8, x4, x1, x2)

inst_5109:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c07fffffffffff; valaddr_reg:x3; val_offset:15327*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15327*0 + 3*501*FLEN/8, x4, x1, x2)

inst_5110:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c0ffffffffffff; valaddr_reg:x3; val_offset:15330*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15330*0 + 3*502*FLEN/8, x4, x1, x2)

inst_5111:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c1ffffffffffff; valaddr_reg:x3; val_offset:15333*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15333*0 + 3*503*FLEN/8, x4, x1, x2)

inst_5112:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c3ffffffffffff; valaddr_reg:x3; val_offset:15336*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15336*0 + 3*504*FLEN/8, x4, x1, x2)

inst_5113:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c7ffffffffffff; valaddr_reg:x3; val_offset:15339*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15339*0 + 3*505*FLEN/8, x4, x1, x2)

inst_5114:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3c8000000000000; valaddr_reg:x3; val_offset:15342*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15342*0 + 3*506*FLEN/8, x4, x1, x2)

inst_5115:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cc000000000000; valaddr_reg:x3; val_offset:15345*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15345*0 + 3*507*FLEN/8, x4, x1, x2)

inst_5116:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3ce000000000000; valaddr_reg:x3; val_offset:15348*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15348*0 + 3*508*FLEN/8, x4, x1, x2)

inst_5117:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cf000000000000; valaddr_reg:x3; val_offset:15351*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15351*0 + 3*509*FLEN/8, x4, x1, x2)

inst_5118:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cf800000000000; valaddr_reg:x3; val_offset:15354*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15354*0 + 3*510*FLEN/8, x4, x1, x2)

inst_5119:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfc00000000000; valaddr_reg:x3; val_offset:15357*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15357*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_5120:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfe00000000000; valaddr_reg:x3; val_offset:15360*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15360*0 + 3*512*FLEN/8, x4, x1, x2)

inst_5121:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cff00000000000; valaddr_reg:x3; val_offset:15363*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15363*0 + 3*513*FLEN/8, x4, x1, x2)

inst_5122:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cff80000000000; valaddr_reg:x3; val_offset:15366*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15366*0 + 3*514*FLEN/8, x4, x1, x2)

inst_5123:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffc0000000000; valaddr_reg:x3; val_offset:15369*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15369*0 + 3*515*FLEN/8, x4, x1, x2)

inst_5124:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffe0000000000; valaddr_reg:x3; val_offset:15372*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15372*0 + 3*516*FLEN/8, x4, x1, x2)

inst_5125:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfff0000000000; valaddr_reg:x3; val_offset:15375*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15375*0 + 3*517*FLEN/8, x4, x1, x2)

inst_5126:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfff8000000000; valaddr_reg:x3; val_offset:15378*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15378*0 + 3*518*FLEN/8, x4, x1, x2)

inst_5127:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffc000000000; valaddr_reg:x3; val_offset:15381*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15381*0 + 3*519*FLEN/8, x4, x1, x2)

inst_5128:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffe000000000; valaddr_reg:x3; val_offset:15384*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15384*0 + 3*520*FLEN/8, x4, x1, x2)

inst_5129:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffff000000000; valaddr_reg:x3; val_offset:15387*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15387*0 + 3*521*FLEN/8, x4, x1, x2)

inst_5130:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffff800000000; valaddr_reg:x3; val_offset:15390*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15390*0 + 3*522*FLEN/8, x4, x1, x2)

inst_5131:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffc00000000; valaddr_reg:x3; val_offset:15393*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15393*0 + 3*523*FLEN/8, x4, x1, x2)

inst_5132:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffe00000000; valaddr_reg:x3; val_offset:15396*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15396*0 + 3*524*FLEN/8, x4, x1, x2)

inst_5133:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffff00000000; valaddr_reg:x3; val_offset:15399*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15399*0 + 3*525*FLEN/8, x4, x1, x2)

inst_5134:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffff80000000; valaddr_reg:x3; val_offset:15402*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15402*0 + 3*526*FLEN/8, x4, x1, x2)

inst_5135:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffc0000000; valaddr_reg:x3; val_offset:15405*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15405*0 + 3*527*FLEN/8, x4, x1, x2)

inst_5136:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffe0000000; valaddr_reg:x3; val_offset:15408*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15408*0 + 3*528*FLEN/8, x4, x1, x2)

inst_5137:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffff0000000; valaddr_reg:x3; val_offset:15411*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15411*0 + 3*529*FLEN/8, x4, x1, x2)

inst_5138:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffff8000000; valaddr_reg:x3; val_offset:15414*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15414*0 + 3*530*FLEN/8, x4, x1, x2)

inst_5139:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffc000000; valaddr_reg:x3; val_offset:15417*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15417*0 + 3*531*FLEN/8, x4, x1, x2)

inst_5140:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffe000000; valaddr_reg:x3; val_offset:15420*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15420*0 + 3*532*FLEN/8, x4, x1, x2)

inst_5141:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffff000000; valaddr_reg:x3; val_offset:15423*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15423*0 + 3*533*FLEN/8, x4, x1, x2)

inst_5142:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffff800000; valaddr_reg:x3; val_offset:15426*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15426*0 + 3*534*FLEN/8, x4, x1, x2)

inst_5143:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffc00000; valaddr_reg:x3; val_offset:15429*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15429*0 + 3*535*FLEN/8, x4, x1, x2)

inst_5144:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffe00000; valaddr_reg:x3; val_offset:15432*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15432*0 + 3*536*FLEN/8, x4, x1, x2)

inst_5145:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffff00000; valaddr_reg:x3; val_offset:15435*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15435*0 + 3*537*FLEN/8, x4, x1, x2)

inst_5146:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffff80000; valaddr_reg:x3; val_offset:15438*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15438*0 + 3*538*FLEN/8, x4, x1, x2)

inst_5147:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffc0000; valaddr_reg:x3; val_offset:15441*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15441*0 + 3*539*FLEN/8, x4, x1, x2)

inst_5148:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffe0000; valaddr_reg:x3; val_offset:15444*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15444*0 + 3*540*FLEN/8, x4, x1, x2)

inst_5149:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffff0000; valaddr_reg:x3; val_offset:15447*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15447*0 + 3*541*FLEN/8, x4, x1, x2)

inst_5150:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffff8000; valaddr_reg:x3; val_offset:15450*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15450*0 + 3*542*FLEN/8, x4, x1, x2)

inst_5151:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffc000; valaddr_reg:x3; val_offset:15453*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15453*0 + 3*543*FLEN/8, x4, x1, x2)

inst_5152:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffe000; valaddr_reg:x3; val_offset:15456*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15456*0 + 3*544*FLEN/8, x4, x1, x2)

inst_5153:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffff000; valaddr_reg:x3; val_offset:15459*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15459*0 + 3*545*FLEN/8, x4, x1, x2)

inst_5154:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffff800; valaddr_reg:x3; val_offset:15462*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15462*0 + 3*546*FLEN/8, x4, x1, x2)

inst_5155:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffc00; valaddr_reg:x3; val_offset:15465*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15465*0 + 3*547*FLEN/8, x4, x1, x2)

inst_5156:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffe00; valaddr_reg:x3; val_offset:15468*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15468*0 + 3*548*FLEN/8, x4, x1, x2)

inst_5157:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffff00; valaddr_reg:x3; val_offset:15471*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15471*0 + 3*549*FLEN/8, x4, x1, x2)

inst_5158:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffff80; valaddr_reg:x3; val_offset:15474*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15474*0 + 3*550*FLEN/8, x4, x1, x2)

inst_5159:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffffc0; valaddr_reg:x3; val_offset:15477*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15477*0 + 3*551*FLEN/8, x4, x1, x2)

inst_5160:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffffe0; valaddr_reg:x3; val_offset:15480*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15480*0 + 3*552*FLEN/8, x4, x1, x2)

inst_5161:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffff0; valaddr_reg:x3; val_offset:15483*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15483*0 + 3*553*FLEN/8, x4, x1, x2)

inst_5162:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffff8; valaddr_reg:x3; val_offset:15486*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15486*0 + 3*554*FLEN/8, x4, x1, x2)

inst_5163:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffffc; valaddr_reg:x3; val_offset:15489*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15489*0 + 3*555*FLEN/8, x4, x1, x2)

inst_5164:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cffffffffffffe; valaddr_reg:x3; val_offset:15492*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15492*0 + 3*556*FLEN/8, x4, x1, x2)

inst_5165:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8152f7c711d6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68152f7c711d6f; op2val:0x0;
op3val:0x3cfffffffffffff; valaddr_reg:x3; val_offset:15495*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15495*0 + 3*557*FLEN/8, x4, x1, x2)

inst_5166:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:15498*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15498*0 + 3*558*FLEN/8, x4, x1, x2)

inst_5167:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:15501*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15501*0 + 3*559*FLEN/8, x4, x1, x2)

inst_5168:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:15504*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15504*0 + 3*560*FLEN/8, x4, x1, x2)

inst_5169:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:15507*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15507*0 + 3*561*FLEN/8, x4, x1, x2)

inst_5170:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:15510*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15510*0 + 3*562*FLEN/8, x4, x1, x2)

inst_5171:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:15513*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15513*0 + 3*563*FLEN/8, x4, x1, x2)

inst_5172:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:15516*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15516*0 + 3*564*FLEN/8, x4, x1, x2)

inst_5173:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:15519*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15519*0 + 3*565*FLEN/8, x4, x1, x2)

inst_5174:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:15522*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15522*0 + 3*566*FLEN/8, x4, x1, x2)

inst_5175:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:15525*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15525*0 + 3*567*FLEN/8, x4, x1, x2)

inst_5176:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:15528*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15528*0 + 3*568*FLEN/8, x4, x1, x2)

inst_5177:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:15531*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15531*0 + 3*569*FLEN/8, x4, x1, x2)

inst_5178:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:15534*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15534*0 + 3*570*FLEN/8, x4, x1, x2)

inst_5179:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:15537*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15537*0 + 3*571*FLEN/8, x4, x1, x2)

inst_5180:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:15540*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15540*0 + 3*572*FLEN/8, x4, x1, x2)

inst_5181:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:15543*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15543*0 + 3*573*FLEN/8, x4, x1, x2)

inst_5182:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:15546*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15546*0 + 3*574*FLEN/8, x4, x1, x2)

inst_5183:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:15549*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15549*0 + 3*575*FLEN/8, x4, x1, x2)

inst_5184:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:15552*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15552*0 + 3*576*FLEN/8, x4, x1, x2)

inst_5185:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:15555*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15555*0 + 3*577*FLEN/8, x4, x1, x2)

inst_5186:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:15558*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15558*0 + 3*578*FLEN/8, x4, x1, x2)

inst_5187:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:15561*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15561*0 + 3*579*FLEN/8, x4, x1, x2)

inst_5188:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000000000; valaddr_reg:x3; val_offset:15564*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15564*0 + 3*580*FLEN/8, x4, x1, x2)

inst_5189:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000000001; valaddr_reg:x3; val_offset:15567*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15567*0 + 3*581*FLEN/8, x4, x1, x2)

inst_5190:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000000003; valaddr_reg:x3; val_offset:15570*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15570*0 + 3*582*FLEN/8, x4, x1, x2)

inst_5191:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000000007; valaddr_reg:x3; val_offset:15573*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15573*0 + 3*583*FLEN/8, x4, x1, x2)

inst_5192:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000000000f; valaddr_reg:x3; val_offset:15576*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15576*0 + 3*584*FLEN/8, x4, x1, x2)

inst_5193:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000000001f; valaddr_reg:x3; val_offset:15579*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15579*0 + 3*585*FLEN/8, x4, x1, x2)

inst_5194:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000000003f; valaddr_reg:x3; val_offset:15582*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15582*0 + 3*586*FLEN/8, x4, x1, x2)

inst_5195:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000000007f; valaddr_reg:x3; val_offset:15585*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15585*0 + 3*587*FLEN/8, x4, x1, x2)

inst_5196:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000000000ff; valaddr_reg:x3; val_offset:15588*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15588*0 + 3*588*FLEN/8, x4, x1, x2)

inst_5197:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000000001ff; valaddr_reg:x3; val_offset:15591*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15591*0 + 3*589*FLEN/8, x4, x1, x2)

inst_5198:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000000003ff; valaddr_reg:x3; val_offset:15594*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15594*0 + 3*590*FLEN/8, x4, x1, x2)

inst_5199:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000000007ff; valaddr_reg:x3; val_offset:15597*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15597*0 + 3*591*FLEN/8, x4, x1, x2)

inst_5200:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000000fff; valaddr_reg:x3; val_offset:15600*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15600*0 + 3*592*FLEN/8, x4, x1, x2)

inst_5201:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000001fff; valaddr_reg:x3; val_offset:15603*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15603*0 + 3*593*FLEN/8, x4, x1, x2)

inst_5202:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000003fff; valaddr_reg:x3; val_offset:15606*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15606*0 + 3*594*FLEN/8, x4, x1, x2)

inst_5203:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000007fff; valaddr_reg:x3; val_offset:15609*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15609*0 + 3*595*FLEN/8, x4, x1, x2)

inst_5204:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000000ffff; valaddr_reg:x3; val_offset:15612*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15612*0 + 3*596*FLEN/8, x4, x1, x2)

inst_5205:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000001ffff; valaddr_reg:x3; val_offset:15615*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15615*0 + 3*597*FLEN/8, x4, x1, x2)

inst_5206:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000003ffff; valaddr_reg:x3; val_offset:15618*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15618*0 + 3*598*FLEN/8, x4, x1, x2)

inst_5207:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000007ffff; valaddr_reg:x3; val_offset:15621*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15621*0 + 3*599*FLEN/8, x4, x1, x2)

inst_5208:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000000fffff; valaddr_reg:x3; val_offset:15624*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15624*0 + 3*600*FLEN/8, x4, x1, x2)

inst_5209:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000001fffff; valaddr_reg:x3; val_offset:15627*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15627*0 + 3*601*FLEN/8, x4, x1, x2)

inst_5210:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000003fffff; valaddr_reg:x3; val_offset:15630*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15630*0 + 3*602*FLEN/8, x4, x1, x2)

inst_5211:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000007fffff; valaddr_reg:x3; val_offset:15633*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15633*0 + 3*603*FLEN/8, x4, x1, x2)

inst_5212:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000000ffffff; valaddr_reg:x3; val_offset:15636*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15636*0 + 3*604*FLEN/8, x4, x1, x2)

inst_5213:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000001ffffff; valaddr_reg:x3; val_offset:15639*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15639*0 + 3*605*FLEN/8, x4, x1, x2)

inst_5214:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000003ffffff; valaddr_reg:x3; val_offset:15642*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15642*0 + 3*606*FLEN/8, x4, x1, x2)

inst_5215:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000007ffffff; valaddr_reg:x3; val_offset:15645*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15645*0 + 3*607*FLEN/8, x4, x1, x2)

inst_5216:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000000fffffff; valaddr_reg:x3; val_offset:15648*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15648*0 + 3*608*FLEN/8, x4, x1, x2)

inst_5217:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000001fffffff; valaddr_reg:x3; val_offset:15651*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15651*0 + 3*609*FLEN/8, x4, x1, x2)

inst_5218:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000003fffffff; valaddr_reg:x3; val_offset:15654*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15654*0 + 3*610*FLEN/8, x4, x1, x2)

inst_5219:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000007fffffff; valaddr_reg:x3; val_offset:15657*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15657*0 + 3*611*FLEN/8, x4, x1, x2)

inst_5220:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000000ffffffff; valaddr_reg:x3; val_offset:15660*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15660*0 + 3*612*FLEN/8, x4, x1, x2)

inst_5221:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000001ffffffff; valaddr_reg:x3; val_offset:15663*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15663*0 + 3*613*FLEN/8, x4, x1, x2)

inst_5222:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000003ffffffff; valaddr_reg:x3; val_offset:15666*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15666*0 + 3*614*FLEN/8, x4, x1, x2)

inst_5223:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000007ffffffff; valaddr_reg:x3; val_offset:15669*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15669*0 + 3*615*FLEN/8, x4, x1, x2)

inst_5224:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300000fffffffff; valaddr_reg:x3; val_offset:15672*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15672*0 + 3*616*FLEN/8, x4, x1, x2)

inst_5225:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300001fffffffff; valaddr_reg:x3; val_offset:15675*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15675*0 + 3*617*FLEN/8, x4, x1, x2)

inst_5226:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300003fffffffff; valaddr_reg:x3; val_offset:15678*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15678*0 + 3*618*FLEN/8, x4, x1, x2)

inst_5227:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300007fffffffff; valaddr_reg:x3; val_offset:15681*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15681*0 + 3*619*FLEN/8, x4, x1, x2)

inst_5228:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30000ffffffffff; valaddr_reg:x3; val_offset:15684*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15684*0 + 3*620*FLEN/8, x4, x1, x2)

inst_5229:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30001ffffffffff; valaddr_reg:x3; val_offset:15687*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15687*0 + 3*621*FLEN/8, x4, x1, x2)

inst_5230:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30003ffffffffff; valaddr_reg:x3; val_offset:15690*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15690*0 + 3*622*FLEN/8, x4, x1, x2)

inst_5231:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30007ffffffffff; valaddr_reg:x3; val_offset:15693*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15693*0 + 3*623*FLEN/8, x4, x1, x2)

inst_5232:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3000fffffffffff; valaddr_reg:x3; val_offset:15696*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15696*0 + 3*624*FLEN/8, x4, x1, x2)

inst_5233:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3001fffffffffff; valaddr_reg:x3; val_offset:15699*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15699*0 + 3*625*FLEN/8, x4, x1, x2)

inst_5234:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3003fffffffffff; valaddr_reg:x3; val_offset:15702*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15702*0 + 3*626*FLEN/8, x4, x1, x2)

inst_5235:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x3007fffffffffff; valaddr_reg:x3; val_offset:15705*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15705*0 + 3*627*FLEN/8, x4, x1, x2)

inst_5236:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x300ffffffffffff; valaddr_reg:x3; val_offset:15708*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15708*0 + 3*628*FLEN/8, x4, x1, x2)

inst_5237:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x301ffffffffffff; valaddr_reg:x3; val_offset:15711*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15711*0 + 3*629*FLEN/8, x4, x1, x2)

inst_5238:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x303ffffffffffff; valaddr_reg:x3; val_offset:15714*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15714*0 + 3*630*FLEN/8, x4, x1, x2)

inst_5239:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x307ffffffffffff; valaddr_reg:x3; val_offset:15717*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15717*0 + 3*631*FLEN/8, x4, x1, x2)

inst_5240:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x308000000000000; valaddr_reg:x3; val_offset:15720*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15720*0 + 3*632*FLEN/8, x4, x1, x2)

inst_5241:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30c000000000000; valaddr_reg:x3; val_offset:15723*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15723*0 + 3*633*FLEN/8, x4, x1, x2)

inst_5242:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30e000000000000; valaddr_reg:x3; val_offset:15726*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15726*0 + 3*634*FLEN/8, x4, x1, x2)

inst_5243:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30f000000000000; valaddr_reg:x3; val_offset:15729*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15729*0 + 3*635*FLEN/8, x4, x1, x2)

inst_5244:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30f800000000000; valaddr_reg:x3; val_offset:15732*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15732*0 + 3*636*FLEN/8, x4, x1, x2)

inst_5245:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fc00000000000; valaddr_reg:x3; val_offset:15735*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15735*0 + 3*637*FLEN/8, x4, x1, x2)

inst_5246:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fe00000000000; valaddr_reg:x3; val_offset:15738*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15738*0 + 3*638*FLEN/8, x4, x1, x2)

inst_5247:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ff00000000000; valaddr_reg:x3; val_offset:15741*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15741*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_5248:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ff80000000000; valaddr_reg:x3; val_offset:15744*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15744*0 + 3*640*FLEN/8, x4, x1, x2)

inst_5249:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffc0000000000; valaddr_reg:x3; val_offset:15747*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15747*0 + 3*641*FLEN/8, x4, x1, x2)

inst_5250:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffe0000000000; valaddr_reg:x3; val_offset:15750*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15750*0 + 3*642*FLEN/8, x4, x1, x2)

inst_5251:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fff0000000000; valaddr_reg:x3; val_offset:15753*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15753*0 + 3*643*FLEN/8, x4, x1, x2)

inst_5252:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fff8000000000; valaddr_reg:x3; val_offset:15756*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15756*0 + 3*644*FLEN/8, x4, x1, x2)

inst_5253:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffc000000000; valaddr_reg:x3; val_offset:15759*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15759*0 + 3*645*FLEN/8, x4, x1, x2)

inst_5254:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffe000000000; valaddr_reg:x3; val_offset:15762*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15762*0 + 3*646*FLEN/8, x4, x1, x2)

inst_5255:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffff000000000; valaddr_reg:x3; val_offset:15765*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15765*0 + 3*647*FLEN/8, x4, x1, x2)

inst_5256:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffff800000000; valaddr_reg:x3; val_offset:15768*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15768*0 + 3*648*FLEN/8, x4, x1, x2)

inst_5257:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffc00000000; valaddr_reg:x3; val_offset:15771*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15771*0 + 3*649*FLEN/8, x4, x1, x2)

inst_5258:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffe00000000; valaddr_reg:x3; val_offset:15774*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15774*0 + 3*650*FLEN/8, x4, x1, x2)

inst_5259:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffff00000000; valaddr_reg:x3; val_offset:15777*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15777*0 + 3*651*FLEN/8, x4, x1, x2)

inst_5260:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffff80000000; valaddr_reg:x3; val_offset:15780*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15780*0 + 3*652*FLEN/8, x4, x1, x2)

inst_5261:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffc0000000; valaddr_reg:x3; val_offset:15783*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15783*0 + 3*653*FLEN/8, x4, x1, x2)

inst_5262:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffe0000000; valaddr_reg:x3; val_offset:15786*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15786*0 + 3*654*FLEN/8, x4, x1, x2)

inst_5263:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffff0000000; valaddr_reg:x3; val_offset:15789*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15789*0 + 3*655*FLEN/8, x4, x1, x2)

inst_5264:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffff8000000; valaddr_reg:x3; val_offset:15792*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15792*0 + 3*656*FLEN/8, x4, x1, x2)

inst_5265:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffc000000; valaddr_reg:x3; val_offset:15795*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15795*0 + 3*657*FLEN/8, x4, x1, x2)

inst_5266:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffe000000; valaddr_reg:x3; val_offset:15798*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15798*0 + 3*658*FLEN/8, x4, x1, x2)

inst_5267:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffff000000; valaddr_reg:x3; val_offset:15801*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15801*0 + 3*659*FLEN/8, x4, x1, x2)

inst_5268:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffff800000; valaddr_reg:x3; val_offset:15804*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15804*0 + 3*660*FLEN/8, x4, x1, x2)

inst_5269:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffc00000; valaddr_reg:x3; val_offset:15807*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15807*0 + 3*661*FLEN/8, x4, x1, x2)

inst_5270:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffe00000; valaddr_reg:x3; val_offset:15810*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15810*0 + 3*662*FLEN/8, x4, x1, x2)

inst_5271:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffff00000; valaddr_reg:x3; val_offset:15813*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15813*0 + 3*663*FLEN/8, x4, x1, x2)

inst_5272:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffff80000; valaddr_reg:x3; val_offset:15816*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15816*0 + 3*664*FLEN/8, x4, x1, x2)

inst_5273:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffc0000; valaddr_reg:x3; val_offset:15819*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15819*0 + 3*665*FLEN/8, x4, x1, x2)

inst_5274:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffe0000; valaddr_reg:x3; val_offset:15822*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15822*0 + 3*666*FLEN/8, x4, x1, x2)

inst_5275:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffff0000; valaddr_reg:x3; val_offset:15825*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15825*0 + 3*667*FLEN/8, x4, x1, x2)

inst_5276:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffff8000; valaddr_reg:x3; val_offset:15828*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15828*0 + 3*668*FLEN/8, x4, x1, x2)

inst_5277:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffc000; valaddr_reg:x3; val_offset:15831*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15831*0 + 3*669*FLEN/8, x4, x1, x2)

inst_5278:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffe000; valaddr_reg:x3; val_offset:15834*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15834*0 + 3*670*FLEN/8, x4, x1, x2)

inst_5279:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffff000; valaddr_reg:x3; val_offset:15837*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15837*0 + 3*671*FLEN/8, x4, x1, x2)

inst_5280:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffff800; valaddr_reg:x3; val_offset:15840*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15840*0 + 3*672*FLEN/8, x4, x1, x2)

inst_5281:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffc00; valaddr_reg:x3; val_offset:15843*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15843*0 + 3*673*FLEN/8, x4, x1, x2)

inst_5282:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffe00; valaddr_reg:x3; val_offset:15846*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15846*0 + 3*674*FLEN/8, x4, x1, x2)

inst_5283:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffff00; valaddr_reg:x3; val_offset:15849*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15849*0 + 3*675*FLEN/8, x4, x1, x2)

inst_5284:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffff80; valaddr_reg:x3; val_offset:15852*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15852*0 + 3*676*FLEN/8, x4, x1, x2)

inst_5285:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffffc0; valaddr_reg:x3; val_offset:15855*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15855*0 + 3*677*FLEN/8, x4, x1, x2)

inst_5286:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffffe0; valaddr_reg:x3; val_offset:15858*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15858*0 + 3*678*FLEN/8, x4, x1, x2)

inst_5287:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffff0; valaddr_reg:x3; val_offset:15861*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15861*0 + 3*679*FLEN/8, x4, x1, x2)

inst_5288:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffff8; valaddr_reg:x3; val_offset:15864*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15864*0 + 3*680*FLEN/8, x4, x1, x2)

inst_5289:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffffc; valaddr_reg:x3; val_offset:15867*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15867*0 + 3*681*FLEN/8, x4, x1, x2)

inst_5290:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30ffffffffffffe; valaddr_reg:x3; val_offset:15870*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15870*0 + 3*682*FLEN/8, x4, x1, x2)

inst_5291:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8dfcf67685e7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68dfcf67685e7f; op2val:0x0;
op3val:0x30fffffffffffff; valaddr_reg:x3; val_offset:15873*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15873*0 + 3*683*FLEN/8, x4, x1, x2)

inst_5292:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:15876*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15876*0 + 3*684*FLEN/8, x4, x1, x2)

inst_5293:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:15879*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15879*0 + 3*685*FLEN/8, x4, x1, x2)

inst_5294:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:15882*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15882*0 + 3*686*FLEN/8, x4, x1, x2)

inst_5295:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:15885*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15885*0 + 3*687*FLEN/8, x4, x1, x2)

inst_5296:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:15888*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15888*0 + 3*688*FLEN/8, x4, x1, x2)

inst_5297:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:15891*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15891*0 + 3*689*FLEN/8, x4, x1, x2)

inst_5298:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:15894*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15894*0 + 3*690*FLEN/8, x4, x1, x2)

inst_5299:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:15897*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15897*0 + 3*691*FLEN/8, x4, x1, x2)

inst_5300:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:15900*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15900*0 + 3*692*FLEN/8, x4, x1, x2)

inst_5301:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:15903*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15903*0 + 3*693*FLEN/8, x4, x1, x2)

inst_5302:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:15906*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15906*0 + 3*694*FLEN/8, x4, x1, x2)

inst_5303:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:15909*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15909*0 + 3*695*FLEN/8, x4, x1, x2)

inst_5304:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:15912*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15912*0 + 3*696*FLEN/8, x4, x1, x2)

inst_5305:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:15915*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15915*0 + 3*697*FLEN/8, x4, x1, x2)

inst_5306:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:15918*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15918*0 + 3*698*FLEN/8, x4, x1, x2)

inst_5307:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:15921*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15921*0 + 3*699*FLEN/8, x4, x1, x2)

inst_5308:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:15924*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15924*0 + 3*700*FLEN/8, x4, x1, x2)

inst_5309:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:15927*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15927*0 + 3*701*FLEN/8, x4, x1, x2)

inst_5310:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:15930*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15930*0 + 3*702*FLEN/8, x4, x1, x2)

inst_5311:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:15933*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15933*0 + 3*703*FLEN/8, x4, x1, x2)

inst_5312:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:15936*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15936*0 + 3*704*FLEN/8, x4, x1, x2)

inst_5313:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:15939*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15939*0 + 3*705*FLEN/8, x4, x1, x2)

inst_5314:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:15942*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15942*0 + 3*706*FLEN/8, x4, x1, x2)

inst_5315:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:15945*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15945*0 + 3*707*FLEN/8, x4, x1, x2)

inst_5316:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:15948*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15948*0 + 3*708*FLEN/8, x4, x1, x2)

inst_5317:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:15951*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15951*0 + 3*709*FLEN/8, x4, x1, x2)

inst_5318:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:15954*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15954*0 + 3*710*FLEN/8, x4, x1, x2)

inst_5319:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:15957*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15957*0 + 3*711*FLEN/8, x4, x1, x2)

inst_5320:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:15960*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15960*0 + 3*712*FLEN/8, x4, x1, x2)

inst_5321:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:15963*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15963*0 + 3*713*FLEN/8, x4, x1, x2)

inst_5322:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:15966*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15966*0 + 3*714*FLEN/8, x4, x1, x2)

inst_5323:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:15969*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15969*0 + 3*715*FLEN/8, x4, x1, x2)

inst_5324:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:15972*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15972*0 + 3*716*FLEN/8, x4, x1, x2)

inst_5325:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:15975*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15975*0 + 3*717*FLEN/8, x4, x1, x2)

inst_5326:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:15978*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15978*0 + 3*718*FLEN/8, x4, x1, x2)

inst_5327:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:15981*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15981*0 + 3*719*FLEN/8, x4, x1, x2)

inst_5328:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:15984*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15984*0 + 3*720*FLEN/8, x4, x1, x2)

inst_5329:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:15987*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15987*0 + 3*721*FLEN/8, x4, x1, x2)

inst_5330:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:15990*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15990*0 + 3*722*FLEN/8, x4, x1, x2)

inst_5331:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:15993*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15993*0 + 3*723*FLEN/8, x4, x1, x2)

inst_5332:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:15996*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15996*0 + 3*724*FLEN/8, x4, x1, x2)

inst_5333:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:15999*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15999*0 + 3*725*FLEN/8, x4, x1, x2)

inst_5334:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:16002*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16002*0 + 3*726*FLEN/8, x4, x1, x2)

inst_5335:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:16005*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16005*0 + 3*727*FLEN/8, x4, x1, x2)

inst_5336:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:16008*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16008*0 + 3*728*FLEN/8, x4, x1, x2)

inst_5337:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:16011*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16011*0 + 3*729*FLEN/8, x4, x1, x2)

inst_5338:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:16014*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16014*0 + 3*730*FLEN/8, x4, x1, x2)

inst_5339:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:16017*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16017*0 + 3*731*FLEN/8, x4, x1, x2)

inst_5340:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:16020*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16020*0 + 3*732*FLEN/8, x4, x1, x2)

inst_5341:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:16023*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16023*0 + 3*733*FLEN/8, x4, x1, x2)

inst_5342:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:16026*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16026*0 + 3*734*FLEN/8, x4, x1, x2)

inst_5343:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:16029*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16029*0 + 3*735*FLEN/8, x4, x1, x2)

inst_5344:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:16032*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16032*0 + 3*736*FLEN/8, x4, x1, x2)

inst_5345:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:16035*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16035*0 + 3*737*FLEN/8, x4, x1, x2)

inst_5346:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:16038*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16038*0 + 3*738*FLEN/8, x4, x1, x2)

inst_5347:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:16041*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16041*0 + 3*739*FLEN/8, x4, x1, x2)

inst_5348:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:16044*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16044*0 + 3*740*FLEN/8, x4, x1, x2)

inst_5349:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:16047*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16047*0 + 3*741*FLEN/8, x4, x1, x2)

inst_5350:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:16050*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16050*0 + 3*742*FLEN/8, x4, x1, x2)

inst_5351:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:16053*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16053*0 + 3*743*FLEN/8, x4, x1, x2)

inst_5352:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:16056*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16056*0 + 3*744*FLEN/8, x4, x1, x2)

inst_5353:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:16059*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16059*0 + 3*745*FLEN/8, x4, x1, x2)

inst_5354:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:16062*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16062*0 + 3*746*FLEN/8, x4, x1, x2)

inst_5355:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:16065*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16065*0 + 3*747*FLEN/8, x4, x1, x2)

inst_5356:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:16068*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16068*0 + 3*748*FLEN/8, x4, x1, x2)

inst_5357:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:16071*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16071*0 + 3*749*FLEN/8, x4, x1, x2)

inst_5358:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:16074*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16074*0 + 3*750*FLEN/8, x4, x1, x2)

inst_5359:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:16077*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16077*0 + 3*751*FLEN/8, x4, x1, x2)

inst_5360:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:16080*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16080*0 + 3*752*FLEN/8, x4, x1, x2)

inst_5361:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:16083*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16083*0 + 3*753*FLEN/8, x4, x1, x2)

inst_5362:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:16086*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16086*0 + 3*754*FLEN/8, x4, x1, x2)

inst_5363:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:16089*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16089*0 + 3*755*FLEN/8, x4, x1, x2)

inst_5364:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:16092*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16092*0 + 3*756*FLEN/8, x4, x1, x2)

inst_5365:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:16095*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16095*0 + 3*757*FLEN/8, x4, x1, x2)

inst_5366:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:16098*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16098*0 + 3*758*FLEN/8, x4, x1, x2)

inst_5367:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:16101*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16101*0 + 3*759*FLEN/8, x4, x1, x2)

inst_5368:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:16104*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16104*0 + 3*760*FLEN/8, x4, x1, x2)

inst_5369:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:16107*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16107*0 + 3*761*FLEN/8, x4, x1, x2)

inst_5370:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:16110*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16110*0 + 3*762*FLEN/8, x4, x1, x2)

inst_5371:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:16113*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16113*0 + 3*763*FLEN/8, x4, x1, x2)

inst_5372:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:16116*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16116*0 + 3*764*FLEN/8, x4, x1, x2)

inst_5373:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:16119*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16119*0 + 3*765*FLEN/8, x4, x1, x2)

inst_5374:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:16122*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16122*0 + 3*766*FLEN/8, x4, x1, x2)

inst_5375:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x90abf917a773f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f690abf917a773f; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:16125*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16125*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(199284283511144447,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987071,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987072,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(201536083324829696,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202099033278251008,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202380508254961664,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202521245743316992,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202591614487494656,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202626798859583488,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202644391045627904,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202653187138650112,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202657585185161216,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202659784208416768,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202660883720044544,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661433475858432,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661708353765376,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661845792718848,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661914512195584,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661948871933952,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661966051803136,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661974641737728,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661978936705024,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661981084188672,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982157930496,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982694801408,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982963236864,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983097454592,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983164563456,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983198117888,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983214895104,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983223283712,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983227478016,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983229575168,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983230623744,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231148032,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231410176,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231541248,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231606784,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231639552,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231655936,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231664128,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231668224,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231670272,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671296,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671808,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672064,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672192,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672256,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672288,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672304,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672312,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672316,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672318,64,FLEN)
NAN_BOXED(6874006121641075583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672319,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556224,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556225,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556227,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556231,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556239,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556255,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556287,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556351,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556479,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556735,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029557247,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029558271,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029560319,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029564415,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029572607,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029588991,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029621759,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029687295,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029818367,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030080511,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030604799,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629031653375,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629033750527,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629037944831,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629046333439,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629063110655,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629096665087,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629163773951,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629297991679,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629566427135,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947630103298047,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947631177039871,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947633324523519,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947637619490815,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947646209425407,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947663389294591,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947697749032959,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947766468509695,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947903907463167,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948178785370111,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948728541183999,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317949828052811775,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317952027076067327,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317956425122578431,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317965221215600639,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317982813401645055,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318017997773733887,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318088366517911551,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318229104006266879,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318510578982977535,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9319073528936398847,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241471,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241472,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321325328750084096,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321888278703505408,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322169753680216064,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322310491168571392,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322380859912749056,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322416044284837888,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322433636470882304,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322442432563904512,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322446830610415616,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322449029633671168,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450129145298944,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450678901112832,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450953779019776,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451091217973248,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451159937449984,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451194297188352,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451211477057536,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451220066992128,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451224361959424,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451226509443072,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451227583184896,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228120055808,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228388491264,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228522708992,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228589817856,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228623372288,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228640149504,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228648538112,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228652732416,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228654829568,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228655878144,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656402432,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656664576,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656795648,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656861184,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656893952,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656910336,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656918528,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656922624,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656924672,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656925696,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926208,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926464,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926592,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926656,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926688,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926704,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926712,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926716,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926718,64,FLEN)
NAN_BOXED(6874472376726485999,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926719,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894080,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894081,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894083,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894087,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894095,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894111,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894143,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894207,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894335,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894591,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614895103,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614896127,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614898175,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614902271,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614910463,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614926847,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614959615,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615025151,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615156223,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615418367,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615942655,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215616991231,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215619088383,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215623282687,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215631671295,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215648448511,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215682002943,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215749111807,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215883329535,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216151764991,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216688635903,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077217762377727,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077219909861375,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077224204828671,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077232794763263,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077249974632447,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077284334370815,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077353053847551,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077490492801023,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077765370707967,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480078315126521855,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480079414638149631,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480081613661405183,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480086011707916287,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480094807800938495,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480112399986982911,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480147584359071743,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480217953103249407,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480358690591604735,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480640165568315391,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9481203115521736703,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579327,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579328,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9483454915335421952,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484017865288843264,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484299340265553920,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484440077753909248,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484510446498086912,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484545630870175744,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484563223056220160,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484572019149242368,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484576417195753472,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484578616219009024,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484579715730636800,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580265486450688,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580540364357632,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580677803311104,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580746522787840,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580780882526208,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580798062395392,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580806652329984,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580810947297280,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580813094780928,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814168522752,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814705393664,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814973829120,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815108046848,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815175155712,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815208710144,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815225487360,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815233875968,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815238070272,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815240167424,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241216000,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241740288,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242002432,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242133504,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242199040,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242231808,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242248192,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242256384,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242260480,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242262528,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242263552,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264064,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264320,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264448,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264512,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264544,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264560,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264568,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264572,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264574,64,FLEN)
NAN_BOXED(6874585938760741567,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264575,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484160,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484161,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484163,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484167,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484175,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484191,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484223,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484287,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484415,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484671,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067485183,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067486207,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067488255,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067492351,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067500543,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067516927,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067549695,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067615231,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067746303,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068008447,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068532735,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223069581311,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223071678463,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223075872767,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223084261375,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223101038591,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223134593023,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223201701887,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223335919615,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223604355071,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005224141225983,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005225214967807,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005227362451455,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005231657418751,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005240247353343,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005257427222527,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005291786960895,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005360506437631,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005497945391103,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005772823298047,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390006322579111935,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390007422090739711,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390009621113995263,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390014019160506367,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390022815253528575,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390040407439572991,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390075591811661823,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390145960555839487,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390286698044194815,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390568173020905471,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9391131122974326783,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169407,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169408,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393382922788012032,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393945872741433344,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394227347718144000,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394368085206499328,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394438453950676992,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394473638322765824,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394491230508810240,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394500026601832448,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394504424648343552,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394506623671599104,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394507723183226880,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508272939040768,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508547816947712,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508685255901184,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508753975377920,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508788335116288,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508805514985472,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508814104920064,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508818399887360,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508820547371008,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508821621112832,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822157983744,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822426419200,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822560636928,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822627745792,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822661300224,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822678077440,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822686466048,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822690660352,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822692757504,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822693806080,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694330368,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694592512,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694723584,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694789120,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694821888,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694838272,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694846464,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694850560,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694852608,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694853632,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854144,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854400,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854528,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854592,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854624,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854640,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854648,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854652,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854654,64,FLEN)
NAN_BOXED(6874641408238492079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854655,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229760,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229761,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229763,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229767,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229775,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229791,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229823,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229887,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230015,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230271,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230783,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642231807,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642233855,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642237951,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642246143,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642262527,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642295295,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642360831,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642491903,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642754047,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977643278335,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977644326911,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977646424063,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977650618367,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977659006975,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977675784191,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977709338623,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977776447487,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977910665215,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978179100671,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978715971583,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215979789713407,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215981937197055,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215986232164351,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215994822098943,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216012001968127,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216046361706495,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216115081183231,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216252520136703,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216527398043647,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270217077153857535,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270218176665485311,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270220375688740863,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270224773735251967,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270233569828274175,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270251162014318591,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270286346386407423,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270356715130585087,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270497452618940415,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270778927595651071,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(271341877549072383,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915007,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915008,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(273593677362757632,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274156627316178944,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274438102292889600,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274578839781244928,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274649208525422592,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274684392897511424,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274701985083555840,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274710781176578048,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274715179223089152,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274717378246344704,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274718477757972480,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719027513786368,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719302391693312,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719439830646784,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719508550123520,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719542909861888,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719560089731072,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719568679665664,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719572974632960,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719575122116608,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576195858432,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576732729344,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577001164800,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577135382528,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577202491392,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577236045824,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577252823040,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577261211648,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577265405952,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577267503104,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577268551680,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269075968,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269338112,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269469184,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269534720,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269567488,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269583872,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269592064,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269596160,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269598208,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599232,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599744,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600000,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600128,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600192,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600224,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600240,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600248,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600252,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600254,64,FLEN)
NAN_BOXED(6874768124876496239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600255,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783808,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783809,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783811,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783815,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783823,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783839,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783871,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783935,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784063,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784319,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784831,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113785855,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113787903,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113791999,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113800191,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113816575,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113849343,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113914879,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114045951,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114308095,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114832383,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782115880959,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782117978111,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782122172415,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782130561023,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782147338239,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782180892671,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782248001535,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782382219263,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782650654719,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172783187525631,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172784261267455,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172786408751103,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172790703718399,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172799293652991,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172816473522175,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172850833260543,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172919552737279,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173056991690751,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173331869597695,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173881625411583,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216174981137039359,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216177180160294911,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216181578206806015,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216190374299828223,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216207966485872639,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216243150857961471,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216313519602139135,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216454257090494463,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216735732067205119,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(217298682020626431,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469055,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469056,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(219550481834311680,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220113431787732992,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220394906764443648,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220535644252798976,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220606012996976640,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220641197369065472,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220658789555109888,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220667585648132096,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220671983694643200,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220674182717898752,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675282229526528,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675831985340416,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676106863247360,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676244302200832,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676313021677568,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676347381415936,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676364561285120,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676373151219712,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676377446187008,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676379593670656,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676380667412480,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381204283392,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381472718848,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381606936576,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381674045440,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381707599872,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381724377088,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381732765696,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381736960000,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381739057152,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740105728,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740630016,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740892160,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741023232,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741088768,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741121536,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741137920,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741146112,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741150208,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741152256,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153280,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153792,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154048,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154176,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154240,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154272,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154288,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154296,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154300,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154302,64,FLEN)
NAN_BOXED(6874990913067179647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154303,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6875038124053526335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
