
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_42240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:126720*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126720*0 + 3*0*FLEN/8, x4, x1, x2)

inst_42241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:126723*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126723*0 + 3*1*FLEN/8, x4, x1, x2)

inst_42242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:126726*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126726*0 + 3*2*FLEN/8, x4, x1, x2)

inst_42243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:126729*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126729*0 + 3*3*FLEN/8, x4, x1, x2)

inst_42244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:126732*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126732*0 + 3*4*FLEN/8, x4, x1, x2)

inst_42245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:126735*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126735*0 + 3*5*FLEN/8, x4, x1, x2)

inst_42246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:126738*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126738*0 + 3*6*FLEN/8, x4, x1, x2)

inst_42247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:126741*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126741*0 + 3*7*FLEN/8, x4, x1, x2)

inst_42248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:126744*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126744*0 + 3*8*FLEN/8, x4, x1, x2)

inst_42249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:126747*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126747*0 + 3*9*FLEN/8, x4, x1, x2)

inst_42250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000000000; valaddr_reg:x3; val_offset:126750*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126750*0 + 3*10*FLEN/8, x4, x1, x2)

inst_42251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000000001; valaddr_reg:x3; val_offset:126753*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126753*0 + 3*11*FLEN/8, x4, x1, x2)

inst_42252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000000003; valaddr_reg:x3; val_offset:126756*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126756*0 + 3*12*FLEN/8, x4, x1, x2)

inst_42253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000000007; valaddr_reg:x3; val_offset:126759*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126759*0 + 3*13*FLEN/8, x4, x1, x2)

inst_42254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000000000f; valaddr_reg:x3; val_offset:126762*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126762*0 + 3*14*FLEN/8, x4, x1, x2)

inst_42255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000000001f; valaddr_reg:x3; val_offset:126765*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126765*0 + 3*15*FLEN/8, x4, x1, x2)

inst_42256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000000003f; valaddr_reg:x3; val_offset:126768*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126768*0 + 3*16*FLEN/8, x4, x1, x2)

inst_42257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000000007f; valaddr_reg:x3; val_offset:126771*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126771*0 + 3*17*FLEN/8, x4, x1, x2)

inst_42258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000000000ff; valaddr_reg:x3; val_offset:126774*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126774*0 + 3*18*FLEN/8, x4, x1, x2)

inst_42259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000000001ff; valaddr_reg:x3; val_offset:126777*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126777*0 + 3*19*FLEN/8, x4, x1, x2)

inst_42260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000000003ff; valaddr_reg:x3; val_offset:126780*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126780*0 + 3*20*FLEN/8, x4, x1, x2)

inst_42261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000000007ff; valaddr_reg:x3; val_offset:126783*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126783*0 + 3*21*FLEN/8, x4, x1, x2)

inst_42262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000000fff; valaddr_reg:x3; val_offset:126786*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126786*0 + 3*22*FLEN/8, x4, x1, x2)

inst_42263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000001fff; valaddr_reg:x3; val_offset:126789*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126789*0 + 3*23*FLEN/8, x4, x1, x2)

inst_42264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000003fff; valaddr_reg:x3; val_offset:126792*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126792*0 + 3*24*FLEN/8, x4, x1, x2)

inst_42265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000007fff; valaddr_reg:x3; val_offset:126795*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126795*0 + 3*25*FLEN/8, x4, x1, x2)

inst_42266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000000ffff; valaddr_reg:x3; val_offset:126798*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126798*0 + 3*26*FLEN/8, x4, x1, x2)

inst_42267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000001ffff; valaddr_reg:x3; val_offset:126801*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126801*0 + 3*27*FLEN/8, x4, x1, x2)

inst_42268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000003ffff; valaddr_reg:x3; val_offset:126804*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126804*0 + 3*28*FLEN/8, x4, x1, x2)

inst_42269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000007ffff; valaddr_reg:x3; val_offset:126807*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126807*0 + 3*29*FLEN/8, x4, x1, x2)

inst_42270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000000fffff; valaddr_reg:x3; val_offset:126810*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126810*0 + 3*30*FLEN/8, x4, x1, x2)

inst_42271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000001fffff; valaddr_reg:x3; val_offset:126813*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126813*0 + 3*31*FLEN/8, x4, x1, x2)

inst_42272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000003fffff; valaddr_reg:x3; val_offset:126816*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126816*0 + 3*32*FLEN/8, x4, x1, x2)

inst_42273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000007fffff; valaddr_reg:x3; val_offset:126819*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126819*0 + 3*33*FLEN/8, x4, x1, x2)

inst_42274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000000ffffff; valaddr_reg:x3; val_offset:126822*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126822*0 + 3*34*FLEN/8, x4, x1, x2)

inst_42275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000001ffffff; valaddr_reg:x3; val_offset:126825*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126825*0 + 3*35*FLEN/8, x4, x1, x2)

inst_42276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000003ffffff; valaddr_reg:x3; val_offset:126828*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126828*0 + 3*36*FLEN/8, x4, x1, x2)

inst_42277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000007ffffff; valaddr_reg:x3; val_offset:126831*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126831*0 + 3*37*FLEN/8, x4, x1, x2)

inst_42278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000000fffffff; valaddr_reg:x3; val_offset:126834*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126834*0 + 3*38*FLEN/8, x4, x1, x2)

inst_42279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000001fffffff; valaddr_reg:x3; val_offset:126837*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126837*0 + 3*39*FLEN/8, x4, x1, x2)

inst_42280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000003fffffff; valaddr_reg:x3; val_offset:126840*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126840*0 + 3*40*FLEN/8, x4, x1, x2)

inst_42281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000007fffffff; valaddr_reg:x3; val_offset:126843*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126843*0 + 3*41*FLEN/8, x4, x1, x2)

inst_42282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800000ffffffff; valaddr_reg:x3; val_offset:126846*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126846*0 + 3*42*FLEN/8, x4, x1, x2)

inst_42283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800001ffffffff; valaddr_reg:x3; val_offset:126849*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126849*0 + 3*43*FLEN/8, x4, x1, x2)

inst_42284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800003ffffffff; valaddr_reg:x3; val_offset:126852*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126852*0 + 3*44*FLEN/8, x4, x1, x2)

inst_42285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800007ffffffff; valaddr_reg:x3; val_offset:126855*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126855*0 + 3*45*FLEN/8, x4, x1, x2)

inst_42286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280000fffffffff; valaddr_reg:x3; val_offset:126858*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126858*0 + 3*46*FLEN/8, x4, x1, x2)

inst_42287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280001fffffffff; valaddr_reg:x3; val_offset:126861*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126861*0 + 3*47*FLEN/8, x4, x1, x2)

inst_42288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280003fffffffff; valaddr_reg:x3; val_offset:126864*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126864*0 + 3*48*FLEN/8, x4, x1, x2)

inst_42289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280007fffffffff; valaddr_reg:x3; val_offset:126867*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126867*0 + 3*49*FLEN/8, x4, x1, x2)

inst_42290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828000ffffffffff; valaddr_reg:x3; val_offset:126870*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126870*0 + 3*50*FLEN/8, x4, x1, x2)

inst_42291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828001ffffffffff; valaddr_reg:x3; val_offset:126873*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126873*0 + 3*51*FLEN/8, x4, x1, x2)

inst_42292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828003ffffffffff; valaddr_reg:x3; val_offset:126876*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126876*0 + 3*52*FLEN/8, x4, x1, x2)

inst_42293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828007ffffffffff; valaddr_reg:x3; val_offset:126879*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126879*0 + 3*53*FLEN/8, x4, x1, x2)

inst_42294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82800fffffffffff; valaddr_reg:x3; val_offset:126882*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126882*0 + 3*54*FLEN/8, x4, x1, x2)

inst_42295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82801fffffffffff; valaddr_reg:x3; val_offset:126885*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126885*0 + 3*55*FLEN/8, x4, x1, x2)

inst_42296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82803fffffffffff; valaddr_reg:x3; val_offset:126888*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126888*0 + 3*56*FLEN/8, x4, x1, x2)

inst_42297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x82807fffffffffff; valaddr_reg:x3; val_offset:126891*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126891*0 + 3*57*FLEN/8, x4, x1, x2)

inst_42298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8280ffffffffffff; valaddr_reg:x3; val_offset:126894*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126894*0 + 3*58*FLEN/8, x4, x1, x2)

inst_42299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8281ffffffffffff; valaddr_reg:x3; val_offset:126897*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126897*0 + 3*59*FLEN/8, x4, x1, x2)

inst_42300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8283ffffffffffff; valaddr_reg:x3; val_offset:126900*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126900*0 + 3*60*FLEN/8, x4, x1, x2)

inst_42301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8287ffffffffffff; valaddr_reg:x3; val_offset:126903*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126903*0 + 3*61*FLEN/8, x4, x1, x2)

inst_42302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x8288000000000000; valaddr_reg:x3; val_offset:126906*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126906*0 + 3*62*FLEN/8, x4, x1, x2)

inst_42303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828c000000000000; valaddr_reg:x3; val_offset:126909*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126909*0 + 3*63*FLEN/8, x4, x1, x2)

inst_42304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828e000000000000; valaddr_reg:x3; val_offset:126912*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126912*0 + 3*64*FLEN/8, x4, x1, x2)

inst_42305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828f000000000000; valaddr_reg:x3; val_offset:126915*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126915*0 + 3*65*FLEN/8, x4, x1, x2)

inst_42306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828f800000000000; valaddr_reg:x3; val_offset:126918*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126918*0 + 3*66*FLEN/8, x4, x1, x2)

inst_42307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fc00000000000; valaddr_reg:x3; val_offset:126921*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126921*0 + 3*67*FLEN/8, x4, x1, x2)

inst_42308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fe00000000000; valaddr_reg:x3; val_offset:126924*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126924*0 + 3*68*FLEN/8, x4, x1, x2)

inst_42309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ff00000000000; valaddr_reg:x3; val_offset:126927*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126927*0 + 3*69*FLEN/8, x4, x1, x2)

inst_42310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ff80000000000; valaddr_reg:x3; val_offset:126930*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126930*0 + 3*70*FLEN/8, x4, x1, x2)

inst_42311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffc0000000000; valaddr_reg:x3; val_offset:126933*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126933*0 + 3*71*FLEN/8, x4, x1, x2)

inst_42312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffe0000000000; valaddr_reg:x3; val_offset:126936*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126936*0 + 3*72*FLEN/8, x4, x1, x2)

inst_42313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fff0000000000; valaddr_reg:x3; val_offset:126939*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126939*0 + 3*73*FLEN/8, x4, x1, x2)

inst_42314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fff8000000000; valaddr_reg:x3; val_offset:126942*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126942*0 + 3*74*FLEN/8, x4, x1, x2)

inst_42315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffc000000000; valaddr_reg:x3; val_offset:126945*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126945*0 + 3*75*FLEN/8, x4, x1, x2)

inst_42316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffe000000000; valaddr_reg:x3; val_offset:126948*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126948*0 + 3*76*FLEN/8, x4, x1, x2)

inst_42317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffff000000000; valaddr_reg:x3; val_offset:126951*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126951*0 + 3*77*FLEN/8, x4, x1, x2)

inst_42318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffff800000000; valaddr_reg:x3; val_offset:126954*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126954*0 + 3*78*FLEN/8, x4, x1, x2)

inst_42319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffc00000000; valaddr_reg:x3; val_offset:126957*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126957*0 + 3*79*FLEN/8, x4, x1, x2)

inst_42320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffe00000000; valaddr_reg:x3; val_offset:126960*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126960*0 + 3*80*FLEN/8, x4, x1, x2)

inst_42321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffff00000000; valaddr_reg:x3; val_offset:126963*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126963*0 + 3*81*FLEN/8, x4, x1, x2)

inst_42322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffff80000000; valaddr_reg:x3; val_offset:126966*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126966*0 + 3*82*FLEN/8, x4, x1, x2)

inst_42323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffc0000000; valaddr_reg:x3; val_offset:126969*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126969*0 + 3*83*FLEN/8, x4, x1, x2)

inst_42324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffe0000000; valaddr_reg:x3; val_offset:126972*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126972*0 + 3*84*FLEN/8, x4, x1, x2)

inst_42325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffff0000000; valaddr_reg:x3; val_offset:126975*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126975*0 + 3*85*FLEN/8, x4, x1, x2)

inst_42326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffff8000000; valaddr_reg:x3; val_offset:126978*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126978*0 + 3*86*FLEN/8, x4, x1, x2)

inst_42327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffc000000; valaddr_reg:x3; val_offset:126981*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126981*0 + 3*87*FLEN/8, x4, x1, x2)

inst_42328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffe000000; valaddr_reg:x3; val_offset:126984*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126984*0 + 3*88*FLEN/8, x4, x1, x2)

inst_42329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffff000000; valaddr_reg:x3; val_offset:126987*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126987*0 + 3*89*FLEN/8, x4, x1, x2)

inst_42330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffff800000; valaddr_reg:x3; val_offset:126990*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126990*0 + 3*90*FLEN/8, x4, x1, x2)

inst_42331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffc00000; valaddr_reg:x3; val_offset:126993*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126993*0 + 3*91*FLEN/8, x4, x1, x2)

inst_42332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffe00000; valaddr_reg:x3; val_offset:126996*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126996*0 + 3*92*FLEN/8, x4, x1, x2)

inst_42333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffff00000; valaddr_reg:x3; val_offset:126999*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126999*0 + 3*93*FLEN/8, x4, x1, x2)

inst_42334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffff80000; valaddr_reg:x3; val_offset:127002*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127002*0 + 3*94*FLEN/8, x4, x1, x2)

inst_42335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffc0000; valaddr_reg:x3; val_offset:127005*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127005*0 + 3*95*FLEN/8, x4, x1, x2)

inst_42336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffe0000; valaddr_reg:x3; val_offset:127008*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127008*0 + 3*96*FLEN/8, x4, x1, x2)

inst_42337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffff0000; valaddr_reg:x3; val_offset:127011*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127011*0 + 3*97*FLEN/8, x4, x1, x2)

inst_42338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffff8000; valaddr_reg:x3; val_offset:127014*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127014*0 + 3*98*FLEN/8, x4, x1, x2)

inst_42339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffc000; valaddr_reg:x3; val_offset:127017*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127017*0 + 3*99*FLEN/8, x4, x1, x2)

inst_42340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffe000; valaddr_reg:x3; val_offset:127020*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127020*0 + 3*100*FLEN/8, x4, x1, x2)

inst_42341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffff000; valaddr_reg:x3; val_offset:127023*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127023*0 + 3*101*FLEN/8, x4, x1, x2)

inst_42342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffff800; valaddr_reg:x3; val_offset:127026*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127026*0 + 3*102*FLEN/8, x4, x1, x2)

inst_42343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffc00; valaddr_reg:x3; val_offset:127029*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127029*0 + 3*103*FLEN/8, x4, x1, x2)

inst_42344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffe00; valaddr_reg:x3; val_offset:127032*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127032*0 + 3*104*FLEN/8, x4, x1, x2)

inst_42345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffff00; valaddr_reg:x3; val_offset:127035*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127035*0 + 3*105*FLEN/8, x4, x1, x2)

inst_42346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffff80; valaddr_reg:x3; val_offset:127038*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127038*0 + 3*106*FLEN/8, x4, x1, x2)

inst_42347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffffc0; valaddr_reg:x3; val_offset:127041*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127041*0 + 3*107*FLEN/8, x4, x1, x2)

inst_42348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffffe0; valaddr_reg:x3; val_offset:127044*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127044*0 + 3*108*FLEN/8, x4, x1, x2)

inst_42349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffff0; valaddr_reg:x3; val_offset:127047*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127047*0 + 3*109*FLEN/8, x4, x1, x2)

inst_42350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffff8; valaddr_reg:x3; val_offset:127050*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127050*0 + 3*110*FLEN/8, x4, x1, x2)

inst_42351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffffc; valaddr_reg:x3; val_offset:127053*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127053*0 + 3*111*FLEN/8, x4, x1, x2)

inst_42352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828ffffffffffffe; valaddr_reg:x3; val_offset:127056*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127056*0 + 3*112*FLEN/8, x4, x1, x2)

inst_42353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9f09138a3d3c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99f09138a3d3c9; op2val:0x8000;
op3val:0x828fffffffffffff; valaddr_reg:x3; val_offset:127059*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127059*0 + 3*113*FLEN/8, x4, x1, x2)

inst_42354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:127062*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127062*0 + 3*114*FLEN/8, x4, x1, x2)

inst_42355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:127065*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127065*0 + 3*115*FLEN/8, x4, x1, x2)

inst_42356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:127068*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127068*0 + 3*116*FLEN/8, x4, x1, x2)

inst_42357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:127071*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127071*0 + 3*117*FLEN/8, x4, x1, x2)

inst_42358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:127074*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127074*0 + 3*118*FLEN/8, x4, x1, x2)

inst_42359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:127077*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127077*0 + 3*119*FLEN/8, x4, x1, x2)

inst_42360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:127080*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127080*0 + 3*120*FLEN/8, x4, x1, x2)

inst_42361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:127083*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127083*0 + 3*121*FLEN/8, x4, x1, x2)

inst_42362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:127086*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127086*0 + 3*122*FLEN/8, x4, x1, x2)

inst_42363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:127089*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127089*0 + 3*123*FLEN/8, x4, x1, x2)

inst_42364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:127092*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127092*0 + 3*124*FLEN/8, x4, x1, x2)

inst_42365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:127095*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127095*0 + 3*125*FLEN/8, x4, x1, x2)

inst_42366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:127098*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127098*0 + 3*126*FLEN/8, x4, x1, x2)

inst_42367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:127101*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127101*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_42368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:127104*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127104*0 + 3*128*FLEN/8, x4, x1, x2)

inst_42369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:127107*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127107*0 + 3*129*FLEN/8, x4, x1, x2)

inst_42370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:127110*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127110*0 + 3*130*FLEN/8, x4, x1, x2)

inst_42371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:127113*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127113*0 + 3*131*FLEN/8, x4, x1, x2)

inst_42372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:127116*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127116*0 + 3*132*FLEN/8, x4, x1, x2)

inst_42373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:127119*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127119*0 + 3*133*FLEN/8, x4, x1, x2)

inst_42374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:127122*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127122*0 + 3*134*FLEN/8, x4, x1, x2)

inst_42375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:127125*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127125*0 + 3*135*FLEN/8, x4, x1, x2)

inst_42376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000000000; valaddr_reg:x3; val_offset:127128*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127128*0 + 3*136*FLEN/8, x4, x1, x2)

inst_42377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000000001; valaddr_reg:x3; val_offset:127131*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127131*0 + 3*137*FLEN/8, x4, x1, x2)

inst_42378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000000003; valaddr_reg:x3; val_offset:127134*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127134*0 + 3*138*FLEN/8, x4, x1, x2)

inst_42379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000000007; valaddr_reg:x3; val_offset:127137*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127137*0 + 3*139*FLEN/8, x4, x1, x2)

inst_42380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000000000f; valaddr_reg:x3; val_offset:127140*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127140*0 + 3*140*FLEN/8, x4, x1, x2)

inst_42381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000000001f; valaddr_reg:x3; val_offset:127143*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127143*0 + 3*141*FLEN/8, x4, x1, x2)

inst_42382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000000003f; valaddr_reg:x3; val_offset:127146*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127146*0 + 3*142*FLEN/8, x4, x1, x2)

inst_42383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000000007f; valaddr_reg:x3; val_offset:127149*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127149*0 + 3*143*FLEN/8, x4, x1, x2)

inst_42384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000000000ff; valaddr_reg:x3; val_offset:127152*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127152*0 + 3*144*FLEN/8, x4, x1, x2)

inst_42385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000000001ff; valaddr_reg:x3; val_offset:127155*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127155*0 + 3*145*FLEN/8, x4, x1, x2)

inst_42386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000000003ff; valaddr_reg:x3; val_offset:127158*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127158*0 + 3*146*FLEN/8, x4, x1, x2)

inst_42387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000000007ff; valaddr_reg:x3; val_offset:127161*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127161*0 + 3*147*FLEN/8, x4, x1, x2)

inst_42388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000000fff; valaddr_reg:x3; val_offset:127164*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127164*0 + 3*148*FLEN/8, x4, x1, x2)

inst_42389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000001fff; valaddr_reg:x3; val_offset:127167*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127167*0 + 3*149*FLEN/8, x4, x1, x2)

inst_42390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000003fff; valaddr_reg:x3; val_offset:127170*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127170*0 + 3*150*FLEN/8, x4, x1, x2)

inst_42391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000007fff; valaddr_reg:x3; val_offset:127173*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127173*0 + 3*151*FLEN/8, x4, x1, x2)

inst_42392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000000ffff; valaddr_reg:x3; val_offset:127176*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127176*0 + 3*152*FLEN/8, x4, x1, x2)

inst_42393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000001ffff; valaddr_reg:x3; val_offset:127179*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127179*0 + 3*153*FLEN/8, x4, x1, x2)

inst_42394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000003ffff; valaddr_reg:x3; val_offset:127182*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127182*0 + 3*154*FLEN/8, x4, x1, x2)

inst_42395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000007ffff; valaddr_reg:x3; val_offset:127185*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127185*0 + 3*155*FLEN/8, x4, x1, x2)

inst_42396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000000fffff; valaddr_reg:x3; val_offset:127188*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127188*0 + 3*156*FLEN/8, x4, x1, x2)

inst_42397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000001fffff; valaddr_reg:x3; val_offset:127191*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127191*0 + 3*157*FLEN/8, x4, x1, x2)

inst_42398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000003fffff; valaddr_reg:x3; val_offset:127194*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127194*0 + 3*158*FLEN/8, x4, x1, x2)

inst_42399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000007fffff; valaddr_reg:x3; val_offset:127197*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127197*0 + 3*159*FLEN/8, x4, x1, x2)

inst_42400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000000ffffff; valaddr_reg:x3; val_offset:127200*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127200*0 + 3*160*FLEN/8, x4, x1, x2)

inst_42401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000001ffffff; valaddr_reg:x3; val_offset:127203*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127203*0 + 3*161*FLEN/8, x4, x1, x2)

inst_42402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000003ffffff; valaddr_reg:x3; val_offset:127206*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127206*0 + 3*162*FLEN/8, x4, x1, x2)

inst_42403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000007ffffff; valaddr_reg:x3; val_offset:127209*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127209*0 + 3*163*FLEN/8, x4, x1, x2)

inst_42404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000000fffffff; valaddr_reg:x3; val_offset:127212*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127212*0 + 3*164*FLEN/8, x4, x1, x2)

inst_42405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000001fffffff; valaddr_reg:x3; val_offset:127215*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127215*0 + 3*165*FLEN/8, x4, x1, x2)

inst_42406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000003fffffff; valaddr_reg:x3; val_offset:127218*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127218*0 + 3*166*FLEN/8, x4, x1, x2)

inst_42407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000007fffffff; valaddr_reg:x3; val_offset:127221*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127221*0 + 3*167*FLEN/8, x4, x1, x2)

inst_42408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500000ffffffff; valaddr_reg:x3; val_offset:127224*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127224*0 + 3*168*FLEN/8, x4, x1, x2)

inst_42409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500001ffffffff; valaddr_reg:x3; val_offset:127227*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127227*0 + 3*169*FLEN/8, x4, x1, x2)

inst_42410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500003ffffffff; valaddr_reg:x3; val_offset:127230*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127230*0 + 3*170*FLEN/8, x4, x1, x2)

inst_42411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500007ffffffff; valaddr_reg:x3; val_offset:127233*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127233*0 + 3*171*FLEN/8, x4, x1, x2)

inst_42412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050000fffffffff; valaddr_reg:x3; val_offset:127236*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127236*0 + 3*172*FLEN/8, x4, x1, x2)

inst_42413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050001fffffffff; valaddr_reg:x3; val_offset:127239*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127239*0 + 3*173*FLEN/8, x4, x1, x2)

inst_42414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050003fffffffff; valaddr_reg:x3; val_offset:127242*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127242*0 + 3*174*FLEN/8, x4, x1, x2)

inst_42415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050007fffffffff; valaddr_reg:x3; val_offset:127245*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127245*0 + 3*175*FLEN/8, x4, x1, x2)

inst_42416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805000ffffffffff; valaddr_reg:x3; val_offset:127248*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127248*0 + 3*176*FLEN/8, x4, x1, x2)

inst_42417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805001ffffffffff; valaddr_reg:x3; val_offset:127251*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127251*0 + 3*177*FLEN/8, x4, x1, x2)

inst_42418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805003ffffffffff; valaddr_reg:x3; val_offset:127254*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127254*0 + 3*178*FLEN/8, x4, x1, x2)

inst_42419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805007ffffffffff; valaddr_reg:x3; val_offset:127257*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127257*0 + 3*179*FLEN/8, x4, x1, x2)

inst_42420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80500fffffffffff; valaddr_reg:x3; val_offset:127260*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127260*0 + 3*180*FLEN/8, x4, x1, x2)

inst_42421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80501fffffffffff; valaddr_reg:x3; val_offset:127263*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127263*0 + 3*181*FLEN/8, x4, x1, x2)

inst_42422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80503fffffffffff; valaddr_reg:x3; val_offset:127266*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127266*0 + 3*182*FLEN/8, x4, x1, x2)

inst_42423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x80507fffffffffff; valaddr_reg:x3; val_offset:127269*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127269*0 + 3*183*FLEN/8, x4, x1, x2)

inst_42424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8050ffffffffffff; valaddr_reg:x3; val_offset:127272*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127272*0 + 3*184*FLEN/8, x4, x1, x2)

inst_42425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8051ffffffffffff; valaddr_reg:x3; val_offset:127275*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127275*0 + 3*185*FLEN/8, x4, x1, x2)

inst_42426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8053ffffffffffff; valaddr_reg:x3; val_offset:127278*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127278*0 + 3*186*FLEN/8, x4, x1, x2)

inst_42427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8057ffffffffffff; valaddr_reg:x3; val_offset:127281*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127281*0 + 3*187*FLEN/8, x4, x1, x2)

inst_42428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x8058000000000000; valaddr_reg:x3; val_offset:127284*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127284*0 + 3*188*FLEN/8, x4, x1, x2)

inst_42429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805c000000000000; valaddr_reg:x3; val_offset:127287*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127287*0 + 3*189*FLEN/8, x4, x1, x2)

inst_42430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805e000000000000; valaddr_reg:x3; val_offset:127290*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127290*0 + 3*190*FLEN/8, x4, x1, x2)

inst_42431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805f000000000000; valaddr_reg:x3; val_offset:127293*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127293*0 + 3*191*FLEN/8, x4, x1, x2)

inst_42432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805f800000000000; valaddr_reg:x3; val_offset:127296*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127296*0 + 3*192*FLEN/8, x4, x1, x2)

inst_42433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fc00000000000; valaddr_reg:x3; val_offset:127299*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127299*0 + 3*193*FLEN/8, x4, x1, x2)

inst_42434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fe00000000000; valaddr_reg:x3; val_offset:127302*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127302*0 + 3*194*FLEN/8, x4, x1, x2)

inst_42435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ff00000000000; valaddr_reg:x3; val_offset:127305*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127305*0 + 3*195*FLEN/8, x4, x1, x2)

inst_42436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ff80000000000; valaddr_reg:x3; val_offset:127308*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127308*0 + 3*196*FLEN/8, x4, x1, x2)

inst_42437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffc0000000000; valaddr_reg:x3; val_offset:127311*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127311*0 + 3*197*FLEN/8, x4, x1, x2)

inst_42438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffe0000000000; valaddr_reg:x3; val_offset:127314*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127314*0 + 3*198*FLEN/8, x4, x1, x2)

inst_42439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fff0000000000; valaddr_reg:x3; val_offset:127317*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127317*0 + 3*199*FLEN/8, x4, x1, x2)

inst_42440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fff8000000000; valaddr_reg:x3; val_offset:127320*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127320*0 + 3*200*FLEN/8, x4, x1, x2)

inst_42441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffc000000000; valaddr_reg:x3; val_offset:127323*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127323*0 + 3*201*FLEN/8, x4, x1, x2)

inst_42442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffe000000000; valaddr_reg:x3; val_offset:127326*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127326*0 + 3*202*FLEN/8, x4, x1, x2)

inst_42443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffff000000000; valaddr_reg:x3; val_offset:127329*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127329*0 + 3*203*FLEN/8, x4, x1, x2)

inst_42444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffff800000000; valaddr_reg:x3; val_offset:127332*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127332*0 + 3*204*FLEN/8, x4, x1, x2)

inst_42445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffc00000000; valaddr_reg:x3; val_offset:127335*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127335*0 + 3*205*FLEN/8, x4, x1, x2)

inst_42446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffe00000000; valaddr_reg:x3; val_offset:127338*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127338*0 + 3*206*FLEN/8, x4, x1, x2)

inst_42447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffff00000000; valaddr_reg:x3; val_offset:127341*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127341*0 + 3*207*FLEN/8, x4, x1, x2)

inst_42448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffff80000000; valaddr_reg:x3; val_offset:127344*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127344*0 + 3*208*FLEN/8, x4, x1, x2)

inst_42449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffc0000000; valaddr_reg:x3; val_offset:127347*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127347*0 + 3*209*FLEN/8, x4, x1, x2)

inst_42450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffe0000000; valaddr_reg:x3; val_offset:127350*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127350*0 + 3*210*FLEN/8, x4, x1, x2)

inst_42451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffff0000000; valaddr_reg:x3; val_offset:127353*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127353*0 + 3*211*FLEN/8, x4, x1, x2)

inst_42452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffff8000000; valaddr_reg:x3; val_offset:127356*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127356*0 + 3*212*FLEN/8, x4, x1, x2)

inst_42453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffc000000; valaddr_reg:x3; val_offset:127359*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127359*0 + 3*213*FLEN/8, x4, x1, x2)

inst_42454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffe000000; valaddr_reg:x3; val_offset:127362*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127362*0 + 3*214*FLEN/8, x4, x1, x2)

inst_42455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffff000000; valaddr_reg:x3; val_offset:127365*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127365*0 + 3*215*FLEN/8, x4, x1, x2)

inst_42456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffff800000; valaddr_reg:x3; val_offset:127368*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127368*0 + 3*216*FLEN/8, x4, x1, x2)

inst_42457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffc00000; valaddr_reg:x3; val_offset:127371*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127371*0 + 3*217*FLEN/8, x4, x1, x2)

inst_42458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffe00000; valaddr_reg:x3; val_offset:127374*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127374*0 + 3*218*FLEN/8, x4, x1, x2)

inst_42459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffff00000; valaddr_reg:x3; val_offset:127377*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127377*0 + 3*219*FLEN/8, x4, x1, x2)

inst_42460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffff80000; valaddr_reg:x3; val_offset:127380*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127380*0 + 3*220*FLEN/8, x4, x1, x2)

inst_42461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffc0000; valaddr_reg:x3; val_offset:127383*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127383*0 + 3*221*FLEN/8, x4, x1, x2)

inst_42462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffe0000; valaddr_reg:x3; val_offset:127386*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127386*0 + 3*222*FLEN/8, x4, x1, x2)

inst_42463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffff0000; valaddr_reg:x3; val_offset:127389*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127389*0 + 3*223*FLEN/8, x4, x1, x2)

inst_42464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffff8000; valaddr_reg:x3; val_offset:127392*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127392*0 + 3*224*FLEN/8, x4, x1, x2)

inst_42465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffc000; valaddr_reg:x3; val_offset:127395*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127395*0 + 3*225*FLEN/8, x4, x1, x2)

inst_42466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffe000; valaddr_reg:x3; val_offset:127398*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127398*0 + 3*226*FLEN/8, x4, x1, x2)

inst_42467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffff000; valaddr_reg:x3; val_offset:127401*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127401*0 + 3*227*FLEN/8, x4, x1, x2)

inst_42468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffff800; valaddr_reg:x3; val_offset:127404*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127404*0 + 3*228*FLEN/8, x4, x1, x2)

inst_42469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffc00; valaddr_reg:x3; val_offset:127407*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127407*0 + 3*229*FLEN/8, x4, x1, x2)

inst_42470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffe00; valaddr_reg:x3; val_offset:127410*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127410*0 + 3*230*FLEN/8, x4, x1, x2)

inst_42471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffff00; valaddr_reg:x3; val_offset:127413*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127413*0 + 3*231*FLEN/8, x4, x1, x2)

inst_42472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffff80; valaddr_reg:x3; val_offset:127416*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127416*0 + 3*232*FLEN/8, x4, x1, x2)

inst_42473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffffc0; valaddr_reg:x3; val_offset:127419*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127419*0 + 3*233*FLEN/8, x4, x1, x2)

inst_42474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffffe0; valaddr_reg:x3; val_offset:127422*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127422*0 + 3*234*FLEN/8, x4, x1, x2)

inst_42475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffff0; valaddr_reg:x3; val_offset:127425*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127425*0 + 3*235*FLEN/8, x4, x1, x2)

inst_42476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffff8; valaddr_reg:x3; val_offset:127428*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127428*0 + 3*236*FLEN/8, x4, x1, x2)

inst_42477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffffc; valaddr_reg:x3; val_offset:127431*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127431*0 + 3*237*FLEN/8, x4, x1, x2)

inst_42478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805ffffffffffffe; valaddr_reg:x3; val_offset:127434*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127434*0 + 3*238*FLEN/8, x4, x1, x2)

inst_42479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa06e3d27ea83b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a06e3d27ea83b; op2val:0x8000;
op3val:0x805fffffffffffff; valaddr_reg:x3; val_offset:127437*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127437*0 + 3*239*FLEN/8, x4, x1, x2)

inst_42480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:127440*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127440*0 + 3*240*FLEN/8, x4, x1, x2)

inst_42481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:127443*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127443*0 + 3*241*FLEN/8, x4, x1, x2)

inst_42482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:127446*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127446*0 + 3*242*FLEN/8, x4, x1, x2)

inst_42483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:127449*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127449*0 + 3*243*FLEN/8, x4, x1, x2)

inst_42484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:127452*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127452*0 + 3*244*FLEN/8, x4, x1, x2)

inst_42485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:127455*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127455*0 + 3*245*FLEN/8, x4, x1, x2)

inst_42486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:127458*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127458*0 + 3*246*FLEN/8, x4, x1, x2)

inst_42487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:127461*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127461*0 + 3*247*FLEN/8, x4, x1, x2)

inst_42488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:127464*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127464*0 + 3*248*FLEN/8, x4, x1, x2)

inst_42489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:127467*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127467*0 + 3*249*FLEN/8, x4, x1, x2)

inst_42490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:127470*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127470*0 + 3*250*FLEN/8, x4, x1, x2)

inst_42491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:127473*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127473*0 + 3*251*FLEN/8, x4, x1, x2)

inst_42492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:127476*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127476*0 + 3*252*FLEN/8, x4, x1, x2)

inst_42493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:127479*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127479*0 + 3*253*FLEN/8, x4, x1, x2)

inst_42494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:127482*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127482*0 + 3*254*FLEN/8, x4, x1, x2)

inst_42495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:127485*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127485*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_42496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:127488*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127488*0 + 3*256*FLEN/8, x4, x1, x2)

inst_42497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:127491*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127491*0 + 3*257*FLEN/8, x4, x1, x2)

inst_42498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:127494*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127494*0 + 3*258*FLEN/8, x4, x1, x2)

inst_42499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:127497*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127497*0 + 3*259*FLEN/8, x4, x1, x2)

inst_42500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:127500*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127500*0 + 3*260*FLEN/8, x4, x1, x2)

inst_42501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:127503*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127503*0 + 3*261*FLEN/8, x4, x1, x2)

inst_42502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:127506*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127506*0 + 3*262*FLEN/8, x4, x1, x2)

inst_42503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:127509*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127509*0 + 3*263*FLEN/8, x4, x1, x2)

inst_42504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:127512*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127512*0 + 3*264*FLEN/8, x4, x1, x2)

inst_42505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:127515*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127515*0 + 3*265*FLEN/8, x4, x1, x2)

inst_42506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:127518*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127518*0 + 3*266*FLEN/8, x4, x1, x2)

inst_42507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:127521*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127521*0 + 3*267*FLEN/8, x4, x1, x2)

inst_42508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:127524*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127524*0 + 3*268*FLEN/8, x4, x1, x2)

inst_42509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:127527*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127527*0 + 3*269*FLEN/8, x4, x1, x2)

inst_42510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:127530*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127530*0 + 3*270*FLEN/8, x4, x1, x2)

inst_42511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:127533*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127533*0 + 3*271*FLEN/8, x4, x1, x2)

inst_42512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:127536*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127536*0 + 3*272*FLEN/8, x4, x1, x2)

inst_42513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:127539*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127539*0 + 3*273*FLEN/8, x4, x1, x2)

inst_42514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:127542*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127542*0 + 3*274*FLEN/8, x4, x1, x2)

inst_42515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:127545*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127545*0 + 3*275*FLEN/8, x4, x1, x2)

inst_42516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:127548*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127548*0 + 3*276*FLEN/8, x4, x1, x2)

inst_42517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:127551*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127551*0 + 3*277*FLEN/8, x4, x1, x2)

inst_42518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:127554*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127554*0 + 3*278*FLEN/8, x4, x1, x2)

inst_42519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:127557*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127557*0 + 3*279*FLEN/8, x4, x1, x2)

inst_42520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:127560*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127560*0 + 3*280*FLEN/8, x4, x1, x2)

inst_42521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:127563*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127563*0 + 3*281*FLEN/8, x4, x1, x2)

inst_42522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:127566*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127566*0 + 3*282*FLEN/8, x4, x1, x2)

inst_42523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:127569*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127569*0 + 3*283*FLEN/8, x4, x1, x2)

inst_42524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:127572*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127572*0 + 3*284*FLEN/8, x4, x1, x2)

inst_42525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:127575*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127575*0 + 3*285*FLEN/8, x4, x1, x2)

inst_42526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:127578*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127578*0 + 3*286*FLEN/8, x4, x1, x2)

inst_42527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:127581*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127581*0 + 3*287*FLEN/8, x4, x1, x2)

inst_42528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:127584*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127584*0 + 3*288*FLEN/8, x4, x1, x2)

inst_42529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:127587*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127587*0 + 3*289*FLEN/8, x4, x1, x2)

inst_42530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:127590*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127590*0 + 3*290*FLEN/8, x4, x1, x2)

inst_42531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:127593*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127593*0 + 3*291*FLEN/8, x4, x1, x2)

inst_42532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:127596*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127596*0 + 3*292*FLEN/8, x4, x1, x2)

inst_42533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:127599*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127599*0 + 3*293*FLEN/8, x4, x1, x2)

inst_42534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:127602*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127602*0 + 3*294*FLEN/8, x4, x1, x2)

inst_42535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:127605*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127605*0 + 3*295*FLEN/8, x4, x1, x2)

inst_42536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:127608*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127608*0 + 3*296*FLEN/8, x4, x1, x2)

inst_42537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:127611*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127611*0 + 3*297*FLEN/8, x4, x1, x2)

inst_42538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:127614*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127614*0 + 3*298*FLEN/8, x4, x1, x2)

inst_42539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:127617*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127617*0 + 3*299*FLEN/8, x4, x1, x2)

inst_42540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:127620*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127620*0 + 3*300*FLEN/8, x4, x1, x2)

inst_42541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:127623*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127623*0 + 3*301*FLEN/8, x4, x1, x2)

inst_42542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:127626*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127626*0 + 3*302*FLEN/8, x4, x1, x2)

inst_42543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:127629*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127629*0 + 3*303*FLEN/8, x4, x1, x2)

inst_42544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:127632*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127632*0 + 3*304*FLEN/8, x4, x1, x2)

inst_42545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:127635*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127635*0 + 3*305*FLEN/8, x4, x1, x2)

inst_42546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:127638*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127638*0 + 3*306*FLEN/8, x4, x1, x2)

inst_42547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:127641*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127641*0 + 3*307*FLEN/8, x4, x1, x2)

inst_42548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:127644*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127644*0 + 3*308*FLEN/8, x4, x1, x2)

inst_42549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:127647*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127647*0 + 3*309*FLEN/8, x4, x1, x2)

inst_42550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:127650*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127650*0 + 3*310*FLEN/8, x4, x1, x2)

inst_42551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:127653*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127653*0 + 3*311*FLEN/8, x4, x1, x2)

inst_42552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:127656*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127656*0 + 3*312*FLEN/8, x4, x1, x2)

inst_42553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:127659*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127659*0 + 3*313*FLEN/8, x4, x1, x2)

inst_42554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:127662*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127662*0 + 3*314*FLEN/8, x4, x1, x2)

inst_42555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:127665*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127665*0 + 3*315*FLEN/8, x4, x1, x2)

inst_42556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:127668*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127668*0 + 3*316*FLEN/8, x4, x1, x2)

inst_42557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:127671*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127671*0 + 3*317*FLEN/8, x4, x1, x2)

inst_42558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:127674*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127674*0 + 3*318*FLEN/8, x4, x1, x2)

inst_42559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:127677*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127677*0 + 3*319*FLEN/8, x4, x1, x2)

inst_42560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:127680*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127680*0 + 3*320*FLEN/8, x4, x1, x2)

inst_42561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:127683*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127683*0 + 3*321*FLEN/8, x4, x1, x2)

inst_42562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:127686*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127686*0 + 3*322*FLEN/8, x4, x1, x2)

inst_42563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:127689*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127689*0 + 3*323*FLEN/8, x4, x1, x2)

inst_42564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:127692*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127692*0 + 3*324*FLEN/8, x4, x1, x2)

inst_42565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:127695*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127695*0 + 3*325*FLEN/8, x4, x1, x2)

inst_42566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:127698*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127698*0 + 3*326*FLEN/8, x4, x1, x2)

inst_42567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:127701*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127701*0 + 3*327*FLEN/8, x4, x1, x2)

inst_42568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:127704*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127704*0 + 3*328*FLEN/8, x4, x1, x2)

inst_42569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:127707*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127707*0 + 3*329*FLEN/8, x4, x1, x2)

inst_42570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:127710*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127710*0 + 3*330*FLEN/8, x4, x1, x2)

inst_42571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:127713*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127713*0 + 3*331*FLEN/8, x4, x1, x2)

inst_42572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:127716*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127716*0 + 3*332*FLEN/8, x4, x1, x2)

inst_42573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:127719*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127719*0 + 3*333*FLEN/8, x4, x1, x2)

inst_42574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:127722*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127722*0 + 3*334*FLEN/8, x4, x1, x2)

inst_42575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:127725*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127725*0 + 3*335*FLEN/8, x4, x1, x2)

inst_42576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:127728*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127728*0 + 3*336*FLEN/8, x4, x1, x2)

inst_42577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:127731*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127731*0 + 3*337*FLEN/8, x4, x1, x2)

inst_42578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:127734*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127734*0 + 3*338*FLEN/8, x4, x1, x2)

inst_42579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:127737*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127737*0 + 3*339*FLEN/8, x4, x1, x2)

inst_42580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:127740*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127740*0 + 3*340*FLEN/8, x4, x1, x2)

inst_42581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:127743*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127743*0 + 3*341*FLEN/8, x4, x1, x2)

inst_42582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:127746*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127746*0 + 3*342*FLEN/8, x4, x1, x2)

inst_42583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:127749*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127749*0 + 3*343*FLEN/8, x4, x1, x2)

inst_42584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:127752*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127752*0 + 3*344*FLEN/8, x4, x1, x2)

inst_42585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:127755*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127755*0 + 3*345*FLEN/8, x4, x1, x2)

inst_42586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:127758*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127758*0 + 3*346*FLEN/8, x4, x1, x2)

inst_42587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:127761*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127761*0 + 3*347*FLEN/8, x4, x1, x2)

inst_42588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:127764*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127764*0 + 3*348*FLEN/8, x4, x1, x2)

inst_42589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:127767*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127767*0 + 3*349*FLEN/8, x4, x1, x2)

inst_42590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:127770*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127770*0 + 3*350*FLEN/8, x4, x1, x2)

inst_42591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:127773*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127773*0 + 3*351*FLEN/8, x4, x1, x2)

inst_42592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:127776*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127776*0 + 3*352*FLEN/8, x4, x1, x2)

inst_42593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:127779*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127779*0 + 3*353*FLEN/8, x4, x1, x2)

inst_42594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:127782*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127782*0 + 3*354*FLEN/8, x4, x1, x2)

inst_42595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:127785*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127785*0 + 3*355*FLEN/8, x4, x1, x2)

inst_42596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:127788*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127788*0 + 3*356*FLEN/8, x4, x1, x2)

inst_42597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:127791*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127791*0 + 3*357*FLEN/8, x4, x1, x2)

inst_42598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:127794*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127794*0 + 3*358*FLEN/8, x4, x1, x2)

inst_42599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:127797*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127797*0 + 3*359*FLEN/8, x4, x1, x2)

inst_42600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:127800*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127800*0 + 3*360*FLEN/8, x4, x1, x2)

inst_42601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:127803*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127803*0 + 3*361*FLEN/8, x4, x1, x2)

inst_42602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:127806*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127806*0 + 3*362*FLEN/8, x4, x1, x2)

inst_42603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:127809*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127809*0 + 3*363*FLEN/8, x4, x1, x2)

inst_42604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:127812*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127812*0 + 3*364*FLEN/8, x4, x1, x2)

inst_42605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa085d79e0a057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a085d79e0a057; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:127815*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127815*0 + 3*365*FLEN/8, x4, x1, x2)

inst_42606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000000000; valaddr_reg:x3; val_offset:127818*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127818*0 + 3*366*FLEN/8, x4, x1, x2)

inst_42607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000000001; valaddr_reg:x3; val_offset:127821*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127821*0 + 3*367*FLEN/8, x4, x1, x2)

inst_42608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000000003; valaddr_reg:x3; val_offset:127824*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127824*0 + 3*368*FLEN/8, x4, x1, x2)

inst_42609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000000007; valaddr_reg:x3; val_offset:127827*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127827*0 + 3*369*FLEN/8, x4, x1, x2)

inst_42610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000000000f; valaddr_reg:x3; val_offset:127830*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127830*0 + 3*370*FLEN/8, x4, x1, x2)

inst_42611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000000001f; valaddr_reg:x3; val_offset:127833*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127833*0 + 3*371*FLEN/8, x4, x1, x2)

inst_42612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000000003f; valaddr_reg:x3; val_offset:127836*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127836*0 + 3*372*FLEN/8, x4, x1, x2)

inst_42613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000000007f; valaddr_reg:x3; val_offset:127839*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127839*0 + 3*373*FLEN/8, x4, x1, x2)

inst_42614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000000000ff; valaddr_reg:x3; val_offset:127842*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127842*0 + 3*374*FLEN/8, x4, x1, x2)

inst_42615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000000001ff; valaddr_reg:x3; val_offset:127845*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127845*0 + 3*375*FLEN/8, x4, x1, x2)

inst_42616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000000003ff; valaddr_reg:x3; val_offset:127848*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127848*0 + 3*376*FLEN/8, x4, x1, x2)

inst_42617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000000007ff; valaddr_reg:x3; val_offset:127851*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127851*0 + 3*377*FLEN/8, x4, x1, x2)

inst_42618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000000fff; valaddr_reg:x3; val_offset:127854*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127854*0 + 3*378*FLEN/8, x4, x1, x2)

inst_42619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000001fff; valaddr_reg:x3; val_offset:127857*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127857*0 + 3*379*FLEN/8, x4, x1, x2)

inst_42620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000003fff; valaddr_reg:x3; val_offset:127860*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127860*0 + 3*380*FLEN/8, x4, x1, x2)

inst_42621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000007fff; valaddr_reg:x3; val_offset:127863*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127863*0 + 3*381*FLEN/8, x4, x1, x2)

inst_42622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000000ffff; valaddr_reg:x3; val_offset:127866*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127866*0 + 3*382*FLEN/8, x4, x1, x2)

inst_42623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000001ffff; valaddr_reg:x3; val_offset:127869*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127869*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_42624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000003ffff; valaddr_reg:x3; val_offset:127872*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127872*0 + 3*384*FLEN/8, x4, x1, x2)

inst_42625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000007ffff; valaddr_reg:x3; val_offset:127875*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127875*0 + 3*385*FLEN/8, x4, x1, x2)

inst_42626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000000fffff; valaddr_reg:x3; val_offset:127878*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127878*0 + 3*386*FLEN/8, x4, x1, x2)

inst_42627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000001fffff; valaddr_reg:x3; val_offset:127881*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127881*0 + 3*387*FLEN/8, x4, x1, x2)

inst_42628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000003fffff; valaddr_reg:x3; val_offset:127884*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127884*0 + 3*388*FLEN/8, x4, x1, x2)

inst_42629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000007fffff; valaddr_reg:x3; val_offset:127887*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127887*0 + 3*389*FLEN/8, x4, x1, x2)

inst_42630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000000ffffff; valaddr_reg:x3; val_offset:127890*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127890*0 + 3*390*FLEN/8, x4, x1, x2)

inst_42631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000001ffffff; valaddr_reg:x3; val_offset:127893*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127893*0 + 3*391*FLEN/8, x4, x1, x2)

inst_42632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000003ffffff; valaddr_reg:x3; val_offset:127896*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127896*0 + 3*392*FLEN/8, x4, x1, x2)

inst_42633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000007ffffff; valaddr_reg:x3; val_offset:127899*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127899*0 + 3*393*FLEN/8, x4, x1, x2)

inst_42634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000000fffffff; valaddr_reg:x3; val_offset:127902*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127902*0 + 3*394*FLEN/8, x4, x1, x2)

inst_42635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000001fffffff; valaddr_reg:x3; val_offset:127905*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127905*0 + 3*395*FLEN/8, x4, x1, x2)

inst_42636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000003fffffff; valaddr_reg:x3; val_offset:127908*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127908*0 + 3*396*FLEN/8, x4, x1, x2)

inst_42637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000007fffffff; valaddr_reg:x3; val_offset:127911*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127911*0 + 3*397*FLEN/8, x4, x1, x2)

inst_42638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000000ffffffff; valaddr_reg:x3; val_offset:127914*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127914*0 + 3*398*FLEN/8, x4, x1, x2)

inst_42639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000001ffffffff; valaddr_reg:x3; val_offset:127917*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127917*0 + 3*399*FLEN/8, x4, x1, x2)

inst_42640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000003ffffffff; valaddr_reg:x3; val_offset:127920*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127920*0 + 3*400*FLEN/8, x4, x1, x2)

inst_42641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000007ffffffff; valaddr_reg:x3; val_offset:127923*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127923*0 + 3*401*FLEN/8, x4, x1, x2)

inst_42642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00000fffffffff; valaddr_reg:x3; val_offset:127926*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127926*0 + 3*402*FLEN/8, x4, x1, x2)

inst_42643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00001fffffffff; valaddr_reg:x3; val_offset:127929*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127929*0 + 3*403*FLEN/8, x4, x1, x2)

inst_42644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00003fffffffff; valaddr_reg:x3; val_offset:127932*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127932*0 + 3*404*FLEN/8, x4, x1, x2)

inst_42645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00007fffffffff; valaddr_reg:x3; val_offset:127935*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127935*0 + 3*405*FLEN/8, x4, x1, x2)

inst_42646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0000ffffffffff; valaddr_reg:x3; val_offset:127938*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127938*0 + 3*406*FLEN/8, x4, x1, x2)

inst_42647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0001ffffffffff; valaddr_reg:x3; val_offset:127941*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127941*0 + 3*407*FLEN/8, x4, x1, x2)

inst_42648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0003ffffffffff; valaddr_reg:x3; val_offset:127944*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127944*0 + 3*408*FLEN/8, x4, x1, x2)

inst_42649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0007ffffffffff; valaddr_reg:x3; val_offset:127947*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127947*0 + 3*409*FLEN/8, x4, x1, x2)

inst_42650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a000fffffffffff; valaddr_reg:x3; val_offset:127950*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127950*0 + 3*410*FLEN/8, x4, x1, x2)

inst_42651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a001fffffffffff; valaddr_reg:x3; val_offset:127953*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127953*0 + 3*411*FLEN/8, x4, x1, x2)

inst_42652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a003fffffffffff; valaddr_reg:x3; val_offset:127956*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127956*0 + 3*412*FLEN/8, x4, x1, x2)

inst_42653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a007fffffffffff; valaddr_reg:x3; val_offset:127959*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127959*0 + 3*413*FLEN/8, x4, x1, x2)

inst_42654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a00ffffffffffff; valaddr_reg:x3; val_offset:127962*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127962*0 + 3*414*FLEN/8, x4, x1, x2)

inst_42655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a01ffffffffffff; valaddr_reg:x3; val_offset:127965*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127965*0 + 3*415*FLEN/8, x4, x1, x2)

inst_42656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a03ffffffffffff; valaddr_reg:x3; val_offset:127968*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127968*0 + 3*416*FLEN/8, x4, x1, x2)

inst_42657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a07ffffffffffff; valaddr_reg:x3; val_offset:127971*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127971*0 + 3*417*FLEN/8, x4, x1, x2)

inst_42658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a08000000000000; valaddr_reg:x3; val_offset:127974*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127974*0 + 3*418*FLEN/8, x4, x1, x2)

inst_42659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0c000000000000; valaddr_reg:x3; val_offset:127977*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127977*0 + 3*419*FLEN/8, x4, x1, x2)

inst_42660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0e000000000000; valaddr_reg:x3; val_offset:127980*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127980*0 + 3*420*FLEN/8, x4, x1, x2)

inst_42661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0f000000000000; valaddr_reg:x3; val_offset:127983*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127983*0 + 3*421*FLEN/8, x4, x1, x2)

inst_42662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0f800000000000; valaddr_reg:x3; val_offset:127986*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127986*0 + 3*422*FLEN/8, x4, x1, x2)

inst_42663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fc00000000000; valaddr_reg:x3; val_offset:127989*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127989*0 + 3*423*FLEN/8, x4, x1, x2)

inst_42664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fe00000000000; valaddr_reg:x3; val_offset:127992*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127992*0 + 3*424*FLEN/8, x4, x1, x2)

inst_42665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ff00000000000; valaddr_reg:x3; val_offset:127995*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127995*0 + 3*425*FLEN/8, x4, x1, x2)

inst_42666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ff80000000000; valaddr_reg:x3; val_offset:127998*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 127998*0 + 3*426*FLEN/8, x4, x1, x2)

inst_42667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffc0000000000; valaddr_reg:x3; val_offset:128001*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128001*0 + 3*427*FLEN/8, x4, x1, x2)

inst_42668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffe0000000000; valaddr_reg:x3; val_offset:128004*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128004*0 + 3*428*FLEN/8, x4, x1, x2)

inst_42669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fff0000000000; valaddr_reg:x3; val_offset:128007*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128007*0 + 3*429*FLEN/8, x4, x1, x2)

inst_42670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fff8000000000; valaddr_reg:x3; val_offset:128010*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128010*0 + 3*430*FLEN/8, x4, x1, x2)

inst_42671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffc000000000; valaddr_reg:x3; val_offset:128013*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128013*0 + 3*431*FLEN/8, x4, x1, x2)

inst_42672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffe000000000; valaddr_reg:x3; val_offset:128016*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128016*0 + 3*432*FLEN/8, x4, x1, x2)

inst_42673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffff000000000; valaddr_reg:x3; val_offset:128019*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128019*0 + 3*433*FLEN/8, x4, x1, x2)

inst_42674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffff800000000; valaddr_reg:x3; val_offset:128022*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128022*0 + 3*434*FLEN/8, x4, x1, x2)

inst_42675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffc00000000; valaddr_reg:x3; val_offset:128025*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128025*0 + 3*435*FLEN/8, x4, x1, x2)

inst_42676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffe00000000; valaddr_reg:x3; val_offset:128028*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128028*0 + 3*436*FLEN/8, x4, x1, x2)

inst_42677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffff00000000; valaddr_reg:x3; val_offset:128031*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128031*0 + 3*437*FLEN/8, x4, x1, x2)

inst_42678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffff80000000; valaddr_reg:x3; val_offset:128034*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128034*0 + 3*438*FLEN/8, x4, x1, x2)

inst_42679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffc0000000; valaddr_reg:x3; val_offset:128037*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128037*0 + 3*439*FLEN/8, x4, x1, x2)

inst_42680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffe0000000; valaddr_reg:x3; val_offset:128040*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128040*0 + 3*440*FLEN/8, x4, x1, x2)

inst_42681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffff0000000; valaddr_reg:x3; val_offset:128043*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128043*0 + 3*441*FLEN/8, x4, x1, x2)

inst_42682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffff8000000; valaddr_reg:x3; val_offset:128046*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128046*0 + 3*442*FLEN/8, x4, x1, x2)

inst_42683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffc000000; valaddr_reg:x3; val_offset:128049*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128049*0 + 3*443*FLEN/8, x4, x1, x2)

inst_42684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffe000000; valaddr_reg:x3; val_offset:128052*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128052*0 + 3*444*FLEN/8, x4, x1, x2)

inst_42685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffff000000; valaddr_reg:x3; val_offset:128055*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128055*0 + 3*445*FLEN/8, x4, x1, x2)

inst_42686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffff800000; valaddr_reg:x3; val_offset:128058*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128058*0 + 3*446*FLEN/8, x4, x1, x2)

inst_42687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffc00000; valaddr_reg:x3; val_offset:128061*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128061*0 + 3*447*FLEN/8, x4, x1, x2)

inst_42688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffe00000; valaddr_reg:x3; val_offset:128064*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128064*0 + 3*448*FLEN/8, x4, x1, x2)

inst_42689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffff00000; valaddr_reg:x3; val_offset:128067*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128067*0 + 3*449*FLEN/8, x4, x1, x2)

inst_42690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffff80000; valaddr_reg:x3; val_offset:128070*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128070*0 + 3*450*FLEN/8, x4, x1, x2)

inst_42691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffc0000; valaddr_reg:x3; val_offset:128073*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128073*0 + 3*451*FLEN/8, x4, x1, x2)

inst_42692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffe0000; valaddr_reg:x3; val_offset:128076*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128076*0 + 3*452*FLEN/8, x4, x1, x2)

inst_42693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffff0000; valaddr_reg:x3; val_offset:128079*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128079*0 + 3*453*FLEN/8, x4, x1, x2)

inst_42694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffff8000; valaddr_reg:x3; val_offset:128082*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128082*0 + 3*454*FLEN/8, x4, x1, x2)

inst_42695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffc000; valaddr_reg:x3; val_offset:128085*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128085*0 + 3*455*FLEN/8, x4, x1, x2)

inst_42696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffe000; valaddr_reg:x3; val_offset:128088*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128088*0 + 3*456*FLEN/8, x4, x1, x2)

inst_42697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffff000; valaddr_reg:x3; val_offset:128091*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128091*0 + 3*457*FLEN/8, x4, x1, x2)

inst_42698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffff800; valaddr_reg:x3; val_offset:128094*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128094*0 + 3*458*FLEN/8, x4, x1, x2)

inst_42699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffc00; valaddr_reg:x3; val_offset:128097*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128097*0 + 3*459*FLEN/8, x4, x1, x2)

inst_42700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffe00; valaddr_reg:x3; val_offset:128100*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128100*0 + 3*460*FLEN/8, x4, x1, x2)

inst_42701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffff00; valaddr_reg:x3; val_offset:128103*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128103*0 + 3*461*FLEN/8, x4, x1, x2)

inst_42702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffff80; valaddr_reg:x3; val_offset:128106*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128106*0 + 3*462*FLEN/8, x4, x1, x2)

inst_42703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffffc0; valaddr_reg:x3; val_offset:128109*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128109*0 + 3*463*FLEN/8, x4, x1, x2)

inst_42704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffffe0; valaddr_reg:x3; val_offset:128112*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128112*0 + 3*464*FLEN/8, x4, x1, x2)

inst_42705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffff0; valaddr_reg:x3; val_offset:128115*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128115*0 + 3*465*FLEN/8, x4, x1, x2)

inst_42706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffff8; valaddr_reg:x3; val_offset:128118*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128118*0 + 3*466*FLEN/8, x4, x1, x2)

inst_42707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffffc; valaddr_reg:x3; val_offset:128121*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128121*0 + 3*467*FLEN/8, x4, x1, x2)

inst_42708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0ffffffffffffe; valaddr_reg:x3; val_offset:128124*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128124*0 + 3*468*FLEN/8, x4, x1, x2)

inst_42709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3a0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3a0fffffffffffff; valaddr_reg:x3; val_offset:128127*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128127*0 + 3*469*FLEN/8, x4, x1, x2)

inst_42710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:128130*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128130*0 + 3*470*FLEN/8, x4, x1, x2)

inst_42711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:128133*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128133*0 + 3*471*FLEN/8, x4, x1, x2)

inst_42712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:128136*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128136*0 + 3*472*FLEN/8, x4, x1, x2)

inst_42713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:128139*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128139*0 + 3*473*FLEN/8, x4, x1, x2)

inst_42714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:128142*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128142*0 + 3*474*FLEN/8, x4, x1, x2)

inst_42715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:128145*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128145*0 + 3*475*FLEN/8, x4, x1, x2)

inst_42716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:128148*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128148*0 + 3*476*FLEN/8, x4, x1, x2)

inst_42717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:128151*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128151*0 + 3*477*FLEN/8, x4, x1, x2)

inst_42718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:128154*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128154*0 + 3*478*FLEN/8, x4, x1, x2)

inst_42719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:128157*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128157*0 + 3*479*FLEN/8, x4, x1, x2)

inst_42720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:128160*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128160*0 + 3*480*FLEN/8, x4, x1, x2)

inst_42721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:128163*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128163*0 + 3*481*FLEN/8, x4, x1, x2)

inst_42722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:128166*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128166*0 + 3*482*FLEN/8, x4, x1, x2)

inst_42723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:128169*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128169*0 + 3*483*FLEN/8, x4, x1, x2)

inst_42724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:128172*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128172*0 + 3*484*FLEN/8, x4, x1, x2)

inst_42725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:128175*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128175*0 + 3*485*FLEN/8, x4, x1, x2)

inst_42726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:128178*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128178*0 + 3*486*FLEN/8, x4, x1, x2)

inst_42727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:128181*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128181*0 + 3*487*FLEN/8, x4, x1, x2)

inst_42728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:128184*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128184*0 + 3*488*FLEN/8, x4, x1, x2)

inst_42729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:128187*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128187*0 + 3*489*FLEN/8, x4, x1, x2)

inst_42730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:128190*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128190*0 + 3*490*FLEN/8, x4, x1, x2)

inst_42731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x204 and fm2 == 0x392afc787105a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2892d94829ad; op2val:0x204392afc787105a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:128193*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128193*0 + 3*491*FLEN/8, x4, x1, x2)

inst_42732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000000000; valaddr_reg:x3; val_offset:128196*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128196*0 + 3*492*FLEN/8, x4, x1, x2)

inst_42733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000000001; valaddr_reg:x3; val_offset:128199*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128199*0 + 3*493*FLEN/8, x4, x1, x2)

inst_42734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000000003; valaddr_reg:x3; val_offset:128202*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128202*0 + 3*494*FLEN/8, x4, x1, x2)

inst_42735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000000007; valaddr_reg:x3; val_offset:128205*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128205*0 + 3*495*FLEN/8, x4, x1, x2)

inst_42736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000000000f; valaddr_reg:x3; val_offset:128208*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128208*0 + 3*496*FLEN/8, x4, x1, x2)

inst_42737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000000001f; valaddr_reg:x3; val_offset:128211*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128211*0 + 3*497*FLEN/8, x4, x1, x2)

inst_42738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000000003f; valaddr_reg:x3; val_offset:128214*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128214*0 + 3*498*FLEN/8, x4, x1, x2)

inst_42739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000000007f; valaddr_reg:x3; val_offset:128217*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128217*0 + 3*499*FLEN/8, x4, x1, x2)

inst_42740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000000000ff; valaddr_reg:x3; val_offset:128220*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128220*0 + 3*500*FLEN/8, x4, x1, x2)

inst_42741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000000001ff; valaddr_reg:x3; val_offset:128223*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128223*0 + 3*501*FLEN/8, x4, x1, x2)

inst_42742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000000003ff; valaddr_reg:x3; val_offset:128226*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128226*0 + 3*502*FLEN/8, x4, x1, x2)

inst_42743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000000007ff; valaddr_reg:x3; val_offset:128229*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128229*0 + 3*503*FLEN/8, x4, x1, x2)

inst_42744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000000fff; valaddr_reg:x3; val_offset:128232*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128232*0 + 3*504*FLEN/8, x4, x1, x2)

inst_42745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000001fff; valaddr_reg:x3; val_offset:128235*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128235*0 + 3*505*FLEN/8, x4, x1, x2)

inst_42746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000003fff; valaddr_reg:x3; val_offset:128238*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128238*0 + 3*506*FLEN/8, x4, x1, x2)

inst_42747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000007fff; valaddr_reg:x3; val_offset:128241*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128241*0 + 3*507*FLEN/8, x4, x1, x2)

inst_42748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000000ffff; valaddr_reg:x3; val_offset:128244*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128244*0 + 3*508*FLEN/8, x4, x1, x2)

inst_42749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000001ffff; valaddr_reg:x3; val_offset:128247*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128247*0 + 3*509*FLEN/8, x4, x1, x2)

inst_42750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000003ffff; valaddr_reg:x3; val_offset:128250*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128250*0 + 3*510*FLEN/8, x4, x1, x2)

inst_42751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000007ffff; valaddr_reg:x3; val_offset:128253*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128253*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_42752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000000fffff; valaddr_reg:x3; val_offset:128256*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128256*0 + 3*512*FLEN/8, x4, x1, x2)

inst_42753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000001fffff; valaddr_reg:x3; val_offset:128259*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128259*0 + 3*513*FLEN/8, x4, x1, x2)

inst_42754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000003fffff; valaddr_reg:x3; val_offset:128262*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128262*0 + 3*514*FLEN/8, x4, x1, x2)

inst_42755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000007fffff; valaddr_reg:x3; val_offset:128265*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128265*0 + 3*515*FLEN/8, x4, x1, x2)

inst_42756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000000ffffff; valaddr_reg:x3; val_offset:128268*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128268*0 + 3*516*FLEN/8, x4, x1, x2)

inst_42757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000001ffffff; valaddr_reg:x3; val_offset:128271*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128271*0 + 3*517*FLEN/8, x4, x1, x2)

inst_42758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000003ffffff; valaddr_reg:x3; val_offset:128274*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128274*0 + 3*518*FLEN/8, x4, x1, x2)

inst_42759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000007ffffff; valaddr_reg:x3; val_offset:128277*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128277*0 + 3*519*FLEN/8, x4, x1, x2)

inst_42760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000000fffffff; valaddr_reg:x3; val_offset:128280*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128280*0 + 3*520*FLEN/8, x4, x1, x2)

inst_42761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000001fffffff; valaddr_reg:x3; val_offset:128283*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128283*0 + 3*521*FLEN/8, x4, x1, x2)

inst_42762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000003fffffff; valaddr_reg:x3; val_offset:128286*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128286*0 + 3*522*FLEN/8, x4, x1, x2)

inst_42763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000007fffffff; valaddr_reg:x3; val_offset:128289*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128289*0 + 3*523*FLEN/8, x4, x1, x2)

inst_42764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800000ffffffff; valaddr_reg:x3; val_offset:128292*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128292*0 + 3*524*FLEN/8, x4, x1, x2)

inst_42765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800001ffffffff; valaddr_reg:x3; val_offset:128295*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128295*0 + 3*525*FLEN/8, x4, x1, x2)

inst_42766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800003ffffffff; valaddr_reg:x3; val_offset:128298*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128298*0 + 3*526*FLEN/8, x4, x1, x2)

inst_42767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800007ffffffff; valaddr_reg:x3; val_offset:128301*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128301*0 + 3*527*FLEN/8, x4, x1, x2)

inst_42768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80000fffffffff; valaddr_reg:x3; val_offset:128304*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128304*0 + 3*528*FLEN/8, x4, x1, x2)

inst_42769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80001fffffffff; valaddr_reg:x3; val_offset:128307*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128307*0 + 3*529*FLEN/8, x4, x1, x2)

inst_42770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80003fffffffff; valaddr_reg:x3; val_offset:128310*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128310*0 + 3*530*FLEN/8, x4, x1, x2)

inst_42771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80007fffffffff; valaddr_reg:x3; val_offset:128313*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128313*0 + 3*531*FLEN/8, x4, x1, x2)

inst_42772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8000ffffffffff; valaddr_reg:x3; val_offset:128316*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128316*0 + 3*532*FLEN/8, x4, x1, x2)

inst_42773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8001ffffffffff; valaddr_reg:x3; val_offset:128319*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128319*0 + 3*533*FLEN/8, x4, x1, x2)

inst_42774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8003ffffffffff; valaddr_reg:x3; val_offset:128322*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128322*0 + 3*534*FLEN/8, x4, x1, x2)

inst_42775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8007ffffffffff; valaddr_reg:x3; val_offset:128325*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128325*0 + 3*535*FLEN/8, x4, x1, x2)

inst_42776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c800fffffffffff; valaddr_reg:x3; val_offset:128328*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128328*0 + 3*536*FLEN/8, x4, x1, x2)

inst_42777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c801fffffffffff; valaddr_reg:x3; val_offset:128331*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128331*0 + 3*537*FLEN/8, x4, x1, x2)

inst_42778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c803fffffffffff; valaddr_reg:x3; val_offset:128334*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128334*0 + 3*538*FLEN/8, x4, x1, x2)

inst_42779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c807fffffffffff; valaddr_reg:x3; val_offset:128337*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128337*0 + 3*539*FLEN/8, x4, x1, x2)

inst_42780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c80ffffffffffff; valaddr_reg:x3; val_offset:128340*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128340*0 + 3*540*FLEN/8, x4, x1, x2)

inst_42781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c81ffffffffffff; valaddr_reg:x3; val_offset:128343*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128343*0 + 3*541*FLEN/8, x4, x1, x2)

inst_42782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c83ffffffffffff; valaddr_reg:x3; val_offset:128346*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128346*0 + 3*542*FLEN/8, x4, x1, x2)

inst_42783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c87ffffffffffff; valaddr_reg:x3; val_offset:128349*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128349*0 + 3*543*FLEN/8, x4, x1, x2)

inst_42784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c88000000000000; valaddr_reg:x3; val_offset:128352*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128352*0 + 3*544*FLEN/8, x4, x1, x2)

inst_42785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8c000000000000; valaddr_reg:x3; val_offset:128355*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128355*0 + 3*545*FLEN/8, x4, x1, x2)

inst_42786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8e000000000000; valaddr_reg:x3; val_offset:128358*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128358*0 + 3*546*FLEN/8, x4, x1, x2)

inst_42787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8f000000000000; valaddr_reg:x3; val_offset:128361*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128361*0 + 3*547*FLEN/8, x4, x1, x2)

inst_42788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8f800000000000; valaddr_reg:x3; val_offset:128364*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128364*0 + 3*548*FLEN/8, x4, x1, x2)

inst_42789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fc00000000000; valaddr_reg:x3; val_offset:128367*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128367*0 + 3*549*FLEN/8, x4, x1, x2)

inst_42790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fe00000000000; valaddr_reg:x3; val_offset:128370*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128370*0 + 3*550*FLEN/8, x4, x1, x2)

inst_42791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ff00000000000; valaddr_reg:x3; val_offset:128373*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128373*0 + 3*551*FLEN/8, x4, x1, x2)

inst_42792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ff80000000000; valaddr_reg:x3; val_offset:128376*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128376*0 + 3*552*FLEN/8, x4, x1, x2)

inst_42793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffc0000000000; valaddr_reg:x3; val_offset:128379*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128379*0 + 3*553*FLEN/8, x4, x1, x2)

inst_42794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffe0000000000; valaddr_reg:x3; val_offset:128382*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128382*0 + 3*554*FLEN/8, x4, x1, x2)

inst_42795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fff0000000000; valaddr_reg:x3; val_offset:128385*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128385*0 + 3*555*FLEN/8, x4, x1, x2)

inst_42796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fff8000000000; valaddr_reg:x3; val_offset:128388*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128388*0 + 3*556*FLEN/8, x4, x1, x2)

inst_42797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffc000000000; valaddr_reg:x3; val_offset:128391*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128391*0 + 3*557*FLEN/8, x4, x1, x2)

inst_42798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffe000000000; valaddr_reg:x3; val_offset:128394*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128394*0 + 3*558*FLEN/8, x4, x1, x2)

inst_42799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffff000000000; valaddr_reg:x3; val_offset:128397*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128397*0 + 3*559*FLEN/8, x4, x1, x2)

inst_42800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffff800000000; valaddr_reg:x3; val_offset:128400*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128400*0 + 3*560*FLEN/8, x4, x1, x2)

inst_42801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffc00000000; valaddr_reg:x3; val_offset:128403*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128403*0 + 3*561*FLEN/8, x4, x1, x2)

inst_42802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffe00000000; valaddr_reg:x3; val_offset:128406*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128406*0 + 3*562*FLEN/8, x4, x1, x2)

inst_42803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffff00000000; valaddr_reg:x3; val_offset:128409*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128409*0 + 3*563*FLEN/8, x4, x1, x2)

inst_42804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffff80000000; valaddr_reg:x3; val_offset:128412*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128412*0 + 3*564*FLEN/8, x4, x1, x2)

inst_42805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffc0000000; valaddr_reg:x3; val_offset:128415*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128415*0 + 3*565*FLEN/8, x4, x1, x2)

inst_42806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffe0000000; valaddr_reg:x3; val_offset:128418*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128418*0 + 3*566*FLEN/8, x4, x1, x2)

inst_42807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffff0000000; valaddr_reg:x3; val_offset:128421*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128421*0 + 3*567*FLEN/8, x4, x1, x2)

inst_42808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffff8000000; valaddr_reg:x3; val_offset:128424*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128424*0 + 3*568*FLEN/8, x4, x1, x2)

inst_42809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffc000000; valaddr_reg:x3; val_offset:128427*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128427*0 + 3*569*FLEN/8, x4, x1, x2)

inst_42810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffe000000; valaddr_reg:x3; val_offset:128430*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128430*0 + 3*570*FLEN/8, x4, x1, x2)

inst_42811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffff000000; valaddr_reg:x3; val_offset:128433*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128433*0 + 3*571*FLEN/8, x4, x1, x2)

inst_42812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffff800000; valaddr_reg:x3; val_offset:128436*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128436*0 + 3*572*FLEN/8, x4, x1, x2)

inst_42813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffc00000; valaddr_reg:x3; val_offset:128439*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128439*0 + 3*573*FLEN/8, x4, x1, x2)

inst_42814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffe00000; valaddr_reg:x3; val_offset:128442*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128442*0 + 3*574*FLEN/8, x4, x1, x2)

inst_42815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffff00000; valaddr_reg:x3; val_offset:128445*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128445*0 + 3*575*FLEN/8, x4, x1, x2)

inst_42816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffff80000; valaddr_reg:x3; val_offset:128448*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128448*0 + 3*576*FLEN/8, x4, x1, x2)

inst_42817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffc0000; valaddr_reg:x3; val_offset:128451*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128451*0 + 3*577*FLEN/8, x4, x1, x2)

inst_42818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffe0000; valaddr_reg:x3; val_offset:128454*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128454*0 + 3*578*FLEN/8, x4, x1, x2)

inst_42819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffff0000; valaddr_reg:x3; val_offset:128457*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128457*0 + 3*579*FLEN/8, x4, x1, x2)

inst_42820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffff8000; valaddr_reg:x3; val_offset:128460*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128460*0 + 3*580*FLEN/8, x4, x1, x2)

inst_42821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffc000; valaddr_reg:x3; val_offset:128463*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128463*0 + 3*581*FLEN/8, x4, x1, x2)

inst_42822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffe000; valaddr_reg:x3; val_offset:128466*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128466*0 + 3*582*FLEN/8, x4, x1, x2)

inst_42823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffff000; valaddr_reg:x3; val_offset:128469*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128469*0 + 3*583*FLEN/8, x4, x1, x2)

inst_42824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffff800; valaddr_reg:x3; val_offset:128472*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128472*0 + 3*584*FLEN/8, x4, x1, x2)

inst_42825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffc00; valaddr_reg:x3; val_offset:128475*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128475*0 + 3*585*FLEN/8, x4, x1, x2)

inst_42826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffe00; valaddr_reg:x3; val_offset:128478*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128478*0 + 3*586*FLEN/8, x4, x1, x2)

inst_42827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffff00; valaddr_reg:x3; val_offset:128481*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128481*0 + 3*587*FLEN/8, x4, x1, x2)

inst_42828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffff80; valaddr_reg:x3; val_offset:128484*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128484*0 + 3*588*FLEN/8, x4, x1, x2)

inst_42829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffffc0; valaddr_reg:x3; val_offset:128487*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128487*0 + 3*589*FLEN/8, x4, x1, x2)

inst_42830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffffe0; valaddr_reg:x3; val_offset:128490*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128490*0 + 3*590*FLEN/8, x4, x1, x2)

inst_42831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffff0; valaddr_reg:x3; val_offset:128493*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128493*0 + 3*591*FLEN/8, x4, x1, x2)

inst_42832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffff8; valaddr_reg:x3; val_offset:128496*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128496*0 + 3*592*FLEN/8, x4, x1, x2)

inst_42833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffffc; valaddr_reg:x3; val_offset:128499*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128499*0 + 3*593*FLEN/8, x4, x1, x2)

inst_42834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8ffffffffffffe; valaddr_reg:x3; val_offset:128502*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128502*0 + 3*594*FLEN/8, x4, x1, x2)

inst_42835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3c8fffffffffffff; valaddr_reg:x3; val_offset:128505*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128505*0 + 3*595*FLEN/8, x4, x1, x2)

inst_42836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:128508*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128508*0 + 3*596*FLEN/8, x4, x1, x2)

inst_42837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:128511*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128511*0 + 3*597*FLEN/8, x4, x1, x2)

inst_42838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:128514*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128514*0 + 3*598*FLEN/8, x4, x1, x2)

inst_42839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:128517*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128517*0 + 3*599*FLEN/8, x4, x1, x2)

inst_42840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:128520*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128520*0 + 3*600*FLEN/8, x4, x1, x2)

inst_42841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:128523*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128523*0 + 3*601*FLEN/8, x4, x1, x2)

inst_42842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:128526*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128526*0 + 3*602*FLEN/8, x4, x1, x2)

inst_42843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:128529*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128529*0 + 3*603*FLEN/8, x4, x1, x2)

inst_42844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:128532*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128532*0 + 3*604*FLEN/8, x4, x1, x2)

inst_42845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:128535*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128535*0 + 3*605*FLEN/8, x4, x1, x2)

inst_42846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:128538*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128538*0 + 3*606*FLEN/8, x4, x1, x2)

inst_42847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:128541*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128541*0 + 3*607*FLEN/8, x4, x1, x2)

inst_42848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:128544*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128544*0 + 3*608*FLEN/8, x4, x1, x2)

inst_42849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:128547*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128547*0 + 3*609*FLEN/8, x4, x1, x2)

inst_42850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:128550*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128550*0 + 3*610*FLEN/8, x4, x1, x2)

inst_42851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:128553*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128553*0 + 3*611*FLEN/8, x4, x1, x2)

inst_42852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:128556*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128556*0 + 3*612*FLEN/8, x4, x1, x2)

inst_42853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:128559*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128559*0 + 3*613*FLEN/8, x4, x1, x2)

inst_42854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:128562*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128562*0 + 3*614*FLEN/8, x4, x1, x2)

inst_42855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:128565*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128565*0 + 3*615*FLEN/8, x4, x1, x2)

inst_42856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:128568*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128568*0 + 3*616*FLEN/8, x4, x1, x2)

inst_42857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x37aeb5c1a1ba7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a487d2d192e03; op2val:0x20437aeb5c1a1ba7;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:128571*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128571*0 + 3*617*FLEN/8, x4, x1, x2)

inst_42858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:128574*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128574*0 + 3*618*FLEN/8, x4, x1, x2)

inst_42859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:128577*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128577*0 + 3*619*FLEN/8, x4, x1, x2)

inst_42860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:128580*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128580*0 + 3*620*FLEN/8, x4, x1, x2)

inst_42861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:128583*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128583*0 + 3*621*FLEN/8, x4, x1, x2)

inst_42862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:128586*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128586*0 + 3*622*FLEN/8, x4, x1, x2)

inst_42863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:128589*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128589*0 + 3*623*FLEN/8, x4, x1, x2)

inst_42864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:128592*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128592*0 + 3*624*FLEN/8, x4, x1, x2)

inst_42865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:128595*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128595*0 + 3*625*FLEN/8, x4, x1, x2)

inst_42866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:128598*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128598*0 + 3*626*FLEN/8, x4, x1, x2)

inst_42867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:128601*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128601*0 + 3*627*FLEN/8, x4, x1, x2)

inst_42868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:128604*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128604*0 + 3*628*FLEN/8, x4, x1, x2)

inst_42869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:128607*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128607*0 + 3*629*FLEN/8, x4, x1, x2)

inst_42870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:128610*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128610*0 + 3*630*FLEN/8, x4, x1, x2)

inst_42871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:128613*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128613*0 + 3*631*FLEN/8, x4, x1, x2)

inst_42872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:128616*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128616*0 + 3*632*FLEN/8, x4, x1, x2)

inst_42873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:128619*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128619*0 + 3*633*FLEN/8, x4, x1, x2)

inst_42874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:128622*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128622*0 + 3*634*FLEN/8, x4, x1, x2)

inst_42875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:128625*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128625*0 + 3*635*FLEN/8, x4, x1, x2)

inst_42876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:128628*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128628*0 + 3*636*FLEN/8, x4, x1, x2)

inst_42877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:128631*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128631*0 + 3*637*FLEN/8, x4, x1, x2)

inst_42878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:128634*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128634*0 + 3*638*FLEN/8, x4, x1, x2)

inst_42879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:128637*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128637*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_42880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000000000; valaddr_reg:x3; val_offset:128640*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128640*0 + 3*640*FLEN/8, x4, x1, x2)

inst_42881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000000001; valaddr_reg:x3; val_offset:128643*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128643*0 + 3*641*FLEN/8, x4, x1, x2)

inst_42882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000000003; valaddr_reg:x3; val_offset:128646*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128646*0 + 3*642*FLEN/8, x4, x1, x2)

inst_42883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000000007; valaddr_reg:x3; val_offset:128649*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128649*0 + 3*643*FLEN/8, x4, x1, x2)

inst_42884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000000000f; valaddr_reg:x3; val_offset:128652*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128652*0 + 3*644*FLEN/8, x4, x1, x2)

inst_42885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000000001f; valaddr_reg:x3; val_offset:128655*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128655*0 + 3*645*FLEN/8, x4, x1, x2)

inst_42886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000000003f; valaddr_reg:x3; val_offset:128658*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128658*0 + 3*646*FLEN/8, x4, x1, x2)

inst_42887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000000007f; valaddr_reg:x3; val_offset:128661*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128661*0 + 3*647*FLEN/8, x4, x1, x2)

inst_42888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000000000ff; valaddr_reg:x3; val_offset:128664*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128664*0 + 3*648*FLEN/8, x4, x1, x2)

inst_42889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000000001ff; valaddr_reg:x3; val_offset:128667*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128667*0 + 3*649*FLEN/8, x4, x1, x2)

inst_42890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000000003ff; valaddr_reg:x3; val_offset:128670*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128670*0 + 3*650*FLEN/8, x4, x1, x2)

inst_42891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000000007ff; valaddr_reg:x3; val_offset:128673*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128673*0 + 3*651*FLEN/8, x4, x1, x2)

inst_42892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000000fff; valaddr_reg:x3; val_offset:128676*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128676*0 + 3*652*FLEN/8, x4, x1, x2)

inst_42893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000001fff; valaddr_reg:x3; val_offset:128679*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128679*0 + 3*653*FLEN/8, x4, x1, x2)

inst_42894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000003fff; valaddr_reg:x3; val_offset:128682*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128682*0 + 3*654*FLEN/8, x4, x1, x2)

inst_42895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000007fff; valaddr_reg:x3; val_offset:128685*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128685*0 + 3*655*FLEN/8, x4, x1, x2)

inst_42896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000000ffff; valaddr_reg:x3; val_offset:128688*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128688*0 + 3*656*FLEN/8, x4, x1, x2)

inst_42897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000001ffff; valaddr_reg:x3; val_offset:128691*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128691*0 + 3*657*FLEN/8, x4, x1, x2)

inst_42898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000003ffff; valaddr_reg:x3; val_offset:128694*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128694*0 + 3*658*FLEN/8, x4, x1, x2)

inst_42899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000007ffff; valaddr_reg:x3; val_offset:128697*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128697*0 + 3*659*FLEN/8, x4, x1, x2)

inst_42900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000000fffff; valaddr_reg:x3; val_offset:128700*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128700*0 + 3*660*FLEN/8, x4, x1, x2)

inst_42901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000001fffff; valaddr_reg:x3; val_offset:128703*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128703*0 + 3*661*FLEN/8, x4, x1, x2)

inst_42902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000003fffff; valaddr_reg:x3; val_offset:128706*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128706*0 + 3*662*FLEN/8, x4, x1, x2)

inst_42903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000007fffff; valaddr_reg:x3; val_offset:128709*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128709*0 + 3*663*FLEN/8, x4, x1, x2)

inst_42904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000000ffffff; valaddr_reg:x3; val_offset:128712*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128712*0 + 3*664*FLEN/8, x4, x1, x2)

inst_42905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000001ffffff; valaddr_reg:x3; val_offset:128715*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128715*0 + 3*665*FLEN/8, x4, x1, x2)

inst_42906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000003ffffff; valaddr_reg:x3; val_offset:128718*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128718*0 + 3*666*FLEN/8, x4, x1, x2)

inst_42907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000007ffffff; valaddr_reg:x3; val_offset:128721*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128721*0 + 3*667*FLEN/8, x4, x1, x2)

inst_42908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000000fffffff; valaddr_reg:x3; val_offset:128724*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128724*0 + 3*668*FLEN/8, x4, x1, x2)

inst_42909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000001fffffff; valaddr_reg:x3; val_offset:128727*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128727*0 + 3*669*FLEN/8, x4, x1, x2)

inst_42910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000003fffffff; valaddr_reg:x3; val_offset:128730*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128730*0 + 3*670*FLEN/8, x4, x1, x2)

inst_42911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000007fffffff; valaddr_reg:x3; val_offset:128733*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128733*0 + 3*671*FLEN/8, x4, x1, x2)

inst_42912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300000ffffffff; valaddr_reg:x3; val_offset:128736*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128736*0 + 3*672*FLEN/8, x4, x1, x2)

inst_42913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300001ffffffff; valaddr_reg:x3; val_offset:128739*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128739*0 + 3*673*FLEN/8, x4, x1, x2)

inst_42914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300003ffffffff; valaddr_reg:x3; val_offset:128742*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128742*0 + 3*674*FLEN/8, x4, x1, x2)

inst_42915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300007ffffffff; valaddr_reg:x3; val_offset:128745*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128745*0 + 3*675*FLEN/8, x4, x1, x2)

inst_42916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230000fffffffff; valaddr_reg:x3; val_offset:128748*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128748*0 + 3*676*FLEN/8, x4, x1, x2)

inst_42917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230001fffffffff; valaddr_reg:x3; val_offset:128751*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128751*0 + 3*677*FLEN/8, x4, x1, x2)

inst_42918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230003fffffffff; valaddr_reg:x3; val_offset:128754*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128754*0 + 3*678*FLEN/8, x4, x1, x2)

inst_42919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230007fffffffff; valaddr_reg:x3; val_offset:128757*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128757*0 + 3*679*FLEN/8, x4, x1, x2)

inst_42920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823000ffffffffff; valaddr_reg:x3; val_offset:128760*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128760*0 + 3*680*FLEN/8, x4, x1, x2)

inst_42921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823001ffffffffff; valaddr_reg:x3; val_offset:128763*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128763*0 + 3*681*FLEN/8, x4, x1, x2)

inst_42922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823003ffffffffff; valaddr_reg:x3; val_offset:128766*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128766*0 + 3*682*FLEN/8, x4, x1, x2)

inst_42923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823007ffffffffff; valaddr_reg:x3; val_offset:128769*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128769*0 + 3*683*FLEN/8, x4, x1, x2)

inst_42924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82300fffffffffff; valaddr_reg:x3; val_offset:128772*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128772*0 + 3*684*FLEN/8, x4, x1, x2)

inst_42925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82301fffffffffff; valaddr_reg:x3; val_offset:128775*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128775*0 + 3*685*FLEN/8, x4, x1, x2)

inst_42926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82303fffffffffff; valaddr_reg:x3; val_offset:128778*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128778*0 + 3*686*FLEN/8, x4, x1, x2)

inst_42927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x82307fffffffffff; valaddr_reg:x3; val_offset:128781*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128781*0 + 3*687*FLEN/8, x4, x1, x2)

inst_42928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8230ffffffffffff; valaddr_reg:x3; val_offset:128784*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128784*0 + 3*688*FLEN/8, x4, x1, x2)

inst_42929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8231ffffffffffff; valaddr_reg:x3; val_offset:128787*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128787*0 + 3*689*FLEN/8, x4, x1, x2)

inst_42930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8233ffffffffffff; valaddr_reg:x3; val_offset:128790*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128790*0 + 3*690*FLEN/8, x4, x1, x2)

inst_42931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8237ffffffffffff; valaddr_reg:x3; val_offset:128793*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128793*0 + 3*691*FLEN/8, x4, x1, x2)

inst_42932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x8238000000000000; valaddr_reg:x3; val_offset:128796*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128796*0 + 3*692*FLEN/8, x4, x1, x2)

inst_42933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823c000000000000; valaddr_reg:x3; val_offset:128799*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128799*0 + 3*693*FLEN/8, x4, x1, x2)

inst_42934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823e000000000000; valaddr_reg:x3; val_offset:128802*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128802*0 + 3*694*FLEN/8, x4, x1, x2)

inst_42935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823f000000000000; valaddr_reg:x3; val_offset:128805*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128805*0 + 3*695*FLEN/8, x4, x1, x2)

inst_42936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823f800000000000; valaddr_reg:x3; val_offset:128808*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128808*0 + 3*696*FLEN/8, x4, x1, x2)

inst_42937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fc00000000000; valaddr_reg:x3; val_offset:128811*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128811*0 + 3*697*FLEN/8, x4, x1, x2)

inst_42938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fe00000000000; valaddr_reg:x3; val_offset:128814*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128814*0 + 3*698*FLEN/8, x4, x1, x2)

inst_42939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ff00000000000; valaddr_reg:x3; val_offset:128817*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128817*0 + 3*699*FLEN/8, x4, x1, x2)

inst_42940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ff80000000000; valaddr_reg:x3; val_offset:128820*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128820*0 + 3*700*FLEN/8, x4, x1, x2)

inst_42941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffc0000000000; valaddr_reg:x3; val_offset:128823*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128823*0 + 3*701*FLEN/8, x4, x1, x2)

inst_42942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffe0000000000; valaddr_reg:x3; val_offset:128826*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128826*0 + 3*702*FLEN/8, x4, x1, x2)

inst_42943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fff0000000000; valaddr_reg:x3; val_offset:128829*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128829*0 + 3*703*FLEN/8, x4, x1, x2)

inst_42944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fff8000000000; valaddr_reg:x3; val_offset:128832*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128832*0 + 3*704*FLEN/8, x4, x1, x2)

inst_42945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffc000000000; valaddr_reg:x3; val_offset:128835*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128835*0 + 3*705*FLEN/8, x4, x1, x2)

inst_42946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffe000000000; valaddr_reg:x3; val_offset:128838*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128838*0 + 3*706*FLEN/8, x4, x1, x2)

inst_42947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffff000000000; valaddr_reg:x3; val_offset:128841*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128841*0 + 3*707*FLEN/8, x4, x1, x2)

inst_42948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffff800000000; valaddr_reg:x3; val_offset:128844*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128844*0 + 3*708*FLEN/8, x4, x1, x2)

inst_42949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffc00000000; valaddr_reg:x3; val_offset:128847*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128847*0 + 3*709*FLEN/8, x4, x1, x2)

inst_42950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffe00000000; valaddr_reg:x3; val_offset:128850*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128850*0 + 3*710*FLEN/8, x4, x1, x2)

inst_42951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffff00000000; valaddr_reg:x3; val_offset:128853*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128853*0 + 3*711*FLEN/8, x4, x1, x2)

inst_42952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffff80000000; valaddr_reg:x3; val_offset:128856*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128856*0 + 3*712*FLEN/8, x4, x1, x2)

inst_42953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffc0000000; valaddr_reg:x3; val_offset:128859*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128859*0 + 3*713*FLEN/8, x4, x1, x2)

inst_42954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffe0000000; valaddr_reg:x3; val_offset:128862*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128862*0 + 3*714*FLEN/8, x4, x1, x2)

inst_42955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffff0000000; valaddr_reg:x3; val_offset:128865*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128865*0 + 3*715*FLEN/8, x4, x1, x2)

inst_42956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffff8000000; valaddr_reg:x3; val_offset:128868*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128868*0 + 3*716*FLEN/8, x4, x1, x2)

inst_42957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffc000000; valaddr_reg:x3; val_offset:128871*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128871*0 + 3*717*FLEN/8, x4, x1, x2)

inst_42958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffe000000; valaddr_reg:x3; val_offset:128874*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128874*0 + 3*718*FLEN/8, x4, x1, x2)

inst_42959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffff000000; valaddr_reg:x3; val_offset:128877*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128877*0 + 3*719*FLEN/8, x4, x1, x2)

inst_42960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffff800000; valaddr_reg:x3; val_offset:128880*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128880*0 + 3*720*FLEN/8, x4, x1, x2)

inst_42961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffc00000; valaddr_reg:x3; val_offset:128883*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128883*0 + 3*721*FLEN/8, x4, x1, x2)

inst_42962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffe00000; valaddr_reg:x3; val_offset:128886*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128886*0 + 3*722*FLEN/8, x4, x1, x2)

inst_42963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffff00000; valaddr_reg:x3; val_offset:128889*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128889*0 + 3*723*FLEN/8, x4, x1, x2)

inst_42964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffff80000; valaddr_reg:x3; val_offset:128892*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128892*0 + 3*724*FLEN/8, x4, x1, x2)

inst_42965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffc0000; valaddr_reg:x3; val_offset:128895*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128895*0 + 3*725*FLEN/8, x4, x1, x2)

inst_42966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffe0000; valaddr_reg:x3; val_offset:128898*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128898*0 + 3*726*FLEN/8, x4, x1, x2)

inst_42967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffff0000; valaddr_reg:x3; val_offset:128901*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128901*0 + 3*727*FLEN/8, x4, x1, x2)

inst_42968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffff8000; valaddr_reg:x3; val_offset:128904*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128904*0 + 3*728*FLEN/8, x4, x1, x2)

inst_42969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffc000; valaddr_reg:x3; val_offset:128907*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128907*0 + 3*729*FLEN/8, x4, x1, x2)

inst_42970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffe000; valaddr_reg:x3; val_offset:128910*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128910*0 + 3*730*FLEN/8, x4, x1, x2)

inst_42971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffff000; valaddr_reg:x3; val_offset:128913*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128913*0 + 3*731*FLEN/8, x4, x1, x2)

inst_42972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffff800; valaddr_reg:x3; val_offset:128916*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128916*0 + 3*732*FLEN/8, x4, x1, x2)

inst_42973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffc00; valaddr_reg:x3; val_offset:128919*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128919*0 + 3*733*FLEN/8, x4, x1, x2)

inst_42974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffe00; valaddr_reg:x3; val_offset:128922*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128922*0 + 3*734*FLEN/8, x4, x1, x2)

inst_42975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffff00; valaddr_reg:x3; val_offset:128925*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128925*0 + 3*735*FLEN/8, x4, x1, x2)

inst_42976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffff80; valaddr_reg:x3; val_offset:128928*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128928*0 + 3*736*FLEN/8, x4, x1, x2)

inst_42977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffffc0; valaddr_reg:x3; val_offset:128931*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128931*0 + 3*737*FLEN/8, x4, x1, x2)

inst_42978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffffe0; valaddr_reg:x3; val_offset:128934*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128934*0 + 3*738*FLEN/8, x4, x1, x2)

inst_42979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffff0; valaddr_reg:x3; val_offset:128937*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128937*0 + 3*739*FLEN/8, x4, x1, x2)

inst_42980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffff8; valaddr_reg:x3; val_offset:128940*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128940*0 + 3*740*FLEN/8, x4, x1, x2)

inst_42981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffffc; valaddr_reg:x3; val_offset:128943*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128943*0 + 3*741*FLEN/8, x4, x1, x2)

inst_42982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823ffffffffffffe; valaddr_reg:x3; val_offset:128946*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128946*0 + 3*742*FLEN/8, x4, x1, x2)

inst_42983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa5ac383168515 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a5ac383168515; op2val:0x8000;
op3val:0x823fffffffffffff; valaddr_reg:x3; val_offset:128949*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128949*0 + 3*743*FLEN/8, x4, x1, x2)

inst_42984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:128952*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128952*0 + 3*744*FLEN/8, x4, x1, x2)

inst_42985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:128955*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128955*0 + 3*745*FLEN/8, x4, x1, x2)

inst_42986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:128958*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128958*0 + 3*746*FLEN/8, x4, x1, x2)

inst_42987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:128961*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128961*0 + 3*747*FLEN/8, x4, x1, x2)

inst_42988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:128964*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128964*0 + 3*748*FLEN/8, x4, x1, x2)

inst_42989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:128967*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128967*0 + 3*749*FLEN/8, x4, x1, x2)

inst_42990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:128970*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128970*0 + 3*750*FLEN/8, x4, x1, x2)

inst_42991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:128973*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128973*0 + 3*751*FLEN/8, x4, x1, x2)

inst_42992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:128976*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128976*0 + 3*752*FLEN/8, x4, x1, x2)

inst_42993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:128979*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128979*0 + 3*753*FLEN/8, x4, x1, x2)

inst_42994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:128982*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128982*0 + 3*754*FLEN/8, x4, x1, x2)

inst_42995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:128985*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128985*0 + 3*755*FLEN/8, x4, x1, x2)

inst_42996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:128988*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128988*0 + 3*756*FLEN/8, x4, x1, x2)

inst_42997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:128991*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128991*0 + 3*757*FLEN/8, x4, x1, x2)

inst_42998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:128994*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128994*0 + 3*758*FLEN/8, x4, x1, x2)

inst_42999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:128997*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 128997*0 + 3*759*FLEN/8, x4, x1, x2)

inst_43000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:129000*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129000*0 + 3*760*FLEN/8, x4, x1, x2)

inst_43001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:129003*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129003*0 + 3*761*FLEN/8, x4, x1, x2)

inst_43002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:129006*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129006*0 + 3*762*FLEN/8, x4, x1, x2)

inst_43003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:129009*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129009*0 + 3*763*FLEN/8, x4, x1, x2)

inst_43004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:129012*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129012*0 + 3*764*FLEN/8, x4, x1, x2)

inst_43005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:129015*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129015*0 + 3*765*FLEN/8, x4, x1, x2)

inst_43006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8030000000000000; valaddr_reg:x3; val_offset:129018*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129018*0 + 3*766*FLEN/8, x4, x1, x2)

inst_43007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa69759f2f3273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a69759f2f3273; op2val:0x8000;
op3val:0x8030000000000001; valaddr_reg:x3; val_offset:129021*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129021*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595648,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595649,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595651,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595655,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595663,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595679,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595711,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595775,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595903,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596159,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596671,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949597695,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949599743,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949603839,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949612031,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949628415,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949661183,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949726719,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949857791,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950119935,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950644223,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021951692799,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021953789951,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021957984255,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021966372863,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021983150079,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022016704511,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022083813375,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022218031103,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022486466559,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516023023337471,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516024097079295,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516026244562943,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516030539530239,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516039129464831,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516056309334015,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516090669072383,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516159388549119,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516296827502591,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516571705409535,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403517121461223423,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403518220972851199,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403520419996106751,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403524818042617855,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403533614135640063,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403551206321684479,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403586390693773311,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403656759437950975,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403797496926306303,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404078971903016959,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404641921856438271,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280895,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280896,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9406893721670123520,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407456671623544832,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407738146600255488,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407878884088610816,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407949252832788480,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407984437204877312,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408002029390921728,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408010825483943936,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408015223530455040,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408017422553710592,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408018522065338368,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019071821152256,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019346699059200,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019484138012672,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019552857489408,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019587217227776,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019604397096960,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019612987031552,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019617281998848,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019619429482496,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019620503224320,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621040095232,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621308530688,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621442748416,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621509857280,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621543411712,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621560188928,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621568577536,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621572771840,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621574868992,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621575917568,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576441856,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576704000,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576835072,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576900608,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576933376,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576949760,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576957952,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576962048,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576964096,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965120,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965632,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965888,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966016,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966080,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966112,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966128,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966136,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966140,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966142,64,FLEN)
NAN_BOXED(6888801611551069129,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966143,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628288,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628289,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628291,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628295,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628303,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628319,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628351,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628415,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628543,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628799,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991629311,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991630335,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991632383,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991636479,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991644671,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991661055,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991693823,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991759359,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991890431,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992152575,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992676863,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034993725439,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034995822591,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035000016895,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035008405503,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035025182719,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035058737151,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035125846015,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035260063743,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035528499199,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890036065370111,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890037139111935,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890039286595583,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890043581562879,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890052171497471,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890069351366655,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890103711105023,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890172430581759,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890309869535231,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890584747442175,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245891134503256063,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245892234014883839,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245894433038139391,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245898831084650495,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245907627177672703,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245925219363717119,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245960403735805951,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246030772479983615,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246171509968338943,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246452984945049599,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9247015934898470911,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313535,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313536,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249267734712156160,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249830684665577472,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250112159642288128,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250252897130643456,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250323265874821120,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250358450246909952,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250376042432954368,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250384838525976576,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250389236572487680,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250391435595743232,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250392535107371008,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393084863184896,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393359741091840,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393497180045312,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393565899522048,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393600259260416,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393617439129600,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393626029064192,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393630324031488,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393632471515136,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393633545256960,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634082127872,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634350563328,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634484781056,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634551889920,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634585444352,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634602221568,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634610610176,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634614804480,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634616901632,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634617950208,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618474496,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618736640,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618867712,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618933248,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618966016,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618982400,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618990592,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618994688,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618996736,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618997760,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998272,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998528,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998656,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998720,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998752,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998768,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998776,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998780,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998782,64,FLEN)
NAN_BOXED(6888826155575453755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998783,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075456,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075457,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075459,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075463,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075471,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075487,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075519,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075583,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075711,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075967,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901076479,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901077503,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901079551,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901083647,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901091839,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901108223,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901140991,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901206527,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901337599,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901599743,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595902124031,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595903172607,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595905269759,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595909464063,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595917852671,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595934629887,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595968184319,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596035293183,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596169510911,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596437946367,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596974817279,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539598048559103,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539600196042751,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539604491010047,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539613080944639,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539630260813823,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539664620552191,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539733340028927,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539870778982399,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540145656889343,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540695412703231,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49541794924331007,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49543993947586559,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49548391994097663,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49557188087119871,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49574780273164287,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49609964645253119,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49680333389430783,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49821070877786111,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50102545854496767,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50665495807918079,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760703,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760704,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(52917295621603328,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53480245575024640,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53761720551735296,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53902458040090624,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53972826784268288,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54008011156357120,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54025603342401536,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54034399435423744,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54038797481934848,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54040996505190400,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042096016818176,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042645772632064,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042920650539008,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043058089492480,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043126808969216,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043161168707584,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043178348576768,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043186938511360,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043191233478656,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043193380962304,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194454704128,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194991575040,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195260010496,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195394228224,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195461337088,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195494891520,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195511668736,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195520057344,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195524251648,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195526348800,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527397376,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527921664,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528183808,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528314880,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528380416,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528413184,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528429568,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528437760,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528441856,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528443904,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528444928,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445440,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445696,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445824,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445888,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445920,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445936,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445944,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445948,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445950,64,FLEN)
NAN_BOXED(6888827777586339927,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445951,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820288,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820289,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820291,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820295,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820303,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820319,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820351,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820415,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820543,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199820799,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199821311,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199822335,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199824383,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199828479,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199836671,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199853055,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199885823,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454199951359,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454200082431,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454200344575,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454200868863,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454201917439,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454204014591,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454208208895,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454216597503,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454233374719,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454266929151,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454334038015,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454468255743,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340454736691199,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340455273562111,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340456347303935,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340458494787583,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340462789754879,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340471379689471,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340488559558655,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340522919297023,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340591638773759,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179340729077727231,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179341003955634175,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179341553711448063,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179342653223075839,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179344852246331391,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179349250292842495,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179358046385864703,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179375638571909119,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179410822943997951,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179481191688175615,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179621929176530943,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4179903404153241599,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4180466354106662911,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4181592254013505535,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4181592254013505536,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4182718153920348160,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183281103873769472,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183562578850480128,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183703316338835456,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183773685083013120,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183808869455101952,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183826461641146368,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183835257734168576,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183839655780679680,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183841854803935232,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183842954315563008,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183843504071376896,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183843778949283840,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183843916388237312,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183843985107714048,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844019467452416,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844036647321600,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844045237256192,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844049532223488,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844051679707136,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844052753448960,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053290319872,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053558755328,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053692973056,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053760081920,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053793636352,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053810413568,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053818802176,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053822996480,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053825093632,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053826142208,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053826666496,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053826928640,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827059712,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827125248,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827158016,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827174400,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827182592,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827186688,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827188736,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827189760,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190272,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190528,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190656,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190720,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190752,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190768,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190776,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190780,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190782,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4183844053827190783,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888863191192316333,64,FLEN)
NAN_BOXED(2324863116317757530,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640128,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640129,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640131,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640135,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640143,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640159,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640191,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640255,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640383,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294640639,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294641151,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294642175,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294644223,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294648319,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294656511,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294672895,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294705663,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294771199,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439294902271,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439295164415,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439295688703,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439296737279,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439298834431,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439303028735,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439311417343,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439328194559,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439361748991,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439428857855,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439563075583,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484439831511039,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484440368381951,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484441442123775,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484443589607423,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484447884574719,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484456474509311,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484473654378495,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484508014116863,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484576733593599,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484714172547071,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359484989050454015,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359485538806267903,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359486638317895679,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359488837341151231,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359493235387662335,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359502031480684543,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359519623666728959,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359554808038817791,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359625176782995455,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4359765914271350783,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4360047389248061439,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4360610339201482751,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4361736239108325375,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4361736239108325376,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4362862139015168000,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363425088968589312,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363706563945299968,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363847301433655296,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363917670177832960,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363952854549921792,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363970446735966208,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363979242828988416,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363983640875499520,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363985839898755072,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363986939410382848,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363987489166196736,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363987764044103680,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363987901483057152,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363987970202533888,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988004562272256,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988021742141440,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988030332076032,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988034627043328,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988036774526976,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988037848268800,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038385139712,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038653575168,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038787792896,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038854901760,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038888456192,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038905233408,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038913622016,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038917816320,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038919913472,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038920962048,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921486336,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921748480,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921879552,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921945088,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921977856,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038921994240,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922002432,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922006528,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922008576,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922009600,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010112,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010368,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010496,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010560,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010592,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010608,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010616,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010620,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010622,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4363988038922010623,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888898282481331715,64,FLEN)
NAN_BOXED(2324836983934426023,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743168,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743169,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743171,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743175,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743183,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743199,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743231,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743295,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743423,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743679,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812744191,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812745215,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812747263,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812751359,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812759551,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812775935,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812808703,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812874239,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813005311,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813267455,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813791743,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023814840319,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023816937471,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023821131775,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023829520383,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023846297599,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023879852031,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023946960895,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024081178623,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024349614079,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024886484991,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998025960226815,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998028107710463,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998032402677759,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998040992612351,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998058172481535,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998092532219903,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998161251696639,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998298690650111,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998573568557055,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380999123324370943,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381000222835998719,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381002421859254271,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381006819905765375,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381015615998787583,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381033208184831999,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381068392556920831,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381138761301098495,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381279498789453823,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381560973766164479,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9382123923719585791,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428415,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428416,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384375723533271040,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384938673486692352,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385220148463403008,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385360885951758336,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385431254695936000,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385466439068024832,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385484031254069248,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385492827347091456,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385497225393602560,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385499424416858112,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385500523928485888,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501073684299776,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501348562206720,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501486001160192,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501554720636928,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501589080375296,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501606260244480,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501614850179072,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501619145146368,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501621292630016,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622366371840,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622903242752,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623171678208,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623305895936,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623373004800,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623406559232,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623423336448,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623431725056,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623435919360,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623438016512,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439065088,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439589376,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439851520,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439982592,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440048128,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440080896,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440097280,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440105472,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440109568,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440111616,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440112640,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113152,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113408,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113536,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113600,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113632,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113648,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113656,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113660,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113662,64,FLEN)
NAN_BOXED(6888918375781008661,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113663,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887296,64,FLEN)
NAN_BOXED(6888934533919355507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887297,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
