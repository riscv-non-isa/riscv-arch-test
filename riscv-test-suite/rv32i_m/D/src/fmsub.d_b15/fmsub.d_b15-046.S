
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_34560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:103680*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103680*0 + 3*0*FLEN/8, x4, x1, x2)

inst_34561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:103683*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103683*0 + 3*1*FLEN/8, x4, x1, x2)

inst_34562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:103686*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103686*0 + 3*2*FLEN/8, x4, x1, x2)

inst_34563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:103689*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103689*0 + 3*3*FLEN/8, x4, x1, x2)

inst_34564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:103692*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103692*0 + 3*4*FLEN/8, x4, x1, x2)

inst_34565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:103695*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103695*0 + 3*5*FLEN/8, x4, x1, x2)

inst_34566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:103698*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103698*0 + 3*6*FLEN/8, x4, x1, x2)

inst_34567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:103701*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103701*0 + 3*7*FLEN/8, x4, x1, x2)

inst_34568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:103704*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103704*0 + 3*8*FLEN/8, x4, x1, x2)

inst_34569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:103707*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103707*0 + 3*9*FLEN/8, x4, x1, x2)

inst_34570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:103710*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103710*0 + 3*10*FLEN/8, x4, x1, x2)

inst_34571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:103713*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103713*0 + 3*11*FLEN/8, x4, x1, x2)

inst_34572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:103716*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103716*0 + 3*12*FLEN/8, x4, x1, x2)

inst_34573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:103719*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103719*0 + 3*13*FLEN/8, x4, x1, x2)

inst_34574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:103722*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103722*0 + 3*14*FLEN/8, x4, x1, x2)

inst_34575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:103725*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103725*0 + 3*15*FLEN/8, x4, x1, x2)

inst_34576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:103728*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103728*0 + 3*16*FLEN/8, x4, x1, x2)

inst_34577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9588877f85511b; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:103731*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103731*0 + 3*17*FLEN/8, x4, x1, x2)

inst_34578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:103734*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103734*0 + 3*18*FLEN/8, x4, x1, x2)

inst_34579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:103737*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103737*0 + 3*19*FLEN/8, x4, x1, x2)

inst_34580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:103740*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103740*0 + 3*20*FLEN/8, x4, x1, x2)

inst_34581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:103743*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103743*0 + 3*21*FLEN/8, x4, x1, x2)

inst_34582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:103746*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103746*0 + 3*22*FLEN/8, x4, x1, x2)

inst_34583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:103749*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103749*0 + 3*23*FLEN/8, x4, x1, x2)

inst_34584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:103752*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103752*0 + 3*24*FLEN/8, x4, x1, x2)

inst_34585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:103755*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103755*0 + 3*25*FLEN/8, x4, x1, x2)

inst_34586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:103758*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103758*0 + 3*26*FLEN/8, x4, x1, x2)

inst_34587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:103761*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103761*0 + 3*27*FLEN/8, x4, x1, x2)

inst_34588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:103764*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103764*0 + 3*28*FLEN/8, x4, x1, x2)

inst_34589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:103767*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103767*0 + 3*29*FLEN/8, x4, x1, x2)

inst_34590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:103770*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103770*0 + 3*30*FLEN/8, x4, x1, x2)

inst_34591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:103773*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103773*0 + 3*31*FLEN/8, x4, x1, x2)

inst_34592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:103776*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103776*0 + 3*32*FLEN/8, x4, x1, x2)

inst_34593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:103779*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103779*0 + 3*33*FLEN/8, x4, x1, x2)

inst_34594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:103782*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103782*0 + 3*34*FLEN/8, x4, x1, x2)

inst_34595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:103785*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103785*0 + 3*35*FLEN/8, x4, x1, x2)

inst_34596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:103788*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103788*0 + 3*36*FLEN/8, x4, x1, x2)

inst_34597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:103791*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103791*0 + 3*37*FLEN/8, x4, x1, x2)

inst_34598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:103794*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103794*0 + 3*38*FLEN/8, x4, x1, x2)

inst_34599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:103797*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103797*0 + 3*39*FLEN/8, x4, x1, x2)

inst_34600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:103800*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103800*0 + 3*40*FLEN/8, x4, x1, x2)

inst_34601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:103803*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103803*0 + 3*41*FLEN/8, x4, x1, x2)

inst_34602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:103806*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103806*0 + 3*42*FLEN/8, x4, x1, x2)

inst_34603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:103809*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103809*0 + 3*43*FLEN/8, x4, x1, x2)

inst_34604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:103812*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103812*0 + 3*44*FLEN/8, x4, x1, x2)

inst_34605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:103815*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103815*0 + 3*45*FLEN/8, x4, x1, x2)

inst_34606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:103818*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103818*0 + 3*46*FLEN/8, x4, x1, x2)

inst_34607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:103821*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103821*0 + 3*47*FLEN/8, x4, x1, x2)

inst_34608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:103824*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103824*0 + 3*48*FLEN/8, x4, x1, x2)

inst_34609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:103827*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103827*0 + 3*49*FLEN/8, x4, x1, x2)

inst_34610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:103830*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103830*0 + 3*50*FLEN/8, x4, x1, x2)

inst_34611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:103833*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103833*0 + 3*51*FLEN/8, x4, x1, x2)

inst_34612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:103836*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103836*0 + 3*52*FLEN/8, x4, x1, x2)

inst_34613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:103839*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103839*0 + 3*53*FLEN/8, x4, x1, x2)

inst_34614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:103842*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103842*0 + 3*54*FLEN/8, x4, x1, x2)

inst_34615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:103845*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103845*0 + 3*55*FLEN/8, x4, x1, x2)

inst_34616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:103848*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103848*0 + 3*56*FLEN/8, x4, x1, x2)

inst_34617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:103851*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103851*0 + 3*57*FLEN/8, x4, x1, x2)

inst_34618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:103854*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103854*0 + 3*58*FLEN/8, x4, x1, x2)

inst_34619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:103857*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103857*0 + 3*59*FLEN/8, x4, x1, x2)

inst_34620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:103860*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103860*0 + 3*60*FLEN/8, x4, x1, x2)

inst_34621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:103863*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103863*0 + 3*61*FLEN/8, x4, x1, x2)

inst_34622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:103866*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103866*0 + 3*62*FLEN/8, x4, x1, x2)

inst_34623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:103869*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103869*0 + 3*63*FLEN/8, x4, x1, x2)

inst_34624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:103872*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103872*0 + 3*64*FLEN/8, x4, x1, x2)

inst_34625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:103875*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103875*0 + 3*65*FLEN/8, x4, x1, x2)

inst_34626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:103878*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103878*0 + 3*66*FLEN/8, x4, x1, x2)

inst_34627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:103881*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103881*0 + 3*67*FLEN/8, x4, x1, x2)

inst_34628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:103884*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103884*0 + 3*68*FLEN/8, x4, x1, x2)

inst_34629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:103887*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103887*0 + 3*69*FLEN/8, x4, x1, x2)

inst_34630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:103890*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103890*0 + 3*70*FLEN/8, x4, x1, x2)

inst_34631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:103893*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103893*0 + 3*71*FLEN/8, x4, x1, x2)

inst_34632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:103896*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103896*0 + 3*72*FLEN/8, x4, x1, x2)

inst_34633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:103899*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103899*0 + 3*73*FLEN/8, x4, x1, x2)

inst_34634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:103902*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103902*0 + 3*74*FLEN/8, x4, x1, x2)

inst_34635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:103905*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103905*0 + 3*75*FLEN/8, x4, x1, x2)

inst_34636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:103908*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103908*0 + 3*76*FLEN/8, x4, x1, x2)

inst_34637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:103911*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103911*0 + 3*77*FLEN/8, x4, x1, x2)

inst_34638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:103914*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103914*0 + 3*78*FLEN/8, x4, x1, x2)

inst_34639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:103917*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103917*0 + 3*79*FLEN/8, x4, x1, x2)

inst_34640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:103920*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103920*0 + 3*80*FLEN/8, x4, x1, x2)

inst_34641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:103923*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103923*0 + 3*81*FLEN/8, x4, x1, x2)

inst_34642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:103926*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103926*0 + 3*82*FLEN/8, x4, x1, x2)

inst_34643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:103929*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103929*0 + 3*83*FLEN/8, x4, x1, x2)

inst_34644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:103932*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103932*0 + 3*84*FLEN/8, x4, x1, x2)

inst_34645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:103935*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103935*0 + 3*85*FLEN/8, x4, x1, x2)

inst_34646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:103938*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103938*0 + 3*86*FLEN/8, x4, x1, x2)

inst_34647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:103941*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103941*0 + 3*87*FLEN/8, x4, x1, x2)

inst_34648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:103944*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103944*0 + 3*88*FLEN/8, x4, x1, x2)

inst_34649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:103947*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103947*0 + 3*89*FLEN/8, x4, x1, x2)

inst_34650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:103950*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103950*0 + 3*90*FLEN/8, x4, x1, x2)

inst_34651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:103953*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103953*0 + 3*91*FLEN/8, x4, x1, x2)

inst_34652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:103956*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103956*0 + 3*92*FLEN/8, x4, x1, x2)

inst_34653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:103959*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103959*0 + 3*93*FLEN/8, x4, x1, x2)

inst_34654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:103962*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103962*0 + 3*94*FLEN/8, x4, x1, x2)

inst_34655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:103965*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103965*0 + 3*95*FLEN/8, x4, x1, x2)

inst_34656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:103968*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103968*0 + 3*96*FLEN/8, x4, x1, x2)

inst_34657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:103971*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103971*0 + 3*97*FLEN/8, x4, x1, x2)

inst_34658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:103974*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103974*0 + 3*98*FLEN/8, x4, x1, x2)

inst_34659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:103977*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103977*0 + 3*99*FLEN/8, x4, x1, x2)

inst_34660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:103980*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103980*0 + 3*100*FLEN/8, x4, x1, x2)

inst_34661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:103983*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103983*0 + 3*101*FLEN/8, x4, x1, x2)

inst_34662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:103986*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103986*0 + 3*102*FLEN/8, x4, x1, x2)

inst_34663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:103989*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103989*0 + 3*103*FLEN/8, x4, x1, x2)

inst_34664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:103992*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103992*0 + 3*104*FLEN/8, x4, x1, x2)

inst_34665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:103995*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103995*0 + 3*105*FLEN/8, x4, x1, x2)

inst_34666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:103998*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103998*0 + 3*106*FLEN/8, x4, x1, x2)

inst_34667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:104001*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104001*0 + 3*107*FLEN/8, x4, x1, x2)

inst_34668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:104004*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104004*0 + 3*108*FLEN/8, x4, x1, x2)

inst_34669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:104007*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104007*0 + 3*109*FLEN/8, x4, x1, x2)

inst_34670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:104010*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104010*0 + 3*110*FLEN/8, x4, x1, x2)

inst_34671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:104013*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104013*0 + 3*111*FLEN/8, x4, x1, x2)

inst_34672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:104016*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104016*0 + 3*112*FLEN/8, x4, x1, x2)

inst_34673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:104019*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104019*0 + 3*113*FLEN/8, x4, x1, x2)

inst_34674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:104022*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104022*0 + 3*114*FLEN/8, x4, x1, x2)

inst_34675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:104025*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104025*0 + 3*115*FLEN/8, x4, x1, x2)

inst_34676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:104028*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104028*0 + 3*116*FLEN/8, x4, x1, x2)

inst_34677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:104031*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104031*0 + 3*117*FLEN/8, x4, x1, x2)

inst_34678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:104034*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104034*0 + 3*118*FLEN/8, x4, x1, x2)

inst_34679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:104037*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104037*0 + 3*119*FLEN/8, x4, x1, x2)

inst_34680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:104040*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104040*0 + 3*120*FLEN/8, x4, x1, x2)

inst_34681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:104043*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104043*0 + 3*121*FLEN/8, x4, x1, x2)

inst_34682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:104046*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104046*0 + 3*122*FLEN/8, x4, x1, x2)

inst_34683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:104049*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104049*0 + 3*123*FLEN/8, x4, x1, x2)

inst_34684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:104052*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104052*0 + 3*124*FLEN/8, x4, x1, x2)

inst_34685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:104055*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104055*0 + 3*125*FLEN/8, x4, x1, x2)

inst_34686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:104058*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104058*0 + 3*126*FLEN/8, x4, x1, x2)

inst_34687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:104061*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104061*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_34688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:104064*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104064*0 + 3*128*FLEN/8, x4, x1, x2)

inst_34689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:104067*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104067*0 + 3*129*FLEN/8, x4, x1, x2)

inst_34690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:104070*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104070*0 + 3*130*FLEN/8, x4, x1, x2)

inst_34691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:104073*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104073*0 + 3*131*FLEN/8, x4, x1, x2)

inst_34692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:104076*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104076*0 + 3*132*FLEN/8, x4, x1, x2)

inst_34693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:104079*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104079*0 + 3*133*FLEN/8, x4, x1, x2)

inst_34694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:104082*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104082*0 + 3*134*FLEN/8, x4, x1, x2)

inst_34695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:104085*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104085*0 + 3*135*FLEN/8, x4, x1, x2)

inst_34696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:104088*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104088*0 + 3*136*FLEN/8, x4, x1, x2)

inst_34697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:104091*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104091*0 + 3*137*FLEN/8, x4, x1, x2)

inst_34698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:104094*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104094*0 + 3*138*FLEN/8, x4, x1, x2)

inst_34699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:104097*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104097*0 + 3*139*FLEN/8, x4, x1, x2)

inst_34700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:104100*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104100*0 + 3*140*FLEN/8, x4, x1, x2)

inst_34701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:104103*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104103*0 + 3*141*FLEN/8, x4, x1, x2)

inst_34702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:104106*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104106*0 + 3*142*FLEN/8, x4, x1, x2)

inst_34703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d2a2cfb43c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d2a2cfb43c7; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:104109*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104109*0 + 3*143*FLEN/8, x4, x1, x2)

inst_34704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:104112*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104112*0 + 3*144*FLEN/8, x4, x1, x2)

inst_34705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:104115*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104115*0 + 3*145*FLEN/8, x4, x1, x2)

inst_34706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:104118*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104118*0 + 3*146*FLEN/8, x4, x1, x2)

inst_34707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:104121*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104121*0 + 3*147*FLEN/8, x4, x1, x2)

inst_34708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:104124*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104124*0 + 3*148*FLEN/8, x4, x1, x2)

inst_34709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:104127*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104127*0 + 3*149*FLEN/8, x4, x1, x2)

inst_34710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:104130*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104130*0 + 3*150*FLEN/8, x4, x1, x2)

inst_34711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:104133*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104133*0 + 3*151*FLEN/8, x4, x1, x2)

inst_34712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:104136*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104136*0 + 3*152*FLEN/8, x4, x1, x2)

inst_34713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:104139*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104139*0 + 3*153*FLEN/8, x4, x1, x2)

inst_34714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:104142*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104142*0 + 3*154*FLEN/8, x4, x1, x2)

inst_34715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:104145*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104145*0 + 3*155*FLEN/8, x4, x1, x2)

inst_34716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:104148*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104148*0 + 3*156*FLEN/8, x4, x1, x2)

inst_34717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:104151*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104151*0 + 3*157*FLEN/8, x4, x1, x2)

inst_34718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:104154*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104154*0 + 3*158*FLEN/8, x4, x1, x2)

inst_34719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:104157*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104157*0 + 3*159*FLEN/8, x4, x1, x2)

inst_34720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:104160*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104160*0 + 3*160*FLEN/8, x4, x1, x2)

inst_34721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:104163*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104163*0 + 3*161*FLEN/8, x4, x1, x2)

inst_34722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:104166*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104166*0 + 3*162*FLEN/8, x4, x1, x2)

inst_34723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:104169*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104169*0 + 3*163*FLEN/8, x4, x1, x2)

inst_34724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:104172*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104172*0 + 3*164*FLEN/8, x4, x1, x2)

inst_34725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:104175*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104175*0 + 3*165*FLEN/8, x4, x1, x2)

inst_34726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:104178*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104178*0 + 3*166*FLEN/8, x4, x1, x2)

inst_34727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:104181*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104181*0 + 3*167*FLEN/8, x4, x1, x2)

inst_34728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:104184*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104184*0 + 3*168*FLEN/8, x4, x1, x2)

inst_34729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:104187*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104187*0 + 3*169*FLEN/8, x4, x1, x2)

inst_34730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:104190*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104190*0 + 3*170*FLEN/8, x4, x1, x2)

inst_34731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:104193*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104193*0 + 3*171*FLEN/8, x4, x1, x2)

inst_34732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:104196*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104196*0 + 3*172*FLEN/8, x4, x1, x2)

inst_34733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:104199*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104199*0 + 3*173*FLEN/8, x4, x1, x2)

inst_34734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:104202*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104202*0 + 3*174*FLEN/8, x4, x1, x2)

inst_34735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:104205*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104205*0 + 3*175*FLEN/8, x4, x1, x2)

inst_34736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:104208*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104208*0 + 3*176*FLEN/8, x4, x1, x2)

inst_34737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:104211*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104211*0 + 3*177*FLEN/8, x4, x1, x2)

inst_34738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:104214*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104214*0 + 3*178*FLEN/8, x4, x1, x2)

inst_34739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:104217*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104217*0 + 3*179*FLEN/8, x4, x1, x2)

inst_34740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:104220*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104220*0 + 3*180*FLEN/8, x4, x1, x2)

inst_34741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:104223*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104223*0 + 3*181*FLEN/8, x4, x1, x2)

inst_34742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:104226*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104226*0 + 3*182*FLEN/8, x4, x1, x2)

inst_34743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:104229*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104229*0 + 3*183*FLEN/8, x4, x1, x2)

inst_34744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:104232*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104232*0 + 3*184*FLEN/8, x4, x1, x2)

inst_34745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:104235*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104235*0 + 3*185*FLEN/8, x4, x1, x2)

inst_34746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:104238*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104238*0 + 3*186*FLEN/8, x4, x1, x2)

inst_34747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:104241*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104241*0 + 3*187*FLEN/8, x4, x1, x2)

inst_34748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:104244*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104244*0 + 3*188*FLEN/8, x4, x1, x2)

inst_34749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:104247*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104247*0 + 3*189*FLEN/8, x4, x1, x2)

inst_34750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:104250*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104250*0 + 3*190*FLEN/8, x4, x1, x2)

inst_34751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:104253*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104253*0 + 3*191*FLEN/8, x4, x1, x2)

inst_34752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:104256*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104256*0 + 3*192*FLEN/8, x4, x1, x2)

inst_34753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:104259*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104259*0 + 3*193*FLEN/8, x4, x1, x2)

inst_34754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:104262*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104262*0 + 3*194*FLEN/8, x4, x1, x2)

inst_34755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:104265*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104265*0 + 3*195*FLEN/8, x4, x1, x2)

inst_34756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:104268*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104268*0 + 3*196*FLEN/8, x4, x1, x2)

inst_34757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:104271*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104271*0 + 3*197*FLEN/8, x4, x1, x2)

inst_34758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:104274*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104274*0 + 3*198*FLEN/8, x4, x1, x2)

inst_34759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:104277*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104277*0 + 3*199*FLEN/8, x4, x1, x2)

inst_34760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:104280*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104280*0 + 3*200*FLEN/8, x4, x1, x2)

inst_34761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:104283*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104283*0 + 3*201*FLEN/8, x4, x1, x2)

inst_34762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:104286*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104286*0 + 3*202*FLEN/8, x4, x1, x2)

inst_34763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:104289*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104289*0 + 3*203*FLEN/8, x4, x1, x2)

inst_34764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:104292*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104292*0 + 3*204*FLEN/8, x4, x1, x2)

inst_34765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:104295*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104295*0 + 3*205*FLEN/8, x4, x1, x2)

inst_34766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:104298*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104298*0 + 3*206*FLEN/8, x4, x1, x2)

inst_34767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:104301*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104301*0 + 3*207*FLEN/8, x4, x1, x2)

inst_34768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:104304*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104304*0 + 3*208*FLEN/8, x4, x1, x2)

inst_34769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:104307*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104307*0 + 3*209*FLEN/8, x4, x1, x2)

inst_34770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:104310*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104310*0 + 3*210*FLEN/8, x4, x1, x2)

inst_34771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:104313*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104313*0 + 3*211*FLEN/8, x4, x1, x2)

inst_34772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:104316*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104316*0 + 3*212*FLEN/8, x4, x1, x2)

inst_34773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:104319*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104319*0 + 3*213*FLEN/8, x4, x1, x2)

inst_34774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:104322*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104322*0 + 3*214*FLEN/8, x4, x1, x2)

inst_34775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:104325*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104325*0 + 3*215*FLEN/8, x4, x1, x2)

inst_34776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:104328*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104328*0 + 3*216*FLEN/8, x4, x1, x2)

inst_34777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:104331*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104331*0 + 3*217*FLEN/8, x4, x1, x2)

inst_34778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:104334*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104334*0 + 3*218*FLEN/8, x4, x1, x2)

inst_34779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:104337*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104337*0 + 3*219*FLEN/8, x4, x1, x2)

inst_34780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:104340*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104340*0 + 3*220*FLEN/8, x4, x1, x2)

inst_34781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:104343*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104343*0 + 3*221*FLEN/8, x4, x1, x2)

inst_34782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:104346*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104346*0 + 3*222*FLEN/8, x4, x1, x2)

inst_34783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:104349*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104349*0 + 3*223*FLEN/8, x4, x1, x2)

inst_34784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:104352*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104352*0 + 3*224*FLEN/8, x4, x1, x2)

inst_34785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:104355*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104355*0 + 3*225*FLEN/8, x4, x1, x2)

inst_34786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:104358*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104358*0 + 3*226*FLEN/8, x4, x1, x2)

inst_34787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:104361*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104361*0 + 3*227*FLEN/8, x4, x1, x2)

inst_34788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:104364*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104364*0 + 3*228*FLEN/8, x4, x1, x2)

inst_34789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:104367*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104367*0 + 3*229*FLEN/8, x4, x1, x2)

inst_34790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:104370*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104370*0 + 3*230*FLEN/8, x4, x1, x2)

inst_34791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:104373*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104373*0 + 3*231*FLEN/8, x4, x1, x2)

inst_34792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:104376*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104376*0 + 3*232*FLEN/8, x4, x1, x2)

inst_34793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:104379*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104379*0 + 3*233*FLEN/8, x4, x1, x2)

inst_34794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:104382*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104382*0 + 3*234*FLEN/8, x4, x1, x2)

inst_34795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:104385*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104385*0 + 3*235*FLEN/8, x4, x1, x2)

inst_34796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:104388*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104388*0 + 3*236*FLEN/8, x4, x1, x2)

inst_34797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:104391*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104391*0 + 3*237*FLEN/8, x4, x1, x2)

inst_34798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:104394*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104394*0 + 3*238*FLEN/8, x4, x1, x2)

inst_34799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:104397*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104397*0 + 3*239*FLEN/8, x4, x1, x2)

inst_34800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:104400*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104400*0 + 3*240*FLEN/8, x4, x1, x2)

inst_34801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:104403*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104403*0 + 3*241*FLEN/8, x4, x1, x2)

inst_34802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:104406*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104406*0 + 3*242*FLEN/8, x4, x1, x2)

inst_34803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:104409*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104409*0 + 3*243*FLEN/8, x4, x1, x2)

inst_34804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:104412*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104412*0 + 3*244*FLEN/8, x4, x1, x2)

inst_34805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:104415*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104415*0 + 3*245*FLEN/8, x4, x1, x2)

inst_34806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:104418*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104418*0 + 3*246*FLEN/8, x4, x1, x2)

inst_34807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:104421*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104421*0 + 3*247*FLEN/8, x4, x1, x2)

inst_34808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:104424*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104424*0 + 3*248*FLEN/8, x4, x1, x2)

inst_34809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:104427*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104427*0 + 3*249*FLEN/8, x4, x1, x2)

inst_34810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:104430*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104430*0 + 3*250*FLEN/8, x4, x1, x2)

inst_34811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:104433*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104433*0 + 3*251*FLEN/8, x4, x1, x2)

inst_34812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:104436*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104436*0 + 3*252*FLEN/8, x4, x1, x2)

inst_34813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:104439*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104439*0 + 3*253*FLEN/8, x4, x1, x2)

inst_34814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:104442*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104442*0 + 3*254*FLEN/8, x4, x1, x2)

inst_34815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:104445*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104445*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_34816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:104448*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104448*0 + 3*256*FLEN/8, x4, x1, x2)

inst_34817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x59b0525746b85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f959b0525746b85; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:104451*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104451*0 + 3*257*FLEN/8, x4, x1, x2)

inst_34818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:104454*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104454*0 + 3*258*FLEN/8, x4, x1, x2)

inst_34819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:104457*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104457*0 + 3*259*FLEN/8, x4, x1, x2)

inst_34820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:104460*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104460*0 + 3*260*FLEN/8, x4, x1, x2)

inst_34821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:104463*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104463*0 + 3*261*FLEN/8, x4, x1, x2)

inst_34822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:104466*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104466*0 + 3*262*FLEN/8, x4, x1, x2)

inst_34823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:104469*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104469*0 + 3*263*FLEN/8, x4, x1, x2)

inst_34824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:104472*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104472*0 + 3*264*FLEN/8, x4, x1, x2)

inst_34825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:104475*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104475*0 + 3*265*FLEN/8, x4, x1, x2)

inst_34826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:104478*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104478*0 + 3*266*FLEN/8, x4, x1, x2)

inst_34827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:104481*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104481*0 + 3*267*FLEN/8, x4, x1, x2)

inst_34828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:104484*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104484*0 + 3*268*FLEN/8, x4, x1, x2)

inst_34829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:104487*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104487*0 + 3*269*FLEN/8, x4, x1, x2)

inst_34830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:104490*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104490*0 + 3*270*FLEN/8, x4, x1, x2)

inst_34831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:104493*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104493*0 + 3*271*FLEN/8, x4, x1, x2)

inst_34832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:104496*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104496*0 + 3*272*FLEN/8, x4, x1, x2)

inst_34833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:104499*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104499*0 + 3*273*FLEN/8, x4, x1, x2)

inst_34834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:104502*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104502*0 + 3*274*FLEN/8, x4, x1, x2)

inst_34835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:104505*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104505*0 + 3*275*FLEN/8, x4, x1, x2)

inst_34836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:104508*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104508*0 + 3*276*FLEN/8, x4, x1, x2)

inst_34837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:104511*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104511*0 + 3*277*FLEN/8, x4, x1, x2)

inst_34838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:104514*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104514*0 + 3*278*FLEN/8, x4, x1, x2)

inst_34839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:104517*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104517*0 + 3*279*FLEN/8, x4, x1, x2)

inst_34840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:104520*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104520*0 + 3*280*FLEN/8, x4, x1, x2)

inst_34841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:104523*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104523*0 + 3*281*FLEN/8, x4, x1, x2)

inst_34842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:104526*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104526*0 + 3*282*FLEN/8, x4, x1, x2)

inst_34843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:104529*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104529*0 + 3*283*FLEN/8, x4, x1, x2)

inst_34844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:104532*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104532*0 + 3*284*FLEN/8, x4, x1, x2)

inst_34845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:104535*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104535*0 + 3*285*FLEN/8, x4, x1, x2)

inst_34846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:104538*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104538*0 + 3*286*FLEN/8, x4, x1, x2)

inst_34847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:104541*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104541*0 + 3*287*FLEN/8, x4, x1, x2)

inst_34848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:104544*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104544*0 + 3*288*FLEN/8, x4, x1, x2)

inst_34849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:104547*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104547*0 + 3*289*FLEN/8, x4, x1, x2)

inst_34850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:104550*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104550*0 + 3*290*FLEN/8, x4, x1, x2)

inst_34851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:104553*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104553*0 + 3*291*FLEN/8, x4, x1, x2)

inst_34852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:104556*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104556*0 + 3*292*FLEN/8, x4, x1, x2)

inst_34853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:104559*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104559*0 + 3*293*FLEN/8, x4, x1, x2)

inst_34854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:104562*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104562*0 + 3*294*FLEN/8, x4, x1, x2)

inst_34855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:104565*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104565*0 + 3*295*FLEN/8, x4, x1, x2)

inst_34856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:104568*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104568*0 + 3*296*FLEN/8, x4, x1, x2)

inst_34857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:104571*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104571*0 + 3*297*FLEN/8, x4, x1, x2)

inst_34858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:104574*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104574*0 + 3*298*FLEN/8, x4, x1, x2)

inst_34859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:104577*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104577*0 + 3*299*FLEN/8, x4, x1, x2)

inst_34860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:104580*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104580*0 + 3*300*FLEN/8, x4, x1, x2)

inst_34861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:104583*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104583*0 + 3*301*FLEN/8, x4, x1, x2)

inst_34862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:104586*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104586*0 + 3*302*FLEN/8, x4, x1, x2)

inst_34863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:104589*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104589*0 + 3*303*FLEN/8, x4, x1, x2)

inst_34864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:104592*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104592*0 + 3*304*FLEN/8, x4, x1, x2)

inst_34865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:104595*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104595*0 + 3*305*FLEN/8, x4, x1, x2)

inst_34866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:104598*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104598*0 + 3*306*FLEN/8, x4, x1, x2)

inst_34867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:104601*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104601*0 + 3*307*FLEN/8, x4, x1, x2)

inst_34868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:104604*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104604*0 + 3*308*FLEN/8, x4, x1, x2)

inst_34869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:104607*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104607*0 + 3*309*FLEN/8, x4, x1, x2)

inst_34870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:104610*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104610*0 + 3*310*FLEN/8, x4, x1, x2)

inst_34871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:104613*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104613*0 + 3*311*FLEN/8, x4, x1, x2)

inst_34872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:104616*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104616*0 + 3*312*FLEN/8, x4, x1, x2)

inst_34873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:104619*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104619*0 + 3*313*FLEN/8, x4, x1, x2)

inst_34874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:104622*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104622*0 + 3*314*FLEN/8, x4, x1, x2)

inst_34875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:104625*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104625*0 + 3*315*FLEN/8, x4, x1, x2)

inst_34876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:104628*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104628*0 + 3*316*FLEN/8, x4, x1, x2)

inst_34877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:104631*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104631*0 + 3*317*FLEN/8, x4, x1, x2)

inst_34878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:104634*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104634*0 + 3*318*FLEN/8, x4, x1, x2)

inst_34879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:104637*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104637*0 + 3*319*FLEN/8, x4, x1, x2)

inst_34880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:104640*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104640*0 + 3*320*FLEN/8, x4, x1, x2)

inst_34881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:104643*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104643*0 + 3*321*FLEN/8, x4, x1, x2)

inst_34882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:104646*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104646*0 + 3*322*FLEN/8, x4, x1, x2)

inst_34883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:104649*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104649*0 + 3*323*FLEN/8, x4, x1, x2)

inst_34884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:104652*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104652*0 + 3*324*FLEN/8, x4, x1, x2)

inst_34885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:104655*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104655*0 + 3*325*FLEN/8, x4, x1, x2)

inst_34886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:104658*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104658*0 + 3*326*FLEN/8, x4, x1, x2)

inst_34887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:104661*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104661*0 + 3*327*FLEN/8, x4, x1, x2)

inst_34888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:104664*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104664*0 + 3*328*FLEN/8, x4, x1, x2)

inst_34889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:104667*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104667*0 + 3*329*FLEN/8, x4, x1, x2)

inst_34890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:104670*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104670*0 + 3*330*FLEN/8, x4, x1, x2)

inst_34891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:104673*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104673*0 + 3*331*FLEN/8, x4, x1, x2)

inst_34892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:104676*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104676*0 + 3*332*FLEN/8, x4, x1, x2)

inst_34893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:104679*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104679*0 + 3*333*FLEN/8, x4, x1, x2)

inst_34894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:104682*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104682*0 + 3*334*FLEN/8, x4, x1, x2)

inst_34895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:104685*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104685*0 + 3*335*FLEN/8, x4, x1, x2)

inst_34896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:104688*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104688*0 + 3*336*FLEN/8, x4, x1, x2)

inst_34897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:104691*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104691*0 + 3*337*FLEN/8, x4, x1, x2)

inst_34898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:104694*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104694*0 + 3*338*FLEN/8, x4, x1, x2)

inst_34899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:104697*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104697*0 + 3*339*FLEN/8, x4, x1, x2)

inst_34900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:104700*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104700*0 + 3*340*FLEN/8, x4, x1, x2)

inst_34901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:104703*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104703*0 + 3*341*FLEN/8, x4, x1, x2)

inst_34902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:104706*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104706*0 + 3*342*FLEN/8, x4, x1, x2)

inst_34903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:104709*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104709*0 + 3*343*FLEN/8, x4, x1, x2)

inst_34904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:104712*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104712*0 + 3*344*FLEN/8, x4, x1, x2)

inst_34905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:104715*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104715*0 + 3*345*FLEN/8, x4, x1, x2)

inst_34906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:104718*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104718*0 + 3*346*FLEN/8, x4, x1, x2)

inst_34907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:104721*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104721*0 + 3*347*FLEN/8, x4, x1, x2)

inst_34908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:104724*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104724*0 + 3*348*FLEN/8, x4, x1, x2)

inst_34909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:104727*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104727*0 + 3*349*FLEN/8, x4, x1, x2)

inst_34910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:104730*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104730*0 + 3*350*FLEN/8, x4, x1, x2)

inst_34911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:104733*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104733*0 + 3*351*FLEN/8, x4, x1, x2)

inst_34912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:104736*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104736*0 + 3*352*FLEN/8, x4, x1, x2)

inst_34913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:104739*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104739*0 + 3*353*FLEN/8, x4, x1, x2)

inst_34914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:104742*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104742*0 + 3*354*FLEN/8, x4, x1, x2)

inst_34915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:104745*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104745*0 + 3*355*FLEN/8, x4, x1, x2)

inst_34916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:104748*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104748*0 + 3*356*FLEN/8, x4, x1, x2)

inst_34917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:104751*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104751*0 + 3*357*FLEN/8, x4, x1, x2)

inst_34918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:104754*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104754*0 + 3*358*FLEN/8, x4, x1, x2)

inst_34919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:104757*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104757*0 + 3*359*FLEN/8, x4, x1, x2)

inst_34920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:104760*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104760*0 + 3*360*FLEN/8, x4, x1, x2)

inst_34921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:104763*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104763*0 + 3*361*FLEN/8, x4, x1, x2)

inst_34922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:104766*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104766*0 + 3*362*FLEN/8, x4, x1, x2)

inst_34923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:104769*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104769*0 + 3*363*FLEN/8, x4, x1, x2)

inst_34924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:104772*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104772*0 + 3*364*FLEN/8, x4, x1, x2)

inst_34925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:104775*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104775*0 + 3*365*FLEN/8, x4, x1, x2)

inst_34926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:104778*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104778*0 + 3*366*FLEN/8, x4, x1, x2)

inst_34927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:104781*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104781*0 + 3*367*FLEN/8, x4, x1, x2)

inst_34928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:104784*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104784*0 + 3*368*FLEN/8, x4, x1, x2)

inst_34929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:104787*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104787*0 + 3*369*FLEN/8, x4, x1, x2)

inst_34930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:104790*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104790*0 + 3*370*FLEN/8, x4, x1, x2)

inst_34931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:104793*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104793*0 + 3*371*FLEN/8, x4, x1, x2)

inst_34932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:104796*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104796*0 + 3*372*FLEN/8, x4, x1, x2)

inst_34933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:104799*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104799*0 + 3*373*FLEN/8, x4, x1, x2)

inst_34934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:104802*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104802*0 + 3*374*FLEN/8, x4, x1, x2)

inst_34935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:104805*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104805*0 + 3*375*FLEN/8, x4, x1, x2)

inst_34936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:104808*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104808*0 + 3*376*FLEN/8, x4, x1, x2)

inst_34937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:104811*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104811*0 + 3*377*FLEN/8, x4, x1, x2)

inst_34938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:104814*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104814*0 + 3*378*FLEN/8, x4, x1, x2)

inst_34939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:104817*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104817*0 + 3*379*FLEN/8, x4, x1, x2)

inst_34940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:104820*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104820*0 + 3*380*FLEN/8, x4, x1, x2)

inst_34941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:104823*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104823*0 + 3*381*FLEN/8, x4, x1, x2)

inst_34942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:104826*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104826*0 + 3*382*FLEN/8, x4, x1, x2)

inst_34943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a279cd2f828f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a279cd2f828f; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:104829*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104829*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_34944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:104832*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104832*0 + 3*384*FLEN/8, x4, x1, x2)

inst_34945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:104835*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104835*0 + 3*385*FLEN/8, x4, x1, x2)

inst_34946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:104838*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104838*0 + 3*386*FLEN/8, x4, x1, x2)

inst_34947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:104841*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104841*0 + 3*387*FLEN/8, x4, x1, x2)

inst_34948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:104844*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104844*0 + 3*388*FLEN/8, x4, x1, x2)

inst_34949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:104847*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104847*0 + 3*389*FLEN/8, x4, x1, x2)

inst_34950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:104850*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104850*0 + 3*390*FLEN/8, x4, x1, x2)

inst_34951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:104853*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104853*0 + 3*391*FLEN/8, x4, x1, x2)

inst_34952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:104856*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104856*0 + 3*392*FLEN/8, x4, x1, x2)

inst_34953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:104859*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104859*0 + 3*393*FLEN/8, x4, x1, x2)

inst_34954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:104862*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104862*0 + 3*394*FLEN/8, x4, x1, x2)

inst_34955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:104865*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104865*0 + 3*395*FLEN/8, x4, x1, x2)

inst_34956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:104868*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104868*0 + 3*396*FLEN/8, x4, x1, x2)

inst_34957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:104871*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104871*0 + 3*397*FLEN/8, x4, x1, x2)

inst_34958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:104874*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104874*0 + 3*398*FLEN/8, x4, x1, x2)

inst_34959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:104877*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104877*0 + 3*399*FLEN/8, x4, x1, x2)

inst_34960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:104880*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104880*0 + 3*400*FLEN/8, x4, x1, x2)

inst_34961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:104883*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104883*0 + 3*401*FLEN/8, x4, x1, x2)

inst_34962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:104886*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104886*0 + 3*402*FLEN/8, x4, x1, x2)

inst_34963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:104889*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104889*0 + 3*403*FLEN/8, x4, x1, x2)

inst_34964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:104892*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104892*0 + 3*404*FLEN/8, x4, x1, x2)

inst_34965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:104895*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104895*0 + 3*405*FLEN/8, x4, x1, x2)

inst_34966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000000000; valaddr_reg:x3; val_offset:104898*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104898*0 + 3*406*FLEN/8, x4, x1, x2)

inst_34967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000000001; valaddr_reg:x3; val_offset:104901*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104901*0 + 3*407*FLEN/8, x4, x1, x2)

inst_34968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000000003; valaddr_reg:x3; val_offset:104904*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104904*0 + 3*408*FLEN/8, x4, x1, x2)

inst_34969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000000007; valaddr_reg:x3; val_offset:104907*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104907*0 + 3*409*FLEN/8, x4, x1, x2)

inst_34970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000000000f; valaddr_reg:x3; val_offset:104910*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104910*0 + 3*410*FLEN/8, x4, x1, x2)

inst_34971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000000001f; valaddr_reg:x3; val_offset:104913*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104913*0 + 3*411*FLEN/8, x4, x1, x2)

inst_34972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000000003f; valaddr_reg:x3; val_offset:104916*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104916*0 + 3*412*FLEN/8, x4, x1, x2)

inst_34973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000000007f; valaddr_reg:x3; val_offset:104919*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104919*0 + 3*413*FLEN/8, x4, x1, x2)

inst_34974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000000000ff; valaddr_reg:x3; val_offset:104922*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104922*0 + 3*414*FLEN/8, x4, x1, x2)

inst_34975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000000001ff; valaddr_reg:x3; val_offset:104925*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104925*0 + 3*415*FLEN/8, x4, x1, x2)

inst_34976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000000003ff; valaddr_reg:x3; val_offset:104928*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104928*0 + 3*416*FLEN/8, x4, x1, x2)

inst_34977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000000007ff; valaddr_reg:x3; val_offset:104931*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104931*0 + 3*417*FLEN/8, x4, x1, x2)

inst_34978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000000fff; valaddr_reg:x3; val_offset:104934*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104934*0 + 3*418*FLEN/8, x4, x1, x2)

inst_34979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000001fff; valaddr_reg:x3; val_offset:104937*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104937*0 + 3*419*FLEN/8, x4, x1, x2)

inst_34980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000003fff; valaddr_reg:x3; val_offset:104940*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104940*0 + 3*420*FLEN/8, x4, x1, x2)

inst_34981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000007fff; valaddr_reg:x3; val_offset:104943*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104943*0 + 3*421*FLEN/8, x4, x1, x2)

inst_34982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000000ffff; valaddr_reg:x3; val_offset:104946*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104946*0 + 3*422*FLEN/8, x4, x1, x2)

inst_34983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000001ffff; valaddr_reg:x3; val_offset:104949*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104949*0 + 3*423*FLEN/8, x4, x1, x2)

inst_34984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000003ffff; valaddr_reg:x3; val_offset:104952*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104952*0 + 3*424*FLEN/8, x4, x1, x2)

inst_34985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000007ffff; valaddr_reg:x3; val_offset:104955*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104955*0 + 3*425*FLEN/8, x4, x1, x2)

inst_34986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000000fffff; valaddr_reg:x3; val_offset:104958*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104958*0 + 3*426*FLEN/8, x4, x1, x2)

inst_34987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000001fffff; valaddr_reg:x3; val_offset:104961*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104961*0 + 3*427*FLEN/8, x4, x1, x2)

inst_34988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000003fffff; valaddr_reg:x3; val_offset:104964*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104964*0 + 3*428*FLEN/8, x4, x1, x2)

inst_34989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000007fffff; valaddr_reg:x3; val_offset:104967*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104967*0 + 3*429*FLEN/8, x4, x1, x2)

inst_34990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000000ffffff; valaddr_reg:x3; val_offset:104970*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104970*0 + 3*430*FLEN/8, x4, x1, x2)

inst_34991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000001ffffff; valaddr_reg:x3; val_offset:104973*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104973*0 + 3*431*FLEN/8, x4, x1, x2)

inst_34992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000003ffffff; valaddr_reg:x3; val_offset:104976*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104976*0 + 3*432*FLEN/8, x4, x1, x2)

inst_34993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000007ffffff; valaddr_reg:x3; val_offset:104979*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104979*0 + 3*433*FLEN/8, x4, x1, x2)

inst_34994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000000fffffff; valaddr_reg:x3; val_offset:104982*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104982*0 + 3*434*FLEN/8, x4, x1, x2)

inst_34995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000001fffffff; valaddr_reg:x3; val_offset:104985*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104985*0 + 3*435*FLEN/8, x4, x1, x2)

inst_34996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000003fffffff; valaddr_reg:x3; val_offset:104988*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104988*0 + 3*436*FLEN/8, x4, x1, x2)

inst_34997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000007fffffff; valaddr_reg:x3; val_offset:104991*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104991*0 + 3*437*FLEN/8, x4, x1, x2)

inst_34998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700000ffffffff; valaddr_reg:x3; val_offset:104994*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104994*0 + 3*438*FLEN/8, x4, x1, x2)

inst_34999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700001ffffffff; valaddr_reg:x3; val_offset:104997*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 104997*0 + 3*439*FLEN/8, x4, x1, x2)

inst_35000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700003ffffffff; valaddr_reg:x3; val_offset:105000*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105000*0 + 3*440*FLEN/8, x4, x1, x2)

inst_35001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700007ffffffff; valaddr_reg:x3; val_offset:105003*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105003*0 + 3*441*FLEN/8, x4, x1, x2)

inst_35002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070000fffffffff; valaddr_reg:x3; val_offset:105006*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105006*0 + 3*442*FLEN/8, x4, x1, x2)

inst_35003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070001fffffffff; valaddr_reg:x3; val_offset:105009*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105009*0 + 3*443*FLEN/8, x4, x1, x2)

inst_35004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070003fffffffff; valaddr_reg:x3; val_offset:105012*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105012*0 + 3*444*FLEN/8, x4, x1, x2)

inst_35005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070007fffffffff; valaddr_reg:x3; val_offset:105015*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105015*0 + 3*445*FLEN/8, x4, x1, x2)

inst_35006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807000ffffffffff; valaddr_reg:x3; val_offset:105018*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105018*0 + 3*446*FLEN/8, x4, x1, x2)

inst_35007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807001ffffffffff; valaddr_reg:x3; val_offset:105021*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105021*0 + 3*447*FLEN/8, x4, x1, x2)

inst_35008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807003ffffffffff; valaddr_reg:x3; val_offset:105024*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105024*0 + 3*448*FLEN/8, x4, x1, x2)

inst_35009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807007ffffffffff; valaddr_reg:x3; val_offset:105027*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105027*0 + 3*449*FLEN/8, x4, x1, x2)

inst_35010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80700fffffffffff; valaddr_reg:x3; val_offset:105030*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105030*0 + 3*450*FLEN/8, x4, x1, x2)

inst_35011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80701fffffffffff; valaddr_reg:x3; val_offset:105033*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105033*0 + 3*451*FLEN/8, x4, x1, x2)

inst_35012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80703fffffffffff; valaddr_reg:x3; val_offset:105036*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105036*0 + 3*452*FLEN/8, x4, x1, x2)

inst_35013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x80707fffffffffff; valaddr_reg:x3; val_offset:105039*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105039*0 + 3*453*FLEN/8, x4, x1, x2)

inst_35014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8070ffffffffffff; valaddr_reg:x3; val_offset:105042*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105042*0 + 3*454*FLEN/8, x4, x1, x2)

inst_35015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8071ffffffffffff; valaddr_reg:x3; val_offset:105045*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105045*0 + 3*455*FLEN/8, x4, x1, x2)

inst_35016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8073ffffffffffff; valaddr_reg:x3; val_offset:105048*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105048*0 + 3*456*FLEN/8, x4, x1, x2)

inst_35017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8077ffffffffffff; valaddr_reg:x3; val_offset:105051*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105051*0 + 3*457*FLEN/8, x4, x1, x2)

inst_35018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x8078000000000000; valaddr_reg:x3; val_offset:105054*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105054*0 + 3*458*FLEN/8, x4, x1, x2)

inst_35019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807c000000000000; valaddr_reg:x3; val_offset:105057*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105057*0 + 3*459*FLEN/8, x4, x1, x2)

inst_35020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807e000000000000; valaddr_reg:x3; val_offset:105060*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105060*0 + 3*460*FLEN/8, x4, x1, x2)

inst_35021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807f000000000000; valaddr_reg:x3; val_offset:105063*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105063*0 + 3*461*FLEN/8, x4, x1, x2)

inst_35022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807f800000000000; valaddr_reg:x3; val_offset:105066*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105066*0 + 3*462*FLEN/8, x4, x1, x2)

inst_35023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fc00000000000; valaddr_reg:x3; val_offset:105069*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105069*0 + 3*463*FLEN/8, x4, x1, x2)

inst_35024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fe00000000000; valaddr_reg:x3; val_offset:105072*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105072*0 + 3*464*FLEN/8, x4, x1, x2)

inst_35025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ff00000000000; valaddr_reg:x3; val_offset:105075*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105075*0 + 3*465*FLEN/8, x4, x1, x2)

inst_35026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ff80000000000; valaddr_reg:x3; val_offset:105078*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105078*0 + 3*466*FLEN/8, x4, x1, x2)

inst_35027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffc0000000000; valaddr_reg:x3; val_offset:105081*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105081*0 + 3*467*FLEN/8, x4, x1, x2)

inst_35028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffe0000000000; valaddr_reg:x3; val_offset:105084*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105084*0 + 3*468*FLEN/8, x4, x1, x2)

inst_35029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fff0000000000; valaddr_reg:x3; val_offset:105087*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105087*0 + 3*469*FLEN/8, x4, x1, x2)

inst_35030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fff8000000000; valaddr_reg:x3; val_offset:105090*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105090*0 + 3*470*FLEN/8, x4, x1, x2)

inst_35031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffc000000000; valaddr_reg:x3; val_offset:105093*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105093*0 + 3*471*FLEN/8, x4, x1, x2)

inst_35032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffe000000000; valaddr_reg:x3; val_offset:105096*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105096*0 + 3*472*FLEN/8, x4, x1, x2)

inst_35033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffff000000000; valaddr_reg:x3; val_offset:105099*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105099*0 + 3*473*FLEN/8, x4, x1, x2)

inst_35034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffff800000000; valaddr_reg:x3; val_offset:105102*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105102*0 + 3*474*FLEN/8, x4, x1, x2)

inst_35035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffc00000000; valaddr_reg:x3; val_offset:105105*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105105*0 + 3*475*FLEN/8, x4, x1, x2)

inst_35036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffe00000000; valaddr_reg:x3; val_offset:105108*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105108*0 + 3*476*FLEN/8, x4, x1, x2)

inst_35037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffff00000000; valaddr_reg:x3; val_offset:105111*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105111*0 + 3*477*FLEN/8, x4, x1, x2)

inst_35038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffff80000000; valaddr_reg:x3; val_offset:105114*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105114*0 + 3*478*FLEN/8, x4, x1, x2)

inst_35039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffc0000000; valaddr_reg:x3; val_offset:105117*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105117*0 + 3*479*FLEN/8, x4, x1, x2)

inst_35040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffe0000000; valaddr_reg:x3; val_offset:105120*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105120*0 + 3*480*FLEN/8, x4, x1, x2)

inst_35041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffff0000000; valaddr_reg:x3; val_offset:105123*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105123*0 + 3*481*FLEN/8, x4, x1, x2)

inst_35042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffff8000000; valaddr_reg:x3; val_offset:105126*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105126*0 + 3*482*FLEN/8, x4, x1, x2)

inst_35043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffc000000; valaddr_reg:x3; val_offset:105129*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105129*0 + 3*483*FLEN/8, x4, x1, x2)

inst_35044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffe000000; valaddr_reg:x3; val_offset:105132*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105132*0 + 3*484*FLEN/8, x4, x1, x2)

inst_35045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffff000000; valaddr_reg:x3; val_offset:105135*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105135*0 + 3*485*FLEN/8, x4, x1, x2)

inst_35046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffff800000; valaddr_reg:x3; val_offset:105138*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105138*0 + 3*486*FLEN/8, x4, x1, x2)

inst_35047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffc00000; valaddr_reg:x3; val_offset:105141*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105141*0 + 3*487*FLEN/8, x4, x1, x2)

inst_35048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffe00000; valaddr_reg:x3; val_offset:105144*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105144*0 + 3*488*FLEN/8, x4, x1, x2)

inst_35049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffff00000; valaddr_reg:x3; val_offset:105147*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105147*0 + 3*489*FLEN/8, x4, x1, x2)

inst_35050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffff80000; valaddr_reg:x3; val_offset:105150*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105150*0 + 3*490*FLEN/8, x4, x1, x2)

inst_35051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffc0000; valaddr_reg:x3; val_offset:105153*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105153*0 + 3*491*FLEN/8, x4, x1, x2)

inst_35052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:105156*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105156*0 + 3*492*FLEN/8, x4, x1, x2)

inst_35053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:105159*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105159*0 + 3*493*FLEN/8, x4, x1, x2)

inst_35054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:105162*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105162*0 + 3*494*FLEN/8, x4, x1, x2)

inst_35055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:105165*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105165*0 + 3*495*FLEN/8, x4, x1, x2)

inst_35056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:105168*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105168*0 + 3*496*FLEN/8, x4, x1, x2)

inst_35057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:105171*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105171*0 + 3*497*FLEN/8, x4, x1, x2)

inst_35058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:105174*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105174*0 + 3*498*FLEN/8, x4, x1, x2)

inst_35059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:105177*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105177*0 + 3*499*FLEN/8, x4, x1, x2)

inst_35060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:105180*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105180*0 + 3*500*FLEN/8, x4, x1, x2)

inst_35061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:105183*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105183*0 + 3*501*FLEN/8, x4, x1, x2)

inst_35062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:105186*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105186*0 + 3*502*FLEN/8, x4, x1, x2)

inst_35063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:105189*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105189*0 + 3*503*FLEN/8, x4, x1, x2)

inst_35064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:105192*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105192*0 + 3*504*FLEN/8, x4, x1, x2)

inst_35065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:105195*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105195*0 + 3*505*FLEN/8, x4, x1, x2)

inst_35066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:105198*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105198*0 + 3*506*FLEN/8, x4, x1, x2)

inst_35067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:105201*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105201*0 + 3*507*FLEN/8, x4, x1, x2)

inst_35068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:105204*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105204*0 + 3*508*FLEN/8, x4, x1, x2)

inst_35069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c8fcdb78f309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c8fcdb78f309; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:105207*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105207*0 + 3*509*FLEN/8, x4, x1, x2)

inst_35070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:105210*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105210*0 + 3*510*FLEN/8, x4, x1, x2)

inst_35071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:105213*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105213*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_35072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:105216*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105216*0 + 3*512*FLEN/8, x4, x1, x2)

inst_35073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:105219*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105219*0 + 3*513*FLEN/8, x4, x1, x2)

inst_35074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:105222*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105222*0 + 3*514*FLEN/8, x4, x1, x2)

inst_35075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:105225*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105225*0 + 3*515*FLEN/8, x4, x1, x2)

inst_35076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:105228*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105228*0 + 3*516*FLEN/8, x4, x1, x2)

inst_35077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:105231*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105231*0 + 3*517*FLEN/8, x4, x1, x2)

inst_35078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:105234*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105234*0 + 3*518*FLEN/8, x4, x1, x2)

inst_35079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:105237*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105237*0 + 3*519*FLEN/8, x4, x1, x2)

inst_35080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:105240*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105240*0 + 3*520*FLEN/8, x4, x1, x2)

inst_35081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:105243*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105243*0 + 3*521*FLEN/8, x4, x1, x2)

inst_35082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:105246*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105246*0 + 3*522*FLEN/8, x4, x1, x2)

inst_35083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:105249*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105249*0 + 3*523*FLEN/8, x4, x1, x2)

inst_35084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:105252*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105252*0 + 3*524*FLEN/8, x4, x1, x2)

inst_35085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:105255*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105255*0 + 3*525*FLEN/8, x4, x1, x2)

inst_35086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:105258*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105258*0 + 3*526*FLEN/8, x4, x1, x2)

inst_35087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:105261*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105261*0 + 3*527*FLEN/8, x4, x1, x2)

inst_35088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:105264*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105264*0 + 3*528*FLEN/8, x4, x1, x2)

inst_35089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:105267*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105267*0 + 3*529*FLEN/8, x4, x1, x2)

inst_35090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:105270*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105270*0 + 3*530*FLEN/8, x4, x1, x2)

inst_35091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:105273*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105273*0 + 3*531*FLEN/8, x4, x1, x2)

inst_35092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:105276*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105276*0 + 3*532*FLEN/8, x4, x1, x2)

inst_35093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:105279*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105279*0 + 3*533*FLEN/8, x4, x1, x2)

inst_35094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:105282*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105282*0 + 3*534*FLEN/8, x4, x1, x2)

inst_35095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:105285*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105285*0 + 3*535*FLEN/8, x4, x1, x2)

inst_35096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:105288*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105288*0 + 3*536*FLEN/8, x4, x1, x2)

inst_35097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:105291*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105291*0 + 3*537*FLEN/8, x4, x1, x2)

inst_35098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:105294*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105294*0 + 3*538*FLEN/8, x4, x1, x2)

inst_35099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:105297*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105297*0 + 3*539*FLEN/8, x4, x1, x2)

inst_35100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:105300*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105300*0 + 3*540*FLEN/8, x4, x1, x2)

inst_35101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:105303*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105303*0 + 3*541*FLEN/8, x4, x1, x2)

inst_35102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:105306*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105306*0 + 3*542*FLEN/8, x4, x1, x2)

inst_35103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:105309*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105309*0 + 3*543*FLEN/8, x4, x1, x2)

inst_35104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:105312*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105312*0 + 3*544*FLEN/8, x4, x1, x2)

inst_35105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:105315*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105315*0 + 3*545*FLEN/8, x4, x1, x2)

inst_35106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:105318*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105318*0 + 3*546*FLEN/8, x4, x1, x2)

inst_35107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:105321*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105321*0 + 3*547*FLEN/8, x4, x1, x2)

inst_35108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:105324*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105324*0 + 3*548*FLEN/8, x4, x1, x2)

inst_35109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:105327*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105327*0 + 3*549*FLEN/8, x4, x1, x2)

inst_35110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:105330*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105330*0 + 3*550*FLEN/8, x4, x1, x2)

inst_35111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:105333*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105333*0 + 3*551*FLEN/8, x4, x1, x2)

inst_35112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:105336*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105336*0 + 3*552*FLEN/8, x4, x1, x2)

inst_35113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:105339*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105339*0 + 3*553*FLEN/8, x4, x1, x2)

inst_35114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:105342*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105342*0 + 3*554*FLEN/8, x4, x1, x2)

inst_35115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:105345*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105345*0 + 3*555*FLEN/8, x4, x1, x2)

inst_35116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:105348*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105348*0 + 3*556*FLEN/8, x4, x1, x2)

inst_35117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:105351*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105351*0 + 3*557*FLEN/8, x4, x1, x2)

inst_35118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:105354*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105354*0 + 3*558*FLEN/8, x4, x1, x2)

inst_35119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:105357*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105357*0 + 3*559*FLEN/8, x4, x1, x2)

inst_35120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:105360*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105360*0 + 3*560*FLEN/8, x4, x1, x2)

inst_35121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:105363*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105363*0 + 3*561*FLEN/8, x4, x1, x2)

inst_35122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:105366*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105366*0 + 3*562*FLEN/8, x4, x1, x2)

inst_35123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:105369*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105369*0 + 3*563*FLEN/8, x4, x1, x2)

inst_35124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:105372*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105372*0 + 3*564*FLEN/8, x4, x1, x2)

inst_35125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:105375*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105375*0 + 3*565*FLEN/8, x4, x1, x2)

inst_35126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:105378*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105378*0 + 3*566*FLEN/8, x4, x1, x2)

inst_35127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:105381*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105381*0 + 3*567*FLEN/8, x4, x1, x2)

inst_35128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:105384*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105384*0 + 3*568*FLEN/8, x4, x1, x2)

inst_35129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:105387*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105387*0 + 3*569*FLEN/8, x4, x1, x2)

inst_35130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:105390*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105390*0 + 3*570*FLEN/8, x4, x1, x2)

inst_35131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:105393*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105393*0 + 3*571*FLEN/8, x4, x1, x2)

inst_35132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:105396*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105396*0 + 3*572*FLEN/8, x4, x1, x2)

inst_35133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:105399*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105399*0 + 3*573*FLEN/8, x4, x1, x2)

inst_35134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:105402*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105402*0 + 3*574*FLEN/8, x4, x1, x2)

inst_35135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:105405*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105405*0 + 3*575*FLEN/8, x4, x1, x2)

inst_35136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:105408*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105408*0 + 3*576*FLEN/8, x4, x1, x2)

inst_35137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:105411*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105411*0 + 3*577*FLEN/8, x4, x1, x2)

inst_35138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:105414*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105414*0 + 3*578*FLEN/8, x4, x1, x2)

inst_35139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:105417*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105417*0 + 3*579*FLEN/8, x4, x1, x2)

inst_35140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:105420*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105420*0 + 3*580*FLEN/8, x4, x1, x2)

inst_35141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:105423*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105423*0 + 3*581*FLEN/8, x4, x1, x2)

inst_35142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:105426*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105426*0 + 3*582*FLEN/8, x4, x1, x2)

inst_35143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:105429*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105429*0 + 3*583*FLEN/8, x4, x1, x2)

inst_35144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:105432*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105432*0 + 3*584*FLEN/8, x4, x1, x2)

inst_35145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:105435*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105435*0 + 3*585*FLEN/8, x4, x1, x2)

inst_35146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:105438*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105438*0 + 3*586*FLEN/8, x4, x1, x2)

inst_35147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:105441*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105441*0 + 3*587*FLEN/8, x4, x1, x2)

inst_35148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:105444*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105444*0 + 3*588*FLEN/8, x4, x1, x2)

inst_35149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:105447*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105447*0 + 3*589*FLEN/8, x4, x1, x2)

inst_35150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:105450*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105450*0 + 3*590*FLEN/8, x4, x1, x2)

inst_35151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:105453*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105453*0 + 3*591*FLEN/8, x4, x1, x2)

inst_35152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:105456*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105456*0 + 3*592*FLEN/8, x4, x1, x2)

inst_35153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:105459*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105459*0 + 3*593*FLEN/8, x4, x1, x2)

inst_35154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:105462*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105462*0 + 3*594*FLEN/8, x4, x1, x2)

inst_35155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:105465*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105465*0 + 3*595*FLEN/8, x4, x1, x2)

inst_35156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:105468*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105468*0 + 3*596*FLEN/8, x4, x1, x2)

inst_35157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:105471*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105471*0 + 3*597*FLEN/8, x4, x1, x2)

inst_35158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:105474*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105474*0 + 3*598*FLEN/8, x4, x1, x2)

inst_35159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:105477*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105477*0 + 3*599*FLEN/8, x4, x1, x2)

inst_35160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:105480*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105480*0 + 3*600*FLEN/8, x4, x1, x2)

inst_35161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:105483*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105483*0 + 3*601*FLEN/8, x4, x1, x2)

inst_35162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:105486*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105486*0 + 3*602*FLEN/8, x4, x1, x2)

inst_35163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:105489*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105489*0 + 3*603*FLEN/8, x4, x1, x2)

inst_35164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:105492*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105492*0 + 3*604*FLEN/8, x4, x1, x2)

inst_35165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:105495*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105495*0 + 3*605*FLEN/8, x4, x1, x2)

inst_35166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:105498*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105498*0 + 3*606*FLEN/8, x4, x1, x2)

inst_35167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:105501*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105501*0 + 3*607*FLEN/8, x4, x1, x2)

inst_35168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:105504*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105504*0 + 3*608*FLEN/8, x4, x1, x2)

inst_35169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:105507*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105507*0 + 3*609*FLEN/8, x4, x1, x2)

inst_35170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:105510*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105510*0 + 3*610*FLEN/8, x4, x1, x2)

inst_35171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:105513*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105513*0 + 3*611*FLEN/8, x4, x1, x2)

inst_35172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:105516*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105516*0 + 3*612*FLEN/8, x4, x1, x2)

inst_35173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:105519*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105519*0 + 3*613*FLEN/8, x4, x1, x2)

inst_35174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:105522*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105522*0 + 3*614*FLEN/8, x4, x1, x2)

inst_35175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:105525*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105525*0 + 3*615*FLEN/8, x4, x1, x2)

inst_35176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:105528*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105528*0 + 3*616*FLEN/8, x4, x1, x2)

inst_35177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:105531*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105531*0 + 3*617*FLEN/8, x4, x1, x2)

inst_35178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:105534*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105534*0 + 3*618*FLEN/8, x4, x1, x2)

inst_35179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:105537*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105537*0 + 3*619*FLEN/8, x4, x1, x2)

inst_35180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:105540*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105540*0 + 3*620*FLEN/8, x4, x1, x2)

inst_35181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:105543*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105543*0 + 3*621*FLEN/8, x4, x1, x2)

inst_35182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:105546*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105546*0 + 3*622*FLEN/8, x4, x1, x2)

inst_35183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:105549*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105549*0 + 3*623*FLEN/8, x4, x1, x2)

inst_35184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:105552*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105552*0 + 3*624*FLEN/8, x4, x1, x2)

inst_35185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:105555*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105555*0 + 3*625*FLEN/8, x4, x1, x2)

inst_35186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:105558*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105558*0 + 3*626*FLEN/8, x4, x1, x2)

inst_35187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:105561*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105561*0 + 3*627*FLEN/8, x4, x1, x2)

inst_35188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:105564*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105564*0 + 3*628*FLEN/8, x4, x1, x2)

inst_35189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:105567*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105567*0 + 3*629*FLEN/8, x4, x1, x2)

inst_35190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:105570*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105570*0 + 3*630*FLEN/8, x4, x1, x2)

inst_35191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:105573*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105573*0 + 3*631*FLEN/8, x4, x1, x2)

inst_35192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:105576*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105576*0 + 3*632*FLEN/8, x4, x1, x2)

inst_35193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:105579*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105579*0 + 3*633*FLEN/8, x4, x1, x2)

inst_35194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:105582*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105582*0 + 3*634*FLEN/8, x4, x1, x2)

inst_35195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5cd0483726877 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95cd0483726877; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:105585*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105585*0 + 3*635*FLEN/8, x4, x1, x2)

inst_35196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:105588*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105588*0 + 3*636*FLEN/8, x4, x1, x2)

inst_35197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:105591*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105591*0 + 3*637*FLEN/8, x4, x1, x2)

inst_35198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:105594*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105594*0 + 3*638*FLEN/8, x4, x1, x2)

inst_35199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:105597*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105597*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_35200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:105600*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105600*0 + 3*640*FLEN/8, x4, x1, x2)

inst_35201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:105603*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105603*0 + 3*641*FLEN/8, x4, x1, x2)

inst_35202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:105606*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105606*0 + 3*642*FLEN/8, x4, x1, x2)

inst_35203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:105609*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105609*0 + 3*643*FLEN/8, x4, x1, x2)

inst_35204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:105612*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105612*0 + 3*644*FLEN/8, x4, x1, x2)

inst_35205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:105615*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105615*0 + 3*645*FLEN/8, x4, x1, x2)

inst_35206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:105618*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105618*0 + 3*646*FLEN/8, x4, x1, x2)

inst_35207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:105621*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105621*0 + 3*647*FLEN/8, x4, x1, x2)

inst_35208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:105624*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105624*0 + 3*648*FLEN/8, x4, x1, x2)

inst_35209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:105627*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105627*0 + 3*649*FLEN/8, x4, x1, x2)

inst_35210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:105630*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105630*0 + 3*650*FLEN/8, x4, x1, x2)

inst_35211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:105633*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105633*0 + 3*651*FLEN/8, x4, x1, x2)

inst_35212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:105636*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105636*0 + 3*652*FLEN/8, x4, x1, x2)

inst_35213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:105639*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105639*0 + 3*653*FLEN/8, x4, x1, x2)

inst_35214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:105642*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105642*0 + 3*654*FLEN/8, x4, x1, x2)

inst_35215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:105645*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105645*0 + 3*655*FLEN/8, x4, x1, x2)

inst_35216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:105648*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105648*0 + 3*656*FLEN/8, x4, x1, x2)

inst_35217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:105651*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105651*0 + 3*657*FLEN/8, x4, x1, x2)

inst_35218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000000000; valaddr_reg:x3; val_offset:105654*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105654*0 + 3*658*FLEN/8, x4, x1, x2)

inst_35219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000000001; valaddr_reg:x3; val_offset:105657*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105657*0 + 3*659*FLEN/8, x4, x1, x2)

inst_35220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000000003; valaddr_reg:x3; val_offset:105660*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105660*0 + 3*660*FLEN/8, x4, x1, x2)

inst_35221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000000007; valaddr_reg:x3; val_offset:105663*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105663*0 + 3*661*FLEN/8, x4, x1, x2)

inst_35222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000000000f; valaddr_reg:x3; val_offset:105666*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105666*0 + 3*662*FLEN/8, x4, x1, x2)

inst_35223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000000001f; valaddr_reg:x3; val_offset:105669*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105669*0 + 3*663*FLEN/8, x4, x1, x2)

inst_35224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000000003f; valaddr_reg:x3; val_offset:105672*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105672*0 + 3*664*FLEN/8, x4, x1, x2)

inst_35225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000000007f; valaddr_reg:x3; val_offset:105675*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105675*0 + 3*665*FLEN/8, x4, x1, x2)

inst_35226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000000000ff; valaddr_reg:x3; val_offset:105678*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105678*0 + 3*666*FLEN/8, x4, x1, x2)

inst_35227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000000001ff; valaddr_reg:x3; val_offset:105681*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105681*0 + 3*667*FLEN/8, x4, x1, x2)

inst_35228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000000003ff; valaddr_reg:x3; val_offset:105684*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105684*0 + 3*668*FLEN/8, x4, x1, x2)

inst_35229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000000007ff; valaddr_reg:x3; val_offset:105687*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105687*0 + 3*669*FLEN/8, x4, x1, x2)

inst_35230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000000fff; valaddr_reg:x3; val_offset:105690*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105690*0 + 3*670*FLEN/8, x4, x1, x2)

inst_35231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000001fff; valaddr_reg:x3; val_offset:105693*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105693*0 + 3*671*FLEN/8, x4, x1, x2)

inst_35232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000003fff; valaddr_reg:x3; val_offset:105696*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105696*0 + 3*672*FLEN/8, x4, x1, x2)

inst_35233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000007fff; valaddr_reg:x3; val_offset:105699*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105699*0 + 3*673*FLEN/8, x4, x1, x2)

inst_35234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000000ffff; valaddr_reg:x3; val_offset:105702*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105702*0 + 3*674*FLEN/8, x4, x1, x2)

inst_35235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000001ffff; valaddr_reg:x3; val_offset:105705*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105705*0 + 3*675*FLEN/8, x4, x1, x2)

inst_35236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000003ffff; valaddr_reg:x3; val_offset:105708*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105708*0 + 3*676*FLEN/8, x4, x1, x2)

inst_35237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000007ffff; valaddr_reg:x3; val_offset:105711*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105711*0 + 3*677*FLEN/8, x4, x1, x2)

inst_35238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000000fffff; valaddr_reg:x3; val_offset:105714*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105714*0 + 3*678*FLEN/8, x4, x1, x2)

inst_35239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000001fffff; valaddr_reg:x3; val_offset:105717*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105717*0 + 3*679*FLEN/8, x4, x1, x2)

inst_35240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000003fffff; valaddr_reg:x3; val_offset:105720*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105720*0 + 3*680*FLEN/8, x4, x1, x2)

inst_35241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000007fffff; valaddr_reg:x3; val_offset:105723*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105723*0 + 3*681*FLEN/8, x4, x1, x2)

inst_35242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000000ffffff; valaddr_reg:x3; val_offset:105726*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105726*0 + 3*682*FLEN/8, x4, x1, x2)

inst_35243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000001ffffff; valaddr_reg:x3; val_offset:105729*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105729*0 + 3*683*FLEN/8, x4, x1, x2)

inst_35244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000003ffffff; valaddr_reg:x3; val_offset:105732*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105732*0 + 3*684*FLEN/8, x4, x1, x2)

inst_35245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000007ffffff; valaddr_reg:x3; val_offset:105735*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105735*0 + 3*685*FLEN/8, x4, x1, x2)

inst_35246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000000fffffff; valaddr_reg:x3; val_offset:105738*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105738*0 + 3*686*FLEN/8, x4, x1, x2)

inst_35247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000001fffffff; valaddr_reg:x3; val_offset:105741*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105741*0 + 3*687*FLEN/8, x4, x1, x2)

inst_35248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000003fffffff; valaddr_reg:x3; val_offset:105744*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105744*0 + 3*688*FLEN/8, x4, x1, x2)

inst_35249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000007fffffff; valaddr_reg:x3; val_offset:105747*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105747*0 + 3*689*FLEN/8, x4, x1, x2)

inst_35250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00000ffffffff; valaddr_reg:x3; val_offset:105750*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105750*0 + 3*690*FLEN/8, x4, x1, x2)

inst_35251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00001ffffffff; valaddr_reg:x3; val_offset:105753*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105753*0 + 3*691*FLEN/8, x4, x1, x2)

inst_35252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00003ffffffff; valaddr_reg:x3; val_offset:105756*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105756*0 + 3*692*FLEN/8, x4, x1, x2)

inst_35253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00007ffffffff; valaddr_reg:x3; val_offset:105759*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105759*0 + 3*693*FLEN/8, x4, x1, x2)

inst_35254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0000fffffffff; valaddr_reg:x3; val_offset:105762*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105762*0 + 3*694*FLEN/8, x4, x1, x2)

inst_35255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0001fffffffff; valaddr_reg:x3; val_offset:105765*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105765*0 + 3*695*FLEN/8, x4, x1, x2)

inst_35256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0003fffffffff; valaddr_reg:x3; val_offset:105768*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105768*0 + 3*696*FLEN/8, x4, x1, x2)

inst_35257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0007fffffffff; valaddr_reg:x3; val_offset:105771*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105771*0 + 3*697*FLEN/8, x4, x1, x2)

inst_35258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c000ffffffffff; valaddr_reg:x3; val_offset:105774*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105774*0 + 3*698*FLEN/8, x4, x1, x2)

inst_35259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c001ffffffffff; valaddr_reg:x3; val_offset:105777*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105777*0 + 3*699*FLEN/8, x4, x1, x2)

inst_35260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c003ffffffffff; valaddr_reg:x3; val_offset:105780*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105780*0 + 3*700*FLEN/8, x4, x1, x2)

inst_35261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c007ffffffffff; valaddr_reg:x3; val_offset:105783*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105783*0 + 3*701*FLEN/8, x4, x1, x2)

inst_35262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c00fffffffffff; valaddr_reg:x3; val_offset:105786*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105786*0 + 3*702*FLEN/8, x4, x1, x2)

inst_35263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c01fffffffffff; valaddr_reg:x3; val_offset:105789*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105789*0 + 3*703*FLEN/8, x4, x1, x2)

inst_35264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c03fffffffffff; valaddr_reg:x3; val_offset:105792*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105792*0 + 3*704*FLEN/8, x4, x1, x2)

inst_35265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c07fffffffffff; valaddr_reg:x3; val_offset:105795*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105795*0 + 3*705*FLEN/8, x4, x1, x2)

inst_35266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c0ffffffffffff; valaddr_reg:x3; val_offset:105798*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105798*0 + 3*706*FLEN/8, x4, x1, x2)

inst_35267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c1ffffffffffff; valaddr_reg:x3; val_offset:105801*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105801*0 + 3*707*FLEN/8, x4, x1, x2)

inst_35268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c3ffffffffffff; valaddr_reg:x3; val_offset:105804*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105804*0 + 3*708*FLEN/8, x4, x1, x2)

inst_35269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c7ffffffffffff; valaddr_reg:x3; val_offset:105807*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105807*0 + 3*709*FLEN/8, x4, x1, x2)

inst_35270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80c8000000000000; valaddr_reg:x3; val_offset:105810*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105810*0 + 3*710*FLEN/8, x4, x1, x2)

inst_35271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cc000000000000; valaddr_reg:x3; val_offset:105813*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105813*0 + 3*711*FLEN/8, x4, x1, x2)

inst_35272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80ce000000000000; valaddr_reg:x3; val_offset:105816*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105816*0 + 3*712*FLEN/8, x4, x1, x2)

inst_35273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cf000000000000; valaddr_reg:x3; val_offset:105819*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105819*0 + 3*713*FLEN/8, x4, x1, x2)

inst_35274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cf800000000000; valaddr_reg:x3; val_offset:105822*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105822*0 + 3*714*FLEN/8, x4, x1, x2)

inst_35275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfc00000000000; valaddr_reg:x3; val_offset:105825*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105825*0 + 3*715*FLEN/8, x4, x1, x2)

inst_35276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfe00000000000; valaddr_reg:x3; val_offset:105828*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105828*0 + 3*716*FLEN/8, x4, x1, x2)

inst_35277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cff00000000000; valaddr_reg:x3; val_offset:105831*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105831*0 + 3*717*FLEN/8, x4, x1, x2)

inst_35278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cff80000000000; valaddr_reg:x3; val_offset:105834*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105834*0 + 3*718*FLEN/8, x4, x1, x2)

inst_35279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffc0000000000; valaddr_reg:x3; val_offset:105837*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105837*0 + 3*719*FLEN/8, x4, x1, x2)

inst_35280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffe0000000000; valaddr_reg:x3; val_offset:105840*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105840*0 + 3*720*FLEN/8, x4, x1, x2)

inst_35281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfff0000000000; valaddr_reg:x3; val_offset:105843*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105843*0 + 3*721*FLEN/8, x4, x1, x2)

inst_35282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfff8000000000; valaddr_reg:x3; val_offset:105846*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105846*0 + 3*722*FLEN/8, x4, x1, x2)

inst_35283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffc000000000; valaddr_reg:x3; val_offset:105849*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105849*0 + 3*723*FLEN/8, x4, x1, x2)

inst_35284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffe000000000; valaddr_reg:x3; val_offset:105852*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105852*0 + 3*724*FLEN/8, x4, x1, x2)

inst_35285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffff000000000; valaddr_reg:x3; val_offset:105855*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105855*0 + 3*725*FLEN/8, x4, x1, x2)

inst_35286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffff800000000; valaddr_reg:x3; val_offset:105858*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105858*0 + 3*726*FLEN/8, x4, x1, x2)

inst_35287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffc00000000; valaddr_reg:x3; val_offset:105861*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105861*0 + 3*727*FLEN/8, x4, x1, x2)

inst_35288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffe00000000; valaddr_reg:x3; val_offset:105864*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105864*0 + 3*728*FLEN/8, x4, x1, x2)

inst_35289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffff00000000; valaddr_reg:x3; val_offset:105867*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105867*0 + 3*729*FLEN/8, x4, x1, x2)

inst_35290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffff80000000; valaddr_reg:x3; val_offset:105870*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105870*0 + 3*730*FLEN/8, x4, x1, x2)

inst_35291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffc0000000; valaddr_reg:x3; val_offset:105873*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105873*0 + 3*731*FLEN/8, x4, x1, x2)

inst_35292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffe0000000; valaddr_reg:x3; val_offset:105876*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105876*0 + 3*732*FLEN/8, x4, x1, x2)

inst_35293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffff0000000; valaddr_reg:x3; val_offset:105879*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105879*0 + 3*733*FLEN/8, x4, x1, x2)

inst_35294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffff8000000; valaddr_reg:x3; val_offset:105882*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105882*0 + 3*734*FLEN/8, x4, x1, x2)

inst_35295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffc000000; valaddr_reg:x3; val_offset:105885*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105885*0 + 3*735*FLEN/8, x4, x1, x2)

inst_35296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffe000000; valaddr_reg:x3; val_offset:105888*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105888*0 + 3*736*FLEN/8, x4, x1, x2)

inst_35297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffff000000; valaddr_reg:x3; val_offset:105891*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105891*0 + 3*737*FLEN/8, x4, x1, x2)

inst_35298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffff800000; valaddr_reg:x3; val_offset:105894*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105894*0 + 3*738*FLEN/8, x4, x1, x2)

inst_35299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffc00000; valaddr_reg:x3; val_offset:105897*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105897*0 + 3*739*FLEN/8, x4, x1, x2)

inst_35300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffe00000; valaddr_reg:x3; val_offset:105900*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105900*0 + 3*740*FLEN/8, x4, x1, x2)

inst_35301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffff00000; valaddr_reg:x3; val_offset:105903*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105903*0 + 3*741*FLEN/8, x4, x1, x2)

inst_35302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffff80000; valaddr_reg:x3; val_offset:105906*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105906*0 + 3*742*FLEN/8, x4, x1, x2)

inst_35303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffc0000; valaddr_reg:x3; val_offset:105909*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105909*0 + 3*743*FLEN/8, x4, x1, x2)

inst_35304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffe0000; valaddr_reg:x3; val_offset:105912*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105912*0 + 3*744*FLEN/8, x4, x1, x2)

inst_35305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffff0000; valaddr_reg:x3; val_offset:105915*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105915*0 + 3*745*FLEN/8, x4, x1, x2)

inst_35306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffff8000; valaddr_reg:x3; val_offset:105918*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105918*0 + 3*746*FLEN/8, x4, x1, x2)

inst_35307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffc000; valaddr_reg:x3; val_offset:105921*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105921*0 + 3*747*FLEN/8, x4, x1, x2)

inst_35308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffe000; valaddr_reg:x3; val_offset:105924*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105924*0 + 3*748*FLEN/8, x4, x1, x2)

inst_35309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffff000; valaddr_reg:x3; val_offset:105927*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105927*0 + 3*749*FLEN/8, x4, x1, x2)

inst_35310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffff800; valaddr_reg:x3; val_offset:105930*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105930*0 + 3*750*FLEN/8, x4, x1, x2)

inst_35311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffc00; valaddr_reg:x3; val_offset:105933*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105933*0 + 3*751*FLEN/8, x4, x1, x2)

inst_35312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffe00; valaddr_reg:x3; val_offset:105936*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105936*0 + 3*752*FLEN/8, x4, x1, x2)

inst_35313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffff00; valaddr_reg:x3; val_offset:105939*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105939*0 + 3*753*FLEN/8, x4, x1, x2)

inst_35314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffff80; valaddr_reg:x3; val_offset:105942*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105942*0 + 3*754*FLEN/8, x4, x1, x2)

inst_35315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffffc0; valaddr_reg:x3; val_offset:105945*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105945*0 + 3*755*FLEN/8, x4, x1, x2)

inst_35316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffffe0; valaddr_reg:x3; val_offset:105948*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105948*0 + 3*756*FLEN/8, x4, x1, x2)

inst_35317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffff0; valaddr_reg:x3; val_offset:105951*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105951*0 + 3*757*FLEN/8, x4, x1, x2)

inst_35318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffff8; valaddr_reg:x3; val_offset:105954*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105954*0 + 3*758*FLEN/8, x4, x1, x2)

inst_35319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffffc; valaddr_reg:x3; val_offset:105957*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105957*0 + 3*759*FLEN/8, x4, x1, x2)

inst_35320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cffffffffffffe; valaddr_reg:x3; val_offset:105960*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105960*0 + 3*760*FLEN/8, x4, x1, x2)

inst_35321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5da7685cebe7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95da7685cebe7f; op2val:0x8000;
op3val:0x80cfffffffffffff; valaddr_reg:x3; val_offset:105963*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105963*0 + 3*761*FLEN/8, x4, x1, x2)

inst_35322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:105966*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105966*0 + 3*762*FLEN/8, x4, x1, x2)

inst_35323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:105969*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105969*0 + 3*763*FLEN/8, x4, x1, x2)

inst_35324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:105972*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105972*0 + 3*764*FLEN/8, x4, x1, x2)

inst_35325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:105975*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105975*0 + 3*765*FLEN/8, x4, x1, x2)

inst_35326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:105978*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105978*0 + 3*766*FLEN/8, x4, x1, x2)

inst_35327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5eea1a1800813 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95eea1a1800813; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:105981*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105981*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6887561320674447643,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075456,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075457,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075459,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075463,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075471,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075487,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075519,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075583,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075711,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075967,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901076479,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901077503,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901079551,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901083647,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901091839,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901108223,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901140991,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901206527,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901337599,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901599743,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595902124031,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595903172607,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595905269759,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595909464063,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595917852671,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595934629887,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595968184319,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596035293183,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596169510911,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596437946367,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596974817279,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539598048559103,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539600196042751,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539604491010047,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539613080944639,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539630260813823,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539664620552191,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539733340028927,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539870778982399,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540145656889343,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540695412703231,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49541794924331007,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49543993947586559,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49548391994097663,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49557188087119871,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49574780273164287,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49609964645253119,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49680333389430783,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49821070877786111,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50102545854496767,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50665495807918079,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760703,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760704,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(52917295621603328,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53480245575024640,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53761720551735296,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53902458040090624,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53972826784268288,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54008011156357120,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54025603342401536,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54034399435423744,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54038797481934848,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54040996505190400,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042096016818176,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042645772632064,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042920650539008,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043058089492480,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043126808969216,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043161168707584,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043178348576768,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043186938511360,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043191233478656,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043193380962304,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194454704128,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194991575040,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195260010496,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195394228224,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195461337088,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195494891520,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195511668736,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195520057344,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195524251648,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195526348800,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527397376,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527921664,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528183808,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528314880,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528380416,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528413184,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528429568,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528437760,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528441856,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528443904,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528444928,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445440,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445696,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445824,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445888,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445920,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445936,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445944,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445948,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445950,64,FLEN)
NAN_BOXED(6887566417415848903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445951,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887581651538570117,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6887589849150227087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369280,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369281,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369283,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369287,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369295,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369311,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369343,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369407,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369535,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369791,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246370303,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246371327,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246373375,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246377471,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246385663,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246402047,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246434815,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246500351,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246631423,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246893567,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234247417855,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234248466431,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234250563583,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234254757887,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234263146495,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234279923711,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234313478143,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234380587007,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234514804735,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234783240191,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897235320111103,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897236393852927,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897238541336575,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897242836303871,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897251426238463,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897268606107647,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897302965846015,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897371685322751,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897509124276223,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897784002183167,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254898333757997055,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254899433269624831,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254901632292880383,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254906030339391487,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254914826432413695,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254932418618458111,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254967602990546943,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255037971734724607,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255178709223079935,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255460184199790591,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9256023134153211903,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054527,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054528,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258274933966897152,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258837883920318464,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259119358897029120,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259260096385384448,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259330465129562112,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259365649501650944,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259383241687695360,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259392037780717568,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259396435827228672,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259398634850484224,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259399734362112000,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400284117925888,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400558995832832,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400696434786304,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400765154263040,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400799514001408,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400816693870592,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400825283805184,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400829578772480,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400831726256128,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400832799997952,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833336868864,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833605304320,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833739522048,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833806630912,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833840185344,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833856962560,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833865351168,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833869545472,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833871642624,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833872691200,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873215488,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873477632,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6887632193472492297,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6887636624401918071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221760,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221761,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221763,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221767,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221775,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221791,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221823,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221887,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222015,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222271,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222783,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383223807,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383225855,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383229951,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383238143,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383254527,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383287295,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383352831,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383483903,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383746047,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232384270335,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232385318911,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232387416063,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232391610367,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232399998975,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232416776191,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232450330623,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232517439487,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232651657215,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232920092671,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415233456963583,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415234530705407,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415236678189055,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415240973156351,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415249563090943,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415266742960127,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415301102698495,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415369822175231,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415507261128703,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415782139035647,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277416331894849535,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277417431406477311,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277419630429732863,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277424028476243967,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277432824569266175,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277450416755310591,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277485601127399423,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277555969871577087,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277696707359932415,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277978182336643071,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9278541132290064383,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907007,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907008,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9280792932103749632,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281355882057170944,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281637357033881600,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281778094522236928,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281848463266414592,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281883647638503424,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281901239824547840,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281910035917570048,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281914433964081152,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281916632987336704,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281917732498964480,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918282254778368,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918557132685312,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918694571638784,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918763291115520,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918797650853888,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918814830723072,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918823420657664,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918827715624960,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918829863108608,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918830936850432,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831473721344,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831742156800,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831876374528,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831943483392,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831977037824,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831993815040,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832002203648,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832006397952,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832008495104,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832009543680,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010067968,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010330112,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010461184,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010526720,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010559488,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010575872,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010584064,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010588160,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010590208,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591232,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591744,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592000,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592128,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592192,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592224,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592240,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592248,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592252,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592254,64,FLEN)
NAN_BOXED(6887651407718956671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592255,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887673583099709459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
