
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_77568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:232704*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232704*0 + 3*0*FLEN/8, x4, x1, x2)

inst_77569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:232707*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232707*0 + 3*1*FLEN/8, x4, x1, x2)

inst_77570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:232710*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232710*0 + 3*2*FLEN/8, x4, x1, x2)

inst_77571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:232713*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232713*0 + 3*3*FLEN/8, x4, x1, x2)

inst_77572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:232716*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232716*0 + 3*4*FLEN/8, x4, x1, x2)

inst_77573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:232719*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232719*0 + 3*5*FLEN/8, x4, x1, x2)

inst_77574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:232722*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232722*0 + 3*6*FLEN/8, x4, x1, x2)

inst_77575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:232725*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232725*0 + 3*7*FLEN/8, x4, x1, x2)

inst_77576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:232728*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232728*0 + 3*8*FLEN/8, x4, x1, x2)

inst_77577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:232731*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232731*0 + 3*9*FLEN/8, x4, x1, x2)

inst_77578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:232734*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232734*0 + 3*10*FLEN/8, x4, x1, x2)

inst_77579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:232737*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232737*0 + 3*11*FLEN/8, x4, x1, x2)

inst_77580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:232740*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232740*0 + 3*12*FLEN/8, x4, x1, x2)

inst_77581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:232743*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232743*0 + 3*13*FLEN/8, x4, x1, x2)

inst_77582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:232746*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232746*0 + 3*14*FLEN/8, x4, x1, x2)

inst_77583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:232749*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232749*0 + 3*15*FLEN/8, x4, x1, x2)

inst_77584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:232752*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232752*0 + 3*16*FLEN/8, x4, x1, x2)

inst_77585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:232755*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232755*0 + 3*17*FLEN/8, x4, x1, x2)

inst_77586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:232758*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232758*0 + 3*18*FLEN/8, x4, x1, x2)

inst_77587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:232761*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232761*0 + 3*19*FLEN/8, x4, x1, x2)

inst_77588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:232764*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232764*0 + 3*20*FLEN/8, x4, x1, x2)

inst_77589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:232767*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232767*0 + 3*21*FLEN/8, x4, x1, x2)

inst_77590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:232770*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232770*0 + 3*22*FLEN/8, x4, x1, x2)

inst_77591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:232773*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232773*0 + 3*23*FLEN/8, x4, x1, x2)

inst_77592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:232776*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232776*0 + 3*24*FLEN/8, x4, x1, x2)

inst_77593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:232779*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232779*0 + 3*25*FLEN/8, x4, x1, x2)

inst_77594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:232782*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232782*0 + 3*26*FLEN/8, x4, x1, x2)

inst_77595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:232785*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232785*0 + 3*27*FLEN/8, x4, x1, x2)

inst_77596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:232788*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232788*0 + 3*28*FLEN/8, x4, x1, x2)

inst_77597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:232791*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232791*0 + 3*29*FLEN/8, x4, x1, x2)

inst_77598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:232794*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232794*0 + 3*30*FLEN/8, x4, x1, x2)

inst_77599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:232797*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232797*0 + 3*31*FLEN/8, x4, x1, x2)

inst_77600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:232800*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232800*0 + 3*32*FLEN/8, x4, x1, x2)

inst_77601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:232803*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232803*0 + 3*33*FLEN/8, x4, x1, x2)

inst_77602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:232806*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232806*0 + 3*34*FLEN/8, x4, x1, x2)

inst_77603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:232809*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232809*0 + 3*35*FLEN/8, x4, x1, x2)

inst_77604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:232812*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232812*0 + 3*36*FLEN/8, x4, x1, x2)

inst_77605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:232815*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232815*0 + 3*37*FLEN/8, x4, x1, x2)

inst_77606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:232818*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232818*0 + 3*38*FLEN/8, x4, x1, x2)

inst_77607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:232821*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232821*0 + 3*39*FLEN/8, x4, x1, x2)

inst_77608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:232824*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232824*0 + 3*40*FLEN/8, x4, x1, x2)

inst_77609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78037fa19f977; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:232827*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232827*0 + 3*41*FLEN/8, x4, x1, x2)

inst_77610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:232830*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232830*0 + 3*42*FLEN/8, x4, x1, x2)

inst_77611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:232833*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232833*0 + 3*43*FLEN/8, x4, x1, x2)

inst_77612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:232836*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232836*0 + 3*44*FLEN/8, x4, x1, x2)

inst_77613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:232839*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232839*0 + 3*45*FLEN/8, x4, x1, x2)

inst_77614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:232842*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232842*0 + 3*46*FLEN/8, x4, x1, x2)

inst_77615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:232845*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232845*0 + 3*47*FLEN/8, x4, x1, x2)

inst_77616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:232848*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232848*0 + 3*48*FLEN/8, x4, x1, x2)

inst_77617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:232851*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232851*0 + 3*49*FLEN/8, x4, x1, x2)

inst_77618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:232854*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232854*0 + 3*50*FLEN/8, x4, x1, x2)

inst_77619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:232857*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232857*0 + 3*51*FLEN/8, x4, x1, x2)

inst_77620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:232860*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232860*0 + 3*52*FLEN/8, x4, x1, x2)

inst_77621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:232863*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232863*0 + 3*53*FLEN/8, x4, x1, x2)

inst_77622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:232866*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232866*0 + 3*54*FLEN/8, x4, x1, x2)

inst_77623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:232869*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232869*0 + 3*55*FLEN/8, x4, x1, x2)

inst_77624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:232872*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232872*0 + 3*56*FLEN/8, x4, x1, x2)

inst_77625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:232875*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232875*0 + 3*57*FLEN/8, x4, x1, x2)

inst_77626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:232878*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232878*0 + 3*58*FLEN/8, x4, x1, x2)

inst_77627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:232881*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232881*0 + 3*59*FLEN/8, x4, x1, x2)

inst_77628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:232884*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232884*0 + 3*60*FLEN/8, x4, x1, x2)

inst_77629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:232887*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232887*0 + 3*61*FLEN/8, x4, x1, x2)

inst_77630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:232890*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232890*0 + 3*62*FLEN/8, x4, x1, x2)

inst_77631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:232893*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232893*0 + 3*63*FLEN/8, x4, x1, x2)

inst_77632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:232896*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232896*0 + 3*64*FLEN/8, x4, x1, x2)

inst_77633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:232899*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232899*0 + 3*65*FLEN/8, x4, x1, x2)

inst_77634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:232902*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232902*0 + 3*66*FLEN/8, x4, x1, x2)

inst_77635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:232905*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232905*0 + 3*67*FLEN/8, x4, x1, x2)

inst_77636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:232908*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232908*0 + 3*68*FLEN/8, x4, x1, x2)

inst_77637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:232911*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232911*0 + 3*69*FLEN/8, x4, x1, x2)

inst_77638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:232914*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232914*0 + 3*70*FLEN/8, x4, x1, x2)

inst_77639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:232917*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232917*0 + 3*71*FLEN/8, x4, x1, x2)

inst_77640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:232920*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232920*0 + 3*72*FLEN/8, x4, x1, x2)

inst_77641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:232923*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232923*0 + 3*73*FLEN/8, x4, x1, x2)

inst_77642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:232926*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232926*0 + 3*74*FLEN/8, x4, x1, x2)

inst_77643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:232929*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232929*0 + 3*75*FLEN/8, x4, x1, x2)

inst_77644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:232932*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232932*0 + 3*76*FLEN/8, x4, x1, x2)

inst_77645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:232935*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232935*0 + 3*77*FLEN/8, x4, x1, x2)

inst_77646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:232938*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232938*0 + 3*78*FLEN/8, x4, x1, x2)

inst_77647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:232941*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232941*0 + 3*79*FLEN/8, x4, x1, x2)

inst_77648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:232944*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232944*0 + 3*80*FLEN/8, x4, x1, x2)

inst_77649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:232947*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232947*0 + 3*81*FLEN/8, x4, x1, x2)

inst_77650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:232950*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232950*0 + 3*82*FLEN/8, x4, x1, x2)

inst_77651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:232953*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232953*0 + 3*83*FLEN/8, x4, x1, x2)

inst_77652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:232956*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232956*0 + 3*84*FLEN/8, x4, x1, x2)

inst_77653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:232959*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232959*0 + 3*85*FLEN/8, x4, x1, x2)

inst_77654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:232962*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232962*0 + 3*86*FLEN/8, x4, x1, x2)

inst_77655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:232965*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232965*0 + 3*87*FLEN/8, x4, x1, x2)

inst_77656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:232968*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232968*0 + 3*88*FLEN/8, x4, x1, x2)

inst_77657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:232971*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232971*0 + 3*89*FLEN/8, x4, x1, x2)

inst_77658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:232974*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232974*0 + 3*90*FLEN/8, x4, x1, x2)

inst_77659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:232977*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232977*0 + 3*91*FLEN/8, x4, x1, x2)

inst_77660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:232980*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232980*0 + 3*92*FLEN/8, x4, x1, x2)

inst_77661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:232983*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232983*0 + 3*93*FLEN/8, x4, x1, x2)

inst_77662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:232986*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232986*0 + 3*94*FLEN/8, x4, x1, x2)

inst_77663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:232989*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232989*0 + 3*95*FLEN/8, x4, x1, x2)

inst_77664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:232992*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232992*0 + 3*96*FLEN/8, x4, x1, x2)

inst_77665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:232995*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232995*0 + 3*97*FLEN/8, x4, x1, x2)

inst_77666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:232998*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232998*0 + 3*98*FLEN/8, x4, x1, x2)

inst_77667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:233001*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233001*0 + 3*99*FLEN/8, x4, x1, x2)

inst_77668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:233004*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233004*0 + 3*100*FLEN/8, x4, x1, x2)

inst_77669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:233007*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233007*0 + 3*101*FLEN/8, x4, x1, x2)

inst_77670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:233010*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233010*0 + 3*102*FLEN/8, x4, x1, x2)

inst_77671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:233013*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233013*0 + 3*103*FLEN/8, x4, x1, x2)

inst_77672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:233016*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233016*0 + 3*104*FLEN/8, x4, x1, x2)

inst_77673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:233019*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233019*0 + 3*105*FLEN/8, x4, x1, x2)

inst_77674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:233022*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233022*0 + 3*106*FLEN/8, x4, x1, x2)

inst_77675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:233025*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233025*0 + 3*107*FLEN/8, x4, x1, x2)

inst_77676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:233028*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233028*0 + 3*108*FLEN/8, x4, x1, x2)

inst_77677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:233031*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233031*0 + 3*109*FLEN/8, x4, x1, x2)

inst_77678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:233034*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233034*0 + 3*110*FLEN/8, x4, x1, x2)

inst_77679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:233037*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233037*0 + 3*111*FLEN/8, x4, x1, x2)

inst_77680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:233040*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233040*0 + 3*112*FLEN/8, x4, x1, x2)

inst_77681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:233043*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233043*0 + 3*113*FLEN/8, x4, x1, x2)

inst_77682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:233046*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233046*0 + 3*114*FLEN/8, x4, x1, x2)

inst_77683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:233049*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233049*0 + 3*115*FLEN/8, x4, x1, x2)

inst_77684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:233052*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233052*0 + 3*116*FLEN/8, x4, x1, x2)

inst_77685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:233055*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233055*0 + 3*117*FLEN/8, x4, x1, x2)

inst_77686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:233058*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233058*0 + 3*118*FLEN/8, x4, x1, x2)

inst_77687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:233061*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233061*0 + 3*119*FLEN/8, x4, x1, x2)

inst_77688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:233064*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233064*0 + 3*120*FLEN/8, x4, x1, x2)

inst_77689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:233067*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233067*0 + 3*121*FLEN/8, x4, x1, x2)

inst_77690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:233070*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233070*0 + 3*122*FLEN/8, x4, x1, x2)

inst_77691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:233073*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233073*0 + 3*123*FLEN/8, x4, x1, x2)

inst_77692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:233076*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233076*0 + 3*124*FLEN/8, x4, x1, x2)

inst_77693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:233079*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233079*0 + 3*125*FLEN/8, x4, x1, x2)

inst_77694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:233082*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233082*0 + 3*126*FLEN/8, x4, x1, x2)

inst_77695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:233085*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233085*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_77696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:233088*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233088*0 + 3*128*FLEN/8, x4, x1, x2)

inst_77697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:233091*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233091*0 + 3*129*FLEN/8, x4, x1, x2)

inst_77698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:233094*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233094*0 + 3*130*FLEN/8, x4, x1, x2)

inst_77699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:233097*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233097*0 + 3*131*FLEN/8, x4, x1, x2)

inst_77700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:233100*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233100*0 + 3*132*FLEN/8, x4, x1, x2)

inst_77701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:233103*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233103*0 + 3*133*FLEN/8, x4, x1, x2)

inst_77702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:233106*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233106*0 + 3*134*FLEN/8, x4, x1, x2)

inst_77703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:233109*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233109*0 + 3*135*FLEN/8, x4, x1, x2)

inst_77704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:233112*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233112*0 + 3*136*FLEN/8, x4, x1, x2)

inst_77705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:233115*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233115*0 + 3*137*FLEN/8, x4, x1, x2)

inst_77706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:233118*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233118*0 + 3*138*FLEN/8, x4, x1, x2)

inst_77707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:233121*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233121*0 + 3*139*FLEN/8, x4, x1, x2)

inst_77708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:233124*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233124*0 + 3*140*FLEN/8, x4, x1, x2)

inst_77709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:233127*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233127*0 + 3*141*FLEN/8, x4, x1, x2)

inst_77710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:233130*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233130*0 + 3*142*FLEN/8, x4, x1, x2)

inst_77711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:233133*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233133*0 + 3*143*FLEN/8, x4, x1, x2)

inst_77712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:233136*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233136*0 + 3*144*FLEN/8, x4, x1, x2)

inst_77713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:233139*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233139*0 + 3*145*FLEN/8, x4, x1, x2)

inst_77714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:233142*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233142*0 + 3*146*FLEN/8, x4, x1, x2)

inst_77715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:233145*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233145*0 + 3*147*FLEN/8, x4, x1, x2)

inst_77716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:233148*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233148*0 + 3*148*FLEN/8, x4, x1, x2)

inst_77717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:233151*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233151*0 + 3*149*FLEN/8, x4, x1, x2)

inst_77718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:233154*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233154*0 + 3*150*FLEN/8, x4, x1, x2)

inst_77719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:233157*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233157*0 + 3*151*FLEN/8, x4, x1, x2)

inst_77720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:233160*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233160*0 + 3*152*FLEN/8, x4, x1, x2)

inst_77721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:233163*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233163*0 + 3*153*FLEN/8, x4, x1, x2)

inst_77722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:233166*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233166*0 + 3*154*FLEN/8, x4, x1, x2)

inst_77723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:233169*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233169*0 + 3*155*FLEN/8, x4, x1, x2)

inst_77724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:233172*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233172*0 + 3*156*FLEN/8, x4, x1, x2)

inst_77725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:233175*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233175*0 + 3*157*FLEN/8, x4, x1, x2)

inst_77726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:233178*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233178*0 + 3*158*FLEN/8, x4, x1, x2)

inst_77727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:233181*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233181*0 + 3*159*FLEN/8, x4, x1, x2)

inst_77728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:233184*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233184*0 + 3*160*FLEN/8, x4, x1, x2)

inst_77729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:233187*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233187*0 + 3*161*FLEN/8, x4, x1, x2)

inst_77730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:233190*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233190*0 + 3*162*FLEN/8, x4, x1, x2)

inst_77731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:233193*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233193*0 + 3*163*FLEN/8, x4, x1, x2)

inst_77732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:233196*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233196*0 + 3*164*FLEN/8, x4, x1, x2)

inst_77733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:233199*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233199*0 + 3*165*FLEN/8, x4, x1, x2)

inst_77734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:233202*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233202*0 + 3*166*FLEN/8, x4, x1, x2)

inst_77735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7836018bc2605 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7836018bc2605; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:233205*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233205*0 + 3*167*FLEN/8, x4, x1, x2)

inst_77736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:233208*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233208*0 + 3*168*FLEN/8, x4, x1, x2)

inst_77737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:233211*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233211*0 + 3*169*FLEN/8, x4, x1, x2)

inst_77738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:233214*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233214*0 + 3*170*FLEN/8, x4, x1, x2)

inst_77739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:233217*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233217*0 + 3*171*FLEN/8, x4, x1, x2)

inst_77740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:233220*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233220*0 + 3*172*FLEN/8, x4, x1, x2)

inst_77741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:233223*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233223*0 + 3*173*FLEN/8, x4, x1, x2)

inst_77742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:233226*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233226*0 + 3*174*FLEN/8, x4, x1, x2)

inst_77743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:233229*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233229*0 + 3*175*FLEN/8, x4, x1, x2)

inst_77744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:233232*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233232*0 + 3*176*FLEN/8, x4, x1, x2)

inst_77745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:233235*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233235*0 + 3*177*FLEN/8, x4, x1, x2)

inst_77746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:233238*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233238*0 + 3*178*FLEN/8, x4, x1, x2)

inst_77747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:233241*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233241*0 + 3*179*FLEN/8, x4, x1, x2)

inst_77748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:233244*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233244*0 + 3*180*FLEN/8, x4, x1, x2)

inst_77749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:233247*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233247*0 + 3*181*FLEN/8, x4, x1, x2)

inst_77750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:233250*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233250*0 + 3*182*FLEN/8, x4, x1, x2)

inst_77751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:233253*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233253*0 + 3*183*FLEN/8, x4, x1, x2)

inst_77752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:233256*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233256*0 + 3*184*FLEN/8, x4, x1, x2)

inst_77753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:233259*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233259*0 + 3*185*FLEN/8, x4, x1, x2)

inst_77754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:233262*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233262*0 + 3*186*FLEN/8, x4, x1, x2)

inst_77755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:233265*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233265*0 + 3*187*FLEN/8, x4, x1, x2)

inst_77756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:233268*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233268*0 + 3*188*FLEN/8, x4, x1, x2)

inst_77757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:233271*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233271*0 + 3*189*FLEN/8, x4, x1, x2)

inst_77758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:233274*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233274*0 + 3*190*FLEN/8, x4, x1, x2)

inst_77759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:233277*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233277*0 + 3*191*FLEN/8, x4, x1, x2)

inst_77760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:233280*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233280*0 + 3*192*FLEN/8, x4, x1, x2)

inst_77761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:233283*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233283*0 + 3*193*FLEN/8, x4, x1, x2)

inst_77762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:233286*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233286*0 + 3*194*FLEN/8, x4, x1, x2)

inst_77763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:233289*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233289*0 + 3*195*FLEN/8, x4, x1, x2)

inst_77764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:233292*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233292*0 + 3*196*FLEN/8, x4, x1, x2)

inst_77765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:233295*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233295*0 + 3*197*FLEN/8, x4, x1, x2)

inst_77766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:233298*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233298*0 + 3*198*FLEN/8, x4, x1, x2)

inst_77767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:233301*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233301*0 + 3*199*FLEN/8, x4, x1, x2)

inst_77768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:233304*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233304*0 + 3*200*FLEN/8, x4, x1, x2)

inst_77769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:233307*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233307*0 + 3*201*FLEN/8, x4, x1, x2)

inst_77770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:233310*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233310*0 + 3*202*FLEN/8, x4, x1, x2)

inst_77771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:233313*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233313*0 + 3*203*FLEN/8, x4, x1, x2)

inst_77772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:233316*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233316*0 + 3*204*FLEN/8, x4, x1, x2)

inst_77773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:233319*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233319*0 + 3*205*FLEN/8, x4, x1, x2)

inst_77774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:233322*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233322*0 + 3*206*FLEN/8, x4, x1, x2)

inst_77775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:233325*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233325*0 + 3*207*FLEN/8, x4, x1, x2)

inst_77776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:233328*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233328*0 + 3*208*FLEN/8, x4, x1, x2)

inst_77777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:233331*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233331*0 + 3*209*FLEN/8, x4, x1, x2)

inst_77778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:233334*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233334*0 + 3*210*FLEN/8, x4, x1, x2)

inst_77779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:233337*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233337*0 + 3*211*FLEN/8, x4, x1, x2)

inst_77780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:233340*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233340*0 + 3*212*FLEN/8, x4, x1, x2)

inst_77781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:233343*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233343*0 + 3*213*FLEN/8, x4, x1, x2)

inst_77782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:233346*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233346*0 + 3*214*FLEN/8, x4, x1, x2)

inst_77783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:233349*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233349*0 + 3*215*FLEN/8, x4, x1, x2)

inst_77784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:233352*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233352*0 + 3*216*FLEN/8, x4, x1, x2)

inst_77785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:233355*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233355*0 + 3*217*FLEN/8, x4, x1, x2)

inst_77786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:233358*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233358*0 + 3*218*FLEN/8, x4, x1, x2)

inst_77787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:233361*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233361*0 + 3*219*FLEN/8, x4, x1, x2)

inst_77788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:233364*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233364*0 + 3*220*FLEN/8, x4, x1, x2)

inst_77789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:233367*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233367*0 + 3*221*FLEN/8, x4, x1, x2)

inst_77790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:233370*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233370*0 + 3*222*FLEN/8, x4, x1, x2)

inst_77791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:233373*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233373*0 + 3*223*FLEN/8, x4, x1, x2)

inst_77792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:233376*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233376*0 + 3*224*FLEN/8, x4, x1, x2)

inst_77793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:233379*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233379*0 + 3*225*FLEN/8, x4, x1, x2)

inst_77794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:233382*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233382*0 + 3*226*FLEN/8, x4, x1, x2)

inst_77795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:233385*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233385*0 + 3*227*FLEN/8, x4, x1, x2)

inst_77796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:233388*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233388*0 + 3*228*FLEN/8, x4, x1, x2)

inst_77797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:233391*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233391*0 + 3*229*FLEN/8, x4, x1, x2)

inst_77798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:233394*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233394*0 + 3*230*FLEN/8, x4, x1, x2)

inst_77799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:233397*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233397*0 + 3*231*FLEN/8, x4, x1, x2)

inst_77800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:233400*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233400*0 + 3*232*FLEN/8, x4, x1, x2)

inst_77801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:233403*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233403*0 + 3*233*FLEN/8, x4, x1, x2)

inst_77802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:233406*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233406*0 + 3*234*FLEN/8, x4, x1, x2)

inst_77803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:233409*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233409*0 + 3*235*FLEN/8, x4, x1, x2)

inst_77804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:233412*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233412*0 + 3*236*FLEN/8, x4, x1, x2)

inst_77805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:233415*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233415*0 + 3*237*FLEN/8, x4, x1, x2)

inst_77806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:233418*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233418*0 + 3*238*FLEN/8, x4, x1, x2)

inst_77807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:233421*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233421*0 + 3*239*FLEN/8, x4, x1, x2)

inst_77808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:233424*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233424*0 + 3*240*FLEN/8, x4, x1, x2)

inst_77809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:233427*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233427*0 + 3*241*FLEN/8, x4, x1, x2)

inst_77810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:233430*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233430*0 + 3*242*FLEN/8, x4, x1, x2)

inst_77811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:233433*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233433*0 + 3*243*FLEN/8, x4, x1, x2)

inst_77812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:233436*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233436*0 + 3*244*FLEN/8, x4, x1, x2)

inst_77813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:233439*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233439*0 + 3*245*FLEN/8, x4, x1, x2)

inst_77814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:233442*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233442*0 + 3*246*FLEN/8, x4, x1, x2)

inst_77815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:233445*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233445*0 + 3*247*FLEN/8, x4, x1, x2)

inst_77816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:233448*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233448*0 + 3*248*FLEN/8, x4, x1, x2)

inst_77817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:233451*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233451*0 + 3*249*FLEN/8, x4, x1, x2)

inst_77818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:233454*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233454*0 + 3*250*FLEN/8, x4, x1, x2)

inst_77819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:233457*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233457*0 + 3*251*FLEN/8, x4, x1, x2)

inst_77820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:233460*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233460*0 + 3*252*FLEN/8, x4, x1, x2)

inst_77821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:233463*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233463*0 + 3*253*FLEN/8, x4, x1, x2)

inst_77822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:233466*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233466*0 + 3*254*FLEN/8, x4, x1, x2)

inst_77823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:233469*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233469*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_77824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:233472*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233472*0 + 3*256*FLEN/8, x4, x1, x2)

inst_77825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:233475*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233475*0 + 3*257*FLEN/8, x4, x1, x2)

inst_77826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:233478*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233478*0 + 3*258*FLEN/8, x4, x1, x2)

inst_77827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:233481*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233481*0 + 3*259*FLEN/8, x4, x1, x2)

inst_77828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:233484*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233484*0 + 3*260*FLEN/8, x4, x1, x2)

inst_77829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:233487*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233487*0 + 3*261*FLEN/8, x4, x1, x2)

inst_77830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:233490*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233490*0 + 3*262*FLEN/8, x4, x1, x2)

inst_77831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:233493*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233493*0 + 3*263*FLEN/8, x4, x1, x2)

inst_77832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:233496*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233496*0 + 3*264*FLEN/8, x4, x1, x2)

inst_77833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:233499*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233499*0 + 3*265*FLEN/8, x4, x1, x2)

inst_77834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:233502*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233502*0 + 3*266*FLEN/8, x4, x1, x2)

inst_77835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:233505*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233505*0 + 3*267*FLEN/8, x4, x1, x2)

inst_77836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:233508*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233508*0 + 3*268*FLEN/8, x4, x1, x2)

inst_77837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:233511*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233511*0 + 3*269*FLEN/8, x4, x1, x2)

inst_77838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:233514*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233514*0 + 3*270*FLEN/8, x4, x1, x2)

inst_77839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:233517*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233517*0 + 3*271*FLEN/8, x4, x1, x2)

inst_77840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:233520*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233520*0 + 3*272*FLEN/8, x4, x1, x2)

inst_77841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:233523*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233523*0 + 3*273*FLEN/8, x4, x1, x2)

inst_77842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:233526*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233526*0 + 3*274*FLEN/8, x4, x1, x2)

inst_77843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:233529*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233529*0 + 3*275*FLEN/8, x4, x1, x2)

inst_77844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:233532*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233532*0 + 3*276*FLEN/8, x4, x1, x2)

inst_77845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:233535*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233535*0 + 3*277*FLEN/8, x4, x1, x2)

inst_77846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:233538*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233538*0 + 3*278*FLEN/8, x4, x1, x2)

inst_77847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:233541*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233541*0 + 3*279*FLEN/8, x4, x1, x2)

inst_77848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:233544*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233544*0 + 3*280*FLEN/8, x4, x1, x2)

inst_77849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:233547*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233547*0 + 3*281*FLEN/8, x4, x1, x2)

inst_77850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:233550*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233550*0 + 3*282*FLEN/8, x4, x1, x2)

inst_77851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:233553*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233553*0 + 3*283*FLEN/8, x4, x1, x2)

inst_77852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:233556*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233556*0 + 3*284*FLEN/8, x4, x1, x2)

inst_77853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:233559*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233559*0 + 3*285*FLEN/8, x4, x1, x2)

inst_77854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:233562*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233562*0 + 3*286*FLEN/8, x4, x1, x2)

inst_77855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:233565*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233565*0 + 3*287*FLEN/8, x4, x1, x2)

inst_77856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:233568*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233568*0 + 3*288*FLEN/8, x4, x1, x2)

inst_77857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:233571*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233571*0 + 3*289*FLEN/8, x4, x1, x2)

inst_77858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:233574*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233574*0 + 3*290*FLEN/8, x4, x1, x2)

inst_77859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:233577*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233577*0 + 3*291*FLEN/8, x4, x1, x2)

inst_77860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:233580*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233580*0 + 3*292*FLEN/8, x4, x1, x2)

inst_77861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa78d10ef3c608a; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:233583*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233583*0 + 3*293*FLEN/8, x4, x1, x2)

inst_77862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:233586*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233586*0 + 3*294*FLEN/8, x4, x1, x2)

inst_77863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:233589*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233589*0 + 3*295*FLEN/8, x4, x1, x2)

inst_77864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:233592*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233592*0 + 3*296*FLEN/8, x4, x1, x2)

inst_77865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:233595*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233595*0 + 3*297*FLEN/8, x4, x1, x2)

inst_77866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:233598*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233598*0 + 3*298*FLEN/8, x4, x1, x2)

inst_77867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:233601*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233601*0 + 3*299*FLEN/8, x4, x1, x2)

inst_77868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:233604*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233604*0 + 3*300*FLEN/8, x4, x1, x2)

inst_77869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:233607*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233607*0 + 3*301*FLEN/8, x4, x1, x2)

inst_77870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:233610*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233610*0 + 3*302*FLEN/8, x4, x1, x2)

inst_77871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:233613*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233613*0 + 3*303*FLEN/8, x4, x1, x2)

inst_77872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:233616*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233616*0 + 3*304*FLEN/8, x4, x1, x2)

inst_77873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:233619*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233619*0 + 3*305*FLEN/8, x4, x1, x2)

inst_77874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:233622*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233622*0 + 3*306*FLEN/8, x4, x1, x2)

inst_77875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:233625*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233625*0 + 3*307*FLEN/8, x4, x1, x2)

inst_77876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:233628*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233628*0 + 3*308*FLEN/8, x4, x1, x2)

inst_77877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:233631*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233631*0 + 3*309*FLEN/8, x4, x1, x2)

inst_77878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:233634*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233634*0 + 3*310*FLEN/8, x4, x1, x2)

inst_77879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:233637*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233637*0 + 3*311*FLEN/8, x4, x1, x2)

inst_77880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:233640*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233640*0 + 3*312*FLEN/8, x4, x1, x2)

inst_77881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:233643*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233643*0 + 3*313*FLEN/8, x4, x1, x2)

inst_77882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:233646*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233646*0 + 3*314*FLEN/8, x4, x1, x2)

inst_77883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:233649*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233649*0 + 3*315*FLEN/8, x4, x1, x2)

inst_77884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:233652*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233652*0 + 3*316*FLEN/8, x4, x1, x2)

inst_77885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:233655*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233655*0 + 3*317*FLEN/8, x4, x1, x2)

inst_77886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:233658*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233658*0 + 3*318*FLEN/8, x4, x1, x2)

inst_77887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:233661*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233661*0 + 3*319*FLEN/8, x4, x1, x2)

inst_77888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:233664*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233664*0 + 3*320*FLEN/8, x4, x1, x2)

inst_77889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:233667*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233667*0 + 3*321*FLEN/8, x4, x1, x2)

inst_77890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:233670*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233670*0 + 3*322*FLEN/8, x4, x1, x2)

inst_77891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:233673*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233673*0 + 3*323*FLEN/8, x4, x1, x2)

inst_77892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:233676*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233676*0 + 3*324*FLEN/8, x4, x1, x2)

inst_77893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:233679*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233679*0 + 3*325*FLEN/8, x4, x1, x2)

inst_77894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:233682*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233682*0 + 3*326*FLEN/8, x4, x1, x2)

inst_77895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:233685*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233685*0 + 3*327*FLEN/8, x4, x1, x2)

inst_77896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:233688*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233688*0 + 3*328*FLEN/8, x4, x1, x2)

inst_77897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:233691*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233691*0 + 3*329*FLEN/8, x4, x1, x2)

inst_77898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:233694*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233694*0 + 3*330*FLEN/8, x4, x1, x2)

inst_77899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:233697*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233697*0 + 3*331*FLEN/8, x4, x1, x2)

inst_77900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:233700*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233700*0 + 3*332*FLEN/8, x4, x1, x2)

inst_77901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:233703*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233703*0 + 3*333*FLEN/8, x4, x1, x2)

inst_77902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:233706*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233706*0 + 3*334*FLEN/8, x4, x1, x2)

inst_77903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:233709*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233709*0 + 3*335*FLEN/8, x4, x1, x2)

inst_77904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:233712*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233712*0 + 3*336*FLEN/8, x4, x1, x2)

inst_77905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:233715*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233715*0 + 3*337*FLEN/8, x4, x1, x2)

inst_77906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:233718*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233718*0 + 3*338*FLEN/8, x4, x1, x2)

inst_77907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:233721*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233721*0 + 3*339*FLEN/8, x4, x1, x2)

inst_77908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:233724*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233724*0 + 3*340*FLEN/8, x4, x1, x2)

inst_77909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:233727*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233727*0 + 3*341*FLEN/8, x4, x1, x2)

inst_77910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:233730*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233730*0 + 3*342*FLEN/8, x4, x1, x2)

inst_77911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:233733*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233733*0 + 3*343*FLEN/8, x4, x1, x2)

inst_77912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:233736*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233736*0 + 3*344*FLEN/8, x4, x1, x2)

inst_77913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:233739*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233739*0 + 3*345*FLEN/8, x4, x1, x2)

inst_77914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:233742*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233742*0 + 3*346*FLEN/8, x4, x1, x2)

inst_77915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:233745*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233745*0 + 3*347*FLEN/8, x4, x1, x2)

inst_77916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:233748*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233748*0 + 3*348*FLEN/8, x4, x1, x2)

inst_77917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:233751*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233751*0 + 3*349*FLEN/8, x4, x1, x2)

inst_77918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:233754*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233754*0 + 3*350*FLEN/8, x4, x1, x2)

inst_77919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:233757*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233757*0 + 3*351*FLEN/8, x4, x1, x2)

inst_77920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:233760*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233760*0 + 3*352*FLEN/8, x4, x1, x2)

inst_77921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:233763*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233763*0 + 3*353*FLEN/8, x4, x1, x2)

inst_77922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:233766*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233766*0 + 3*354*FLEN/8, x4, x1, x2)

inst_77923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:233769*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233769*0 + 3*355*FLEN/8, x4, x1, x2)

inst_77924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:233772*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233772*0 + 3*356*FLEN/8, x4, x1, x2)

inst_77925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:233775*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233775*0 + 3*357*FLEN/8, x4, x1, x2)

inst_77926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:233778*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233778*0 + 3*358*FLEN/8, x4, x1, x2)

inst_77927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:233781*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233781*0 + 3*359*FLEN/8, x4, x1, x2)

inst_77928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:233784*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233784*0 + 3*360*FLEN/8, x4, x1, x2)

inst_77929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:233787*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233787*0 + 3*361*FLEN/8, x4, x1, x2)

inst_77930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:233790*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233790*0 + 3*362*FLEN/8, x4, x1, x2)

inst_77931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:233793*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233793*0 + 3*363*FLEN/8, x4, x1, x2)

inst_77932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:233796*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233796*0 + 3*364*FLEN/8, x4, x1, x2)

inst_77933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:233799*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233799*0 + 3*365*FLEN/8, x4, x1, x2)

inst_77934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:233802*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233802*0 + 3*366*FLEN/8, x4, x1, x2)

inst_77935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:233805*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233805*0 + 3*367*FLEN/8, x4, x1, x2)

inst_77936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:233808*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233808*0 + 3*368*FLEN/8, x4, x1, x2)

inst_77937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:233811*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233811*0 + 3*369*FLEN/8, x4, x1, x2)

inst_77938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:233814*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233814*0 + 3*370*FLEN/8, x4, x1, x2)

inst_77939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:233817*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233817*0 + 3*371*FLEN/8, x4, x1, x2)

inst_77940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:233820*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233820*0 + 3*372*FLEN/8, x4, x1, x2)

inst_77941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:233823*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233823*0 + 3*373*FLEN/8, x4, x1, x2)

inst_77942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:233826*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233826*0 + 3*374*FLEN/8, x4, x1, x2)

inst_77943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:233829*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233829*0 + 3*375*FLEN/8, x4, x1, x2)

inst_77944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:233832*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233832*0 + 3*376*FLEN/8, x4, x1, x2)

inst_77945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:233835*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233835*0 + 3*377*FLEN/8, x4, x1, x2)

inst_77946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:233838*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233838*0 + 3*378*FLEN/8, x4, x1, x2)

inst_77947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:233841*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233841*0 + 3*379*FLEN/8, x4, x1, x2)

inst_77948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:233844*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233844*0 + 3*380*FLEN/8, x4, x1, x2)

inst_77949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:233847*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233847*0 + 3*381*FLEN/8, x4, x1, x2)

inst_77950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:233850*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233850*0 + 3*382*FLEN/8, x4, x1, x2)

inst_77951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:233853*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233853*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_77952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:233856*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233856*0 + 3*384*FLEN/8, x4, x1, x2)

inst_77953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:233859*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233859*0 + 3*385*FLEN/8, x4, x1, x2)

inst_77954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:233862*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233862*0 + 3*386*FLEN/8, x4, x1, x2)

inst_77955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:233865*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233865*0 + 3*387*FLEN/8, x4, x1, x2)

inst_77956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:233868*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233868*0 + 3*388*FLEN/8, x4, x1, x2)

inst_77957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:233871*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233871*0 + 3*389*FLEN/8, x4, x1, x2)

inst_77958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:233874*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233874*0 + 3*390*FLEN/8, x4, x1, x2)

inst_77959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:233877*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233877*0 + 3*391*FLEN/8, x4, x1, x2)

inst_77960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:233880*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233880*0 + 3*392*FLEN/8, x4, x1, x2)

inst_77961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:233883*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233883*0 + 3*393*FLEN/8, x4, x1, x2)

inst_77962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:233886*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233886*0 + 3*394*FLEN/8, x4, x1, x2)

inst_77963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:233889*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233889*0 + 3*395*FLEN/8, x4, x1, x2)

inst_77964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:233892*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233892*0 + 3*396*FLEN/8, x4, x1, x2)

inst_77965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:233895*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233895*0 + 3*397*FLEN/8, x4, x1, x2)

inst_77966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:233898*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233898*0 + 3*398*FLEN/8, x4, x1, x2)

inst_77967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:233901*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233901*0 + 3*399*FLEN/8, x4, x1, x2)

inst_77968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:233904*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233904*0 + 3*400*FLEN/8, x4, x1, x2)

inst_77969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:233907*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233907*0 + 3*401*FLEN/8, x4, x1, x2)

inst_77970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:233910*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233910*0 + 3*402*FLEN/8, x4, x1, x2)

inst_77971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:233913*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233913*0 + 3*403*FLEN/8, x4, x1, x2)

inst_77972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:233916*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233916*0 + 3*404*FLEN/8, x4, x1, x2)

inst_77973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:233919*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233919*0 + 3*405*FLEN/8, x4, x1, x2)

inst_77974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:233922*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233922*0 + 3*406*FLEN/8, x4, x1, x2)

inst_77975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:233925*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233925*0 + 3*407*FLEN/8, x4, x1, x2)

inst_77976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:233928*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233928*0 + 3*408*FLEN/8, x4, x1, x2)

inst_77977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:233931*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233931*0 + 3*409*FLEN/8, x4, x1, x2)

inst_77978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:233934*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233934*0 + 3*410*FLEN/8, x4, x1, x2)

inst_77979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:233937*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233937*0 + 3*411*FLEN/8, x4, x1, x2)

inst_77980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:233940*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233940*0 + 3*412*FLEN/8, x4, x1, x2)

inst_77981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:233943*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233943*0 + 3*413*FLEN/8, x4, x1, x2)

inst_77982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:233946*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233946*0 + 3*414*FLEN/8, x4, x1, x2)

inst_77983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:233949*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233949*0 + 3*415*FLEN/8, x4, x1, x2)

inst_77984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:233952*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233952*0 + 3*416*FLEN/8, x4, x1, x2)

inst_77985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:233955*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233955*0 + 3*417*FLEN/8, x4, x1, x2)

inst_77986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:233958*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233958*0 + 3*418*FLEN/8, x4, x1, x2)

inst_77987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7918c7716c185 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7918c7716c185; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:233961*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233961*0 + 3*419*FLEN/8, x4, x1, x2)

inst_77988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000000000; valaddr_reg:x3; val_offset:233964*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233964*0 + 3*420*FLEN/8, x4, x1, x2)

inst_77989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000000001; valaddr_reg:x3; val_offset:233967*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233967*0 + 3*421*FLEN/8, x4, x1, x2)

inst_77990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000000003; valaddr_reg:x3; val_offset:233970*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233970*0 + 3*422*FLEN/8, x4, x1, x2)

inst_77991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000000007; valaddr_reg:x3; val_offset:233973*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233973*0 + 3*423*FLEN/8, x4, x1, x2)

inst_77992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000000000f; valaddr_reg:x3; val_offset:233976*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233976*0 + 3*424*FLEN/8, x4, x1, x2)

inst_77993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000000001f; valaddr_reg:x3; val_offset:233979*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233979*0 + 3*425*FLEN/8, x4, x1, x2)

inst_77994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000000003f; valaddr_reg:x3; val_offset:233982*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233982*0 + 3*426*FLEN/8, x4, x1, x2)

inst_77995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000000007f; valaddr_reg:x3; val_offset:233985*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233985*0 + 3*427*FLEN/8, x4, x1, x2)

inst_77996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000000000ff; valaddr_reg:x3; val_offset:233988*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233988*0 + 3*428*FLEN/8, x4, x1, x2)

inst_77997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000000001ff; valaddr_reg:x3; val_offset:233991*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233991*0 + 3*429*FLEN/8, x4, x1, x2)

inst_77998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000000003ff; valaddr_reg:x3; val_offset:233994*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233994*0 + 3*430*FLEN/8, x4, x1, x2)

inst_77999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000000007ff; valaddr_reg:x3; val_offset:233997*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233997*0 + 3*431*FLEN/8, x4, x1, x2)

inst_78000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000000fff; valaddr_reg:x3; val_offset:234000*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234000*0 + 3*432*FLEN/8, x4, x1, x2)

inst_78001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000001fff; valaddr_reg:x3; val_offset:234003*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234003*0 + 3*433*FLEN/8, x4, x1, x2)

inst_78002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000003fff; valaddr_reg:x3; val_offset:234006*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234006*0 + 3*434*FLEN/8, x4, x1, x2)

inst_78003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000007fff; valaddr_reg:x3; val_offset:234009*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234009*0 + 3*435*FLEN/8, x4, x1, x2)

inst_78004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000000ffff; valaddr_reg:x3; val_offset:234012*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234012*0 + 3*436*FLEN/8, x4, x1, x2)

inst_78005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000001ffff; valaddr_reg:x3; val_offset:234015*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234015*0 + 3*437*FLEN/8, x4, x1, x2)

inst_78006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000003ffff; valaddr_reg:x3; val_offset:234018*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234018*0 + 3*438*FLEN/8, x4, x1, x2)

inst_78007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000007ffff; valaddr_reg:x3; val_offset:234021*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234021*0 + 3*439*FLEN/8, x4, x1, x2)

inst_78008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000000fffff; valaddr_reg:x3; val_offset:234024*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234024*0 + 3*440*FLEN/8, x4, x1, x2)

inst_78009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000001fffff; valaddr_reg:x3; val_offset:234027*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234027*0 + 3*441*FLEN/8, x4, x1, x2)

inst_78010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000003fffff; valaddr_reg:x3; val_offset:234030*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234030*0 + 3*442*FLEN/8, x4, x1, x2)

inst_78011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000007fffff; valaddr_reg:x3; val_offset:234033*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234033*0 + 3*443*FLEN/8, x4, x1, x2)

inst_78012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000000ffffff; valaddr_reg:x3; val_offset:234036*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234036*0 + 3*444*FLEN/8, x4, x1, x2)

inst_78013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000001ffffff; valaddr_reg:x3; val_offset:234039*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234039*0 + 3*445*FLEN/8, x4, x1, x2)

inst_78014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000003ffffff; valaddr_reg:x3; val_offset:234042*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234042*0 + 3*446*FLEN/8, x4, x1, x2)

inst_78015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000007ffffff; valaddr_reg:x3; val_offset:234045*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234045*0 + 3*447*FLEN/8, x4, x1, x2)

inst_78016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000000fffffff; valaddr_reg:x3; val_offset:234048*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234048*0 + 3*448*FLEN/8, x4, x1, x2)

inst_78017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000001fffffff; valaddr_reg:x3; val_offset:234051*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234051*0 + 3*449*FLEN/8, x4, x1, x2)

inst_78018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000003fffffff; valaddr_reg:x3; val_offset:234054*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234054*0 + 3*450*FLEN/8, x4, x1, x2)

inst_78019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000007fffffff; valaddr_reg:x3; val_offset:234057*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234057*0 + 3*451*FLEN/8, x4, x1, x2)

inst_78020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500000ffffffff; valaddr_reg:x3; val_offset:234060*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234060*0 + 3*452*FLEN/8, x4, x1, x2)

inst_78021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500001ffffffff; valaddr_reg:x3; val_offset:234063*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234063*0 + 3*453*FLEN/8, x4, x1, x2)

inst_78022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500003ffffffff; valaddr_reg:x3; val_offset:234066*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234066*0 + 3*454*FLEN/8, x4, x1, x2)

inst_78023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500007ffffffff; valaddr_reg:x3; val_offset:234069*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234069*0 + 3*455*FLEN/8, x4, x1, x2)

inst_78024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50000fffffffff; valaddr_reg:x3; val_offset:234072*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234072*0 + 3*456*FLEN/8, x4, x1, x2)

inst_78025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50001fffffffff; valaddr_reg:x3; val_offset:234075*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234075*0 + 3*457*FLEN/8, x4, x1, x2)

inst_78026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50003fffffffff; valaddr_reg:x3; val_offset:234078*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234078*0 + 3*458*FLEN/8, x4, x1, x2)

inst_78027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50007fffffffff; valaddr_reg:x3; val_offset:234081*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234081*0 + 3*459*FLEN/8, x4, x1, x2)

inst_78028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5000ffffffffff; valaddr_reg:x3; val_offset:234084*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234084*0 + 3*460*FLEN/8, x4, x1, x2)

inst_78029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5001ffffffffff; valaddr_reg:x3; val_offset:234087*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234087*0 + 3*461*FLEN/8, x4, x1, x2)

inst_78030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5003ffffffffff; valaddr_reg:x3; val_offset:234090*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234090*0 + 3*462*FLEN/8, x4, x1, x2)

inst_78031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5007ffffffffff; valaddr_reg:x3; val_offset:234093*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234093*0 + 3*463*FLEN/8, x4, x1, x2)

inst_78032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb500fffffffffff; valaddr_reg:x3; val_offset:234096*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234096*0 + 3*464*FLEN/8, x4, x1, x2)

inst_78033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb501fffffffffff; valaddr_reg:x3; val_offset:234099*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234099*0 + 3*465*FLEN/8, x4, x1, x2)

inst_78034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb503fffffffffff; valaddr_reg:x3; val_offset:234102*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234102*0 + 3*466*FLEN/8, x4, x1, x2)

inst_78035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb507fffffffffff; valaddr_reg:x3; val_offset:234105*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234105*0 + 3*467*FLEN/8, x4, x1, x2)

inst_78036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb50ffffffffffff; valaddr_reg:x3; val_offset:234108*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234108*0 + 3*468*FLEN/8, x4, x1, x2)

inst_78037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb51ffffffffffff; valaddr_reg:x3; val_offset:234111*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234111*0 + 3*469*FLEN/8, x4, x1, x2)

inst_78038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb53ffffffffffff; valaddr_reg:x3; val_offset:234114*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234114*0 + 3*470*FLEN/8, x4, x1, x2)

inst_78039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb57ffffffffffff; valaddr_reg:x3; val_offset:234117*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234117*0 + 3*471*FLEN/8, x4, x1, x2)

inst_78040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb58000000000000; valaddr_reg:x3; val_offset:234120*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234120*0 + 3*472*FLEN/8, x4, x1, x2)

inst_78041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5c000000000000; valaddr_reg:x3; val_offset:234123*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234123*0 + 3*473*FLEN/8, x4, x1, x2)

inst_78042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5e000000000000; valaddr_reg:x3; val_offset:234126*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234126*0 + 3*474*FLEN/8, x4, x1, x2)

inst_78043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5f000000000000; valaddr_reg:x3; val_offset:234129*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234129*0 + 3*475*FLEN/8, x4, x1, x2)

inst_78044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5f800000000000; valaddr_reg:x3; val_offset:234132*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234132*0 + 3*476*FLEN/8, x4, x1, x2)

inst_78045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fc00000000000; valaddr_reg:x3; val_offset:234135*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234135*0 + 3*477*FLEN/8, x4, x1, x2)

inst_78046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fe00000000000; valaddr_reg:x3; val_offset:234138*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234138*0 + 3*478*FLEN/8, x4, x1, x2)

inst_78047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ff00000000000; valaddr_reg:x3; val_offset:234141*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234141*0 + 3*479*FLEN/8, x4, x1, x2)

inst_78048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ff80000000000; valaddr_reg:x3; val_offset:234144*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234144*0 + 3*480*FLEN/8, x4, x1, x2)

inst_78049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffc0000000000; valaddr_reg:x3; val_offset:234147*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234147*0 + 3*481*FLEN/8, x4, x1, x2)

inst_78050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffe0000000000; valaddr_reg:x3; val_offset:234150*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234150*0 + 3*482*FLEN/8, x4, x1, x2)

inst_78051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fff0000000000; valaddr_reg:x3; val_offset:234153*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234153*0 + 3*483*FLEN/8, x4, x1, x2)

inst_78052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fff8000000000; valaddr_reg:x3; val_offset:234156*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234156*0 + 3*484*FLEN/8, x4, x1, x2)

inst_78053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffc000000000; valaddr_reg:x3; val_offset:234159*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234159*0 + 3*485*FLEN/8, x4, x1, x2)

inst_78054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffe000000000; valaddr_reg:x3; val_offset:234162*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234162*0 + 3*486*FLEN/8, x4, x1, x2)

inst_78055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffff000000000; valaddr_reg:x3; val_offset:234165*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234165*0 + 3*487*FLEN/8, x4, x1, x2)

inst_78056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffff800000000; valaddr_reg:x3; val_offset:234168*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234168*0 + 3*488*FLEN/8, x4, x1, x2)

inst_78057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffc00000000; valaddr_reg:x3; val_offset:234171*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234171*0 + 3*489*FLEN/8, x4, x1, x2)

inst_78058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffe00000000; valaddr_reg:x3; val_offset:234174*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234174*0 + 3*490*FLEN/8, x4, x1, x2)

inst_78059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffff00000000; valaddr_reg:x3; val_offset:234177*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234177*0 + 3*491*FLEN/8, x4, x1, x2)

inst_78060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffff80000000; valaddr_reg:x3; val_offset:234180*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234180*0 + 3*492*FLEN/8, x4, x1, x2)

inst_78061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffc0000000; valaddr_reg:x3; val_offset:234183*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234183*0 + 3*493*FLEN/8, x4, x1, x2)

inst_78062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffe0000000; valaddr_reg:x3; val_offset:234186*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234186*0 + 3*494*FLEN/8, x4, x1, x2)

inst_78063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffff0000000; valaddr_reg:x3; val_offset:234189*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234189*0 + 3*495*FLEN/8, x4, x1, x2)

inst_78064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffff8000000; valaddr_reg:x3; val_offset:234192*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234192*0 + 3*496*FLEN/8, x4, x1, x2)

inst_78065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffc000000; valaddr_reg:x3; val_offset:234195*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234195*0 + 3*497*FLEN/8, x4, x1, x2)

inst_78066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffe000000; valaddr_reg:x3; val_offset:234198*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234198*0 + 3*498*FLEN/8, x4, x1, x2)

inst_78067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffff000000; valaddr_reg:x3; val_offset:234201*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234201*0 + 3*499*FLEN/8, x4, x1, x2)

inst_78068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffff800000; valaddr_reg:x3; val_offset:234204*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234204*0 + 3*500*FLEN/8, x4, x1, x2)

inst_78069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffc00000; valaddr_reg:x3; val_offset:234207*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234207*0 + 3*501*FLEN/8, x4, x1, x2)

inst_78070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffe00000; valaddr_reg:x3; val_offset:234210*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234210*0 + 3*502*FLEN/8, x4, x1, x2)

inst_78071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffff00000; valaddr_reg:x3; val_offset:234213*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234213*0 + 3*503*FLEN/8, x4, x1, x2)

inst_78072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffff80000; valaddr_reg:x3; val_offset:234216*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234216*0 + 3*504*FLEN/8, x4, x1, x2)

inst_78073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffc0000; valaddr_reg:x3; val_offset:234219*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234219*0 + 3*505*FLEN/8, x4, x1, x2)

inst_78074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffe0000; valaddr_reg:x3; val_offset:234222*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234222*0 + 3*506*FLEN/8, x4, x1, x2)

inst_78075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffff0000; valaddr_reg:x3; val_offset:234225*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234225*0 + 3*507*FLEN/8, x4, x1, x2)

inst_78076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffff8000; valaddr_reg:x3; val_offset:234228*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234228*0 + 3*508*FLEN/8, x4, x1, x2)

inst_78077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffc000; valaddr_reg:x3; val_offset:234231*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234231*0 + 3*509*FLEN/8, x4, x1, x2)

inst_78078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffe000; valaddr_reg:x3; val_offset:234234*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234234*0 + 3*510*FLEN/8, x4, x1, x2)

inst_78079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffff000; valaddr_reg:x3; val_offset:234237*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234237*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_78080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffff800; valaddr_reg:x3; val_offset:234240*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234240*0 + 3*512*FLEN/8, x4, x1, x2)

inst_78081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffc00; valaddr_reg:x3; val_offset:234243*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234243*0 + 3*513*FLEN/8, x4, x1, x2)

inst_78082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffe00; valaddr_reg:x3; val_offset:234246*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234246*0 + 3*514*FLEN/8, x4, x1, x2)

inst_78083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffff00; valaddr_reg:x3; val_offset:234249*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234249*0 + 3*515*FLEN/8, x4, x1, x2)

inst_78084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffff80; valaddr_reg:x3; val_offset:234252*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234252*0 + 3*516*FLEN/8, x4, x1, x2)

inst_78085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffffc0; valaddr_reg:x3; val_offset:234255*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234255*0 + 3*517*FLEN/8, x4, x1, x2)

inst_78086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffffe0; valaddr_reg:x3; val_offset:234258*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234258*0 + 3*518*FLEN/8, x4, x1, x2)

inst_78087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffff0; valaddr_reg:x3; val_offset:234261*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234261*0 + 3*519*FLEN/8, x4, x1, x2)

inst_78088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffff8; valaddr_reg:x3; val_offset:234264*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234264*0 + 3*520*FLEN/8, x4, x1, x2)

inst_78089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffffc; valaddr_reg:x3; val_offset:234267*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234267*0 + 3*521*FLEN/8, x4, x1, x2)

inst_78090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5ffffffffffffe; valaddr_reg:x3; val_offset:234270*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234270*0 + 3*522*FLEN/8, x4, x1, x2)

inst_78091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3b5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbb5fffffffffffff; valaddr_reg:x3; val_offset:234273*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234273*0 + 3*523*FLEN/8, x4, x1, x2)

inst_78092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:234276*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234276*0 + 3*524*FLEN/8, x4, x1, x2)

inst_78093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:234279*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234279*0 + 3*525*FLEN/8, x4, x1, x2)

inst_78094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:234282*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234282*0 + 3*526*FLEN/8, x4, x1, x2)

inst_78095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:234285*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234285*0 + 3*527*FLEN/8, x4, x1, x2)

inst_78096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:234288*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234288*0 + 3*528*FLEN/8, x4, x1, x2)

inst_78097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:234291*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234291*0 + 3*529*FLEN/8, x4, x1, x2)

inst_78098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:234294*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234294*0 + 3*530*FLEN/8, x4, x1, x2)

inst_78099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:234297*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234297*0 + 3*531*FLEN/8, x4, x1, x2)

inst_78100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:234300*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234300*0 + 3*532*FLEN/8, x4, x1, x2)

inst_78101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:234303*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234303*0 + 3*533*FLEN/8, x4, x1, x2)

inst_78102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:234306*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234306*0 + 3*534*FLEN/8, x4, x1, x2)

inst_78103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:234309*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234309*0 + 3*535*FLEN/8, x4, x1, x2)

inst_78104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:234312*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234312*0 + 3*536*FLEN/8, x4, x1, x2)

inst_78105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:234315*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234315*0 + 3*537*FLEN/8, x4, x1, x2)

inst_78106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:234318*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234318*0 + 3*538*FLEN/8, x4, x1, x2)

inst_78107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:234321*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234321*0 + 3*539*FLEN/8, x4, x1, x2)

inst_78108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:234324*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234324*0 + 3*540*FLEN/8, x4, x1, x2)

inst_78109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:234327*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234327*0 + 3*541*FLEN/8, x4, x1, x2)

inst_78110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:234330*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234330*0 + 3*542*FLEN/8, x4, x1, x2)

inst_78111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:234333*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234333*0 + 3*543*FLEN/8, x4, x1, x2)

inst_78112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:234336*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234336*0 + 3*544*FLEN/8, x4, x1, x2)

inst_78113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d0dc57af801d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57f8f13a6d351 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d0dc57af801d; op2val:0x9fc57f8f13a6d351;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:234339*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234339*0 + 3*545*FLEN/8, x4, x1, x2)

inst_78114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000000000; valaddr_reg:x3; val_offset:234342*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234342*0 + 3*546*FLEN/8, x4, x1, x2)

inst_78115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000000001; valaddr_reg:x3; val_offset:234345*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234345*0 + 3*547*FLEN/8, x4, x1, x2)

inst_78116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000000003; valaddr_reg:x3; val_offset:234348*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234348*0 + 3*548*FLEN/8, x4, x1, x2)

inst_78117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000000007; valaddr_reg:x3; val_offset:234351*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234351*0 + 3*549*FLEN/8, x4, x1, x2)

inst_78118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000000000f; valaddr_reg:x3; val_offset:234354*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234354*0 + 3*550*FLEN/8, x4, x1, x2)

inst_78119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000000001f; valaddr_reg:x3; val_offset:234357*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234357*0 + 3*551*FLEN/8, x4, x1, x2)

inst_78120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000000003f; valaddr_reg:x3; val_offset:234360*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234360*0 + 3*552*FLEN/8, x4, x1, x2)

inst_78121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000000007f; valaddr_reg:x3; val_offset:234363*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234363*0 + 3*553*FLEN/8, x4, x1, x2)

inst_78122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000000000ff; valaddr_reg:x3; val_offset:234366*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234366*0 + 3*554*FLEN/8, x4, x1, x2)

inst_78123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000000001ff; valaddr_reg:x3; val_offset:234369*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234369*0 + 3*555*FLEN/8, x4, x1, x2)

inst_78124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000000003ff; valaddr_reg:x3; val_offset:234372*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234372*0 + 3*556*FLEN/8, x4, x1, x2)

inst_78125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000000007ff; valaddr_reg:x3; val_offset:234375*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234375*0 + 3*557*FLEN/8, x4, x1, x2)

inst_78126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000000fff; valaddr_reg:x3; val_offset:234378*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234378*0 + 3*558*FLEN/8, x4, x1, x2)

inst_78127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000001fff; valaddr_reg:x3; val_offset:234381*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234381*0 + 3*559*FLEN/8, x4, x1, x2)

inst_78128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000003fff; valaddr_reg:x3; val_offset:234384*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234384*0 + 3*560*FLEN/8, x4, x1, x2)

inst_78129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000007fff; valaddr_reg:x3; val_offset:234387*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234387*0 + 3*561*FLEN/8, x4, x1, x2)

inst_78130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000000ffff; valaddr_reg:x3; val_offset:234390*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234390*0 + 3*562*FLEN/8, x4, x1, x2)

inst_78131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000001ffff; valaddr_reg:x3; val_offset:234393*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234393*0 + 3*563*FLEN/8, x4, x1, x2)

inst_78132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000003ffff; valaddr_reg:x3; val_offset:234396*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234396*0 + 3*564*FLEN/8, x4, x1, x2)

inst_78133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000007ffff; valaddr_reg:x3; val_offset:234399*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234399*0 + 3*565*FLEN/8, x4, x1, x2)

inst_78134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000000fffff; valaddr_reg:x3; val_offset:234402*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234402*0 + 3*566*FLEN/8, x4, x1, x2)

inst_78135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000001fffff; valaddr_reg:x3; val_offset:234405*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234405*0 + 3*567*FLEN/8, x4, x1, x2)

inst_78136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000003fffff; valaddr_reg:x3; val_offset:234408*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234408*0 + 3*568*FLEN/8, x4, x1, x2)

inst_78137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000007fffff; valaddr_reg:x3; val_offset:234411*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234411*0 + 3*569*FLEN/8, x4, x1, x2)

inst_78138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000000ffffff; valaddr_reg:x3; val_offset:234414*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234414*0 + 3*570*FLEN/8, x4, x1, x2)

inst_78139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000001ffffff; valaddr_reg:x3; val_offset:234417*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234417*0 + 3*571*FLEN/8, x4, x1, x2)

inst_78140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000003ffffff; valaddr_reg:x3; val_offset:234420*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234420*0 + 3*572*FLEN/8, x4, x1, x2)

inst_78141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000007ffffff; valaddr_reg:x3; val_offset:234423*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234423*0 + 3*573*FLEN/8, x4, x1, x2)

inst_78142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000000fffffff; valaddr_reg:x3; val_offset:234426*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234426*0 + 3*574*FLEN/8, x4, x1, x2)

inst_78143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000001fffffff; valaddr_reg:x3; val_offset:234429*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234429*0 + 3*575*FLEN/8, x4, x1, x2)

inst_78144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000003fffffff; valaddr_reg:x3; val_offset:234432*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234432*0 + 3*576*FLEN/8, x4, x1, x2)

inst_78145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000007fffffff; valaddr_reg:x3; val_offset:234435*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234435*0 + 3*577*FLEN/8, x4, x1, x2)

inst_78146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00000ffffffff; valaddr_reg:x3; val_offset:234438*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234438*0 + 3*578*FLEN/8, x4, x1, x2)

inst_78147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00001ffffffff; valaddr_reg:x3; val_offset:234441*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234441*0 + 3*579*FLEN/8, x4, x1, x2)

inst_78148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00003ffffffff; valaddr_reg:x3; val_offset:234444*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234444*0 + 3*580*FLEN/8, x4, x1, x2)

inst_78149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00007ffffffff; valaddr_reg:x3; val_offset:234447*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234447*0 + 3*581*FLEN/8, x4, x1, x2)

inst_78150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0000fffffffff; valaddr_reg:x3; val_offset:234450*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234450*0 + 3*582*FLEN/8, x4, x1, x2)

inst_78151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0001fffffffff; valaddr_reg:x3; val_offset:234453*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234453*0 + 3*583*FLEN/8, x4, x1, x2)

inst_78152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0003fffffffff; valaddr_reg:x3; val_offset:234456*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234456*0 + 3*584*FLEN/8, x4, x1, x2)

inst_78153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0007fffffffff; valaddr_reg:x3; val_offset:234459*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234459*0 + 3*585*FLEN/8, x4, x1, x2)

inst_78154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b000ffffffffff; valaddr_reg:x3; val_offset:234462*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234462*0 + 3*586*FLEN/8, x4, x1, x2)

inst_78155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b001ffffffffff; valaddr_reg:x3; val_offset:234465*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234465*0 + 3*587*FLEN/8, x4, x1, x2)

inst_78156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b003ffffffffff; valaddr_reg:x3; val_offset:234468*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234468*0 + 3*588*FLEN/8, x4, x1, x2)

inst_78157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b007ffffffffff; valaddr_reg:x3; val_offset:234471*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234471*0 + 3*589*FLEN/8, x4, x1, x2)

inst_78158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b00fffffffffff; valaddr_reg:x3; val_offset:234474*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234474*0 + 3*590*FLEN/8, x4, x1, x2)

inst_78159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b01fffffffffff; valaddr_reg:x3; val_offset:234477*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234477*0 + 3*591*FLEN/8, x4, x1, x2)

inst_78160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b03fffffffffff; valaddr_reg:x3; val_offset:234480*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234480*0 + 3*592*FLEN/8, x4, x1, x2)

inst_78161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b07fffffffffff; valaddr_reg:x3; val_offset:234483*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234483*0 + 3*593*FLEN/8, x4, x1, x2)

inst_78162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b0ffffffffffff; valaddr_reg:x3; val_offset:234486*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234486*0 + 3*594*FLEN/8, x4, x1, x2)

inst_78163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b1ffffffffffff; valaddr_reg:x3; val_offset:234489*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234489*0 + 3*595*FLEN/8, x4, x1, x2)

inst_78164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b3ffffffffffff; valaddr_reg:x3; val_offset:234492*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234492*0 + 3*596*FLEN/8, x4, x1, x2)

inst_78165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b7ffffffffffff; valaddr_reg:x3; val_offset:234495*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234495*0 + 3*597*FLEN/8, x4, x1, x2)

inst_78166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9b8000000000000; valaddr_reg:x3; val_offset:234498*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234498*0 + 3*598*FLEN/8, x4, x1, x2)

inst_78167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bc000000000000; valaddr_reg:x3; val_offset:234501*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234501*0 + 3*599*FLEN/8, x4, x1, x2)

inst_78168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9be000000000000; valaddr_reg:x3; val_offset:234504*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234504*0 + 3*600*FLEN/8, x4, x1, x2)

inst_78169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bf000000000000; valaddr_reg:x3; val_offset:234507*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234507*0 + 3*601*FLEN/8, x4, x1, x2)

inst_78170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bf800000000000; valaddr_reg:x3; val_offset:234510*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234510*0 + 3*602*FLEN/8, x4, x1, x2)

inst_78171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfc00000000000; valaddr_reg:x3; val_offset:234513*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234513*0 + 3*603*FLEN/8, x4, x1, x2)

inst_78172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfe00000000000; valaddr_reg:x3; val_offset:234516*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234516*0 + 3*604*FLEN/8, x4, x1, x2)

inst_78173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bff00000000000; valaddr_reg:x3; val_offset:234519*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234519*0 + 3*605*FLEN/8, x4, x1, x2)

inst_78174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bff80000000000; valaddr_reg:x3; val_offset:234522*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234522*0 + 3*606*FLEN/8, x4, x1, x2)

inst_78175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffc0000000000; valaddr_reg:x3; val_offset:234525*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234525*0 + 3*607*FLEN/8, x4, x1, x2)

inst_78176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffe0000000000; valaddr_reg:x3; val_offset:234528*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234528*0 + 3*608*FLEN/8, x4, x1, x2)

inst_78177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfff0000000000; valaddr_reg:x3; val_offset:234531*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234531*0 + 3*609*FLEN/8, x4, x1, x2)

inst_78178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfff8000000000; valaddr_reg:x3; val_offset:234534*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234534*0 + 3*610*FLEN/8, x4, x1, x2)

inst_78179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffc000000000; valaddr_reg:x3; val_offset:234537*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234537*0 + 3*611*FLEN/8, x4, x1, x2)

inst_78180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffe000000000; valaddr_reg:x3; val_offset:234540*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234540*0 + 3*612*FLEN/8, x4, x1, x2)

inst_78181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffff000000000; valaddr_reg:x3; val_offset:234543*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234543*0 + 3*613*FLEN/8, x4, x1, x2)

inst_78182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffff800000000; valaddr_reg:x3; val_offset:234546*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234546*0 + 3*614*FLEN/8, x4, x1, x2)

inst_78183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffc00000000; valaddr_reg:x3; val_offset:234549*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234549*0 + 3*615*FLEN/8, x4, x1, x2)

inst_78184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffe00000000; valaddr_reg:x3; val_offset:234552*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234552*0 + 3*616*FLEN/8, x4, x1, x2)

inst_78185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffff00000000; valaddr_reg:x3; val_offset:234555*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234555*0 + 3*617*FLEN/8, x4, x1, x2)

inst_78186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffff80000000; valaddr_reg:x3; val_offset:234558*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234558*0 + 3*618*FLEN/8, x4, x1, x2)

inst_78187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffc0000000; valaddr_reg:x3; val_offset:234561*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234561*0 + 3*619*FLEN/8, x4, x1, x2)

inst_78188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffe0000000; valaddr_reg:x3; val_offset:234564*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234564*0 + 3*620*FLEN/8, x4, x1, x2)

inst_78189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffff0000000; valaddr_reg:x3; val_offset:234567*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234567*0 + 3*621*FLEN/8, x4, x1, x2)

inst_78190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffff8000000; valaddr_reg:x3; val_offset:234570*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234570*0 + 3*622*FLEN/8, x4, x1, x2)

inst_78191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffc000000; valaddr_reg:x3; val_offset:234573*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234573*0 + 3*623*FLEN/8, x4, x1, x2)

inst_78192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffe000000; valaddr_reg:x3; val_offset:234576*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234576*0 + 3*624*FLEN/8, x4, x1, x2)

inst_78193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffff000000; valaddr_reg:x3; val_offset:234579*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234579*0 + 3*625*FLEN/8, x4, x1, x2)

inst_78194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffff800000; valaddr_reg:x3; val_offset:234582*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234582*0 + 3*626*FLEN/8, x4, x1, x2)

inst_78195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffc00000; valaddr_reg:x3; val_offset:234585*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234585*0 + 3*627*FLEN/8, x4, x1, x2)

inst_78196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffe00000; valaddr_reg:x3; val_offset:234588*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234588*0 + 3*628*FLEN/8, x4, x1, x2)

inst_78197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffff00000; valaddr_reg:x3; val_offset:234591*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234591*0 + 3*629*FLEN/8, x4, x1, x2)

inst_78198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffff80000; valaddr_reg:x3; val_offset:234594*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234594*0 + 3*630*FLEN/8, x4, x1, x2)

inst_78199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffc0000; valaddr_reg:x3; val_offset:234597*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234597*0 + 3*631*FLEN/8, x4, x1, x2)

inst_78200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffe0000; valaddr_reg:x3; val_offset:234600*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234600*0 + 3*632*FLEN/8, x4, x1, x2)

inst_78201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffff0000; valaddr_reg:x3; val_offset:234603*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234603*0 + 3*633*FLEN/8, x4, x1, x2)

inst_78202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffff8000; valaddr_reg:x3; val_offset:234606*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234606*0 + 3*634*FLEN/8, x4, x1, x2)

inst_78203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffc000; valaddr_reg:x3; val_offset:234609*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234609*0 + 3*635*FLEN/8, x4, x1, x2)

inst_78204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffe000; valaddr_reg:x3; val_offset:234612*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234612*0 + 3*636*FLEN/8, x4, x1, x2)

inst_78205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffff000; valaddr_reg:x3; val_offset:234615*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234615*0 + 3*637*FLEN/8, x4, x1, x2)

inst_78206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffff800; valaddr_reg:x3; val_offset:234618*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234618*0 + 3*638*FLEN/8, x4, x1, x2)

inst_78207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffc00; valaddr_reg:x3; val_offset:234621*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234621*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_78208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffe00; valaddr_reg:x3; val_offset:234624*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234624*0 + 3*640*FLEN/8, x4, x1, x2)

inst_78209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffff00; valaddr_reg:x3; val_offset:234627*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234627*0 + 3*641*FLEN/8, x4, x1, x2)

inst_78210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffff80; valaddr_reg:x3; val_offset:234630*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234630*0 + 3*642*FLEN/8, x4, x1, x2)

inst_78211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffffc0; valaddr_reg:x3; val_offset:234633*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234633*0 + 3*643*FLEN/8, x4, x1, x2)

inst_78212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffffe0; valaddr_reg:x3; val_offset:234636*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234636*0 + 3*644*FLEN/8, x4, x1, x2)

inst_78213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffff0; valaddr_reg:x3; val_offset:234639*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234639*0 + 3*645*FLEN/8, x4, x1, x2)

inst_78214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffff8; valaddr_reg:x3; val_offset:234642*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234642*0 + 3*646*FLEN/8, x4, x1, x2)

inst_78215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffffc; valaddr_reg:x3; val_offset:234645*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234645*0 + 3*647*FLEN/8, x4, x1, x2)

inst_78216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bffffffffffffe; valaddr_reg:x3; val_offset:234648*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234648*0 + 3*648*FLEN/8, x4, x1, x2)

inst_78217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xb9bfffffffffffff; valaddr_reg:x3; val_offset:234651*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234651*0 + 3*649*FLEN/8, x4, x1, x2)

inst_78218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:234654*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234654*0 + 3*650*FLEN/8, x4, x1, x2)

inst_78219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:234657*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234657*0 + 3*651*FLEN/8, x4, x1, x2)

inst_78220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:234660*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234660*0 + 3*652*FLEN/8, x4, x1, x2)

inst_78221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:234663*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234663*0 + 3*653*FLEN/8, x4, x1, x2)

inst_78222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:234666*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234666*0 + 3*654*FLEN/8, x4, x1, x2)

inst_78223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:234669*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234669*0 + 3*655*FLEN/8, x4, x1, x2)

inst_78224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:234672*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234672*0 + 3*656*FLEN/8, x4, x1, x2)

inst_78225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:234675*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234675*0 + 3*657*FLEN/8, x4, x1, x2)

inst_78226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:234678*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234678*0 + 3*658*FLEN/8, x4, x1, x2)

inst_78227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:234681*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234681*0 + 3*659*FLEN/8, x4, x1, x2)

inst_78228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:234684*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234684*0 + 3*660*FLEN/8, x4, x1, x2)

inst_78229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:234687*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234687*0 + 3*661*FLEN/8, x4, x1, x2)

inst_78230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:234690*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234690*0 + 3*662*FLEN/8, x4, x1, x2)

inst_78231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:234693*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234693*0 + 3*663*FLEN/8, x4, x1, x2)

inst_78232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:234696*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234696*0 + 3*664*FLEN/8, x4, x1, x2)

inst_78233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:234699*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234699*0 + 3*665*FLEN/8, x4, x1, x2)

inst_78234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:234702*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234702*0 + 3*666*FLEN/8, x4, x1, x2)

inst_78235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:234705*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234705*0 + 3*667*FLEN/8, x4, x1, x2)

inst_78236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:234708*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234708*0 + 3*668*FLEN/8, x4, x1, x2)

inst_78237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:234711*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234711*0 + 3*669*FLEN/8, x4, x1, x2)

inst_78238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:234714*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234714*0 + 3*670*FLEN/8, x4, x1, x2)

inst_78239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x57577dfaa1a98 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dc0f47a5db15; op2val:0x9fc57577dfaa1a98;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:234717*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234717*0 + 3*671*FLEN/8, x4, x1, x2)

inst_78240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:234720*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234720*0 + 3*672*FLEN/8, x4, x1, x2)

inst_78241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:234723*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234723*0 + 3*673*FLEN/8, x4, x1, x2)

inst_78242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:234726*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234726*0 + 3*674*FLEN/8, x4, x1, x2)

inst_78243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:234729*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234729*0 + 3*675*FLEN/8, x4, x1, x2)

inst_78244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:234732*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234732*0 + 3*676*FLEN/8, x4, x1, x2)

inst_78245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:234735*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234735*0 + 3*677*FLEN/8, x4, x1, x2)

inst_78246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:234738*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234738*0 + 3*678*FLEN/8, x4, x1, x2)

inst_78247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:234741*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234741*0 + 3*679*FLEN/8, x4, x1, x2)

inst_78248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:234744*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234744*0 + 3*680*FLEN/8, x4, x1, x2)

inst_78249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:234747*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234747*0 + 3*681*FLEN/8, x4, x1, x2)

inst_78250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:234750*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234750*0 + 3*682*FLEN/8, x4, x1, x2)

inst_78251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:234753*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234753*0 + 3*683*FLEN/8, x4, x1, x2)

inst_78252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:234756*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234756*0 + 3*684*FLEN/8, x4, x1, x2)

inst_78253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:234759*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234759*0 + 3*685*FLEN/8, x4, x1, x2)

inst_78254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:234762*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234762*0 + 3*686*FLEN/8, x4, x1, x2)

inst_78255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:234765*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234765*0 + 3*687*FLEN/8, x4, x1, x2)

inst_78256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:234768*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234768*0 + 3*688*FLEN/8, x4, x1, x2)

inst_78257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:234771*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234771*0 + 3*689*FLEN/8, x4, x1, x2)

inst_78258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:234774*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234774*0 + 3*690*FLEN/8, x4, x1, x2)

inst_78259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:234777*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234777*0 + 3*691*FLEN/8, x4, x1, x2)

inst_78260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:234780*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234780*0 + 3*692*FLEN/8, x4, x1, x2)

inst_78261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:234783*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234783*0 + 3*693*FLEN/8, x4, x1, x2)

inst_78262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:234786*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234786*0 + 3*694*FLEN/8, x4, x1, x2)

inst_78263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:234789*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234789*0 + 3*695*FLEN/8, x4, x1, x2)

inst_78264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:234792*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234792*0 + 3*696*FLEN/8, x4, x1, x2)

inst_78265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:234795*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234795*0 + 3*697*FLEN/8, x4, x1, x2)

inst_78266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:234798*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234798*0 + 3*698*FLEN/8, x4, x1, x2)

inst_78267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:234801*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234801*0 + 3*699*FLEN/8, x4, x1, x2)

inst_78268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:234804*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234804*0 + 3*700*FLEN/8, x4, x1, x2)

inst_78269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:234807*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234807*0 + 3*701*FLEN/8, x4, x1, x2)

inst_78270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:234810*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234810*0 + 3*702*FLEN/8, x4, x1, x2)

inst_78271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:234813*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234813*0 + 3*703*FLEN/8, x4, x1, x2)

inst_78272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:234816*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234816*0 + 3*704*FLEN/8, x4, x1, x2)

inst_78273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:234819*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234819*0 + 3*705*FLEN/8, x4, x1, x2)

inst_78274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:234822*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234822*0 + 3*706*FLEN/8, x4, x1, x2)

inst_78275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:234825*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234825*0 + 3*707*FLEN/8, x4, x1, x2)

inst_78276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:234828*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234828*0 + 3*708*FLEN/8, x4, x1, x2)

inst_78277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:234831*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234831*0 + 3*709*FLEN/8, x4, x1, x2)

inst_78278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:234834*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234834*0 + 3*710*FLEN/8, x4, x1, x2)

inst_78279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:234837*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234837*0 + 3*711*FLEN/8, x4, x1, x2)

inst_78280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:234840*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234840*0 + 3*712*FLEN/8, x4, x1, x2)

inst_78281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:234843*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234843*0 + 3*713*FLEN/8, x4, x1, x2)

inst_78282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:234846*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234846*0 + 3*714*FLEN/8, x4, x1, x2)

inst_78283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:234849*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234849*0 + 3*715*FLEN/8, x4, x1, x2)

inst_78284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:234852*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234852*0 + 3*716*FLEN/8, x4, x1, x2)

inst_78285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:234855*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234855*0 + 3*717*FLEN/8, x4, x1, x2)

inst_78286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:234858*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234858*0 + 3*718*FLEN/8, x4, x1, x2)

inst_78287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:234861*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234861*0 + 3*719*FLEN/8, x4, x1, x2)

inst_78288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:234864*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234864*0 + 3*720*FLEN/8, x4, x1, x2)

inst_78289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:234867*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234867*0 + 3*721*FLEN/8, x4, x1, x2)

inst_78290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:234870*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234870*0 + 3*722*FLEN/8, x4, x1, x2)

inst_78291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:234873*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234873*0 + 3*723*FLEN/8, x4, x1, x2)

inst_78292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:234876*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234876*0 + 3*724*FLEN/8, x4, x1, x2)

inst_78293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:234879*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234879*0 + 3*725*FLEN/8, x4, x1, x2)

inst_78294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:234882*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234882*0 + 3*726*FLEN/8, x4, x1, x2)

inst_78295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:234885*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234885*0 + 3*727*FLEN/8, x4, x1, x2)

inst_78296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:234888*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234888*0 + 3*728*FLEN/8, x4, x1, x2)

inst_78297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:234891*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234891*0 + 3*729*FLEN/8, x4, x1, x2)

inst_78298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:234894*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234894*0 + 3*730*FLEN/8, x4, x1, x2)

inst_78299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:234897*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234897*0 + 3*731*FLEN/8, x4, x1, x2)

inst_78300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:234900*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234900*0 + 3*732*FLEN/8, x4, x1, x2)

inst_78301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:234903*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234903*0 + 3*733*FLEN/8, x4, x1, x2)

inst_78302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:234906*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234906*0 + 3*734*FLEN/8, x4, x1, x2)

inst_78303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:234909*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234909*0 + 3*735*FLEN/8, x4, x1, x2)

inst_78304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:234912*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234912*0 + 3*736*FLEN/8, x4, x1, x2)

inst_78305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:234915*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234915*0 + 3*737*FLEN/8, x4, x1, x2)

inst_78306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:234918*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234918*0 + 3*738*FLEN/8, x4, x1, x2)

inst_78307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:234921*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234921*0 + 3*739*FLEN/8, x4, x1, x2)

inst_78308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:234924*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234924*0 + 3*740*FLEN/8, x4, x1, x2)

inst_78309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:234927*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234927*0 + 3*741*FLEN/8, x4, x1, x2)

inst_78310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:234930*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234930*0 + 3*742*FLEN/8, x4, x1, x2)

inst_78311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:234933*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234933*0 + 3*743*FLEN/8, x4, x1, x2)

inst_78312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:234936*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234936*0 + 3*744*FLEN/8, x4, x1, x2)

inst_78313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:234939*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234939*0 + 3*745*FLEN/8, x4, x1, x2)

inst_78314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:234942*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234942*0 + 3*746*FLEN/8, x4, x1, x2)

inst_78315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:234945*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234945*0 + 3*747*FLEN/8, x4, x1, x2)

inst_78316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:234948*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234948*0 + 3*748*FLEN/8, x4, x1, x2)

inst_78317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:234951*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234951*0 + 3*749*FLEN/8, x4, x1, x2)

inst_78318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:234954*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234954*0 + 3*750*FLEN/8, x4, x1, x2)

inst_78319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:234957*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234957*0 + 3*751*FLEN/8, x4, x1, x2)

inst_78320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:234960*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234960*0 + 3*752*FLEN/8, x4, x1, x2)

inst_78321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:234963*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234963*0 + 3*753*FLEN/8, x4, x1, x2)

inst_78322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:234966*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234966*0 + 3*754*FLEN/8, x4, x1, x2)

inst_78323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:234969*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234969*0 + 3*755*FLEN/8, x4, x1, x2)

inst_78324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:234972*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234972*0 + 3*756*FLEN/8, x4, x1, x2)

inst_78325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:234975*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234975*0 + 3*757*FLEN/8, x4, x1, x2)

inst_78326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:234978*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234978*0 + 3*758*FLEN/8, x4, x1, x2)

inst_78327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:234981*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234981*0 + 3*759*FLEN/8, x4, x1, x2)

inst_78328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:234984*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234984*0 + 3*760*FLEN/8, x4, x1, x2)

inst_78329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:234987*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234987*0 + 3*761*FLEN/8, x4, x1, x2)

inst_78330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:234990*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234990*0 + 3*762*FLEN/8, x4, x1, x2)

inst_78331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:234993*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234993*0 + 3*763*FLEN/8, x4, x1, x2)

inst_78332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:234996*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234996*0 + 3*764*FLEN/8, x4, x1, x2)

inst_78333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:234999*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234999*0 + 3*765*FLEN/8, x4, x1, x2)

inst_78334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:235002*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235002*0 + 3*766*FLEN/8, x4, x1, x2)

inst_78335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7ecfb4073d463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7ecfb4073d463; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:235005*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235005*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6892618732621396343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6892622203468916229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6892632858586538122,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6892637787193262469,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376512,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376513,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376515,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376519,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376527,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376543,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376575,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376639,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229376767,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229377023,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229377535,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229378559,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229380607,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229384703,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229392895,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229409279,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229442047,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229507583,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229638655,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083229900799,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083230425087,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083231473663,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083233570815,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083237765119,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083246153727,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083262930943,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083296485375,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083363594239,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083497811967,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288083766247423,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288084303118335,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288085376860159,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288087524343807,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288091819311103,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288100409245695,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288117589114879,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288151948853247,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288220668329983,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288358107283455,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497288632985190399,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497289182741004287,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497290282252632063,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497292481275887615,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497296879322398719,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497305675415420927,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497323267601465343,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497358451973554175,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497428820717731839,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497569558206087167,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13497851033182797823,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13498413983136219135,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13499539883043061759,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13499539883043061760,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13500665782949904384,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501228732903325696,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501510207880036352,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501650945368391680,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501721314112569344,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501756498484658176,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501774090670702592,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501782886763724800,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501787284810235904,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501789483833491456,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501790583345119232,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791133100933120,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791407978840064,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791545417793536,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791614137270272,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791648497008640,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791665676877824,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791674266812416,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791678561779712,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791680709263360,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791681783005184,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682319876096,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682588311552,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682722529280,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682789638144,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682823192576,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682839969792,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682848358400,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682852552704,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682854649856,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682855698432,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856222720,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856484864,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856615936,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856681472,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856714240,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856730624,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856738816,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856742912,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856744960,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856745984,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746496,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746752,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746880,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746944,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746976,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856746992,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856747000,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856747004,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856747006,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13501791682856747007,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892707399496335389,64,FLEN)
NAN_BOXED(11512748274929292113,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743616,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743617,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743619,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743623,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743631,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743647,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743679,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743743,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917743871,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917744127,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917744639,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917745663,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917747711,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917751807,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917759999,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917776383,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917809151,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492917874687,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492918005759,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492918267903,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492918792191,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492919840767,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492921937919,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492926132223,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492934520831,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492951298047,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194492984852479,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194493051961343,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194493186179071,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194493454614527,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194493991485439,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194495065227263,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194497212710911,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194501507678207,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194510097612799,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194527277481983,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194561637220351,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194630356697087,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380194767795650559,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380195042673557503,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380195592429371391,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380196691940999167,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380198890964254719,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380203289010765823,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380212085103788031,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380229677289832447,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380264861661921279,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380335230406098943,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380475967894454271,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13380757442871164927,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13381320392824586239,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13382446292731428863,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13382446292731428864,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13383572192638271488,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384135142591692800,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384416617568403456,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384557355056758784,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384627723800936448,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384662908173025280,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384680500359069696,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384689296452091904,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384693694498603008,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384695893521858560,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384696993033486336,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384697542789300224,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384697817667207168,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384697955106160640,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698023825637376,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698058185375744,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698075365244928,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698083955179520,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698088250146816,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698090397630464,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698091471372288,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092008243200,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092276678656,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092410896384,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092478005248,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092511559680,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092528336896,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092536725504,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092540919808,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092543016960,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092544065536,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092544589824,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092544851968,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092544983040,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545048576,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545081344,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545097728,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545105920,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545110016,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545112064,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545113088,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545113600,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545113856,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545113984,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114048,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114080,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114096,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114104,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114108,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114110,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13384698092545114111,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892719712898505493,64,FLEN)
NAN_BOXED(11512737180156566168,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6892738318576112739,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
